[{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[23,53,85,90,229,307,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[488,489,490,491,492,493,494,329,330,346,349,495,496,484],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[182,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[0,1,7,8,9,10,11,12,13,15,16,20,21,22,23,24,25,40,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,92,93,121,498,122,123,124,125,126,127,128,129,130,131,132,134,135,138,139,140,141,143,144,145,146,147,148,149,150,164,165,167,171,172,173,174,175,176,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,271,280,281,282,283,284,285,286,287,288,289,290,298,299,300,301,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,337,339,343,344,345,347,350,351,353,357,360,370,376,379,380,381,382,383,384,385,387,390,391,392,393,396,399,400,401,402,403,404,406,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,444,451,452,453,454,455,456,457,458,460,461,462,463,464,465,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[411,412,413,414,421,422,457,458,460,461,462,463,464,465,466,467,476,477,481,482],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:50","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[42,139,140,141,144,145,146,147,148,149,150,163,224,225,226,227,282,382,383,384,402,404,416],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[502,484,485,486],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[504],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[466],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[397,400,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[502,484,485,486],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[489,490,491,492,493,330,346,349,484],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[488,489,490,491,492,493,494,329,330,346,349,495,496,484],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[14,15,16,18,38,39,40,41,121,161,162,163,164,165,167,170,193,194,195,196,197,198,199,200,236,237,238,239,240,241,243,257,258,259,262,263,291,295,298,299,300,301,304,305,320,321,322,354,357,359,361,362,365,368,371,372,375,379,380,382,383,384,385,387,389,390,391,392,393,394,395,486],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[489,490,491,492,493,330,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[7,47,48,52,224,225,226,227,286,287,289,318,456,457,460,462,463,469,472,475,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[14],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[14,17,182,187,257,258,259,320,329,330,331,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,360,370,376,385,388,391,392,395,484],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[100,397,400,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,20,21,24,45,94,98,99,108,113,122,123,124,125,126,160,190,191,244,245,246,247,248,257,257,258,258,284,290,422,455,456,460,461,462,463,469,471,472,474,475,481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[44,45,47,48,50,87,284,286,287,380,382,384,390,393],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[502,484,485,486],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[62,68,75,76,126,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[508,509],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[36,101,118,119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[0,5,6,7,8,9,10,15,16,20,21,24,40,43,45,48,49,50,52,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,86,121,122,123,124,125,126,127,128,129,130,131,137,139,140,141,143,144,146,147,148,149,150,164,165,167,171,172,173,174,175,176,190,191,194,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,271,280,281,283,284,287,288,289,290,298,299,300,301,303,304,305,308,309,311,312,315,318,320,321,322,323,324,325,328,329,333,334,335,336,337,343,344,345,347,357,360,370,376,379,381,382,383,384,387,390,392,396,399,400,401,402,404,406,407,410,411,412,413,414,416,417,418,419,420,421,424,425,426,427,428,429,430,431,432,433,434,435,436,437,444,451,452,453,454,455,456,457,458,460,461,462,463,464,465,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,484,485,486,487],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":458,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.UsageTest.argumentsOrdered":317,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":104,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":312,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.tests.MockClassControlTest.testToString":195,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.UsageTest.wrongArguments":310,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":187,"org.easymock.tests2.UsageConstraintsTest.testNull":461,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":382,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":434,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":200,"org.easymock.tests2.CaptureTest.testPrimitive":414,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":24,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":177,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":293,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":444,"org.easymock.tests.ReplayStateInvalidUsageTest.times":34,"org.easymock.tests2.DependencyTest.testClassMocking":278,"org.easymock.tests2.AnswerTest.answer":396,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":454,"org.easymock.tests2.CaptureTest.testAnd":411,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":184,"org.easymock.tests2.UsageTest.strictResetToDefault":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.DependencyTest.testClassMockingSupport":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":79,"org.easymock.tests2.CaptureTest.testCapture1_2446744":415,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":452,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":28,"org.easymock.tests.UsageThrowableTest.throwError":51,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":186,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":19,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.samples.PartialClassMockTest.testGetArea":259,"org.easymock.tests.MockingTest.testInterfaceMocking":166,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests2.UsageTest.niceToStrict":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":343,"org.easymock.tests2.MockBuilderTest.testCreateMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":508,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":470,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":420,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":142,"org.easymock.tests.MockClassControlTest.testEquals":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":453,"org.easymock.tests2.CaptureTest.testCaptureAll":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests.MockNameTest.defaultName":192,"org.easymock.tests2.UsageConstraintsTest.testMatches":472,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":57,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":474,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":393,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":243,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":121,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":427,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":424,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":428,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":423,"org.easymock.tests2.UsageTest.moreThanOneArgument":309,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":351,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":479,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":56,"org.easymock.tests.MockingTest.testNiceClassMocking":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.MockingTest.testClassMocking":162,"org.easymock.tests2.UsageConstraintsTest.testContains":469,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":322,"org.easymock.tests2.UsageConstraintsTest.testFind":460,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":203,"org.easymock.tests.MockTypeTest.fromEasyMockClass":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":157,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":178,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":330,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":134,"org.easymock.tests.MockClassControlTest.testHashCode":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":367,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":505,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":451,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":438,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":235,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":117,"org.easymock.tests2.UsageTest.openCallCountByLastCall":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":436,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":391,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.tests.CapturesMatcherTest.test":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":376,"org.easymock.tests2.UsageTest.resumeIfFailure":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":116,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":397,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":84,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":477,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":191,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":296,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":345,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests2.CaptureTest.testCaptureNone":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":504,"org.easymock.tests.UsageVerifyTest.twoReturns":230,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":467,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":33,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":240,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":32,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.SerializationTest.testClass":484,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests2.NameTest.nameForMocksControl":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":347,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":384,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests2.CaptureTest.testCaptureLast":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":464,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":478,"org.easymock.tests.MockingTest.testTwoMocks":163,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":30,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":238,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":326,"org.easymock.tests2.MockBuilderTest.testCreateMockString":353,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":399,"org.easymock.tests.UsageVerifyTest.twoThrows":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":392,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":481,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":320,"org.easymock.tests2.UsageTest.defaultResetToNice":315,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.UsageVarargTest.differentLength":145,"org.easymock.tests2.CallbackTest.callback":487,"org.easymock.tests2.UsageConstraintsTest.equals":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":55,"org.easymock.tests.MockingTest.testStrictClassMocking":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":303,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":401,"org.easymock.tests.ObjectMethodsTest.testHashCode":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":328,"org.easymock.tests2.NameTest.nameForNiceMock":335,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":400,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":348,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":329,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":475,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageThrowableTest.noUpperLimit":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":456,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":291,"org.easymock.tests2.SerializationTest.test":485,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":416,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":509,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":237,"org.easymock.tests2.UsageConstraintsTest.testSame":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":302,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":168,"org.easymock.tests2.NameTest.nameForMock":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":107,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests2.NameTest.nameForStrictMock":334,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":295,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":476,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":339,"org.easymock.tests2.UsageStrictMockTest.range":286,"org.easymock.tests2.UsageConstraintsTest.lessThan":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":366,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":503,"org.easymock.tests2.UsageConstraintsTest.testOr":463,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":380,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.MockBuilderTest.testWithConstructor":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":11,"org.easymock.tests2.UsageConstraintsTest.cmpTo":468,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":97,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":314,"org.easymock.tests2.CaptureTest.testCaptureFromStub":422,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":27,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":340,"org.easymock.tests.UsageTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.constraints":457,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":50,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":431,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140}}]
