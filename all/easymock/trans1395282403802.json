[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[19,20,21,22],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,57,58,1,2,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,20,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,21,119,120,121,122,123,22,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,3,4,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,5,6,215,216,7,8,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,9,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,10,11,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,16,359,360,17,18,361,362,363,364,365,366,367,368,369,370],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[371,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[65,72,374,110,112,115,118,119,120,121,122,22,174,353],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[375,376,377],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[48,50,123,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[3,9,378,379,10,11,17],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[380,381,382,383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[53,0,1,2,79,80,81,82,156,3,4,214,6,7,8,9,385,378,379,332,10,11,16,359,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[48,50,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,386,20,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,21,119,120,121,122,123,22,124,125,126,152,156,174,175,184,185,186,187,188,230,231,232,233,234,9,279,280,318,331,16,359],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[388],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[86,88,89,90,91,92,93,95,389,96,97,99],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[28,29,51,53,0,54,55,1,2,59,60,64,66,68,69,71,72,76,390,391,392,393,79,80,81,82,394,395,396,397,398,399,374,400,401,402,403,404,102,118,136,137,154,156,157,3,4,158,405,189,190,406,191,192,213,214,5,6,7,8,217,221,223,224,227,228,229,9,235,268,269,309,312,313,326,407,408,409,332,10,11,339,342,343,344,353,357,16,359,360,17,18,361],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[371,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[40,45,76,163,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[411,412,413],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[28,414,35,415,36,37,38,39,40,43,44,45,46,47,48,50,51,52,53,0,54,55,56,57,58,1,2,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,416,390,391,417,77,392,393,418,419,420,421,422,83,84,394,395,423,424,397,398,399,374,400,86,87,88,89,90,91,92,93,94,95,96,97,98,99,425,401,100,426,427,428,429,386,402,430,431,403,20,101,102,103,105,106,107,108,109,110,112,113,114,115,116,117,118,21,119,120,121,122,123,22,124,125,126,127,128,129,130,136,144,145,146,148,149,150,151,152,153,154,155,156,157,3,4,158,159,160,161,162,163,164,165,166,167,169,170,432,433,434,435,436,174,175,176,177,178,179,180,181,182,184,185,186,187,188,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,437,213,214,5,6,215,216,7,8,217,223,224,225,226,227,228,229,230,231,232,233,234,9,438,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,271,272,273,274,275,276,277,278,279,280,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,439,440,332,10,11,333,334,335,336,337,338,340,341,344,348,349,350,351,352,353,355,356,441,441,357,358,16,359,360,17,18,361,442,443,444],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[55,427,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[414,418,445,446,447,448,449,450,387],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[3,4,197,201,202,204,207,252,256,257,259,262,289,17,18,366,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[376,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[23,29,131,137,161,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[414,420,421,422,394,395,396,423,424,397,398,399,374,400,429,430,431,404,434,405,406,451],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[371,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[86,88,96,102,103,108,109,111,120],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":291,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":55,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":161,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":315,"org.easymock.tests.MockingTest.testPartialClassMocking":442,"org.easymock.tests.MockClassControlTest.testToString":407,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":385,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":181,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":89,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":39,"org.easymock.tests2.CaptureTest.testAnd":86,"org.easymock.tests2.UsageTest.strictResetToDefault":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":355,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":268,"org.easymock.tests2.CaptureTest.testCapture1_2446744":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.UsageThrowableTest.throwError":271,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":190,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":142,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":388,"org.easymock.samples.PartialClassMockTest.testGetArea":434,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests2.CompareToTest.testLessOrEqual":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.UsageTest.niceToStrict":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":423,"org.easymock.tests2.MockBuilderTest.testCreateMock":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageOverloadedMethodTest.overloading":177,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":116,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":341,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":115,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":95,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":419,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":440,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":413,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":38,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests.UsageVarargTest.allKinds":331,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":332,"org.easymock.samples.BasicClassMockTest.testPrintContent":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":277,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":403,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":429,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":437,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":314,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":143,"org.easymock.tests2.CaptureTest.testCaptureFirst":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":228,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":229,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":276,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":390,"org.easymock.tests2.UsageConstraintsTest.testContains":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":222,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests.MockTypeTest.fromEasyMockClass":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":449,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":325,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":132,"org.easymock.tests2.EasyMockSupportTest.testVerify":75,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":36,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":14,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":85,"org.easymock.tests.UsageVarargTest.varargCharAccepted":324,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":371,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":345,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.CapturesMatcherTest.test":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":422,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":412,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":408,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":317,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":446,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":415,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":381,"org.easymock.samples.SupportTest.voteForRemovals":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":303,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":41,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":121,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.samples.ConstructorCalledMockTest.testTax":432,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests2.CaptureTest.testCaptureNone":94,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":12,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":149,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":435,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.SerializationTest.testClass":414,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests.LimitationsTest.mockNativeMethod":438,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":444,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":425,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":398,"org.easymock.tests.MockingTest.testNicePartialClassMocking":443,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.CaptureTest.testCaptureLast":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":393,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.samples.ExampleTest.removeNonExistingDocument":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":30,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":133,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":151,"org.easymock.tests2.MockBuilderTest.testCreateMockString":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":421,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":292,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":431,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":278,"org.easymock.tests2.UsageTest.defaultResetToNice":58,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.UsageVarargTest.differentLength":326,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.UsageConstraintsTest.equals":104,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":186,"org.easymock.tests.UsageCallCountTest.tooFewCalls":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":182,"org.easymock.tests.UsageThrowableTest.throwCheckedException":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":392,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":45,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":383,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":153,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":450,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.AnswerTest.stubAnswer":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":418,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":140,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":119,"org.easymock.tests.UsageThrowableTest.noUpperLimit":272,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.samples.SupportTest.addDocument":159,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests.GenericTest.testPackageScope":439,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":139,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":364,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":356,"org.easymock.tests2.MockedExceptionTest.testRealException":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":395,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":289,"org.easymock.tests2.CaptureTest.testCaptureRightOne":96,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":401,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":227,"org.easymock.tests2.UsageConstraintsTest.cmpTo":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests2.CaptureTest.testCapture":389,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.samples.ExampleTest.addAndChangeDocument":169,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":69,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":379}}]
