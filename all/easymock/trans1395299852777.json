[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[56,150,242],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[17,243,244,245,246,247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[248,249,250,251,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[255,256],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[238,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[7,8,257,258,15,59,259,260,78,79,80,261,262,263,264,265,266,267,268,268,269,269,118,121,122,135,136,137,138,140,141,153,159,270,271,272,160,273,161,162,274,275,276,163,164,165,166,167,168,170,171,172,277,173,278,279,174,280,281,238,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[282,228],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[14,17,20,283,284,245,53,56,57,285,109,110,131,145,150,151],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[289,290,291,292,293],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[294,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[248,249,250,251,252,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[7,8,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,300,301,302,303,304,305,1,2,3,4,306,5,6,307,7,8,257,258,308,9,10,11,12,13,14,309,310,311,312,255,313,314,315,316,317,318,319,320,321,15,322,323,16,17,18,19,20,21,22,324,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,325,256,326,327,328,329,51,52,245,53,54,55,56,57,58,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,59,60,61,62,63,64,357,358,359,360,361,65,362,66,67,363,364,285,68,69,70,365,71,72,366,73,74,75,76,77,367,368,369,370,371,372,373,374,259,375,376,377,260,78,79,378,80,379,380,381,382,383,384,385,81,386,387,388,389,390,391,261,392,393,394,395,262,396,397,82,83,398,399,263,264,265,266,400,401,267,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,289,290,291,108,109,110,402,403,404,405,406,407,294,408,409,410,295,411,412,413,414,415,416,417,111,112,113,114,115,116,418,117,268,269,118,119,120,121,122,123,124,419,420,421,422,423,125,424,425,426,427,428,429,430,431,126,127,432,128,129,130,131,132,133,292,134,433,434,435,436,437,438,439,135,136,137,138,440,139,140,141,441,142,143,144,145,146,147,148,149,442,150,151,293,152,443,444,153,445,154,155,156,157,158,159,253,446,447,448,449,450,451,270,452,271,272,453,454,160,273,161,254,162,455,456,274,275,457,276,458,459,460,163,461,462,164,463,464,465,466,467,468,469,470,471,165,472,473,474,475,476,166,477,478,167,168,169,170,171,172,277,298,173,479,480,278,279,174,280,481,281,175,482,483,176,177,178,179,484,180,485,181,182,183,486,184,185,186,187,188,189,190,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,488,205,206,207,208,209,489,490,491,492,493,494,210,495,496,497,498,499,500,501,502,503,504,211,212,213,214,242,215,216,217,218,219,220,505,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[261,162],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[282,228],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[227],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,243,244,506,52,245,53,56,57,144,145,150,151,246,507,247,508],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[192,194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[509,211,213,228,234],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,300,304,305,1,2,3,4,306,5,6,7,8,9,10,11,12,13,14,309,310,311,312,255,313,314,315,316,317,318,319,15,323,16,17,18,19,20,21,22,324,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,256,51,52,245,53,54,55,56,57,58,59,60,61,62,63,64,357,358,359,360,361,65,362,66,67,364,285,68,69,70,71,72,366,73,74,75,76,77,371,372,373,78,79,80,382,383,384,385,81,386,82,83,399,263,264,265,266,400,401,267,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,289,290,291,108,109,110,402,403,404,405,407,413,414,415,416,417,111,112,113,114,115,116,418,117,268,268,269,269,118,119,120,121,122,123,124,125,126,127,432,128,129,130,131,132,133,292,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,442,150,151,293,152,443,444,153,445,154,155,156,157,158,159,448,449,450,451,270,271,160,273,161,162,274,275,276,163,164,165,166,167,168,169,170,171,172,277,173,278,279,174,280,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,488,205,206,207,208,209,210,501,502,503,504,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[510,238,239,240],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[511],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[14,512],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[185,187,195,213,214,216,218,219,505,230,235],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[14,17,18,20,21,325,256,52,245,53,56,57,371,374,259,261,394,395,262,396,397,398,264,265,266,108,109,110,125,424,129,131,132,136,137,140,141,144,145,150,151,448,449,450,451,270,272,161,162,275,276,168,278,280,281,201,204,205,210,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,300,301,302,303,304,305,1,2,3,4,306,5,6,307,7,8,257,258,308,9,10,11,12,13,14,309,310,311,312,255,313,314,315,316,317,318,319,320,321,15,322,323,16,17,18,19,20,21,22,324,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,325,256,326,327,328,329,51,52,245,53,54,55,56,57,58,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,59,60,61,62,63,64,357,358,359,360,361,65,362,66,67,363,364,285,68,69,70,365,71,72,366,73,74,75,76,77,367,368,369,370,371,372,373,374,259,375,376,377,260,78,79,378,80,379,380,381,382,383,384,385,81,386,387,388,389,390,391,261,392,393,394,395,262,396,397,82,83,398,399,263,264,265,266,400,401,267,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,289,290,291,108,109,110,402,403,404,405,406,407,294,408,409,410,295,411,412,413,414,415,416,417,111,112,113,114,115,116,418,117,268,269,118,119,120,121,122,123,124,419,420,421,422,423,125,424,425,426,427,428,429,430,431,126,127,432,128,129,130,131,132,133,292,134,433,434,435,436,437,438,439,135,136,137,138,440,139,140,141,441,142,143,144,145,146,147,148,149,442,150,151,293,152,443,444,153,445,154,155,156,157,158,159,253,446,447,448,449,450,451,270,452,271,272,453,454,160,273,161,254,162,455,456,274,275,457,276,458,459,460,163,461,462,164,463,464,465,466,467,468,469,470,471,165,472,473,474,475,476,166,477,478,167,168,169,170,171,172,277,298,173,479,480,278,279,174,280,481,281,175,482,483,176,177,178,179,484,180,485,181,182,183,486,184,185,186,187,188,189,190,191,192,193,194,195,487,196,197,198,199,200,201,202,203,204,488,205,206,207,208,209,489,490,491,492,493,494,210,495,496,497,498,499,500,501,502,503,504,211,212,213,214,242,215,216,217,218,219,220,505,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[513,213,220,225,237],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[230,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[338,387,390,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests2.UsageTest.argumentsOrdered":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":340,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":119,"org.easymock.tests2.DelegateToTest.testReturnException":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":383,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":248,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":404,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":262,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":170,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":206,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":267,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":415,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":387,"org.easymock.tests.UsageTest.argumentsOrdered":57,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":252,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":430,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":504,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":391,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.LimitationsTest.mockFinalMethod":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.DependencyTest.testClassMockingSupport":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":325,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":502,"org.easymock.tests.UsageThrowableTest.throwError":23,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":312,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests2.CompareToTest.testLessOrEqual":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":259,"org.easymock.tests2.ThreadingTest.testChangeDefault":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":160,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":67,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests.MockClassControlTest.testEquals":401,"org.easymock.tests2.EasyMockSupportClassTest.testAll":163,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":503,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests.MockNameTest.defaultName":398,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":416,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":309,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":108,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":29,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":432,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":386,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":411,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":280,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":481,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":277,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":382,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":38,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":76,"org.easymock.tests.GenericTest.testBridgedEquals":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":34,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":233,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":413,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":6,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":180,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":205,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":249,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":388,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":506,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.MockClassControlTest.testHashCode":400,"org.easymock.tests2.EasyMockSupportTest.testVerify":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":65,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":501,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":371,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":385,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":240,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":346,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":352,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":482,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":231,"org.easymock.tests2.DelegateToTest.testWrongClass":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":83,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":438,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":488,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":243,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":110,"org.easymock.tests.UsageVarargTest.varargByteAccepted":75,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":374,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":384,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":238,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":492,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests2.NameTest.nameForMocksControl":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":494,"org.easymock.tests2.MockedExceptionTest.testMockedException":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":162,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":232,"org.easymock.tests.MockingTest.testTwoMocks":260,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":299,"org.easymock.samples.ExampleTest.removeNonExistingDocument":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":496,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":446,"org.easymock.tests.UsageVerifyTest.twoThrows":109,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.LimitationsTest.privateConstructor":321,"org.easymock.tests2.UsageConstraintsTest.testNotNull":235,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":443,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":30,"org.easymock.tests2.UsageTest.defaultResetToNice":442,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":491,"org.easymock.tests.UsageVarargTest.differentLength":366,"org.easymock.tests2.CallbackTest.callback":241,"org.easymock.tests2.UsageConstraintsTest.equals":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":479,"org.easymock.tests.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":27,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":244,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":495,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests2.CompareToTest.testGreateOrEqual":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":251,"org.easymock.tests2.NameTest.nameForNiceMock":450,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":250,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":182,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":455,"org.easymock.tests.UsageVarargTest.varargLongAccepted":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":159,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests.UsageThrowableTest.noUpperLimit":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":433,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":32,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":291,"org.easymock.tests2.MockedExceptionTest.testRealException":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":449,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":454,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":437,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":168,"org.easymock.tests.UsageTest.wrongArguments":53,"org.easymock.tests2.MockBuilderTest.testWithConstructor":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":73,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":310,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":272,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.tests2.UsageConstraintsTest.constraints":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":117,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":120,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":16,"org.easymock.tests2.CompareToTest.testGreateThan":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.LimitationsTest.abstractClass":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":63,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204}}]
