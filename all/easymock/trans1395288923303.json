[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[11,10],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[27,28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[31,12,13,32,33,34,35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[31,12,13,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,14,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,16,32,86,17,33,34,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,27,28,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,35,18,19,136,137,20,21,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,41,29,30,163,164,165,166,167,168,36,22,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,37,201,23,38,39,202,203,204,205,206,2,3,207,208,209,4,5,210,6,211,212,213,214,215,216,217,218,219,7,220,221,222,223,224,225,1,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,40,24,267,268,269,270,271,25,26,272,273,274,275,276,277,278,279,280,281,282,283,8,284,9,285,286,287,288,289,11,290,10,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,324,325,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[335,336,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[349,350,43,44,45,46,351,352,353,354,355,356,357,358,98,359,147,148,42,360,361,156,362,363,364,365,366,367,368,369,370,204,239,240,241,242,244,245,259,260,261,371,301,372,373,374,375,376,377,378,379,305,306,308,309,310,311,312,380,313,314,315,316,381,382,383,384,321,322,324,325,326],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[31,12,13,14,16,32,17,33,35,19,20,21,385,386,387,37,23,38,40,24,25,26,280,281,282,283],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[388,164,197,263,264,274,277,279,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[359,149,196,389,202,252,390,391,256,258,392,315,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[393,394,395,396,196,389,202,397,391],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[398,399,16,18,400,401],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[402,335,336,403,337,404,338,339,405,406,340,407,341,342,408,343,409,344,345,410,411,346,323,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[31,12,13,349,350,43,44,45,413,46,414,415,351,47,48,49,50,51,52,53,54,55,56,57,58,59,60,416,417,418,419,420,421,422,423,424,425,426,427,428,388,429,430,61,431,432,433,434,435,62,436,437,352,353,354,355,356,357,438,358,63,64,65,66,67,14,68,69,70,439,71,72,73,74,75,76,77,78,440,79,80,81,82,441,83,442,443,444,445,84,85,16,32,86,17,33,34,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,446,112,27,28,113,114,447,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,35,18,19,136,137,20,21,138,139,448,140,141,142,143,144,145,146,359,147,148,149,42,449,450,451,452,453,454,455,456,150,151,152,153,457,458,459,460,461,462,463,464,465,466,467,468,154,155,360,361,156,362,157,158,159,160,161,162,41,29,30,363,364,365,366,367,368,369,370,469,163,470,164,165,166,167,168,36,22,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,402,335,336,403,337,189,404,338,339,405,406,340,190,191,192,193,194,195,196,389,471,197,407,341,342,408,343,198,409,344,345,410,411,346,199,200,37,201,23,38,39,202,203,204,205,206,2,3,472,207,208,209,4,5,210,6,211,212,213,214,215,216,217,218,219,7,220,221,222,223,224,225,1,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,473,243,244,245,474,246,247,248,249,250,475,251,476,477,478,252,253,254,397,255,390,391,256,257,479,258,259,260,261,262,480,263,481,264,265,266,40,24,267,268,269,270,271,25,26,272,273,274,275,276,277,278,279,482,280,281,282,283,8,284,9,285,286,287,288,289,11,290,10,291,292,293,294,295,296,297,298,299,300,371,483,484,301,485,372,302,373,374,486,487,375,488,489,376,490,303,377,378,491,492,379,304,493,494,305,306,307,308,309,310,311,495,312,392,380,313,314,315,316,381,382,496,497,317,318,383,498,499,500,384,501,502,319,320,321,322,323,324,325,326,327,328,329,330,331,332,503,333,334],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[504,393,394,395,505,506,396,196],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[164,197,263,264,274,277,279,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[416,420,421,429,433,63,82,32,88,89,90,91,92,93,94,95,96,97,107,108,111,457,154,155,37,205,206,207,208,209,4,213,215,216,218,219,7,224,225,1,291,295,324,324,325,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[475,507,508,479,392,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[509,202,203,204],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[359,149,196,389,202,252,390,391,256,258,302,303,392,315,382,324,325,326],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":268,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testReturnException":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":385,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":152,"org.easymock.samples.ExampleTest.answerVsDelegate":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":454,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":415,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":134,"org.easymock.tests.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":47,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":250,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":92,"org.easymock.tests.ReplayStateInvalidUsageTest.times":465,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.DependencyTest.testClassMocking":496,"org.easymock.tests2.AnswerTest.answer":274,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":249,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":451,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":51,"org.easymock.tests2.DelegateToTest.testDelegate":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":60,"org.easymock.tests2.DependencyTest.testClassMockingSupport":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":113,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":247,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":459,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":453,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":440,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":326,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":460,"org.easymock.tests.MockingTest.testInterfaceMocking":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":66,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":252,"org.easymock.tests2.MockBuilderTest.testCreateMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":450,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":150,"org.easymock.tests.UsageOverloadedMethodTest.overloading":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":379,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":290,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":301,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":132,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":248,"org.easymock.tests2.CaptureTest.testCaptureAll":284,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":96,"org.easymock.samples.ExampleTest.voteForRemovals":332,"org.easymock.tests.UsageVarargTest.allKinds":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":322,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.samples.ExampleTest.voteForRemoval":329,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":358,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":412,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":311,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":228,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":229,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":77,"org.easymock.tests.GenericTest.testBridgedEquals":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":145,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":56,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":93,"org.easymock.tests.UsageCallCountTest.tooManyCalls":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":240,"org.easymock.tests.MockingTest.testNiceClassMocking":351,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":261,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":81,"org.easymock.tests.MockTypeTest.fromEasyMockClass":452,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":394,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":443,"org.easymock.tests.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":49,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":246,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":480,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":237,"org.easymock.tests.DefaultClassInstantiatorTest.object":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":41,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":83,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.tests.CapturesMatcherTest.test":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":304,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":401,"org.easymock.samples.SupportTest.voteForRemovals":320,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":62,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":275,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":125,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":220,"org.easymock.tests2.DelegateToTest.testWrongClass":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":155,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":501,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":467,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":398,"org.easymock.tests2.CaptureTest.testCaptureNone":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":67,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":76,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":143,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":444,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":464,"org.easymock.tests2.StubTest.stub":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":118,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":463,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.MockedExceptionTest.testMockedException":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":372,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":481,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":255,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":221,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":225,"org.easymock.samples.ExampleTest.removeNonExistingDocument":503,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":461,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":258,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.floatType":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":471,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":65,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":315,"org.easymock.tests.LimitationsTest.privateConstructor":361,"org.easymock.tests2.UsageConstraintsTest.testNotNull":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":259,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.samples.ExampleTest.voteAgainstRemovals":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests.UsageVarargTest.differentLength":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.CallbackTest.callback":197,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":153,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":399,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":241,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":300,"org.easymock.tests2.DependencyTest.testInterfaceMocking":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":395,"org.easymock.samples.ExampleTest.addDocument":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":192,"org.easymock.tests2.AnswerTest.stubAnswer":278,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":390,"org.easymock.tests.UsageVarargTest.varargLongAccepted":75,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":196,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":383,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.samples.SupportTest.addDocument":319,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":374,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":414,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":251,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":488,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":306,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":486,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":74,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":276,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":458,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":476,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":142,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests2.CaptureTest.testCapture":348,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":333,"org.easymock.tests.UsageStrictMockTest.testVerify":87,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":57,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.LimitationsTest.abstractClass":360,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":91,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":387,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":232}}]
