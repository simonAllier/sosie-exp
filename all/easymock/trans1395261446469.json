[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,36,93,94,37,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,38,116,117,39,40,41,42,43,118,119,120,121,122,123,124,125,126,127,128,44,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,168,169,169,170,171,172,173,174,175,176,177,178,9,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,10,199,200,201,202,203,204,0,1,205,206,207,2,3,208,209,210,211,212,213,214,11,215,216,5,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,45,282,283,284,285,286,287,288,6,289,7,290,291,292,293,294,295,296,8,297,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[6,7,290,291,292,293,294,296,300,8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[301,302],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[51,52,53,54,57,58,59,303,304,305,306,307,308,309,310,311,312,86,313,314,315,89,94,37,95,141,143,144,145,146,147,148,316,317,318,319,320,321,322,323,324,325,326,174,176,177,178,9,182,183,185,196,327,328,0,11,242,253,257,258,261,274,276,277,278,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[331,332,70,333,334,335,79,80,81,336,337,123,124,338,339,340,341,130,342,343,344,345,346,347,348,349,350,351,152,352,353,354,355,356,357,159,168,168,169,169,170,171,186,329,358,359,360,187,188,189,190,361,362,191,330,192,195,196,198,10,199,363,200,364,365,201,327,202,328,366,367,231,232,233,368,248,250,251,369,370,371,372,373,374,269,375,376,270,377,378,379,380,381,382,383,384,385,271,386,387,388,389,390,272,391,392,282,283,284,285,287,288],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[393],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[181,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[46,98,100,114,115,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,394,395,396,331,397,398,332,399,400,401,402,403,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,60,61,62,404,63,64,310,65,66,67,68,69,70,71,72,73,74,75,76,405,406,407,408,77,78,333,334,335,79,80,409,81,410,411,336,82,83,84,85,412,311,413,35,312,86,313,414,87,88,314,315,415,89,90,91,92,36,93,94,37,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,38,116,117,39,40,41,42,43,118,119,120,121,122,337,123,124,338,339,125,126,127,128,44,129,340,341,130,342,416,131,417,132,133,418,134,419,420,135,421,136,343,344,345,346,347,348,349,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,137,138,139,140,446,447,448,449,450,350,141,142,143,144,145,146,147,148,149,150,151,451,452,453,454,455,456,457,458,459,351,152,352,353,354,355,356,357,153,154,155,156,157,158,159,160,161,162,163,164,165,166,460,167,168,169,170,171,172,173,174,175,176,177,178,9,179,180,181,182,183,184,185,186,358,359,360,187,188,189,190,361,362,191,192,461,462,193,194,195,196,197,198,10,199,363,463,200,364,365,201,327,202,328,366,367,203,204,0,1,464,205,206,207,2,3,208,4,209,210,211,212,213,214,11,215,216,5,217,218,465,219,220,221,222,223,466,467,224,225,226,227,228,229,230,231,232,233,234,235,468,236,237,238,239,240,241,242,469,470,471,472,473,243,474,475,476,477,478,479,480,244,245,246,481,247,248,249,250,251,369,252,253,254,255,256,257,258,259,260,261,262,263,264,482,265,266,267,268,370,371,483,484,372,373,374,269,375,376,270,377,378,379,380,381,382,383,384,385,271,386,387,388,389,390,272,391,392,485,486,487,488,489,273,490,491,492,493,494,495,274,275,276,277,278,279,280,281,45,282,283,284,285,286,287,288,6,289,7,290,291,292,293,294,295,296,8,297,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[459],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,60,61,62,63,64,310,65,66,67,68,69,70,71,72,73,74,75,76,405,406,407,77,78,79,80,81,82,83,84,85,412,413,35,86,313,414,87,88,89,90,91,92,36,93,94,37,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,38,116,117,39,40,41,42,43,118,119,120,121,122,123,124,125,126,127,128,44,129,130,416,131,417,132,133,418,134,419,420,135,421,136,343,137,138,139,140,447,448,449,141,142,143,144,145,146,147,148,149,150,151,351,152,352,353,354,355,356,357,153,154,155,156,157,158,159,160,161,162,163,164,165,166,460,167,168,169,170,171,172,173,174,175,176,177,178,9,179,180,181,182,183,184,185,186,358,187,188,189,190,362,191,192,193,194,195,196,197,198,10,199,363,200,201,327,202,328,203,204,0,1,205,206,207,2,3,208,209,210,211,212,213,214,11,215,216,5,217,218,465,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,45,282,283,284,285,286,287,288,6,289,7,290,291,292,293,294,295,296,8,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[496,497,498,499,500,501,502,369,284,288,503],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[51,52,54,55,56,57,58,59,69,88,89,91,93,94,37,95,117,44,143,144,145,146,147,174,176,177,179,180,182,183,185,206,209,11,220,223,225,242,245,265,266,267,268,276,277,278,279,45,289,7,291,292,293,294,295,299],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,394,395,396,331,505,506,397,398,332,399,400,401,402,403,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,60,61,62,404,63,64,310,65,66,67,68,69,70,71,72,73,74,75,76,405,406,407,408,77,78,333,334,335,79,80,409,81,410,411,336,82,83,84,85,412,311,413,35,312,86,313,414,87,88,314,315,415,89,90,91,92,36,93,94,37,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,38,116,117,39,40,41,42,43,118,119,120,121,122,337,123,124,338,339,125,126,127,128,44,129,340,341,130,342,416,131,417,132,133,418,134,419,420,135,421,136,507,343,344,345,346,347,348,508,349,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,137,138,139,140,446,447,448,449,450,350,141,142,143,144,145,146,147,148,149,150,151,451,452,453,454,455,456,457,458,459,509,351,152,352,353,354,355,356,357,153,154,155,156,157,158,159,160,161,162,163,164,165,166,460,167,168,169,170,171,172,173,174,175,176,177,178,9,179,180,181,182,183,184,185,186,496,358,359,497,360,187,188,189,498,190,510,361,362,191,500,192,461,462,193,194,195,196,197,198,10,199,363,463,200,364,365,201,327,202,328,366,367,203,204,0,1,464,205,206,207,2,3,208,4,209,210,211,212,213,214,11,215,216,5,217,218,465,219,220,221,222,223,466,467,224,225,226,227,228,229,230,231,232,233,234,235,468,236,237,238,239,240,241,242,469,470,471,472,473,243,474,475,476,477,478,479,480,244,245,246,481,247,248,249,250,251,369,511,252,253,254,255,256,257,258,259,260,261,262,263,264,482,265,266,267,268,370,512,513,514,371,483,484,372,373,374,269,375,376,270,377,378,379,380,381,382,383,384,385,271,386,387,388,389,390,272,391,392,485,486,487,488,489,273,490,491,492,493,494,495,274,275,276,277,278,279,280,281,45,515,282,283,284,285,516,286,287,288,503,6,289,7,290,291,292,293,294,295,296,8,297,298,299],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,55,56,59,82,83,84,85,86,88,91,93,94,95,96,97,100,102,103,104,105,107,108,109,110,112,113,114,115,117,431,433,442,443,445,144,146,147,174,176,179,180,184,185,191,203,204,0,205,206,207,2,209,211,213,214,11,215,216,220,221,222,223,225,237,238,239,245,276,278,279,45,289,291,294,295,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[51,53,54,57,58,59,310,405,406,407,82,89,37,95,141,143,145,146,147,174,177,178,9,182,183,184,185,358,362,191,192,196,327,328,0,11,239,242,253,257,258,261,274,277,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":160,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":126,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":352,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":90,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":139,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":261,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":357,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":320,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":256,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests.LimitationsTest.mockFinalMethod":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":122,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.UsageThrowableTest.throwError":38,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":509,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":452,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":301,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":296,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.MockClassControlTest.testEquals":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests.MockNameTest.defaultName":408,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":94,"org.easymock.samples.BasicClassMockTest.testPrintContent":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":121,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":129,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":508,"org.easymock.tests2.UsageConstraintsTest.greaterThan":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":366,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":393,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":363,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":254,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":125,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":255,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":103,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests2.CaptureTest.testCapture2_2446744":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":68,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":465,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":454,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":46,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":283,"org.easymock.tests.MockingTest.testNiceClassMocking":336,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":72,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":329,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":236,"org.easymock.tests.UsageExpectAndReturnTest.object":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":260,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":64,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":449,"org.easymock.tests.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":112,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.MockClassControlTest.testHashCode":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":515,"org.easymock.tests.UsageVarargTest.varargCharAccepted":63,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":507,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":263,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":12,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":447,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":327,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":272,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":321,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":353,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":128,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":250,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":324,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":466,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":396,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.samples.ConstructorCalledMockTest.testTax":168,"org.easymock.tests.UsageStrictMockTest.range":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":483,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":189,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":303,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":453,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":504,"org.easymock.tests.UsageVerifyTest.twoReturns":95,"org.easymock.tests.UsageVarargTest.varargByteAccepted":67,"org.easymock.tests2.ThreadingTest.testThreadSafe":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":170,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests2.UsageConstraintsTest.any":209,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":134,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests2.SerializationTest.testClass":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests2.NameTest.nameForMocksControl":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":468,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":190,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":288,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.samples.ExampleTest.removeNonExistingDocument":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":239,"org.easymock.tests2.ConstraintsToStringTest.andToString":323,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":351,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":271,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":202,"org.easymock.tests.LimitationsTest.privateConstructor":341,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":464,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":305,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":286,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.ObjectMethodsTest.testHashCode":448,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests2.NameTest.nameForNiceMock":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":510,"org.easymock.tests.UsageVarargTest.varargLongAccepted":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":251,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":169,"org.easymock.tests2.ConstraintsToStringTest.orToString":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":370,"org.easymock.tests2.SerializationTest.test":249,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":207,"org.easymock.samples.SupportTest.addDocument":172,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":476,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests2.NameTest.nameForMock":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":500,"org.easymock.tests2.UsageStrictMockTest.differentMethods":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests2.NameTest.nameForStrictMock":266,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":371,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":358,"org.easymock.tests2.UsageStrictMockTest.range":278,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":253,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.MockBuilderTest.testWithConstructor":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.UsageVarargTest.varargShortAccepted":65,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":297,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":131,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":75,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":110,"org.easymock.tests2.CaptureTest.testCapture":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests2.ConstraintsToStringTest.notToString":318,"org.easymock.tests.UsageStrictMockTest.testVerify":149,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":119,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":102,"org.easymock.tests.LimitationsTest.abstractClass":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":258}}]
