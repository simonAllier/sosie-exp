[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[2],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[3,4,0,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[23,24,25,26],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,49,31,32,33,34,50,51,52,53,43,44,45,54,55,56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[29,35,36,58,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,47,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,20,22,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[160,68,27,161,162,163,29,30,164,165,49,166,167,168,169,3,4,0,170,171,35,36,172,173,174,175,176,177,178,179,180,5,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,91,92,254,255,256,257,258,259,260,261,262,263,6,7,9,10,11,12,264,265,266,267,268,269,270,271,272,41,42,273,110,112,114,274,14,15,16,17,18,275,276,53,277,278,279,280,281,282,283,284,285,286,287,288,289,25,290,291,292,293,294,26,295,296,124,126,134,20,21,297,298,299,300,301,302],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[303,304,305,306],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[307,308,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[293,146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[28,31,50,51,54,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[66,67,68,69,70],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[310,311,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[93,94,105,118,130],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[85,112],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[66,69,84,85,93,93,94,94,95,104,106,107,109,110,112,114,312,115,117,119,120,128,130,133,134,137,20,142,150,156,157,158],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[162,165,166,167,168,171,36,271,275,279,280,282,298],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[27,28,162,163,29,30,165,49,32,166,167,33,34,168,3,170,171,35,36,5,205,239,247,7,8,313,314,315,9,10,12,265,271,272,41,42,274,15,316,317,18,275,53,43,279,280,44,45,282,284,298,300,318,319,320,321],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[9,322,323],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[61,62,63,64,324,325,326,327,328,329,330,331,332,333,334,335,160,336,337,338,339,67,68,69,340,341,342,343,344,345,346,347,348,27,349,161,28,162,163,29,30,164,350,351,352,353,354,46,355,356,165,49,31,32,166,167,33,34,168,71,169,3,4,0,170,74,76,77,78,79,80,81,82,83,171,35,36,357,358,24,359,360,172,173,174,175,176,361,177,178,179,180,5,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,362,363,364,212,365,213,214,366,367,368,86,369,370,371,372,373,374,375,376,377,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,378,379,380,381,382,383,384,385,386,245,246,247,248,249,250,251,252,253,91,92,254,93,93,94,94,255,256,257,258,259,260,387,261,262,263,95,6,7,8,388,313,314,315,9,10,322,11,389,390,12,264,265,391,392,96,97,98,99,393,100,101,394,266,267,268,395,269,396,270,271,272,41,42,273,104,106,110,111,112,114,116,117,119,274,303,397,13,14,398,15,399,16,17,400,401,316,402,403,404,405,406,317,304,407,408,409,410,411,305,18,412,413,275,276,53,43,277,278,279,280,414,44,45,281,282,311,283,284,285,415,286,287,288,289,25,290,291,292,293,416,294,26,295,296,417,120,121,122,418,123,124,419,125,126,127,128,129,132,133,134,135,20,21,22,297,420,421,422,423,298,424,425,299,300,426,318,319,320,321,140,142,150,156,157,301,302],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[304,427],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"failMessage":"methodName"}},{"position":"org.easymock.internal.LastControl:95","failures":[6,8,11,13,14,15,16,17,401,408,18],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[27,28,29,31,32,33,34,35,36,429,38,41,43,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":278,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":85,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.CaptureTest.testPrimitive":388,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":209,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.ReplayStateInvalidUsageTest.times":332,"org.easymock.tests2.AnswerTest.answer":298,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":423,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":371,"org.easymock.tests2.DelegateToTest.testDelegate":286,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":421,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":326,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.samples.PartialClassMockTest.testGetArea":95,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":327,"org.easymock.tests2.CompareToTest.testLessOrEqual":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests2.UsageTest.niceToStrict":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":54,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":405,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":404,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":322,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":422,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":210,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":324,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":135,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":90,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":136,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":71,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":25,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":290,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":395,"org.easymock.tests2.CaptureTest.testCapture2_2446744":390,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":117,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":385,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":386,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":65,"org.easymock.tests.MockingTest.testClassMocking":60,"org.easymock.tests2.UsageConstraintsTest.testContains":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":379,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":398,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":294,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":176,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":24,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":158,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":420,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":175,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests2.UsageTest.openCallCountByLastCall":279,"org.easymock.tests.DefaultClassInstantiatorTest.object":86,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":133,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":156,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.StubTest.stubWithReturnValue":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":305,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":362,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":56,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":424,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":409,"org.easymock.tests2.DelegateToTest.testWrongClass":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":93,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":138,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":50,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":356,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":39,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":383,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":0,"org.easymock.tests2.UsageConstraintsTest.any":316,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":330,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests2.NameTest.nameForMocksControl":321,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":141,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":410,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":412,"org.easymock.samples.ExampleTest.removeNonExistingDocument":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":119,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":143,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":317,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":159,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":134,"org.easymock.tests.LimitationsTest.privateConstructor":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":414,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":130,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":51,"org.easymock.tests.MockingTest.testStrictClassMocking":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":393,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":426,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.NameTest.nameForNiceMock":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":301,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":152,"org.easymock.tests2.DelegateToTest.testStubDelegate":284,"org.easymock.tests2.AnswerTest.stubAnswer":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":312,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":157,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":407,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":397,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":102,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":47,"org.easymock.tests2.UsageConstraintsTest.testSame":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":144,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":376,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":372,"org.easymock.tests2.MockedExceptionTest.testRealException":418,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":335,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":103,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":106,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests2.UsageConstraintsTest.lessThan":413,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":124,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":145,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":48,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":384,"org.easymock.tests2.UsageConstraintsTest.cmpTo":402,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":1,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":280,"org.easymock.tests2.CaptureTest.testCaptureFromStub":389,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":325,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":107,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests2.CaptureTest.testCapture":323,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":254,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.CompareToTest.testGreateThan":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.LimitationsTest.abstractClass":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":293}}]
