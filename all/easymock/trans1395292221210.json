[{"position":"org.easymock.internal.ErrorMessage:50","failures":[0,1,2,3,4,5,6],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,0,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,1,202,203,204,205,206,2,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,5,6,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"position":"org.easymock.ConstructorArgs:54","failures":[242,243,244,245,246,247,248,54,249,250,251,252,253,96,254,255,97,256,257,258,259,260,261,262,263,264,98,265,266,267,268,269,99,270,271],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[7,8,9,10,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,272,50,273,53,274,54,55,56,57,58,59,60,61,62,63,275,65,276,277,278,279,67,68,280,281,69,70,71,282,72,73,74,75,76,283,77,78,79,80,81,82,284,285,83,286,84,86,87,287,288,88,289,89,90,91,92,93,0,94,95,101,102,103,104,105,106,290,291,292,107,108,109,110,111,112,113,114,116,117,118,120,121,124,125,133,134,135,136,137,138,139,293,140,141,294,295,296,297,298,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,299,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,300,192,301,193,194,195,196,199,200,302,201,1,303,304,305,306,307,202,203,204,205,206,2,207,208,308,209,210,211,309,212,310,311,213,214,215,312,313,314,315,216,316,317,318,319,320,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,321,237,5,6,322,323,324,325,326,238,239,240,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[23,40,45,327],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[113,114],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,328,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,329,45,46,47,48,272,49,50,273,51,52,330,53,274,54,55,56,57,58,59,60,61,62,331,63,275,64,65,66,276,277,278,279,67,68,281,69,70,71,282,72,73,74,75,76,283,77,78,79,80,81,82,284,285,83,84,85,86,87,287,288,88,289,89,90,91,92,93,0,94,95,96,97,98,99,100,101,102,103,104,105,106,290,291,292,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,332,333,128,129,130,131,132,133,134,135,136,137,138,139,293,140,141,294,295,296,297,298,142,143,144,145,146,334,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,299,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,335,197,198,199,200,201,1,303,304,305,306,307,202,203,204,205,206,2,207,208,209,210,211,309,212,310,311,213,214,215,312,313,314,315,216,316,317,318,319,320,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,5,6,322,323,324,325,326,238,239,240,336,337,338,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[340,248,54,341,342,343,344,345,89,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[347,348],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[349,107,213],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[340,248,54,341,342,343,345,89,346],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,329,45,46,47,48,55,56,57,58,59,60,61,62,63,66,67,68,280,281,69,70,71,282,72,73,74,75,76,283,77,78,79,80,81,82,284,285,83,84,85,86,87,287,288,88,289,90,91,92,93,0,94,95,96,100,101,102,103,104,105,106,290,291,107,108,109,110,111,112,113,114,115,116,350,117,118,119,122,123,126,127,128,130,131,132,133,134,135,136,137,138,139,293,140,141,294,295,296,297,298,142,143,144,145,146,334,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,351,162,164,165,166,299,167,168,169,170,171,352,353,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,354,355,193,194,195,196,197,198,199,200,356,357,201,1,303,202,203,204,205,206,2,207,208,308,209,210,211,212,310,311,213,214,215,312,313,314,315,216,316,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,5,6,322,323,324,325,326,336,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[109,163,165,358,359],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[54,55,56,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[361,362,363,364,365,366],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[247,249,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[25,32,37,48,367],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[295,296,5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,328,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,272,50,273,51,52,54,55,56,57,59,60,61,62,63,275,65,276,277,278,279,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,287,288,88,289,89,91,92,94,95,96,97,98,99,100,102,103,105,106,292,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,332,333,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,300,192,301,193,194,195,196,199,200,201,303,304,305,306,307,203,205,207,208,308,209,211,312,313,314,315,216,316,317,318,319,320,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,368,237,5,6,322,323,324,325,326,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[54,55,56,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[369,370,371,372,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[87,287,288,88,289,299,169,312,313,314,315,216,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[11,13,14,15,16,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,57,59,60,62,276,277,278,67,280,281,69,70,71,282,72,73,76,81,82,84,85,87,287,288,88,289,89,92,0,94,97,98,99,100,101,102,103,105,290,291,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,332,333,129,132,133,134,135,136,138,293,141,294,295,296,297,298,142,143,144,145,146,147,148,162,164,165,166,299,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,199,200,201,303,304,305,306,307,205,2,207,210,211,310,311,215,312,313,314,315,316,317,318,319,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,5,6,322,323,324,325,326,238,239,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[58,60,62,275,66,92,0,94,204,205,2,207,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[272,273,331,376,287,97],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[54,55,56,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[377],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[378,379,380],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[381,351],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":106,"org.easymock.tests2.StubTest.stubWithReturnValue":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.samples.SupportTest.voteForRemovals":132,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":85,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":32,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":332,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":243,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":19,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":251,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":324,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":157,"org.easymock.tests2.ThreadingTest.testThreadSafe":67,"org.easymock.tests.UsageTest.argumentsOrdered":214,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":265,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":196,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":126,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests2.StubTest.stub":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":374,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":275,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests2.DelegateToTest.testDelegate":72,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":302,"org.easymock.tests.UsageStrictMockTest.differentMethods":207,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":280,"org.easymock.tests2.MockBuilderTest.testCreateMockString":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":256,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":253,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests2.CompareToTest.testLessOrEqual":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":260,"org.easymock.tests2.UsageTest.niceToStrict":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":298,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":247,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":330,"org.easymock.tests2.UsageTest.defaultResetToNice":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":267,"org.easymock.tests.UsageVarargTest.differentLength":154,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":169,"org.easymock.tests.UsageCallCountTest.tooFewCalls":194,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":295,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests2.EasyMockSupportClassTest.testAll":96,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":325,"org.easymock.tests2.CompareToTest.testGreateOrEqual":367,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests.UsageVarargTest.allKinds":159,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.samples.BasicClassMockTest.testPrintContent":127,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":297,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":345,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.UsageVarargTest.varargLongAccepted":156,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":333,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":140,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":248,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":13,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":252,"org.easymock.samples.SupportTest.addDocument":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":14,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":257,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":281,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":158,"org.easymock.tests.GenericTest.testBridgedEquals":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":197,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":371,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":193,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":301,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":88,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":117,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":63,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":153,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":353,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":344,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":346,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.UsageTest.wrongArguments":212,"org.easymock.tests2.MockBuilderTest.testWithConstructor":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":258,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests2.EasyMockSupportTest.testVerify":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":262,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":155,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":152,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests2.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests.DefaultClassInstantiatorTest.object":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":249,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":21,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":294,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":195,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageStrictMockTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":130,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests2.UsageTest.resumeIfFailure":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150}}]
