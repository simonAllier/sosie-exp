[{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.ConstructorArgs:54","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[19,24,58,59,60,61,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[16,16,17,17,18,19,64,25,65,56],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[82,16,16,17,17,83,84,18,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,28,110,111,29,34,37,47,53,56,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[56,131,112,132],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[82,139,140,141,142,143,18,86,88,90,91,93,95,96,144,97,98,99,101,103,104,105,145,146,147,148,108,109,28,110,149,111,29,34,37,47,53,150,70,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,114,115,116,168,169,170,171,172,173,174,175,176,129,177,178,179,180,181,182,183,184,185,186,81,187,188],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82,139,189,140,141,190,142,191,192,193,83,84,194,195,143,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,85,86,87,237,88,89,90,91,92,93,94,1,2,3,4,5,6,7,8,238,9,11,12,13,14,95,96,144,97,98,99,100,239,101,240,102,103,104,105,241,106,242,243,244,145,245,246,247,107,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,67,264,265,266,267,268,68,69,269,270,271,272,146,147,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,148,289,290,291,292,293,294,295,63,296,108,109,110,149,30,297,298,299,300,301,302,303,304,305,306,307,308,309,31,32,34,36,37,38,39,42,45,47,48,49,50,51,52,53,310,311,312,313,133,134,314,315,150,316,70,151,317,131,112,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,152,153,154,155,156,157,341,342,158,159,343,160,161,162,344,163,164,165,166,167,345,346,113,347,348,349,350,351,135,352,353,354,355,356,357,358,359,360,136,168,169,170,171,361,117,362,363,118,364,365,366,367,368,369,370,371,372,373,374,375,172,173,174,175,176,376,377,73,74,378,379,75,76,380,119,381,382,383,384,385,386,387,388,389,390,391,392,137,393,394,395,138,396,397,77,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,120,121,122,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,57,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,123,124,125,126,127,128,452,453,454,455,129,456,177,457,458,459,460,461,462,463,464,178,179,180,181,182,465,183,466,467,468,469,470,471,130,472,473,474,475,476,477,478,78,79,479,480,481,482,483,484,485,486,487,184,185,488,489,80,186,490,81,187,491,492,493,188,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[86,93,103,106,37],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[517,518,519],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[133,134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[206,207,210,212,213,215,225,230,1,3,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[82,85,520,86,87,88,89,90,91,92,93,66,521,94,100,56,117,118,122],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[204,220,223,224,232,296,150,168,169,170,171,361,417,421,422,431,435,177,457,460,178,179,180,181,182,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[205,206,209,211,212,218,221,224,231,266,267,70,151,173,378,379,382,383,405,416,418,478,481,81,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[82,16,17,139,189,140,141,190,142,191,192,193,83,84,194,195,143,18,197,198,199,200,201,203,204,205,206,207,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,85,86,88,89,90,91,92,93,94,1,2,3,4,5,6,7,8,238,9,11,12,13,14,95,96,144,97,98,99,100,101,102,103,104,105,242,243,244,145,245,246,247,107,248,254,261,262,263,67,264,265,266,267,268,68,69,269,270,146,147,273,280,288,148,289,291,63,296,108,109,28,110,149,111,29,297,298,299,300,301,302,303,304,305,306,307,308,309,34,37,47,53,310,313,133,134,314,315,150,316,70,151,317,56,131,112,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,152,153,154,155,156,157,341,342,158,159,343,160,161,162,344,163,164,165,166,167,114,115,116,351,135,352,353,354,355,356,357,358,359,360,136,168,169,170,171,361,366,368,369,371,372,173,174,175,176,376,377,73,74,378,379,75,76,380,119,386,387,388,389,390,392,77,401,402,404,405,406,407,408,409,410,411,120,121,414,415,416,440,441,442,444,445,446,447,448,449,450,451,123,124,125,126,127,128,452,453,129,177,457,458,459,460,461,462,463,464,178,179,180,181,182,468,469,470,472,473,474,475,476,477,478,78,79,479,480,481,482,483,484,485,486,487,184,185,488,489,80,186,490,81,187,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[82,16,16,17,17,83,84,18,85,520,86,87,88,89,90,91,92,93,521,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,28,110,111,29,522,523,524,34,37,47,53,56,112,113,114,115,116,117,118,119,120,121,122,124,129],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[82,16,16,17,17,83,84,18,19,85,86,87,237,88,89,90,91,25,92,93,94,95,96,97,98,99,100,101,65,240,102,103,104,105,241,106,246,247,107,292,293,108,109,28,110,111,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,112,113,114,115,116,117,118,119,391,392,137,393,394,395,138,396,397,412,120,121,122,413,123,124,125,126,127,453,454,129,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[82,16,17,139,189,140,141,190,142,192,193,83,84,194,195,143,18,201,202,203,204,205,206,207,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,85,86,88,89,90,91,92,93,94,1,2,3,4,5,6,7,8,238,9,11,12,13,14,95,96,144,97,98,99,100,101,102,103,104,105,242,243,244,145,245,246,247,107,248,254,261,262,263,67,264,265,266,267,268,68,69,269,270,146,147,273,280,288,148,289,291,63,296,108,109,28,110,149,111,29,297,298,299,300,301,302,303,304,305,306,307,308,309,34,37,47,53,310,313,133,134,314,315,150,316,70,151,317,56,131,112,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,152,153,154,155,156,157,341,342,158,159,343,160,161,162,344,163,164,165,166,167,114,115,116,168,169,170,171,361,366,368,369,372,173,175,176,376,377,73,74,378,379,75,76,380,119,386,387,388,389,390,77,401,402,404,405,406,407,408,409,410,411,120,121,414,415,416,440,441,442,444,445,446,447,448,449,450,451,129,177,457,458,459,460,461,462,463,464,178,179,180,181,182,472,473,474,475,476,477,478,78,79,481,482,483,484,485,486,487,184,185,488,489,80,186,490,81,187,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[133,134],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[82,16,16,17,17,139,189,140,141,190,142,191,192,193,83,84,194,195,143,18,197,198,199,200,201,203,204,205,206,207,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,85,86,88,89,90,91,92,93,94,1,2,3,4,5,6,7,8,238,9,11,12,13,14,95,96,144,97,98,99,100,101,102,103,104,105,242,243,244,145,245,246,247,107,248,254,261,262,263,67,264,265,266,267,268,68,69,269,270,146,147,273,280,288,148,289,291,63,296,108,109,28,110,149,111,29,297,298,299,300,301,302,303,304,305,306,307,308,309,34,37,47,53,310,313,133,134,314,315,150,316,70,151,317,56,131,112,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,152,153,154,155,156,157,341,342,158,159,343,160,161,162,344,163,164,165,166,167,114,115,116,351,135,352,353,354,355,356,357,358,359,360,136,168,169,170,171,361,366,368,369,371,372,173,174,175,176,376,377,73,74,378,379,75,76,380,119,386,387,388,389,390,392,77,401,402,404,405,406,407,408,409,410,411,120,121,414,415,416,440,441,442,444,445,446,447,448,449,450,451,123,124,125,126,127,128,452,453,129,177,457,458,459,460,461,462,463,464,178,179,180,181,182,468,469,470,472,473,474,475,476,477,478,78,79,479,480,481,482,483,484,485,486,487,184,185,488,489,80,186,490,81,187,491,492],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[56,131,112,132],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[525,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[18,19,24,25,58,59,60,526,527,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[82,16,16,17,17,83,84,18,85,520,86,87,88,89,90,91,92,93,521,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,28,110,111,29,522,523,34,37,47,53,56,112,113,114,115,116,117,118,119,120,121,122,124,129],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[207,210,212,213,225,230,2,8,238,14,451],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":376,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":193,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":125,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":196,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":516,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":118,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":306,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":460,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":337,"org.easymock.tests.UsageTest.moreThanOneArgument":377,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":62,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":182,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":500,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":518,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.DependencyTest.testClassMocking":271,"org.easymock.tests2.AnswerTest.answer":310,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":333,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":390,"org.easymock.tests2.DependencyTest.testClassMockingSupport":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.UsageThrowableTest.throwError":404,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":503,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.MockingTest.testInterfaceMocking":347,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":188,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":42,"org.easymock.tests2.UsageTest.niceToStrict":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":461,"org.easymock.tests.UsageOverloadedMethodTest.overloading":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":220,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":369,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":219,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":452,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":522,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":142,"org.easymock.tests.UsageVarargTest.allKinds":451,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":389,"org.easymock.samples.BasicClassMockTest.testPrintContent":84,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":410,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":527,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":504,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":496,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":342,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.UsageTest.moreThanOneArgument":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":450,"org.easymock.tests.GenericTest.testBridgedEquals":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":486,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":386,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":297,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":521,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":519,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.MockingTest.testNiceClassMocking":350,"org.easymock.tests.MockingTest.testClassMocking":346,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":520,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":480,"org.easymock.tests2.UsageConstraintsTest.testContains":218,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":416,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageExpectAndReturnTest.object":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":305,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":59,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":470,"org.easymock.tests.UsageTest.exactCallCountByLastCall":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":368,"org.easymock.tests.MockClassControlTest.testHashCode":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":250,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":44,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":517,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":274,"org.easymock.tests.UsageVarargTest.varargCharAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":391,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.object":392,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":398,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":468,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":249,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":324,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.ReplayStateInvalidCallsTest.times":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":509,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":112,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.samples.SupportTest.voteForRemovals":143,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":330,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":132,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":311,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":294,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":329,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":31,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":494,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests.UsageUnorderedTest.message":77,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":449,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":48,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":484,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":471,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":83,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageConstraintsTest.any":216,"org.easymock.tests2.StubTest.stub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":395,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":122,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":514,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests2.NameTest.nameForMocksControl":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":379,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":513,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":510,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":326,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":231,"org.easymock.samples.ExampleTest.removeNonExistingDocument":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":251,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":38,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":313,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":411,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests.UsageVarargTest.differentLength":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.CallbackTest.callback":273,"org.easymock.tests2.UsageConstraintsTest.equals":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":378,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":458,"org.easymock.tests.UsageCallCountTest.tooFewCalls":482,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":408,"org.easymock.tests.MockingTest.testStrictClassMocking":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":61,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":512,"org.easymock.tests2.NameTest.nameForNiceMock":199,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":507,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":60,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":49,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":448,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":292,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testSame":211,"org.easymock.samples.SupportTest.addDocument":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":39,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":348,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":495,"org.easymock.tests2.NameTest.nameForMock":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":332,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":176,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":295,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":457,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":136,"org.easymock.tests2.NameTest.nameForStrictMock":198,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":293,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":525,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":43,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":212,"org.easymock.tests.UsageRangeTest.combination":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":40,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.UsageVarargTest.varargShortAccepted":447,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":485,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":515,"org.easymock.tests2.UsageConstraintsTest.cmpTo":217,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":312,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":267,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":135,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":511,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":483,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":344,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":490,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":192,"org.easymock.tests.UsageStrictMockTest.testVerify":492,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":387,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":523,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":180,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":303}}]
