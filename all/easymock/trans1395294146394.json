[{"position":"org.easymock.internal.MockBuilder:80","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[24,25,26],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,3,5,7,8,10,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,15,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,18,105],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,38,39,117,118,119,67,68,120,78,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[124,125,27,126,127,128,129,130,131,132,133,106,107,134,135,108,136,109,110,137,138,139,140,141,111,142,143,112,144,145,113,146,147,148,149,150,151,114,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,115,116,171,172,173,174,175,28,29,30,31,176,32,33,34,177,178,179,35,36,180,181,37,182,38,39,183,184,185,186,40,187,188,41,189,190,191,192,193,194,195,196,197,42,198,199,200,201,202,43,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,0,229,230,1,231,3,4,232,233,5,6,7,234,8,235,236,9,10,237,13,238,239,240,241,44,242,243,244,245,246,45,247,46,47,48,49,50,51,14,248,52,249,250,251,53,54,55,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,56,296,297,298,299,300,301,302,57,303,117,304,305,306,58,59,307,60,308,309,310,61,62,63,64,65,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,118,119,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,66,360,67,68,361,362,363,364,365,366,367,368,369,370,69,70,71,72,371,372,73,74,75,76,373,24,25,374,375,376,26,377,378,379,380,381,382,120,383,384,385,386,387,388,20,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,77,405,15,406,407,408,409,78,79,80,81,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,82,430,431,432,433,434,16,435,436,437,438,17,439,440,441,442,443,444,445,446,447,448,449,83,450,451,452,453,454,455,456,457,458,459,460,461,462,121,463,464,465,466,467,84,85,86,87,88,89,468,469,90,91,470,92,93,94,471,95,96,97,98,99,100,472,473,474,475,476,477,478,479,480,21,122,123,22,23,101,481,102,103,482,104,483,484,485,486,487,18,488,489,105,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[174,278,397,79,80,81,425],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[142,359,462],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[124,125,27,126,127,128,129,130,131,132,133,106,107,134,135,108,136,109,110,137,138,139,140,141,111,142,143,112,144,145,113,146,147,148,149,150,151,114,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,115,116,171,172,173,174,175,32,35,36,180,181,37,182,38,39,183,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,239,240,241,244,245,246,45,247,48,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,297,298,299,300,301,302,57,303,117,307,308,309,61,62,63,64,65,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,118,119,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,66,360,67,68,361,362,69,70,71,72,371,372,73,74,75,76,379,380,382,120,383,384,385,386,387,388,20,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,407,408,409,78,79,80,81,410,411,412,413,414,415,416,418,419,420,421,422,423,424,425,426,427,428,429,82,430,431,432,433,434,437,438,439,440,441,442,443,444,445,446,447,448,449,83,450,451,452,453,454,455,456,457,458,459,460,461,462,121,463,464,465,466,467,84,85,86,87,88,89,468,469,90,91,470,92,93,94,471,95,96,97,98,99,100,472,473,474,475,476,477,478,479,480,21,122,123,22,23,101,481,102,103,482,104,483,484,487,488,489,105],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[493,494,495,496,324,359],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[441,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,229,230,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[278,402],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[165,116,254,255,256,257,279,117,315,316,317,318,319,320,322,119,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,380,413,431,432,441,443,444,445,446,447,448,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[234,498,44,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[125,27,126,128,129,130,132,133,106,107,134,108,136,109,110,137,138,140,141,111,142,143,112,144,145,113,146,147,148,149,150,151,114,152,158,165,166,167,168,169,170,115,116,171,172,173,174,175,28,29,30,31,32,33,34,35,36,180,181,37,182,38,39,183,40,41,42,43,211,218,221,222,223,0,229,230,1,3,5,6,7,8,9,10,13,238,239,240,241,44,244,245,246,45,247,46,47,48,49,50,51,14,52,251,53,54,55,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,56,57,303,117,58,59,60,61,62,63,64,65,311,312,313,314,315,316,317,318,319,320,322,323,324,325,118,119,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,357,358,359,66,360,67,68,361,69,70,71,72,371,75,76,379,380,77,405,78,80,81,410,412,413,416,417,82,430,431,432,433,434,441,442,443,444,445,446,447,448,499,499,451,452,453,455,456,457,458,459,460,461,462,121,463,464,84,85,86,87,88,89,468,469,90,91,470,92,93,94,471,95,96,97,98,99,474,475,476,477,478,479,480,101,481,102,103,482,104,484,485,486,487,18,488,489,105,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[354,355,356,388,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[171],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[500,501,502,503,504,234,242],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:97","sourceCode":"return ((java.util.Set<java.lang.reflect.Method>) != null) && (!(java.util.Set<java.lang.reflect.Method>.contains(java.lang.reflect.Method)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[280,281,282,283,284,285,286,287,289,290,291,292,293,499],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,5,235,236,9,13,44,242,249,54,253,404,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[125,27,126,128,129,130,132,133,106,107,134,108,136,109,110,137,138,140,141,111,142,143,112,144,145,113,146,147,148,149,150,151,114,152,158,165,166,167,168,169,170,115,116,171,172,173,174,175,28,29,30,31,32,33,34,35,36,180,181,37,182,38,39,183,40,41,42,43,211,218,221,222,223,0,229,230,1,3,5,6,7,8,9,10,13,238,239,240,241,44,244,245,246,45,247,46,47,48,49,50,51,14,52,251,53,54,55,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,56,57,303,117,58,59,60,61,62,63,64,65,311,312,313,314,315,316,317,318,319,320,322,323,324,325,118,119,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,357,358,359,66,360,67,68,361,69,70,71,72,371,75,76,379,380,77,405,78,80,81,410,412,413,416,417,82,430,431,432,433,434,441,442,443,444,445,446,447,448,451,452,453,455,456,457,458,459,460,461,462,121,463,464,84,85,86,87,88,89,468,469,90,91,470,92,93,94,471,95,96,97,98,99,474,475,476,477,478,479,480,101,481,102,103,482,104,484,485,486,487,18,488,489,105,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":322,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":170,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":224,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":138,"org.easymock.tests2.UsageTest.wrongArguments":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":82,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":267,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.CaptureTest.testPrimitive":283,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":433,"org.easymock.tests.UsageTest.moreThanOneArgument":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":21,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":65,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests2.DependencyTest.testClassMocking":178,"org.easymock.tests2.AnswerTest.answer":218,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":241,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":436,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":262,"org.easymock.tests2.DelegateToTest.testDelegate":128,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":344,"org.easymock.tests.LimitationsTest.mockFinalMethod":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":407,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":239,"org.easymock.tests.UsageThrowableTest.throwError":441,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":420,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":204,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":421,"org.easymock.tests.MockingTest.testInterfaceMocking":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":73,"org.easymock.tests2.UsageTest.niceToStrict":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":193,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":142,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":240,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":72,"org.easymock.samples.ExampleTest.voteForRemovals":104,"org.easymock.tests.UsageVarargTest.allKinds":462,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":447,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":252,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":11,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":417,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":260,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":261,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":469,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":45,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":461,"org.easymock.tests.GenericTest.testBridgedEquals":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":480,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":29,"org.easymock.tests.MockingTest.testNiceClassMocking":310,"org.easymock.tests.MockingTest.testClassMocking":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":256,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":456,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":300,"org.easymock.tests.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":242,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":195,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":238,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":455,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.CaptureTest.testCaptureMultiple":19,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":115,"org.easymock.tests.DefaultClassInstantiatorTest.object":24,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":465,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":335,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.StubTest.stubWithReturnValue":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":105,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":341,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":219,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":450,"org.easymock.tests.UsageExpectAndThrowTest.object":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":75,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":76,"org.easymock.samples.ConstructorCalledMockTest.testTax":485,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":74,"org.easymock.tests2.CaptureTest.testCaptureNone":288,"org.easymock.tests.UsageUnorderedTest.message":434,"org.easymock.tests.UsageVerifyTest.twoReturns":464,"org.easymock.tests.UsageVarargTest.varargByteAccepted":460,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":198,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":490,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":301,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests2.StubTest.stub":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.UsageExpectAndThrowTest.longType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":131,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests2.CaptureTest.testCaptureLast":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":337,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":189,"org.easymock.tests.UsageExpectAndThrowTest.floatType":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":221,"org.easymock.tests.UsageVerifyTest.twoThrows":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":448,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.UsageVarargTest.differentLength":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":249,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":431,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":32,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.ObjectMethodsTest.testHashCode":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":199,"org.easymock.tests2.DelegateToTest.testStubDelegate":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.AnswerTest.stubAnswer":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":66,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":235,"org.easymock.tests.UsageVarargTest.varargLongAccepted":459,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":442,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":271,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":176,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":190,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":308,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":343,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":81,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":430,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":194,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageTest.wrongArguments":325,"org.easymock.tests2.MockBuilderTest.testWithConstructor":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":191,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":419,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":4,"org.easymock.tests.UsageTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":471,"org.easymock.tests2.UsageConstraintsTest.constraints":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.samples.ExampleTest.addAndChangeDocument":484,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":468,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":64,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":264}}]
