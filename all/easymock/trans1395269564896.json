[{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[12,200,201,202,203,204],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[205,140,145,156],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[54,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[206,207,208,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[211,212,213,214,215,216,217],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[1,2,236,3,4,237,238,239,240,241,242,5,6,243,7,244,245,246,8,9,247,248,249,250,251,10,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,11,273,12,13,14,15,16,17,274,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,275,38,39,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,40,41,42,43,44,45,292,46,47,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,48,49,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,50,206,207,208,209,210,51,52,53,54,367,55,56,57,58,59,60,61,368,369,370,371,62,63,200,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,372,373,374,375,376,377,378,379,380,381,90,382,383,218,219,384,385,91,386,386,387,387,388,92,93,94,95,96,389,97,390,391,392,393,394,395,396,397,98,99,398,100,101,399,102,103,400,104,401,402,403,404,405,406,407,408,409,410,411,220,221,222,412,223,105,224,225,226,413,414,227,415,416,417,418,228,229,230,419,231,106,232,233,234,420,421,235,107,422,108,109,110,111,112,113,423,114,115,116,117,118,119,120,121,122,123,424,425,124,125,426,427,428,126,429,127,128,129,430,130,131,132,133,134,431,135,136,137,138,139,140,432,141,142,143,144,145,146,147,148,149,150,151,152,433,153,154,155,156,157,158,159,160,161,162,163,434,435,436,437,438,439,164,440,441,442,443,444,445,446,447,448,165,449,450,451,452,453,166,454,455,167,211,168,456,457,169,170,171,172,173,174,175,176,177,178,179,458,180,181,459,182,460,461,462,463,183,464,184,185,465,466,186,467,187,468,188,189,190,191,469,470,192,471,193,194,472,195,196,473,474,475,197,476,477,478,479,480,481,198,482,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[1,2,236,3,4,237,238,239,240,241,242,5,6,243,7,244,245,246,8,9,247,248,249,250,251,10,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,11,273,12,13,14,15,16,17,274,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,275,38,39,276,277,278,279,280,281,282,283,284,285,286,483,484,287,288,289,290,291,40,41,42,43,44,45,292,46,47,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,48,49,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,50,206,207,208,209,210,51,52,53,54,367,55,56,57,58,59,60,61,368,369,370,371,62,63,200,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,372,373,374,375,376,377,378,379,380,381,90,382,383,218,219,384,385,91,386,387,388,92,93,94,95,96,389,97,390,391,392,393,394,395,396,397,98,99,398,100,101,399,102,103,400,104,401,402,403,404,405,406,407,408,409,410,411,220,221,222,412,223,105,224,225,226,413,414,227,415,416,417,418,228,229,230,419,231,106,232,233,234,420,421,235,107,422,108,109,110,111,112,113,423,114,115,116,117,118,119,120,121,122,123,424,425,124,125,426,427,428,126,429,127,128,129,430,130,131,132,133,134,431,135,136,137,138,139,140,432,141,142,143,144,145,146,147,148,149,150,151,152,433,153,154,155,156,157,158,159,160,485,161,162,163,486,434,435,436,437,438,439,164,440,441,442,443,444,445,446,447,448,165,449,450,451,452,453,166,454,455,487,167,211,168,456,457,169,170,171,172,173,174,175,176,177,178,179,458,180,181,459,182,460,461,462,463,183,464,184,185,488,465,466,186,467,187,468,188,189,190,191,469,470,192,471,193,194,472,195,196,473,474,475,197,476,477,478,479,480,481,198,482,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[195,196,473],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[12,200,201,202,203,204],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[10,12,13,15,16,50,51,52,53,63,64,67,68,108,110,111,174,175,180,181,478,479,480,481],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[489,195,196,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[1,2,236,3,4,238,5,6,7,8,9,247,249,250,10,253,254,255,256,267,268,269,270,271,13,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,275,38,39,276,277,283,284,285,40,41,42,43,44,45,292,46,47,300,301,302,305,312,313,314,315,316,317,318,48,49,359,365,50,207,209,51,52,53,54,367,55,56,57,58,59,60,61,368,370,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,383,91,386,386,387,387,92,93,94,95,96,97,391,98,99,398,100,101,399,102,103,400,104,403,407,408,409,105,106,108,110,111,113,423,114,115,116,117,118,120,121,424,425,124,125,426,427,428,126,429,127,128,129,430,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,437,164,165,166,167,168,456,457,169,170,171,172,173,174,176,178,179,458,459,182,461,183,184,185,186,187,468,188,189,190,191,469,470,192,471,193,194,195,196,474,475,197,476,198,199],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[117,119,125,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[407,411,461,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[489,195,196,473],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"defaultValue"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[211,212,213,214,215,216,217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[491,0,118,425,426,427],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":5,"org.easymock.tests.MockClassControlTest.testToString":374,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":259,"org.easymock.samples.ExampleTest.answerVsDelegate":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":471,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":379,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":4,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":418,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":46,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":416,"org.easymock.tests.UsageThrowableTest.throwError":54,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":288,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.MockingTest.testInterfaceMocking":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":257,"org.easymock.tests.UsageOverloadedMethodTest.overloading":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":29,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":322,"org.easymock.tests2.EasyMockSupportClassTest.testAll":437,"org.easymock.tests.MockClassControlTest.testEquals":378,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":417,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":280,"org.easymock.tests.MockNameTest.defaultName":272,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.samples.ExampleTest.voteForRemovals":97,"org.easymock.tests.UsageVarargTest.allKinds":330,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.samples.BasicClassMockTest.testPrintContent":385,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":59,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.UsageConstraintsTest.greaterThan":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":409,"org.easymock.samples.ExampleTest.voteForRemoval":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":401,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":188,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":429,"org.easymock.tests2.CaptureTest.testCaptureFirst":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":427,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":21,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":433,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":284,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testNiceClassMocking":246,"org.easymock.tests.MockingTest.testClassMocking":241,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":49,"org.easymock.tests.MockTypeTest.fromEasyMockClass":287,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageExpectAndReturnTest.object":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":213,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":324,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":38,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":211,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":34,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests.MockClassControlTest.testHashCode":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":415,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":487,"org.easymock.tests.UsageVarargTest.varargCharAccepted":323,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":194,"org.easymock.tests.DefaultClassInstantiatorTest.object":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":253,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":407,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":375,"org.easymock.tests2.UsageTest.resumeIfFailure":459,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":27,"org.easymock.tests2.SerializationTest.testAllMockedMethod":473,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":359,"org.easymock.samples.SupportTest.voteForRemovals":92,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":204,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":365,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":456,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":151,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":8,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":386,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":394,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":201,"org.easymock.tests2.CaptureTest.testCaptureNone":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":384,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":398,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":285,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":37,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests2.NameTest.nameForMocksControl":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":482,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":152,"org.easymock.tests.MockingTest.testTwoMocks":242,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.samples.ExampleTest.removeNonExistingDocument":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":295,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":114,"org.easymock.tests2.MockBuilderTest.testCreateMockString":467,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":169,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":408,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":474,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":60,"org.easymock.tests2.UsageTest.defaultResetToNice":458,"org.easymock.samples.ExampleTest.voteAgainstRemovals":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests2.UsageConstraintsTest.equals":431,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":404,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":260,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":490,"org.easymock.tests.UsageThrowableTest.throwCheckedException":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":202,"org.easymock.tests.MockingTest.testStrictClassMocking":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":171,"org.easymock.tests2.CompareToTest.testGreateOrEqual":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":215,"org.easymock.tests2.NameTest.nameForNiceMock":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":116,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":214,"org.easymock.samples.ExampleTest.addDocument":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.AnswerTest.stubAnswer":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":36,"org.easymock.tests.UsageExpectAndReturnTest.floatType":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":167,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":149,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":392,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":294,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":19,"org.easymock.samples.SupportTest.addDocument":388,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":244,"org.easymock.tests2.NameTest.nameForMock":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":30,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":47,"org.easymock.tests2.MockedExceptionTest.testRealException":476,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests2.NameTest.nameForStrictMock":479,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":150,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":461,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":399,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":344,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":298,"org.easymock.tests.UsageVarargTest.varargShortAccepted":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":426,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":462,"org.easymock.tests.UsageTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":32,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.samples.ExampleTest.addAndChangeDocument":391,"org.easymock.tests.UsageStrictMockTest.testVerify":274,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":24,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":469,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":320}}]
