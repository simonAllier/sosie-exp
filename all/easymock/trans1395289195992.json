[{"position":"org.easymock.internal.MockBuilder:178","failures":[0,1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,6,7,123,124,125,126,8,9,127,128,129,130,131,132,133,134,135,136,10,137,11,12,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,16,17,226,227,18,19,228,229,230,231,232,233,234,235,236,237,238,239,240,20,241,242,243,244,245,246,247,248,21,22,249,23,24,250,25,26,27,251,252,253,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[256,257,258,259,21],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[7,8,9,11,260,261,17,18,19,20,21,23,26,27],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[262,263,264],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[217,220],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[256,265,257,266,6,7,8,9,258,259,267,16,261,17,18,19,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[268,269,79,270,271,272,273,274,275,276,277,278,102,131,135,279,280,281,282,148,283,284,149,285,286,287,288,289,290,291,292,293,150,294,295,296,297,298,151,299,300],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[301,302],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[303,304],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[37,38,39,305,306,47,307,308,309,310,83,311,84,0,312,313,314,104,129,130,132,134,139,140,142,143,144,315,145,316,317,318,146,319,320,321,322,323,280,281,148,284,149,285,286,287,289,290,291,292,150,294,295,296,297,298,151,324,325,326,174,175,176,327,301,177,178,328,302,329,330,184,331,332,333,334,335,336,337,338,339,1,340,341,342,343,344,345,346,347,229],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[301],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[262,263,348,349,264,350],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[79,270,351,352,353,354,355,275,276,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[102,103,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (int)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,55,58,59,60,61,63,64,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,356,83,84,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,6,123,124,125,126,128,129,130,131,132,133,134,135,136,10,137,11,12,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,16,226,227,228,229,231,232,233,234,235,236,237,238,239,240,20,241,244,245,246,248,22,249,23,24,250,25,26,27,251,252,253,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[357],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[358,359],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[102,103,104,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[64,361],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[2,3,4,5,307,309,0,313,314,110,113,114,362,363,364,365,366,120,367,368,369,370,371,372,129,130,135,140,317,319,321,373,374,375,376,377,147,378,379,380,381,382,383,281,282,283,285,288,289,294,296,297,1,384,385,386],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[39,79,387,388,389,390,391,392,307,308,309,83,84,0,313,393,314,102,140,315,318,146,319,148,149,150,151,174,175,176,177,328,184,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[80,85,87,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[262,263,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[256,257,258,259,261,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[60,153],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[39,268,268,269,269,305,79,270,307,308,309,310,83,84,0,394,276,313,314,102,315,395,318,146,321,149,150,151,301,328,1,340],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,268,268,269,269,42,43,44,45,46,2,3,4,5,305,306,47,396,48,49,50,51,52,53,54,55,56,57,58,59,397,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,398,399,81,82,356,308,83,84,0,313,400,85,86,87,401,88,89,90,91,92,93,94,95,96,97,98,99,402,100,101,102,103,104,105,106,107,108,109,110,111,112,113,403,114,115,116,117,118,119,120,121,122,6,7,123,124,125,126,404,8,9,127,128,129,130,131,132,133,134,135,405,136,10,137,11,12,138,139,140,141,142,143,144,145,318,146,319,147,148,149,150,151,406,407,408,409,152,410,153,411,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,326,174,175,176,177,178,328,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,412,413,414,415,416,417,205,206,418,419,207,208,209,210,211,420,212,213,214,215,216,217,218,219,220,221,222,223,224,421,422,423,424,425,426,225,16,17,226,227,18,19,228,229,427,230,231,232,233,234,235,236,237,238,239,240,428,429,20,430,431,432,433,241,434,242,243,244,435,245,246,436,247,437,438,248,21,22,249,23,24,250,439,25,26,27,251,252,253,254,255,440,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[39,79,387,388,389,390,391,392,307,308,309,83,84,0,313,393,314,102,140,315,318,146,319,148,149,150,151,174,175,176,177,328,184,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[11,12,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":124,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":35,"org.easymock.tests2.DelegateToTest.testReturnException":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":407,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":334,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":154,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":13,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":236,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":340,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":339,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":387,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":173,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":414,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.AnswerTest.answer":80,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":397,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":419,"org.easymock.tests2.DelegateToTest.testDelegate":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests.LimitationsTest.mockFinalMethod":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":428,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":167,"org.easymock.tests.UsageThrowableTest.throwError":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":386,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":416,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":300,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":155,"org.easymock.tests2.UsageTest.niceToStrict":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":289,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":163,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":358,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.MockClassControlTest.testEquals":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":171,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":388,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":415,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":223,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":410,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":319,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":43,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":393,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":315,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":229,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":406,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":234,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":412,"org.easymock.tests.UsageCallCountTest.tooManyCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.MockingTest.testNiceClassMocking":327,"org.easymock.tests.MockingTest.testClassMocking":325,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":438,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests.MockClassControlTest.testHashCode":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":291,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests2.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":430,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":318,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":160,"org.easymock.tests.CapturesMatcherTest.test":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":335,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":409,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":440,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":166,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":441,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":398,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":252,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":268,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":423,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":263,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":294,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":233,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":239,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":5,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":348,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":284,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":0,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":71,"org.easymock.tests.MockingTest.testTwoMocks":326,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":162,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":350,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":264,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":44,"org.easymock.tests2.MockBuilderTest.testCreateMockString":314,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.floatType":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":285,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":81,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":421,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":146,"org.easymock.tests.LimitationsTest.privateConstructor":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":272,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":224,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":305,"org.easymock.tests2.UsageTest.defaultResetToNice":404,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":395,"org.easymock.tests.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":238,"org.easymock.tests.UsageCallCountTest.tooFewCalls":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":259,"org.easymock.tests.MockingTest.testStrictClassMocking":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":356,"org.easymock.tests2.CompareToTest.testGreateOrEqual":361,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":46,"org.easymock.tests2.NameTest.nameForNiceMock":4,"org.easymock.tests2.DependencyTest.testInterfaceMocking":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":295,"org.easymock.tests2.DelegateToTest.testStubDelegate":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":269,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":322,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":359,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.samples.SupportTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":286,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests2.NameTest.nameForMock":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":243,"org.easymock.tests2.MockedExceptionTest.testRealException":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":237,"org.easymock.tests2.NameTest.nameForStrictMock":3,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":14,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":354,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":290,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":262,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":140,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":287,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":232,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":303,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageStrictMockTest.testVerify":439,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":36,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.LimitationsTest.abstractClass":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":15,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
