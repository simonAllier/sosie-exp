[{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[295,296,297,119,120,298,299,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,67,68,70,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,124,125,126,127,131,132,133,134,135,136,137,138,139,143,144,145,146,148,150,151,153,155,157,158,159,160,161,162,167,169,170,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,260,261,262,263,264,265,266,267,268,269,270,273,274,277,278,279,280,281,282,283,284,285,286,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[12,14,15,68,156,167,169,170,300,301,302,303,263,264,265,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,304,305,4,5,6,306,307,7,8,9,10,11,12,13,14,15,16,308,309,310,311,312,17,313,314,315,316,317,318,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,319,320,37,38,321,39,40,41,42,43,44,45,46,47,48,322,49,50,51,323,324,325,326,327,328,329,330,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,331,79,80,81,332,82,333,83,84,85,86,334,87,88,89,90,91,92,335,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,336,337,338,339,340,110,111,112,113,114,115,116,341,117,342,343,118,119,120,121,344,345,122,346,123,347,348,349,124,125,126,350,127,351,352,128,129,353,130,354,355,356,357,358,131,359,360,361,362,363,364,132,133,134,135,365,366,367,136,368,369,137,370,371,372,373,374,375,376,377,378,138,379,380,381,382,383,139,384,385,140,141,142,143,144,145,146,147,148,386,149,150,151,152,153,154,155,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,156,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,157,158,159,160,161,417,418,419,420,162,163,421,422,423,424,425,426,427,428,429,430,164,165,166,167,168,169,170,171,431,432,433,434,435,436,172,173,174,175,176,177,178,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,179,180,181,182,183,461,462,463,464,465,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,466,467,205,468,469,470,471,472,473,206,207,474,208,475,476,477,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,478,479,480,239,240,241,242,243,244,245,246,247,248,249,250,251,481,252,253,254,255,256,257,258,259,260,482,261,262,263,264,265,483,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,484,485,486,487,488,489,490,491,492,493,494,282,283,284,495,285,286,496,497,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[36,498,40,42,45,46,47,48,50,51,110,111,113,114,115,116,117,118,119,120,121,122,299,123,347,124,125,126,127,128,129,499,130,134,136,137,138,139,141,142,150,150,151,151,155,162,163,421,424,205,473,206,207,208,487,492,288],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[36,498,40,42,45,46,47,48,50,51,110,111,113,114,115,116,117,118,119,120,121,122,299,123,347,124,125,126,127,128,129,499,130,134,136,137,138,139,141,142,150,150,151,151,155,162,163,421,424,205,473,206,207,208,487,492,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,304,305,4,5,6,306,307,7,8,9,10,11,12,13,14,15,16,308,309,310,311,312,17,313,314,315,316,317,318,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,319,320,37,38,321,39,40,41,42,43,44,45,46,47,48,322,49,50,51,323,324,325,326,327,328,329,330,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,331,79,80,81,332,82,333,83,84,85,86,334,87,88,89,90,91,92,335,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,336,337,338,339,340,110,111,112,113,114,115,116,341,117,342,343,118,119,120,121,344,345,122,346,123,347,348,349,124,125,126,350,127,351,352,128,129,353,130,354,355,356,357,358,131,359,360,361,362,363,364,132,133,134,135,365,366,367,136,368,369,137,370,371,372,373,374,375,376,377,378,138,379,380,381,382,383,139,384,385,140,141,142,143,144,145,146,147,148,386,149,150,151,152,153,154,155,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,156,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,157,158,159,160,161,417,418,419,420,162,163,421,422,423,424,425,426,427,428,429,430,164,165,166,167,168,169,170,171,431,432,433,434,435,436,172,173,174,175,176,177,178,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,179,180,181,182,183,461,462,463,464,465,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,466,467,205,468,469,470,471,472,473,206,207,474,208,475,476,477,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,478,479,480,239,240,241,242,243,244,245,246,247,248,249,250,251,481,252,253,254,255,256,257,258,259,260,482,261,262,263,264,265,483,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,484,485,486,487,488,489,490,491,492,493,494,282,283,284,495,285,286,496,497,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[8,9],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[52,54,62,85,86,88,90,91,335,102,107],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,42,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[501],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[14,69,75,76,156,166,169,502,264,265,271,272,275,276,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[503,504,166,505,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[36,319,507,508,509,510,40,350,352],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[511,83,100,103],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:52","failures":[14,15,169,170,462,463,263],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,42,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[512],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[513],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[420],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":425,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":69,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":492,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":270,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":248,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.DependencyTest.testClassMocking":304,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":454,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":3,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests.LimitationsTest.mockFinalMethod":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":243,"org.easymock.tests2.DependencyTest.testClassMockingSupport":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":484,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":1,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":404,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":491,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.UsageTest.niceToStrict":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":315,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":481,"org.easymock.tests.MockClassControlTest.testEquals":429,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":241,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":160,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":259,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":400,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":20,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":258,"org.easymock.tests.GenericTest.testBridgedEquals":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":239,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":483,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":157,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests.MockingTest.testNiceClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests.MockTypeTest.fromEasyMockClass":490,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests.MockClassControlTest.testHashCode":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":393,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":29,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.CapturesMatcherTest.test":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests2.UsageTest.resumeIfFailure":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":453,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":459,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":306,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":480,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":283,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":329,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":434,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.UsageVerifyTest.twoReturns":265,"org.easymock.tests.UsageVarargTest.varargByteAccepted":257,"org.easymock.tests2.ThreadingTest.testThreadSafe":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":175,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":409,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":408,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":310,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.CompareToTest.testNotComparable":501,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":423,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":7,"org.easymock.tests.UsageVerifyTest.twoThrows":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":320,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":432,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":309,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":342,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":9,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":35,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":351,"org.easymock.tests.UsageVarargTest.varargLongAccepted":256,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":513,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":152,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":301,"org.easymock.tests.ErrorMessageTest.testGetters":302,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":399,"org.easymock.tests.UsageVarargTest.varargShortAccepted":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":176,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":403,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":431,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.CompareToTest.testGreateThan":511,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":240,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":246,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":303}}]
