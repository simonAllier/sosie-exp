[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,2,3,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,4,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,5,6,169,170,171,7,8,9,10,172,173,174,175,38,11,176,12,13,177,14,15,178,179,180,181,182,16,17,18,183,184,19,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,20,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,40,41,42,43,44,45,46,47,48,275,276,277,278,279,280,281,282,283,284,285,286,287,288,0,289,290,49,50,51,52,53,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,21,22,315,316,23,317,54,55,56,57,58,318,59,319,320,60,24,25,1,61,62,63,64,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,26,27,28,29,30,31,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,65,410,411,412,413,66,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,32,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,67,68,69,70,71,72,447,73,448,449,450,451,452,453,33,34,35,36,37,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,74,75,76,77,78,79,80,81,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[489,490,308,491,492,430],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[8,174,178,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[152,159,173,175,176,177,15,178,179,180,182,253,31,454],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[82,83,84,85,86,87,89,90,91,92,93,94,95,2,3,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,114,4,118,121,131,137,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,5,6,169,170,7,8,9,10,172,173,175,38,11,176,12,13,177,14,15,178,179,180,181,182,16,17,18,183,184,19,185,186,187,188,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,20,211,212,213,214,215,216,217,223,230,231,232,233,235,236,237,239,241,245,246,247,249,252,253,255,258,259,267,268,269,270,271,272,273,40,43,44,45,46,280,287,288,0,289,290,49,52,291,292,293,294,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,21,22,315,316,23,317,57,58,59,24,25,61,62,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,380,381,382,383,384,385,386,387,26,27,28,29,30,31,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,421,422,423,424,425,426,427,428,429,430,32,431,432,433,434,436,438,439,442,443,444,445,448,449,450,451,452,453,33,34,35,36,37,454,456,457,470,471,472,474,475,476,477,478,479,480,481,493,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[71,494,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[163,165,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[200,202,203,204,205,206,207,209,496,210,20,212],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,347],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[177],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[101,150],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[97,98,497,498,499,500,501,147,248,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[296,462,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[82,83,84,85,87,89,91,95,2,2,3,3,97,100,101,102,103,104,105,106,107,108,109,110,111,112,114,4,118,121,131,137,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,5,6,169,170,7,8,9,10,172,173,174,175,38,11,176,12,13,177,14,15,178,179,180,181,182,16,17,18,183,19,185,186,187,188,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,20,211,212,213,214,215,216,217,223,230,231,232,233,235,236,237,239,241,245,246,247,249,252,253,255,258,259,267,268,269,270,271,272,273,40,43,44,45,46,280,287,288,0,289,290,49,52,291,292,293,294,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,21,22,315,316,23,317,56,57,58,59,24,25,61,62,63,321,322,340,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,380,381,382,383,384,385,386,387,26,27,28,29,30,31,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,416,417,418,419,421,428,430,32,431,432,433,434,436,437,438,439,440,441,442,443,444,445,448,449,450,451,452,453,33,34,35,36,37,454,455,456,457,458,459,460,461,462,463,464,466,467,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[144,146,5,6,169,170,7,8,9,10,172,173,174,175,38,11,176,12,13,177,14,15,178,179,180,181,182,16,17,18,19,200,201,202,203,204,205,206,207,208,209,210,20,211,212,40,289,21,22,315,316,23,317,24,25,31,388,430,32,452,33,34,35,36,37,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[169,170,8,10,172,174,178,16,200,202,210],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[186,187,432,433,443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:93","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests2.UsageTest.argumentsOrdered":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":334,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":105,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests2.DelegateToTest.testReturnException":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":449,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":76,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":189,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests2.UsageTest.wrongArguments":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":81,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":409,"org.easymock.tests.UsageTest.moreThanOneArgument":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":256,"org.easymock.tests2.AnswerTest.answer":194,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":216,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":411,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests2.UsageTest.strictResetToDefault":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":405,"org.easymock.tests.LimitationsTest.mockFinalMethod":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.DependencyTest.testClassMockingSupport":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":204,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":214,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.UsageThrowableTest.throwError":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":413,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":139,"org.easymock.samples.PartialClassMockTest.testGetArea":95,"org.easymock.tests.MockingTest.testInterfaceMocking":318,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":126,"org.easymock.tests2.UsageTest.niceToStrict":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":245,"org.easymock.tests2.MockBuilderTest.testCreateMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":399,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":410,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":439,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":494,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":209,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":80,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":407,"org.easymock.tests2.CaptureTest.testCaptureAll":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests.UsageVarargTest.allKinds":481,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":443,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":386,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":453,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":73,"org.easymock.samples.ExampleTest.voteForRemoval":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":100,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":448,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":355,"org.easymock.tests2.UsageTest.moreThanOneArgument":102,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":480,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":426,"org.easymock.tests.UsageExpectAndReturnTest.longType":351,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":408,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":181,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":406,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.UsageCallCountTest.tooManyCalls":427,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":385,"org.easymock.tests.MockingTest.testNiceClassMocking":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests.MockingTest.testClassMocking":55,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":142,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":305,"org.easymock.tests.MockTypeTest.fromEasyMockClass":412,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":428,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":146,"org.easymock.tests.UsageExpectAndReturnTest.object":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":475,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":438,"org.easymock.tests.MockClassControlTest.testHashCode":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":128,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":436,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":113,"org.easymock.tests.UsageVarargTest.varargCharAccepted":474,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":446,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":347,"org.easymock.tests2.UsageTest.openCallCountByLastCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.DefaultClassInstantiatorTest.object":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":416,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":77,"org.easymock.tests2.UsageTest.resumeIfFailure":111,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":451,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":357,"org.easymock.tests2.SerializationTest.testAllMockedMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":195,"org.easymock.tests.UsageExpectAndThrowTest.object":400,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":179,"org.easymock.tests2.DelegateToTest.testWrongClass":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests.UsageStrictMockTest.range":432,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":265,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":208,"org.easymock.tests.UsageUnorderedTest.message":317,"org.easymock.tests.UsageVerifyTest.twoReturns":445,"org.easymock.tests.UsageVarargTest.varargByteAccepted":479,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":132,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":424,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":450,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":71,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.SerializationTest.testClass":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests2.NameTest.nameForMocksControl":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":145,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":249,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":272,"org.easymock.tests2.CompareToTest.testCompareEqual":39,"org.easymock.tests2.CaptureTest.testCaptureLast":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":180,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":238,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":398,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":88,"org.easymock.tests.UsageStrictMockTest.differentMethods":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":69,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":255,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":74,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":122,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":197,"org.easymock.tests.UsageVerifyTest.twoThrows":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":131,"org.easymock.samples.ExampleTest.voteAgainstRemoval":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.LimitationsTest.privateConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":387,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":140,"org.easymock.tests2.UsageTest.defaultResetToNice":108,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":363,"org.easymock.tests.UsageVarargTest.differentLength":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.CallbackTest.callback":217,"org.easymock.tests2.UsageConstraintsTest.equals":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":41,"org.easymock.tests.UsageTest.openCallCountByLastCall":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":199,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.NameTest.nameForNiceMock":192,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":290,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":133,"org.easymock.tests2.DelegateToTest.testStubDelegate":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":478,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.floatType":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":260,"org.easymock.tests2.SerializationTest.test":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":205,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":68,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":349,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":234,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":123,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":319,"org.easymock.tests2.NameTest.nameForMock":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":360,"org.easymock.tests2.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":457,"org.easymock.tests2.MockedExceptionTest.testRealException":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests2.NameTest.nameForStrictMock":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":264,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":178,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":186,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":210,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":268,"org.easymock.tests.UsageTest.wrongArguments":309,"org.easymock.tests2.MockBuilderTest.testWithConstructor":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":124,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":477,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":425,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":107,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":362,"org.easymock.tests2.CaptureTest.testCapture":496,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":431,"org.easymock.tests2.UsageConstraintsTest.constraints":169,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":435,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":96,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":35,"org.easymock.tests.LimitationsTest.abstractClass":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":354,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":36,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156}}]
