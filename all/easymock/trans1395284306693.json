[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[74,75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[24,93,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,94,57,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:94","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[95,96,97,98,99,29,31,100,101,102,37],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[103,104,105,106,107,108,109,110,111],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[115,116,117,118,119,120],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[123,74,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[137,138,139,140],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[141,142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[143,125,134,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:153","failures":[59,60,61,62,66,67,68,69,70,71,72,73],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[145,146,147,83,47,148,149,150,88,89,151,152,90,91,153,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[155,156,157,158,159,147,24,160,78,161,162,163,164,165,166,143,167,168,169,137,138,93,170,129,171,130,95,172,96,173,174,175,176,177,178,97,25,179,180,181,182,183,79,184,185,186,187,80,81,188,189,23,190,191,26,27,98,99,28,29,30,31,100,192,193,194,32,195,33,34,196,35,36,102,197,198,199,37,38,39,105,200,106,108,201,202,203,204,205,206,82,207,42,43,44,45,46,208,83,47,209,84,210,211,48,49,66,212,50,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,51,67,52,53,54,55,56,264,150,86,87,265,266,267,268,88,89,151,152,90,91,153,114,57,58,269,68,69,70,71,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[270,192,33,39],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[271,272,273,274,155,275,156,276,277,157,158,159,147,278,24,160,78,161,162,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,163,294,164,165,166,143,167,168,169,138,295,93,296,95,172,96,173,174,175,176,177,297,178,97,25,179,180,181,182,183,79,184,185,186,187,298,80,81,299,188,300,189,23,190,301,191,26,27,98,99,28,29,30,31,100,192,101,193,194,32,195,33,34,196,35,36,102,197,198,302,199,37,38,39,303,304,305,306,105,200,307,308,59,60,61,62,309,310,204,205,311,312,206,313,314,315,316,317,318,319,320,321,82,322,323,324,325,42,43,44,45,46,63,64,65,208,326,83,47,209,84,210,211,327,328,329,330,331,332,333,334,335,336,337,338,112,339,48,49,66,212,50,340,122,341,342,343,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,344,237,345,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,51,67,346,347,348,349,350,351,52,53,54,55,56,352,353,354,355,356,357,358,359,360,361,362,264,363,364,365,150,86,87,366,94,265,266,267,268,88,89,151,152,90,91,153,154,367,368,369,113,114,370,371,372,373,57,58,374,375,376,377,378,269,92,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[143,379,137,139,103,170,129,104,171,130,105,380,106,107,108,381,109,382,383,384,385,386,387,388,389,201,390,391,392,393,202,394,203,61,395,396,397,398,399,400,40,40,41,41,401,402,403,404,405,233,406,234,235,236,407,408,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":308,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":69,"org.easymock.tests.MockingTest.testPartialClassMocking":234,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":368,"org.easymock.samples.ExampleTest.answerVsDelegate":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":290,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests.UsageTest.moreThanOneArgument":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":44,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":5,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":274,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":364,"org.easymock.tests2.DelegateToTest.testDelegate":191,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":113,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":272,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":126,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":8,"org.easymock.samples.PartialClassMockTest.testGetArea":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":124,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":393,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":195,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests2.EasyMockSupportClassTest.testAll":395,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":349,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":322,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":362,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":150,"org.easymock.samples.BasicClassMockTest.testPrintContent":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":73,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":385,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":120,"org.easymock.samples.ExampleTest.voteForRemoval":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":381,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":283,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":68,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":284,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":361,"org.easymock.tests.GenericTest.testBridgedEquals":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":76,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":337,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":347,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":302,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":64,"org.easymock.tests.UsageCallCountTest.tooManyCalls":338,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":387,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":61,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":289,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":356,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":376,"org.easymock.tests2.EasyMockSupportTest.testVerify":293,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":271,"org.easymock.tests.UsageVarargTest.varargCharAccepted":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":115,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":323,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.ReplayStateInvalidCallsTest.times":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":63,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":398,"org.easymock.tests2.UsageTest.resumeIfFailure":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":71,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":146,"org.easymock.samples.SupportTest.voteForRemovals":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":339,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":276,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":197,"org.easymock.tests2.DelegateToTest.testWrongClass":190,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":391,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":148,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":3,"org.easymock.tests2.CaptureTest.testCaptureNone":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":360,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":399,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":212,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.StubTest.stub":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":307,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests2.NameTest.nameForMocksControl":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":60,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":392,"org.easymock.tests.MockingTest.testNicePartialClassMocking":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":406,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":38,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":210,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":142,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":117,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":397,"org.easymock.samples.ExampleTest.voteAgainstRemoval":311,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.UsageVarargTest.differentLength":357,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":369,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":296,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests2.CompareToTest.testGreateOrEqual":270,"org.easymock.tests.ObjectMethodsTest.testHashCode":319,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":17,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":312,"org.easymock.tests2.DelegateToTest.testStubDelegate":23,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":359,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":143,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":116,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":2,"org.easymock.tests.GenericTest.testPackageScope":402,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":0,"org.easymock.tests2.NameTest.nameForMock":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":365,"org.easymock.tests2.MockedExceptionTest.testRealException":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":144,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests2.NameTest.nameForStrictMock":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":388,"org.easymock.tests2.UsageStrictMockTest.range":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":141,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":380,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.MockBuilderTest.testWithConstructor":132,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":119,"org.easymock.tests.UsageVarargTest.varargShortAccepted":358,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":336,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":20,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":277,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":10,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":389,"org.easymock.tests.UsageTest.unexpectedCallWithArray":88,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":313,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":309,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":348,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":287,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":353}}]
