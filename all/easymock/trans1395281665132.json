[{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[49,28,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[51,52],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[54,55,56,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,0,93,2,3,4,5,6,7,94,95,96,97,98,99,100,101,102,103,14,104,105,106,107,108,109,15,110,111,112,113,114,115,116,117,118,119,120,121,122,49,123,124,125,126,127,128,129,130,131,132,133,134,16,135,136,137,138,139,140,141,142,143,144,145,146,147,18,55,56,148,19,20,149,21,22,23,150,24,25,151,152,153,154,155,36,156,157,158,37,159,160,161,162,163,164,165,166,167,27,168,169,170,171,172,32,173,174,175,176,33,177,178,179,180,181,182,183,184,34,185,186,187,188,189,190,191,192,50,193,194,35,195,196,197,198,199,200,201],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[202,203,204,205,206,207,208,209,210,211,9,97,98,212,10,11,12,102,13,213,214,104,105,215,216,20,21,22,150,24,153,217,218,162,163,164,219,165,26,27,28,170,29,30,172,31,220,173,174,221,222,223,224,177,180],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[128,226,16,180,181,183,34,185,227,35,198],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[60,229,229,230,230,231,232,66,233,67,234,235,236,237,238,106,107,108,118,119,120,122,49,123,215,124,216,125,126,127,142,143,144,145,146,55,57,239,240,241,154,155,36,156,158,37,217,242,160,243,161,218,162,163,244,164,245,219,201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[246,153,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[247,248,249,250,251,96,9,97,99,103,14,105,252,253,167,32,174,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[255,256,257],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[258,259,260,261,262,44,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[263],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[58,264,265,59,266],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[128,226,130,131,267,268,132,134,269,16,270,136],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[128,226,16,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[271,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[272,202,89,96,9,97,273,274,98,99,212,10,100,11,12,275,276,103,13,213,14,104,105,252,277,278,279,109,280,281,282,283,284,285,286,287,20,23,25,153,154,288,166,167,26,28,29,30,172,289,32,220,173,174,221,177,178,181,193],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[60,61,290,62,63,291,64,292,293,294,65,295,229,229,230,230,231,232,296,297,298,299,300,247,301,302,303,248,249,304,250,305,306,251,307,308,309,310,311,66,233,202,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,312,234,313,203,204,205,206,207,208,209,210,211,314,235,315,316,317,318,319,320,0,1,93,2,3,4,5,6,7,94,321,8,95,96,9,97,98,99,212,10,100,101,11,12,102,275,322,323,324,325,326,327,276,328,103,329,13,330,213,14,214,104,105,252,331,106,107,108,332,277,333,278,334,335,336,279,337,109,15,110,338,339,340,341,342,280,281,343,283,344,345,346,347,348,349,350,351,352,353,354,111,112,113,114,115,355,356,357,358,359,360,284,361,362,363,364,116,117,118,119,120,121,122,49,123,215,124,216,125,126,127,128,129,226,130,131,267,268,132,133,134,16,270,135,136,137,138,139,140,141,142,143,144,145,17,287,365,146,366,147,367,18,368,55,56,57,148,19,20,149,21,22,23,150,24,25,151,152,369,153,154,155,36,156,157,158,37,370,371,372,373,374,159,375,53,217,160,161,218,162,163,244,164,219,165,166,167,26,27,28,168,169,170,29,30,171,172,31,289,32,220,173,174,254,221,222,223,224,175,176,376,33,177,178,179,180,181,182,183,184,34,185,186,187,188,189,190,191,192,50,193,194,35,195,196,377,197,198,199,200,378,379,201],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[380,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[94,364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[88,13,104,105,381,106,107,382,383,384,216,17,19,22,23,25,385,164,27,31,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[229,229,230,230,386,55,387,201,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":28,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testReturnException":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":186,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":205,"org.easymock.samples.ExampleTest.answerVsDelegate":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":237,"org.easymock.tests2.UsageConstraintsTest.testNull":183,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":95,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":340,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.AnswerTest.answer":147,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.DelegateToTest.testDelegate":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.UsageThrowableTest.throwError":0,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":342,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":39,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.tests2.UsageTest.niceToStrict":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":255,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":203,"org.easymock.tests.UsageOverloadedMethodTest.overloading":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":328,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":142,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":239,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests.MockNameTest.defaultName":272,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":341,"org.easymock.samples.ExampleTest.voteForRemovals":64,"org.easymock.tests.UsageVarargTest.allKinds":364,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":5,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":326,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":266,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":20,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":164,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":52,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":338,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":4,"org.easymock.tests.MockingTest.testNiceClassMocking":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests.MockingTest.testClassMocking":381,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":182,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":110,"org.easymock.tests.MockTypeTest.fromEasyMockClass":273,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":379,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":259,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.CaptureTest.testCaptureMultiple":48,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":256,"org.easymock.tests.DefaultClassInstantiatorTest.object":313,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":145,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":305,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":54,"org.easymock.tests.UsageExpectAndThrowTest.object":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":288,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":162,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":204,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests2.StubTest.stub":376,"org.easymock.tests.UsageExpectAndThrowTest.longType":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.tests2.NameTest.nameForMocksControl":373,"org.easymock.tests2.MockedExceptionTest.testMockedException":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":163,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.CompareToTest.testCompareEqual":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.samples.ExampleTest.removeNonExistingDocument":292,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":264,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":219,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":6,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":386,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":321,"org.easymock.tests.UsageCallCountTest.tooFewCalls":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":206,"org.easymock.tests.UsageThrowableTest.throwCheckedException":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":312,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":157,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":368,"org.easymock.tests.ObjectMethodsTest.testHashCode":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":261,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.NameTest.nameForNiceMock":372,"org.easymock.tests2.DependencyTest.testInterfaceMocking":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":260,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testStubDelegate":159,"org.easymock.tests2.AnswerTest.stubAnswer":18,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":201,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests.UsageThrowableTest.noUpperLimit":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":179,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":58,"org.easymock.tests2.UsageConstraintsTest.testSame":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":385,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests.GenericTest.testPackageScope":66,"org.easymock.tests2.NameTest.nameForMock":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":274,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":35,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":42,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":336,"org.easymock.tests2.UsageConstraintsTest.cmpTo":188,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests2.CaptureTest.testCapture":269,"org.easymock.tests2.UsageConstraintsTest.constraints":180,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
