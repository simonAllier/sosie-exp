[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:83","failures":[4],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,5,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,0,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,6,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[26,41,42,43,5,137,198,199,200,201,202,203,207,308,399,403,441],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[11,12,24,25,27,28,29,32,35,38,40,43,112,114,115,120,122,125,126,128,132,133,134,135,138,139,157,173,242,396,445,447,448,450,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[493],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,68,299,311,317,323,327,329,330,382,423,473,479,485,489,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[124,155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[7,7,8,8,9,13,14,15,16,18,20,22,24,25,26,27,28,29,32,35,36,37,38,40,41,42,43,5,44,46,47,48,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,118,120,122,126,128,129,132,133,134,135,137,138,139,148,149,150,151,152,153,155,156,163,164,173,176,186,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,0,230,231,232,233,234,235,236,239,240,241,243,244,246,6,248,253,254,256,260,262,263,264,265,266,267,269,270,271,272,273,274,275,290,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,342,343,344,345,346,347,348,349,350,354,355,356,358,359,360,361,362,363,380,386,388,389,390,391,392,393,394,395,396,406,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,449,450,452,454,455,456,457,458,459,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.RecordState:217","failures":[9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,32,37,43,45,46,47,48,49,50,56,57,58,59,61,62,63,64,65,66,69,75,86,87,89,90,91,95,96,98,99,100,101,102,103,104,105,107,108,109,110,111,118,120,122,129,132,133,134,135,137,138,139,148,151,155,156,157,163,173,176,186,192,195,199,201,203,207,208,212,215,218,219,221,222,224,227,0,230,231,232,233,234,239,240,244,246,6,248,253,254,256,261,262,263,264,265,266,267,269,270,271,272,291,292,293,295,296,302,303,312,313,315,320,325,333,336,337,338,360,388,389,407,408,409,411,412,414,415,416,417,418,423,425,426,427,428,429,430,431,432,433,434,445,447,448,462,474,475,477,482,487],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[30,40,112,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[155,156,157,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[197,6,272,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,419,420,421,425,427,430,431,432,433,434,458],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[48,49,265,266,297,300,301,314,318,319,321,324,372,476,480,481,483,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[10,23,70,71,72,73,74,75,76,77,78,79,80,81,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[7,8,33,113,127],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[402,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[48,89,95,96,262,265,332,333,336,337,497,423,425,426],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[30,40,41,112,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[121,498,499,500,501,502,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[71,72,74,77,78,81,159,160,162,165,166,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[7,7,8,8,9,13,14,15,16,18,20,22,24,25,26,27,28,29,32,36,37,38,41,42,43,5,46,48,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,86,87,88,90,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,118,120,122,126,129,132,133,134,135,137,138,139,148,149,150,151,152,153,155,156,163,173,176,186,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,0,230,231,232,233,234,235,236,239,240,241,243,244,246,6,248,253,254,256,262,263,265,266,269,270,271,272,273,274,275,290,297,298,299,300,301,303,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,334,335,338,347,360,361,362,363,380,386,388,389,390,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,449,452,454,455,456,457,458,459,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[232,234,241,243],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[25,36,38,44,47,48,49,86,89,90,91,95,96,97,98,100,104,105,108,114,125,126,128,195,211,227,260,262,264,265,266,294,295,296,330,332,333,336,337,338,360,413,503,497,504,422,423,425,426],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,5,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,0,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,6,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[279],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[7,8,113,116,121,124,506,127,129,130,134,139,140,507,508,155,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":374,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":455,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":354,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":51,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":310,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":219,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":344,"org.easymock.tests2.UsageConstraintsTest.testNull":215,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":359,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":437,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageTest.argumentsOrdered":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests2.DependencyTest.testClassMocking":237,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":85,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":341,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":362,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":325,"org.easymock.tests.LimitationsTest.mockFinalMethod":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":309,"org.easymock.tests2.DependencyTest.testClassMockingSupport":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":83,"org.easymock.tests.UsageThrowableTest.throwError":427,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":343,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":439,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":505,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":194,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":255,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":181,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":319,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":185,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":483,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":388,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.MockClassControlTest.testEquals":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":448,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":307,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":418,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":424,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":433,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":202,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":404,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":405,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":454,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":479,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":295,"org.easymock.tests.UsageExpectAndReturnTest.longType":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":435,"org.easymock.tests.UsageCallCountTest.tooManyCalls":296,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.MockingTest.testNiceClassMocking":259,"org.easymock.tests.MockingTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":289,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":390,"org.easymock.tests.MockTypeTest.fromEasyMockClass":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":243,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.object":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":492,"org.easymock.tests.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":488,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.MockClassControlTest.testHashCode":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":183,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":420,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":82,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":397,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":398,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":419,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":392,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":489,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":192,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":355,"org.easymock.tests2.UsageTest.resumeIfFailure":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":457,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":157,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":380,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":1,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":322,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":230,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":146,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":170,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":466,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":423,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":504,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":493,"org.easymock.tests.UsageVerifyTest.twoReturns":426,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":395,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests2.StubTest.stub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":155,"org.easymock.tests.LimitationsTest.mockNativeMethod":462,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":491,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":72,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":55,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":242,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":122,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":218,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":231,"org.easymock.tests.MockingTest.testTwoMocks":252,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":318,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":235,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":77,"org.easymock.tests.UsageStrictMockTest.differentMethods":266,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":400,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":177,"org.easymock.tests.UsageExpectAndThrowTest.floatType":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":172,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests.UsageVerifyTest.twoThrows":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":131,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":186,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":461,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":508,"org.easymock.tests2.UsageConstraintsTest.testNotNull":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":434,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests2.UsageTest.defaultResetToNice":94,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":71,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":431,"org.easymock.tests.MockingTest.testStrictClassMocking":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ObjectMethodsTest.testHashCode":393,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":54,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":263,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":123,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":490,"org.easymock.tests.UsageExpectAndReturnTest.floatType":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":210,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":141,"org.easymock.tests2.SerializationTest.test":156,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":473,"org.easymock.tests2.UsageConstraintsTest.testSame":216,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":136,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":178,"org.easymock.tests.GenericTest.testPackageScope":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":257,"org.easymock.tests2.NameTest.nameForMock":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":484,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":476,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":324,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":363,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":377,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests2.NameTest.nameForStrictMock":53,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":117,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests.UsageRangeTest.combination":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":294,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":115,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":486,"org.easymock.tests2.UsageConstraintsTest.constraints":211,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":478,"org.easymock.tests.LimitationsTest.abstractClass":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":443,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105}}]
