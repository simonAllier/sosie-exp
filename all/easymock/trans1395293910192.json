[{"position":"org.easymock.internal.LastControl:94","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[20,21,22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[25,20,26,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[27,28,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[31,32],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,27,28,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,25,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,0,1,2,3,101,102,103,104,105,106,4,5,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,6,7,8,9,10,11,12,13,15,123,124,125,126,127,128,32,129,16,17,130,131,132,18,19,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,20,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,167,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,26,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,22,23,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,24,330,331,332,333,334,335],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[20,152,189,193,194,196,199,247,251,252,254,257,337,24,330,338,339,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[0,1,2,3,101,102,103,104,106,4,5,107,108,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[342,343,208,344,345,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[346,347,348,349,350,35,351,352,353,354,355,356,27,28,29,36,37,38,39,40,357,358,41,42,43,359,360,44,45,46,361,47,48,49,50,51,52,53,54,55,56,57,25,58,59,362,363,364,365,366,367,368,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,369,78,79,80,370,81,371,372,373,374,375,82,376,377,83,378,379,380,381,382,383,384,385,386,84,387,388,389,390,391,85,392,393,394,86,87,88,89,90,91,92,395,93,396,397,398,94,95,96,399,97,400,401,98,99,402,100,403,0,1,2,3,101,102,103,104,105,106,4,5,107,108,109,110,111,112,113,114,115,404,116,405,406,117,118,119,120,407,408,121,122,6,7,409,8,9,10,11,12,13,14,15,123,124,125,126,127,128,32,129,16,17,130,131,132,18,19,133,134,135,136,137,410,411,412,413,414,138,415,416,417,418,419,420,421,139,140,141,422,142,143,144,145,146,147,148,149,150,151,20,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,423,424,425,171,172,173,174,175,176,177,178,179,426,180,181,182,183,184,427,428,429,430,431,432,433,434,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,26,213,435,436,437,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,438,229,33,439,440,441,34,442,443,444,230,231,232,233,234,235,236,237,238,239,240,241,445,446,242,447,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,448,263,449,264,265,266,267,268,269,270,271,272,273,450,451,452,453,454,455,456,457,337,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,274,275,276,477,478,277,278,279,280,281,282,283,284,285,479,286,287,288,289,290,291,292,293,480,294,295,481,482,296,297,298,299,300,301,302,303,304,22,23,305,306,307,308,309,310,311,312,313,483,314,315,484,485,486,487,316,317,318,319,320,321,322,323,324,325,326,327,328,329,24,330,331,332,488,489,490,333,334,491,335,492,493,494,338,495,496,339,340],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[346,347,348,349,350,35,351,352,353,354,355,356,27,28,29,36,37,38,39,40,357,358,41,42,43,359,360,44,45,46,361,47,48,49,50,51,52,53,54,55,56,57,25,58,59,362,363,364,366,367,368,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,369,78,79,80,370,81,371,373,374,375,82,376,377,83,378,379,380,381,382,383,384,385,386,84,387,388,389,390,391,85,392,393,394,86,87,88,89,90,91,92,93,396,398,94,95,96,97,400,401,98,99,100,403,0,1,2,3,101,102,103,104,105,106,4,5,107,108,109,110,111,112,113,114,115,404,116,405,406,117,118,119,120,407,408,497,498,499,500,501,121,122,6,7,409,8,9,10,11,12,13,14,15,123,124,125,126,127,128,32,129,16,17,130,131,132,18,19,133,134,135,136,137,410,411,412,413,414,138,415,416,417,418,419,420,421,139,140,141,422,142,143,502,144,145,146,147,148,149,150,151,20,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,423,424,425,171,172,173,174,175,176,177,178,179,426,180,181,182,183,184,427,428,429,430,431,432,433,434,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,26,213,435,436,437,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,33,439,440,441,34,443,444,230,231,232,233,234,235,236,237,238,239,240,241,445,446,242,447,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,448,263,449,264,265,266,267,268,269,270,271,272,273,450,451,452,453,454,455,456,457,337,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,274,275,276,477,478,277,278,279,280,281,282,283,284,285,479,286,287,288,289,290,291,292,293,480,294,295,481,482,296,297,298,299,300,301,302,303,304,22,23,305,306,307,308,309,310,311,312,313,483,314,315,484,485,486,316,317,318,319,320,321,322,323,324,325,326,327,328,329,24,330,331,332,488,489,490,333,334,491,335,492,493,494,338,495,496,339,340],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[46,47,131,18],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[188,194,201,202,227,306],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[27,28,29,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,25,58,59,363,364,365,366,368,73,75,76,79,80,81,86,87,88,89,90,91,92,93,396,398,94,95,98,99,100,403,0,1,2,3,101,102,103,104,105,106,4,5,107,108,109,110,111,112,113,114,115,116,406,117,118,119,120,407,121,122,6,7,8,9,10,11,12,13,15,123,124,125,126,127,128,32,129,16,17,130,131,132,18,19,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,20,152,153,157,158,159,160,161,162,163,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,427,430,431,432,433,434,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,26,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,449,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,22,23,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,24,330,331,332,488,489,333,334,491,335,492,493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[480,482],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[48,51,52,53,57,25,58,59,61,65,66,69,73,93,98,99,100,110,118,120,6,128,148,151,20,152,206,208,209,212,26,213,220,221,222,228,288,22,23,525,487,526,527,321,325,327,329,24,330],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[480],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[0,2,3,101,102,103,104,106,528,4,5,108],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[371,399,529,530,531,532],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.MocksControl:189","failures":[48,51,53,57,25,59,99,100,6,148,151,20,152,206,208,209,212,26,213,228,22,23,325,327,329,24,330],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[35,28,29,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,77,78,82,90,91,0,1,2,3,101,102,103,104,105,106,4,5,107,108,109,110,111,112,113,114,116,121,122,6,7,8,9,10,11,12,13,15,123,124,125,126,127,128,32,129,16,17,130,131,132,18,19,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,20,152,153,154,155,156,157,158,159,160,161,162,164,165,169,170,171,172,173,174,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,216,217,218,219,221,222,223,224,225,226,227,228,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,476,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,482,302,303,304,22,23,305,306,307,308,309,310,312,313,321,323,324,326,328,329,24,330,331,495,496],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[51,57,25,20,208,209,212,26,228,22,23,527,327,24],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[350,352,354,355,414,416,418,419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[533,534],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[361],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[0,2,4,6,7,9,11,12,14,16,18],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[441,533,534],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[535],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.MockingTest.testPartialClassMocking":333,"org.easymock.tests.MockClassControlTest.testToString":298,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":394,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":45,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":178,"org.easymock.samples.ExampleTest.answerVsDelegate":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":432,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":69,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":227,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.ReplayStateInvalidUsageTest.times":238,"org.easymock.tests2.DependencyTest.testClassMocking":359,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":39,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":320,"org.easymock.tests2.DependencyTest.testClassMockingSupport":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":448,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":232,"org.easymock.tests.UsageThrowableTest.throwError":264,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":431,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":478,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageOverloadedMethodTest.overloading":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":313,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":533,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":125,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":82,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":38,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":318,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":304,"org.easymock.samples.BasicClassMockTest.testPrintContent":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":319,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":532,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":442,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":443,"org.easymock.samples.ExampleTest.voteForRemoval":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":115,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":63,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":426,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":222,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests2.UsageConstraintsTest.testContains":124,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":215,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":495,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.MockClassControlTest.testHashCode":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":485,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":310,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":526,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":403,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":71,"org.easymock.tests.DefaultClassInstantiatorTest.object":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":484,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":527,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":410,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.CapturesMatcherTest.test":341,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":435,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":299,"org.easymock.tests2.UsageTest.resumeIfFailure":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":465,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":343,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":17,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.samples.ConstructorCalledMockTest.testTax":166,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":367,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":344,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":425,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":228,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":525,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":169,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":441,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":151,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":89,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":335,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":334,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.CompareToTest.testCompareEqual":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":490,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":163,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":439,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":296,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.LimitationsTest.privateConstructor":446,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.UsageTest.defaultResetToNice":56,"org.easymock.samples.ExampleTest.voteAgainstRemovals":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":179,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":78,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":535,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.NameTest.nameForNiceMock":88,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":328,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":400,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":167,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":362,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":534,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":369,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":402,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":241,"org.easymock.tests2.NameTest.nameForStrictMock":87,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":440,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":34,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":220,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":123,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":528,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":164,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":165,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests2.CompareToTest.testGreateThan":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":317,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":225,"org.easymock.tests.LimitationsTest.abstractClass":445,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":226,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
