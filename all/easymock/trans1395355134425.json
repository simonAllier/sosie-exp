[{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[15,16,17,0,4,18,19,20,1,21,2,22,3,23,24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[38,31,39,40,41,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,38,131,132,133,134,135,136,137,138,139,140,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,6,184,185,31,32,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,30,212,213,214,33,34,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,35,39,40,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,12,313,314,315,316,317,318,319,320,321,322,323,324,13,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,36,37,343,344,345,346,347,348,349,350,15,16,351,17,0,4,18,19,20,1,21,352,353,354,355,356,357,358,359,2,22,360,361,362,3,23,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,24,25,26,27,384,385,386,387,388,389,28,29,390,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[48,368],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[140,141,144,145,6,184,31,32,35,39,40,392,393,394,395,396,307,308,313,314,341,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[296,298,361,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[15,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[69,70,71,73,74,81,85,116,117,118,120,121,123,124,125,126,127,129,38,141,144,145,183,6,185,31,32,186,196,197,249,268,270,271,272,273,275,397,276,277,398,278,279,399,308,310,313,314,400,335,336,337,338,340,342,36,37,343,361,375,25,26,385,386,387,388,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,53,62,63,65,139,146,31,40,248,251,300,305,316,36,368,380],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[38,139,146,182,185,31,32,39,40,248,251,402,300,305,310,316,339,342,36,37,368,369,380],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[58,64,68,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,403,404,405,108,110,111,112,113,114,115,127,128,406,38,131,132,133,134,135,136,137,138,139,140,5,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,182,6,184,185,31,32,186,188,189,196,197,199,200,201,33,34,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,35,39,40,246,247,248,249,250,251,252,260,261,262,263,264,265,266,267,268,269,270,271,273,275,277,407,407,408,408,409,410,399,411,412,402,413,280,281,282,283,284,285,286,287,290,414,415,416,296,298,299,300,393,303,304,305,306,307,308,309,310,311,312,12,313,314,315,316,317,318,319,320,321,322,324,325,417,418,326,328,329,330,331,400,332,333,419,334,420,335,336,337,339,341,342,36,37,343,349,350,15,16,17,0,4,18,19,20,1,21,352,353,354,355,356,357,358,359,2,22,360,361,362,3,23,363,421,422,364,365,366,367,368,369,370,371,372,373,423,424,374,375,425,426,427,376,377,428,429,378,379,380,381,382,383,24,25,26,27,384,385,386,387,388,389,28,29,390,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[430,431,432,433,434,435,436,437,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":314,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":52,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":310,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":398,"org.easymock.tests2.DelegateToTest.testReturnException":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests.MockingTest.testPartialClassMocking":403,"org.easymock.tests.MockClassControlTest.testToString":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":392,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":432,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageTest.wrongArguments":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":79,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":104,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":320,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":335,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":214,"org.easymock.tests.UsageVarargTest.varargIntAccepted":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests.ReplayStateInvalidUsageTest.times":211,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":364,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":288,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":216,"org.easymock.tests2.DelegateToTest.testDelegate":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":196,"org.easymock.tests2.CaptureTest.testCapture1_2446744":384,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":286,"org.easymock.tests.UsageThrowableTest.throwError":84,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.samples.PartialClassMockTest.testGetArea":409,"org.easymock.tests.MockingTest.testInterfaceMocking":102,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":195,"org.easymock.tests2.UsageTest.niceToStrict":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":11,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":77,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":295,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":14,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":354,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":389,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":119,"org.easymock.tests.MockClassControlTest.testEquals":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":287,"org.easymock.tests.MockNameTest.defaultName":202,"org.easymock.tests2.UsageConstraintsTest.testMatches":356,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":273,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":90,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":438,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":180,"org.easymock.tests2.UsageConstraintsTest.greaterThan":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":181,"org.easymock.samples.ExampleTest.voteForRemoval":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.CaptureTest.testCaptureFirst":391,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":400,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":316,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":390,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":126,"org.easymock.tests.GenericTest.testBridgedEquals":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":426,"org.easymock.tests.MockingTest.testNiceClassMocking":105,"org.easymock.tests.MockingTest.testClassMocking":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":67,"org.easymock.tests2.UsageConstraintsTest.testContains":353,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":298,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":433,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":121,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":193,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":170,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":439,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.MockClassControlTest.testHashCode":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":285,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":348,"org.easymock.tests.UsageVarargTest.varargCharAccepted":120,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastCall":311,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":147,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":416,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":255,"org.easymock.tests2.UsageTest.resumeIfFailure":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.StubTest.stubWithReturnValue":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":430,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":362,"org.easymock.tests2.SerializationTest.testAllMockedMethod":375,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.samples.SupportTest.voteForRemovals":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":64,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":365,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":172,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":381,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":407,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":346,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests2.CaptureTest.testCaptureNone":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":138,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":125,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":71,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":194,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":250,"org.easymock.tests2.UsageConstraintsTest.any":21,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":210,"org.easymock.tests2.StubTest.stub":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":209,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.tests2.SerializationTest.testClass":424,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":423,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":343,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":401,"org.easymock.tests2.NameTest.nameForMocksControl":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":291,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":405,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":317,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":412,"org.easymock.tests.MockingTest.testNicePartialClassMocking":404,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":322,"org.easymock.tests2.CaptureTest.testCaptureLast":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":429,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":360,"org.easymock.tests.MockingTest.testTwoMocks":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":23,"org.easymock.samples.ExampleTest.removeNonExistingDocument":274,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":207,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":413,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":415,"org.easymock.samples.ExampleTest.voteAgainstRemoval":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":53,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":418,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":91,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":370,"org.easymock.tests2.UsageTest.defaultResetToNice":12,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":122,"org.easymock.tests2.CallbackTest.callback":328,"org.easymock.tests2.UsageConstraintsTest.equals":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":249,"org.easymock.tests.UsageCallCountTest.tooFewCalls":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":80,"org.easymock.tests.UsageThrowableTest.throwCheckedException":88,"org.easymock.tests.MockingTest.testStrictClassMocking":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":428,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":427,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":377,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":369,"org.easymock.tests.ObjectMethodsTest.testHashCode":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":436,"org.easymock.tests2.NameTest.nameForNiceMock":395,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":434,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":294,"org.easymock.tests2.DelegateToTest.testStubDelegate":380,"org.easymock.tests2.AnswerTest.stubAnswer":368,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":184,"org.easymock.tests.UsageVarargTest.varargLongAccepted":124,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":51,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":421,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":408,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageThrowableTest.noUpperLimit":85,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":350,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":385,"org.easymock.tests2.SerializationTest.test":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":175,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":292,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":103,"org.easymock.tests2.NameTest.nameForMock":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":240,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":55,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":341,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":248,"org.easymock.tests2.NameTest.nameForStrictMock":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":345,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.ErrorMessageTest.testGetters":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":410,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":330,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":318,"org.easymock.tests.UsageTest.wrongArguments":141,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":179,"org.easymock.tests.UsageVarargTest.varargShortAccepted":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":72,"org.easymock.tests2.UsageConstraintsTest.cmpTo":352,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":45,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":204,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests.UsageStrictMockTest.testVerify":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":397,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":117}}]
