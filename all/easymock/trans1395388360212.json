[{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,2,3,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[200,305,306,307,308,309],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[54,101,102,103,322,135,139,140,142,145,159,171,174,175,269,300,303,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[11,154,335,280,282,285,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[338,339,340,6,7,8,9,10,11,12,13,14,15,16,341,342,343,35,36,37,39,40,41,344,48,49,56,59,60,61,67,68,69,70,71,72,73,74,345,346,347,78,79,81,86,91,102,103,104,105,106,107,108,110,111,112,113,114,116,120,121,122,123,133,134,136,141,146,154,156,157,159,169,170,171,172,173,174,175,187,188,189,190,191,192,193,195,196,197,198,199,202,207,209,212,213,215,216,218,221,224,225,226,227,228,229,232,237,238,239,241,242,243,244,246,247,248,249,250,251,254,255,256,2,3,4,258,260,262,348,349,350,267,268,270,271,272,276,277,279,351,280,283,288,352,289,353,354,355,356,357,358,359,316,360,290,361,317,293,299,300,301,302,303,304,362,309,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[41,52,54,55,56,59,60,101,102,103,125,126,127,130,170,171,173,174,181,184,365,232,239,269,270,276,277,300,302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[338,339,340,6,366,367,7,8,9,10,11,12,13,14,15,16,22,23,24,25,26,341,342,343,27,28,29,30,31,32,34,35,36,37,38,39,40,41,344,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,67,68,69,70,71,72,73,74,345,346,347,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,119,120,121,122,123,124,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,156,157,160,164,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,2,3,4,258,259,260,262,263,264,265,266,305,368,348,306,349,350,369,370,371,267,268,269,270,271,272,273,274,275,276,277,278,279,351,280,283,284,285,286,372,287,288,352,289,353,354,355,307,356,373,374,357,375,358,359,316,360,290,361,317,291,292,293,298,299,300,301,302,303,304,362,309,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[310,311,312,313,314,315,316,317,318,319,320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[55,170,171,173,174,176,352,353,355,373,375,300,302,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[6,7,376,323,324,377,325,232,233,326,327,378,379,328,380,329,330,381,331,239,240,332,333,382,383,334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[2,312,384,351,315,385,386,387,388,389],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":28,"org.easymock.tests.MockingTest.testPartialClassMocking":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":131,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests2.UsageConstraintsTest.testNull":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":353,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":244,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":17,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageVarargTest.varargIntAccepted":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.AnswerTest.answer":280,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":21,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":125,"org.easymock.tests2.CaptureTest.testCapture1_2446744":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":128,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":319,"org.easymock.samples.PartialClassMockTest.testGetArea":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":132,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":348,"org.easymock.tests2.MockBuilderTest.testCreateMock":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":87,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":218,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":250,"org.easymock.tests2.EasyMockSupportClassTest.testAll":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":24,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":42,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":25,"org.easymock.samples.BasicClassMockTest.testPrintContent":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":32,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":389,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":375,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":344,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":27,"org.easymock.tests2.CaptureTest.testCaptureFirst":254,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":83,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":370,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":113,"org.easymock.tests.GenericTest.testBridgedEquals":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":39,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":79,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":43,"org.easymock.tests.UsageCallCountTest.tooManyCalls":40,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":359,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests.MockTypeTest.fromEasyMockClass":127,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":287,"org.easymock.tests.UsageExpectAndReturnTest.object":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":108,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":183,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":315,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":92,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageVarargTest.varargCharAccepted":107,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":64,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":364,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":30,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":185,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":143,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":186,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":281,"org.easymock.tests.UsageExpectAndThrowTest.object":141,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.samples.ConstructorCalledMockTest.testTax":366,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":349,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":179,"org.easymock.tests2.CaptureTest.testCaptureNone":249,"org.easymock.tests.UsageUnorderedTest.message":41,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":112,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":37,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":184,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":339,"org.easymock.tests2.CaptureTest.testCapture_2617107":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":123,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":29,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":347,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":350,"org.easymock.tests.MockingTest.testNicePartialClassMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":355,"org.easymock.tests2.CaptureTest.testCaptureLast":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests.UsageExpectAndThrowTest.floatType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":363,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":320,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":91,"org.easymock.tests.UsageVarargTest.differentLength":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":293,"org.easymock.tests2.UsageConstraintsTest.equals":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":122,"org.easymock.tests.UsageCallCountTest.tooFewCalls":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":290,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":285,"org.easymock.tests.ObjectMethodsTest.testHashCode":182,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":387,"org.easymock.samples.ExampleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":284,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests.UsageVarargTest.varargLongAccepted":111,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":78,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":351,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":367,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":77,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":88,"org.easymock.tests2.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":130,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":121,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":354,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":368,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":251,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":352,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":89,"org.easymock.tests.UsageVarargTest.varargShortAccepted":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":38,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":252,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":36,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":7,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":23,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193}}]
