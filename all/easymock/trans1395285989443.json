[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,1,88,89,90,91,92,6,9,19,25,93,94,95,96,30,97,98,99,100,101,102,37,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[131,146,156,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,200,206,208,209,210,211,212,214,243,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[247,248,249,250,251,33,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[42,46,47,48,49,50,51,52,53,54,55,252,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,253,77,254,78,79,80,255,256,81,82,83,84,0,85,86,87,1,88,89,257,258,90,259,91,92,260,6,9,19,25,93,95,261,262,263,264,30,97,265,98,99,100,101,102,37,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,266,267,131,132,133,134,135,136,268,269,137,138,139,140,270,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,271,159,160,272,273,161,274,275,276,182,277,183,184,278,279,280,281,282,283,284,285,286,287,185,186,188,190,288,191,289,290,192,193,194,195,196,197,291,292,201,293,202,203,294,295,204,205,206,296,207,208,209,210,211,212,297,298,299,300,301,302,303,304,305,306,307,308,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,309,310,311,312,313,314,315,316,317,318,236,238,239,319,240,320,39,39,40,40,321,241,322,323,242,324,325],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[326,132,134,135,136,268,269,137,139,327,140,270,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,328,329,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,253,77,254,78,79,80,255,256,81,82,83,84,0,85,86,87,1,88,89,257,258,90,259,91,92,260,6,9,19,25,93,94,330,95,96,30,97,265,331,98,99,332,100,101,333,102,334,335,336,337,338,37,103,104,106,107,108,109,110,111,112,113,339,114,340,115,116,117,341,342,118,343,119,120,121,122,123,124,125,126,127,128,129,130,266,267,131,132,133,134,135,136,268,269,137,138,139,140,270,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,344,345,346,347,348,349,350,156,351,157,158,352,271,159,160,272,273,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,353,354,355,356,357,274,275,276,182,277,183,184,278,280,281,282,283,284,185,186,188,189,191,289,194,196,197,198,199,200,358,293,202,203,294,295,204,205,206,296,207,208,209,210,211,212,298,299,300,301,302,303,304,305,306,307,308,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,311,312,313,314,359,315,316,236,237,238,239,319,240,320,39,40,321,241,322,323,242,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[48,49,51,53,54,252,65,70,132,134,140],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,131,156,157,360,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[46,63,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.Range:36","failures":[362,41,42,43,363,44,45,328,364,329,46,47,48,49,365,50,51,52,53,54,55,252,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,366,367,368,369,370,73,371,372,373,374,375,376,74,75,76,253,77,254,78,79,80,255,256,81,82,83,84,0,85,377,86,87,1,2,378,379,88,89,257,258,90,259,91,92,260,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,380,381,382,383,384,385,93,386,387,388,389,390,391,94,392,393,330,95,96,394,261,262,263,264,30,97,265,331,31,98,395,32,396,99,332,100,33,101,397,34,333,102,36,334,335,336,337,338,37,38,398,103,104,105,106,107,108,109,110,111,112,113,339,399,114,400,401,340,115,116,117,402,403,341,342,118,343,119,120,121,122,123,124,125,126,127,128,129,130,266,404,405,406,407,408,409,410,267,131,132,133,134,135,136,268,269,137,138,139,140,270,141,142,411,412,143,413,414,415,416,417,418,419,144,145,146,420,421,422,147,148,423,149,424,425,426,150,151,152,153,154,155,344,345,346,347,348,349,350,156,351,427,157,158,352,271,159,160,272,273,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,353,354,355,356,357,428,429,430,274,275,276,182,277,183,184,278,279,431,432,433,434,435,436,437,438,280,281,282,283,284,285,286,287,185,186,439,187,440,441,442,443,444,445,446,188,189,447,448,449,246,360,450,451,452,453,454,455,456,457,458,459,460,461,190,462,463,464,465,466,288,467,468,191,289,290,469,192,193,470,194,195,196,197,198,291,199,200,292,201,358,293,471,472,473,474,475,476,477,478,479,480,481,482,202,203,294,295,204,205,483,484,485,486,487,488,489,490,206,296,207,208,209,210,211,212,491,297,492,298,299,300,493,301,302,303,304,305,306,307,308,213,214,215,243,244,245,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,309,310,494,311,312,313,314,359,315,316,495,317,318,496,497,236,237,238,239,319,240,498,320,39,40,321,241,322,323,242,324,325],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[499,500,501,502,352,276],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[327,361],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[472,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[55,60,72,503],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[504],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[499,500,501,502,352,276],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[74,79,131,146,156,157,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,200,295,206,207,208,209,210,211,212,214],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[83,84,0,85,87,1,6,9,19,25,30,265,331,98,395,99,332,100,101,333,102,334,37,108,109,111,112,113,339,114,340,115,116,117,403,118,143,419,422,147,148,149,432,433,434,435,191,289,290,293,483,488,39,39,40,40,241,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[45,53,65,253,77,254,255,256,257,90,95,120,121,123,124,125,127,128,131,140,145,271,272,273,274,182,202,295,206,296,208,209,210,211,212,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[48,74,253,254,255,256,82,257,259,91,92,102,334,157,352,271,272,273,161,274,276,277,183,184,205,214,215],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[468],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[62],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[100,488],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.UsageTest.argumentsOrdered":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":321,"org.easymock.tests2.DelegateToTest.testReturnException":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.tests.MockClassControlTest.testToString":433,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":394,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":202,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":345,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":488,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":425,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":128,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":495,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.ReplayStateInvalidUsageTest.times":479,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests2.DependencyTest.testClassMocking":378,"org.easymock.tests2.AnswerTest.answer":94,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":132,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests.LimitationsTest.mockFinalMethod":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.DependencyTest.testClassMockingSupport":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":192,"org.easymock.tests2.CaptureTest.testCapture1_2446744":136,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":473,"org.easymock.tests.UsageThrowableTest.throwError":206,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":27,"org.easymock.samples.PartialClassMockTest.testGetArea":241,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":474,"org.easymock.tests.MockingTest.testInterfaceMocking":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":14,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":171,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":155,"org.easymock.tests.UsageOverloadedMethodTest.overloading":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":139,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":493,"org.easymock.tests.MockClassControlTest.testEquals":437,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":179,"org.easymock.tests2.CaptureTest.testCaptureAll":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.samples.ExampleTest.voteForRemovals":240,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":351,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":293,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":307,"org.easymock.tests.GenericTest.testBridgedEquals":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":180,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testClassMocking":421,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":494,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":486,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":329,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":248,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":302,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":417,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":199,"org.easymock.tests.MockClassControlTest.testHashCode":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":16,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":301,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.CaptureTest.testCaptureMultiple":326,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests.DefaultClassInstantiatorTest.object":187,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":243,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":168,"org.easymock.tests.CapturesMatcherTest.test":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":428,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":265,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":242,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":174,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":3,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":344,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests2.CaptureTest.testCaptureNone":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests.UsageUnorderedTest.message":205,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":306,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":20,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":418,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":478,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndThrowTest.longType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":477,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":8,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":166,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.CaptureTest.testCaptureLast":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":422,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":498,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":334,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":10,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":5,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":398,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":29,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":341,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":400,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":346,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":420,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":189,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":480,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":86,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":107,"org.easymock.tests2.NameTest.nameForNiceMock":263,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":249,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":21,"org.easymock.tests2.DelegateToTest.testStubDelegate":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":397,"org.easymock.tests.UsageVarargTest.varargLongAccepted":305,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests.UsageThrowableTest.noUpperLimit":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":377,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":11,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":424,"org.easymock.tests2.NameTest.nameForMock":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests2.MockedExceptionTest.testRealException":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":203,"org.easymock.tests2.NameTest.nameForStrictMock":262,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":15,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":304,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":359,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":472,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":395,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.CaptureTest.testCapture":327,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageStrictMockTest.testVerify":279,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.LimitationsTest.abstractClass":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299}}]
