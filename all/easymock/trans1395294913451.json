[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[18],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[18,22],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[23,24,8,10,25,26],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,4,5,43,44,45,46,47,48,49,50,51,30,52,53,54,55,56,0,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,7,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,8,109,110,9,111,112,113,114,115,116,117,118,119,120,121,122,123,124,1,125,126,2,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,11,173,174,12,13,175,176,177,178,178,179,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,14,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,21,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,15,321,322,323,324,325,16,17,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[40,41,84],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[43,328,49,50,51,22,63,329,330,331,332,333,334,335,99,336,337,165,166,167,168,178,178,179,179,187,188,191,198,199,200,201,202,204,225,226,227,228,230,231,245,246,338,247,339,248,249,340,250,341,251,252,254,255,256,342,257,258,259,260,261,343,270,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[31,32,33,34,36,37,39,41,42,4,5,43,44,45,46,47,48,49,51,30,52,53,54,55,56,0,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,7,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,101,109,9,111,114,115,116,117,118,119,120,121,122,123,124,1,125,126,2,127,128,129,130,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,177,178,178,179,179,180,181,182,183,185,186,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,264,14,266,268,269,270,271,272,273,274,275,276,277,278,279,280,285,21,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,323,324,325,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[99,121,166,167,168,191,194,198,199,200,201,225,226,227,228,229,230,231,246,247,248,249,250,251,253,254,256,272,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[347,202,203,204],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[348,349,227,231,350,351,344,352,353,354,355],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[23,24,8,10,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[33,42,55,56,356,101,9,111,114,125,173,174,14,266,291,292,294,296,297,303,306,309,316,323,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[220,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[191,247,248,249,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[358],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[28],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[215,359,217,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[189,190,360,361,362,363,364,205,365,366,367,368,369,370,371,372,373,374,375,206,376,377,378,379,380,381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","fieldName":"qualifier","this":"qualifier"}},{"position":"org.easymock.internal.MocksControl:105","failures":[382,383,384,385,386,387,388,389,390,391,392,393,31,32,33,34,35,36,37,38,39,3,40,41,394,42,4,5,395,396,397,398,399,328,44,45,46,47,48,30,52,53,54,55,56,0,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,7,400,356,401,402,403,404,405,406,407,408,409,410,411,412,413,414,84,415,416,417,418,419,85,420,86,87,88,89,90,91,92,93,94,421,422,423,424,425,95,426,96,97,98,427,100,428,101,102,103,104,429,105,106,107,108,8,109,110,9,111,112,113,114,115,116,117,118,119,120,121,122,123,124,1,125,126,2,127,128,129,130,131,132,133,430,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,431,432,433,434,435,436,437,169,438,439,440,170,171,172,10,11,173,174,12,13,175,176,177,180,181,182,183,184,185,441,186,189,190,192,193,194,195,196,197,442,443,444,445,203,360,361,362,363,364,205,365,366,367,368,369,370,371,372,373,374,375,206,376,377,378,379,380,381,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,446,222,223,224,229,350,232,233,234,235,236,237,238,239,240,241,242,243,244,253,262,263,264,265,14,266,267,447,268,269,270,271,273,274,275,276,277,278,279,280,448,449,450,281,282,283,284,285,21,286,287,288,289,290,291,292,293,451,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,15,321,322,323,324,325,16,17,326,327],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[34,181,221,222,278,285,21,286,287,288,289],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[178,178,179,179,202,452,453,454,272,355],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[455,275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":293,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":322,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":189,"org.easymock.tests2.DelegateToTest.testReturnException":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":64,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":299,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":439,"org.easymock.samples.ExampleTest.answerVsDelegate":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":210,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":46,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests2.DependencyTest.testClassMocking":345,"org.easymock.tests2.AnswerTest.answer":285,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":445,"org.easymock.tests2.CaptureTest.testAnd":207,"org.easymock.tests2.UsageTest.strictResetToDefault":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":57,"org.easymock.tests2.DelegateToTest.testDelegate":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":424,"org.easymock.tests2.DependencyTest.testClassMockingSupport":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":40,"org.easymock.tests2.CaptureTest.testCapture1_2446744":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":443,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":1,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":348,"org.easymock.samples.PartialClassMockTest.testGetArea":191,"org.easymock.tests.MockingTest.testInterfaceMocking":435,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":65,"org.easymock.tests2.UsageTest.niceToStrict":321,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.MockBuilderTest.testCreateMock":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":73,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":31,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":28,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":304,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":422,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":188,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":455,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":327,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":276,"org.easymock.tests2.UsageTest.moreThanOneArgument":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":250,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":105,"org.easymock.tests.UsageExpectAndReturnTest.longType":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":82,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":357,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":44,"org.easymock.tests.UsageCallCountTest.tooManyCalls":106,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":428,"org.easymock.tests2.UsageConstraintsTest.testContains":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":294,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":33,"org.easymock.tests.MockTypeTest.fromEasyMockClass":431,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":355,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":36,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":244,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":442,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":447,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":96,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":84,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":76,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":85,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":21,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":74,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":311,"org.easymock.tests2.DelegateToTest.testWrongClass":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":438,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":53,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":358,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":273,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":187,"org.easymock.tests2.CaptureTest.testCapture_2617107":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests2.UsageConstraintsTest.any":301,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndThrowTest.longType":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests2.NameTest.nameForMocksControl":284,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":446,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":249,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":256,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":231,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":312,"org.easymock.tests.MockingTest.testTwoMocks":165,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":72,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":316,"org.easymock.samples.ExampleTest.removeNonExistingDocument":441,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":341,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":66,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":307,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":349,"org.easymock.tests2.UsageConstraintsTest.testNotNull":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":325,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.CallbackTest.callback":278,"org.easymock.tests2.UsageConstraintsTest.equals":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":454,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":440,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":93,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":230,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":229,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":397,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests2.NameTest.nameForNiceMock":283,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.samples.ExampleTest.addDocument":184,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":452,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":272,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests.UsageThrowableTest.noUpperLimit":125,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":291,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":212,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":146,"org.easymock.tests2.UsageConstraintsTest.testSame":296,"org.easymock.samples.SupportTest.addDocument":176,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.UsageStrictMockTest.differentMethods":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":78,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":117,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":264,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests2.NameTest.nameForStrictMock":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":255,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":246,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":217,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":19,"org.easymock.tests2.UsageConstraintsTest.testOr":297,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":351,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":302,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests2.CaptureTest.testCaptureFromStub":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":338,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.CaptureTest.testCapture":359,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.UsageConstraintsTest.constraints":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":186,"org.easymock.tests.UsageStrictMockTest.testVerify":113,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":421,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238}}]
