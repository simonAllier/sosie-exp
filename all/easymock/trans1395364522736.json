[{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[116,117,118],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[119,120,121,122,123,124,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[125,126,127,128,2,129,130,5,131,132,133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[8,9,138,139,140,13,16,26,32,35,141,36,37,39,40,41,42,44,45,142,46,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,75,76,76,77,77,78,79,80,90,92,93,95,96,97,102,103,104,105,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[143,144,145,146,147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153,154,155,125,156,157,8,158,9,159,160,161,162,163,13,16,26,32,164,165,166,167,168,144,115,169,170,171,172,173,145,174,175,176,137,146,177,178,179,180,181,182,183,184,185,186,187,147,35,36,39,40,41,42,44,45,46,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,47,48,49,216,217,218,219,220,221,222,223,224,225,226,227,126,228,229,230,231,232,127,128,233,234,52,54,55,56,57,235,58,59,236,237,60,61,238,62,63,64,65,66,69,70,71,72,239,240,75,241,76,77,242,243,244,245,246,247,248,249,250,251,78,79,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,2,268,269,129,270,271,272,273,274,275,80,276,277,278,90,279,280,281,282,283,284,285,286,287,288,5,131,289,290,291,292,293,294,295,296,297,298,95,96,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,132,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,133,134,352,353,135,136,354,355,356,357,358,359,360,6,7,361,362,363,364,103,104,105,365,366,367,368,369,370,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[372,373,374,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[181],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[178,229,63,375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[8,119,120,121,376,377,124,43,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,133],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[47,48,49,216,225,231,237,257,258,259,260,261,262,265,281,285,286,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,353,359,361,362,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[379,150,151,380],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.UsageTest.argumentsOrdered":128,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests.MockClassControlTest.testToString":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":330,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.UsageExpectAndThrowTest.object":340,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":246,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":341,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":114,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":287,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":373,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":307,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageVarargTest.varargIntAccepted":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":286,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":375,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":329,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":140,"org.easymock.tests2.CaptureTest.testAnd":188,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":353,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":334,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":345,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests.LimitationsTest.mockFinalMethod":91,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests.MockingTest.testTwoMocks":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":310,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":117,"org.easymock.tests.UsageThrowableTest.throwError":357,"org.easymock.tests.UsageStrictMockTest.differentMethods":270,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":83,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":378,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":107,"org.easymock.tests.UsageExpectAndThrowTest.floatType":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":149,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":248,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":331,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":99,"org.easymock.tests.LimitationsTest.privateConstructor":89,"org.easymock.tests2.ThreadingTest.testChangeDefault":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":362,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.samples.ExampleTest.voteAgainstRemovals":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":325,"org.easymock.tests.UsageVarargTest.differentLength":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":67,"org.easymock.tests.UsageTest.openCallCountByLastCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":321,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":137,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":374,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.MockClassControlTest.testEquals":113,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":100,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests2.CaptureTest.testCaptureAll":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.tests2.CompareToTest.testGreateOrEqual":143,"org.easymock.samples.ExampleTest.voteForRemovals":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":122,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.samples.ExampleTest.addDocument":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":361,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.AnswerTest.stubAnswer":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.samples.ExampleTest.voteForRemoval":247,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":73,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.floatType":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":358,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":168,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests2.SerializationTest.test":158,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":311,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.samples.SupportTest.addDocument":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":308,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":322,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":346,"org.easymock.tests2.UsageStrictMockTest.differentMethods":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":314,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testNiceClassMocking":106,"org.easymock.tests.MockingTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":141,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":165,"org.easymock.tests.UsageExpectAndReturnTest.object":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":51,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":84,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":120,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":376,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.CaptureTest.testCaptureRightOne":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":372,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":326,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.UsageTest.wrongArguments":134,"org.easymock.tests.MockClassControlTest.testHashCode":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.UsageVarargTest.varargShortAccepted":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":86,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":302,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":199,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":360,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":324,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":111,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":316,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests.LimitationsTest.abstractClass":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209}}]
