[{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[2,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,24,80,81,82,83,84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[89,90,91,92,93],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[107,108,109,110,111,112,113,114,115,116,0,1,117,118,38,39,119,120,36,37,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,94,95,139,140,2,141,63,64,142,96,143,40,144,41,145,146,42,147,148,149,150,151,152,153,154,155,156,157,158,159,160,3,161,162,43,44,163,45,46,47,164,165,48,166,167,168,89,90,49,169,170,171,50,172,173,174,51,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,4,5,6,212,213,214,7,8,9,10,215,216,217,218,219,11,220,12,13,221,14,15,222,223,224,225,226,16,17,18,227,65,66,67,68,228,229,230,231,232,233,234,235,236,237,93,238,239,240,103,241,242,243,244,245,246,247,248,249,69,70,106,250,251,252,253,71,72,254,255,256,257,258,52,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,76,77,78,19,20,21,22,23,288,289,290,291,87,292,293,294,295,296,297,298,299,300,301,302,79,24,303,80,81,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,53,54,344,55,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,88,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,82,403,404,56,405,406,407,408,409,410,25,411,412,413,414,415,416,417,26,27,418,419,28,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,29,30,31,32,33,34,35,435,436,437,438,439,440,441,442,443,444,57,445,446,447,448,58,59,60,61,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,83,481,84,482,483,85,86,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[109,110,111,112,113,114,115,116,120,36,37,121,122,137,94,139,140,2,141,63,64,142,96,143,40,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,3,161,162,43,44,163,45,46,47,164,48,168,89,90,49,171,172,173,174,51,175,188,189,190,191,193,194,195,197,211,4,5,6,212,213,7,8,9,10,215,216,218,219,11,220,12,13,221,14,15,222,223,224,225,226,16,17,18,65,66,67,68,228,231,232,233,234,235,93,238,241,242,243,248,249,69,70,106,250,251,252,253,71,72,254,255,284,285,286,287,76,77,78,19,20,21,22,23,87,293,294,295,296,297,298,299,300,301,302,79,24,303,80,81,304,305,309,317,318,319,322,323,324,325,326,327,334,335,336,337,338,339,340,341,342,53,54,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,88,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,82,56,25,411,413,414,415,416,417,26,27,418,419,28,420,421,422,423,424,425,427,428,429,430,431,432,433,434,29,30,31,32,33,34,35,438,439,441,57,445,446,447,448,58,59,60,61,476,477,478,479,480,83,481,84,482,483,85,86,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,63,64,69,73,74,485,75,76,77,78,24,80,81,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[96,143,40,486],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[487,488,489,490,491,105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[2,63,64,65,66,67,68,69,70,71,72,76,77,78,79,24,80,81,82,83,84,85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[118,96,164,89,90,170,234,235,236,93,238,239,240,241,242,243,261,271,277,328,331,344],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[310,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[2,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,24,80,81,82,83,84,85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,118,38,39,94,95,96,40,41,145,146,42,148,149,492,493,43,44,45,46,47,164,48,166,167,168,89,90,49,169,170,173,174,51,234,235,236,237,93,238,239,240,103,241,242,243,244,245,256,257,258,52,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,309,310,311,312,313,314,315,321,328,331,343,53,54,344,55,403,404,56,405,435,436,437,438,439,441,444,57,446,447,448,58,59,60,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":480,"org.easymock.tests2.UsageTest.argumentsOrdered":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":250,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":117,"org.easymock.tests2.DelegateToTest.testReturnException":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":323,"org.easymock.tests.MockingTest.testPartialClassMocking":438,"org.easymock.tests.MockClassControlTest.testToString":446,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":227,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":383,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":26,"org.easymock.tests2.UsageTest.wrongArguments":70,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":286,"org.easymock.samples.ExampleTest.answerVsDelegate":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":331,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":443,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":492,"org.easymock.tests2.CaptureTest.testPrimitive":153,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":402,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":23,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":135,"org.easymock.tests2.AnswerTest.answer":228,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":191,"org.easymock.tests2.CaptureTest.testAnd":150,"org.easymock.tests2.UsageTest.strictResetToDefault":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":398,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":417,"org.easymock.tests2.DependencyTest.testClassMockingSupport":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":154,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":189,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":330,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":279,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.MockingTest.testInterfaceMocking":440,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":384,"org.easymock.tests2.UsageTest.niceToStrict":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":266,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests2.ThreadingTest.testChangeDefault":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":392,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":220,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":159,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":426,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.MockClassControlTest.testEquals":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":190,"org.easymock.tests2.CaptureTest.testCaptureAll":151,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":434,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":416,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":101,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":162,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":352,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":433,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":413,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":401,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":388,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests.MockingTest.testNiceClassMocking":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testClassMocking":436,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":422,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":172,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":98,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":484,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":95,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":177,"org.easymock.tests.MockClassControlTest.testHashCode":58,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":268,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":188,"org.easymock.tests.UsageVarargTest.varargCharAccepted":427,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":449,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":493,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":176,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":277,"org.easymock.tests2.UsageTest.resumeIfFailure":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":325,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":354,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":468,"org.easymock.samples.SupportTest.voteForRemovals":108,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":395,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":474,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":229,"org.easymock.tests.UsageExpectAndThrowTest.object":393,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":290,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":223,"org.easymock.tests2.DelegateToTest.testWrongClass":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":246,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":394,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":285,"org.easymock.tests2.CaptureTest.testCaptureNone":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":283,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":488,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":432,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":272,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":339,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":419,"org.easymock.tests2.UsageConstraintsTest.any":218,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndThrowTest.longType":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":489,"org.easymock.tests2.NameTest.nameForMocksControl":68,"org.easymock.tests2.MockedExceptionTest.testMockedException":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":260,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":483,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":441,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":387,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":50,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":439,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.CaptureTest.testCaptureLast":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":215,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":224,"org.easymock.tests.MockingTest.testTwoMocks":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":391,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":130,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":491,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":311,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":37,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":57,"org.easymock.tests.UsageExpectAndThrowTest.floatType":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":231,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":271,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.UsageTest.defaultResetToNice":253,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":360,"org.easymock.tests.UsageVarargTest.differentLength":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests2.CallbackTest.callback":144,"org.easymock.tests2.UsageConstraintsTest.equals":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":166,"org.easymock.tests.UsageTest.openCallCountByLastCall":482,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":418,"org.easymock.tests.UsageCallCountTest.tooFewCalls":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":287,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":490,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests.MockingTest.testStrictClassMocking":435,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":129,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":233,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.NameTest.nameForNiceMock":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":99,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":273,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.AnswerTest.stubAnswer":232,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":431,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":244,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":155,"org.easymock.tests2.SerializationTest.test":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":346,"org.easymock.samples.SupportTest.addDocument":107,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":263,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":442,"org.easymock.tests2.NameTest.nameForMock":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":397,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":479,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":465,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":66,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":245,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":312,"org.easymock.tests.ErrorMessageTest.testGetters":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":180,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests2.CaptureTest.testCaptureRightOne":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":267,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":487,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":264,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":219,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.CaptureTest.testCaptureFromStub":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":481,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":359,"org.easymock.tests2.UsageConstraintsTest.constraints":212,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":116,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":414,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":21,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":22,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":424,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204}}]
