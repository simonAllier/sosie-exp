[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[80,81,82,83,32,84,85,86,87,65,88,75,89,90,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[93,94],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:144","sourceCode":"return this","type":"CtReturnImpl"},"failures":[8,96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[97,31,33,98,99,74,76,100,101,91,92,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[1,104,2,105,3,4,106,5,107,108,6,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,7,129,130,131,132,8,133,134,135,136,137,138,139,140,141,142,95,143,144,145,146,147,80,93,148,149,150,151,152,153,154,155,156,9,10,11,12,13,14,15,157,158,159,160,161,16,17,18,19,81,162,97,163,164,165,166,167,168,169,170,82,20,21,22,23,24,25,26,27,28,29,171,172,173,30,174,175,176,31,83,32,33,98,34,35,177,178,179,180,181,182,183,184,185,186,187,188,84,189,190,36,37,38,39,40,191,192,41,42,43,44,45,46,193,194,47,48,195,49,50,51,196,52,53,54,55,56,197,198,199,200,201,202,203,204,205,206,57,207,208,209,210,211,212,213,214,215,216,217,218,86,99,219,220,221,222,223,87,62,63,64,65,67,68,69,70,71,72,73,224,225,226,227,228,74,88,75,76,100,229,230,231,232,233,234,235,236,237,238,239,240,241,89,90,101,91,92,242,243,244,77,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[96,269,270,271,272,273,274,0,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[1,125,277,278,279,36,280,37,281,38,39,282,40,283,284,285,286,287,288],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[289,290,291,292,293,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[96,269,270,271,273,274,275],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[279,284],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[163,168,169,32,205,294,293,219,222,223,228,75,91,92],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[112,114,122,135,141],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[96,269,270,271,273,274,275],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[295,230,231,288,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[97,163,168,169,31,32,33,297,298,299,300,205,99,219,222,223,228,74,75,76,101,91,92,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[125,8,96,301,28,302,37,303,304,282,285,295,288],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[125,126,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[39,286],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,104,2,105,3,4,106,5,107,108,6,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,7,129,130,131,132,8,133,134,135,136,137,138,139,140,141,142,95,143,144,145,146,147,80,93,148,149,150,151,152,153,154,155,156,9,10,11,12,13,14,15,157,158,159,161,16,17,18,19,81,162,97,163,164,165,166,167,168,169,170,82,20,21,22,23,24,25,26,28,171,172,173,30,174,176,31,83,32,33,98,34,35,177,178,179,180,181,182,183,184,185,186,187,188,84,189,190,37,38,39,191,192,41,42,43,44,45,46,193,194,47,48,195,49,50,51,196,52,53,54,55,56,197,198,199,200,201,202,203,204,205,57,207,208,209,210,211,213,214,215,216,217,218,86,99,219,220,221,222,223,87,62,63,64,65,67,68,69,70,71,72,73,224,227,228,74,88,75,76,100,230,231,232,233,234,235,236,237,238,239,240,241,89,90,101,91,92,242,243,244,102,77,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[125,126,127,305],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11,307,21,308,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[309,161,97,163,168,169,31,32,33,189,205,310,311,99,293,219,222,223,228,74,75,76,101,91,92,312,313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[142,146,156,317],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[133,93,153,318],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.UsageTest.argumentsOrdered":169,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":165,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests2.SerializationTest.testAllMockedMethod":127,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":290,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":269,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests2.UsageTest.wrongArguments":163,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":309,"org.easymock.samples.ExampleTest.answerVsDelegate":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":9,"org.easymock.tests2.UsageConstraintsTest.testNull":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":222,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":60,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.UsageUnorderedTest.message":205,"org.easymock.tests.UsageVerifyTest.twoReturns":92,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests.UsageTest.argumentsOrdered":223,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":281,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.StubTest.stub":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":73,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.tests2.SerializationTest.testClass":125,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":56,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.NameTest.nameForMocksControl":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests.UsageVerifyTest.twoThrows":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests2.CompareToTest.testLessOrEqual":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":70,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.UsageTest.defaultResetToNice":306,"org.easymock.tests2.MockBuilderTest.testCreateMock":282,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":52,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":246,"org.easymock.tests.UsageCallCountTest.tooFewCalls":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":12,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":16,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":14,"org.easymock.tests.MockNameTest.defaultName":316,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":13,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":61,"org.easymock.tests2.CompareToTest.testGreateOrEqual":317,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.NameTest.nameForNiceMock":299,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":110,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":7,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests2.AnswerTest.stubAnswer":159,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":0,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":66,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":55,"org.easymock.tests.UsageExpectAndReturnTest.floatType":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":232,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":42,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.samples.SupportTest.addDocument":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":194,"org.easymock.tests.GenericTest.testPackageScope":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":296,"org.easymock.tests2.NameTest.nameForMock":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":89,"org.easymock.tests.UsageExpectAndReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":50,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":45,"org.easymock.tests.UsageCallCountTest.tooManyCalls":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":68,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":10,"org.easymock.tests2.NameTest.nameForStrictMock":298,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":279,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests.MockTypeTest.fromEasyMockClass":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.UsageConstraintsTest.testOr":140,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.UsageTest.wrongArguments":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":51,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.tests.UsageStrictMockTest.testVerify":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":54,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":111,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":19,"org.easymock.tests2.CompareToTest.testGreateThan":94,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":72,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183}}]
