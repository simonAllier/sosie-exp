[{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:83","failures":[1],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[2],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,12,50,13,51,52,53,54,55,17,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,45,99,100,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[105,47,54,106],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[108,109,110,111,112,113,114,115,116,3,4,117,118,68,119,120,121,122,123,124,125,98,126,127,128,5,6,99,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,10,147,148],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[18,58,149,150,151,152,153,154,108,109,110,155,156,19,20,59,60,21,113,22,157,158,159,160,161,162,163,164,165,166,167,168,114,169,115,23,116,3,4,170,171,61,172,62,63,64,65,66,67,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,68,194,119,120,195,69,121,122,123,196,29,30,31,32,33,197,198,199,200,201,202,203,204,70,205,206,207,208,209,210,211,124,212,213,214,215,216,217,218,219,220,221,222,71,72,73,74,75,76,35,36,223,224,225,226,227,228,229,230,231,232,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,125,233,234,235,236,98,126,237,238,239,240,241,37,38,39,40,41,242,243,244,245,246,247,248,249,42,42,43,43,250,251,252,253,254,255,256,257,258,259,127,260,44,128,5,6,261,262,45,263,264,265,266,267,268,269,99,270,271,129,130,131,272,100,273,132,133,134,135,101,102,103,104,274,275,0,276,277,278,279,280,281,282,283,136,284,285,286,287,137,138,139,288,289,290,291,292,140,293,294,295,296,297,298,299,141,300,142,301,302,303,304,305,306,307,308,309,310,7,311,8,312,313,314,315,316,317,318,9,46,319,320,321,143,322,323,324,144,145,325,326,146,327,328,329,330,331,332,333,334,47,48,10,11,49,12,50,13,14,335,336,337,51,338,52,53,147,54,55,16,106,339,340,341,17,56,57,342,343,344,148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[345,346,347,348,101,278,349,283,136,350,351,284,285,352,353,137,138,139,297,354,141,300,355,342],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[115,3,4,119,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[356,357,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[58,59,71,72,73,74,75,76,101,102,103,104],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[155,156,346,168,196,361,220,221,222,347,348,224,42,42,43,43,250,253,254,362,363,364,263,264,265,266,268,269,103,278,283,365,136,350,284,285,286,287,137,138,366,139,288,289,290,291,292,140,294,295,296,297,298,299,141,300,142,342,344],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[3,367,98,126,5],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[202,243,301,302,304,305,306,148],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[7,8,9,10,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[370,342,343,344],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[47,10,54,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[311,8,313,314,315,316,317,320,147,340],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[115,371,372,119,373,374],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[11,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":74,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":341,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":344,"org.easymock.tests2.DelegateToTest.testReturnException":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":72,"org.easymock.tests.MockingTest.testPartialClassMocking":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":374,"org.easymock.samples.SupportTest.voteForRemovals":256,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":345,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":78,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.UsageExpectAndThrowTest.object":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":35,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":36,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":239,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":263,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":286,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":230,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.CaptureTest.testPrimitive":312,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":166,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":39,"org.easymock.tests2.CaptureTest.testCaptureNone":317,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":111,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":154,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests2.StubTest.stub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":33,"org.easymock.tests.UsageExpectAndThrowTest.longType":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":162,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":342,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":330,"org.easymock.tests.ReplayStateInvalidUsageTest.times":164,"org.easymock.tests.LimitationsTest.mockNativeMethod":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests2.AnswerTest.answer":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":334,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":364,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests2.NameTest.nameForMocksControl":282,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.DelegateToTest.testDelegate":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":287,"org.easymock.tests.MockingTest.testNicePartialClassMocking":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":93,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":296,"org.easymock.tests2.CaptureTest.testCaptureLast":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":269,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests.MockingTest.testTwoMocks":361,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":86,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":56,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":158,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":139,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":223,"org.easymock.tests.UsageExpectAndThrowTest.floatType":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":41,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":290,"org.easymock.samples.PartialClassMockTest.testGetArea":250,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":79,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":284,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.tests2.MockBuilderTest.testCreateMock":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests.UsageVarargTest.differentLength":124,"org.easymock.tests2.CallbackTest.callback":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":87,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":338,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":240,"org.easymock.tests.UsageThrowableTest.throwCheckedException":64,"org.easymock.tests2.EasyMockSupportClassTest.testAll":288,"org.easymock.tests.MockClassControlTest.testEquals":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":333,"org.easymock.tests2.CaptureTest.testCaptureAll":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":265,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":304,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":40,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests2.NameTest.nameForNiceMock":281,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.samples.BasicClassMockTest.testPrintContent":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.DelegateToTest.testStubDelegate":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.AnswerTest.stubAnswer":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":76,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":278,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.SerializationTest.test":343,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":353,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":322,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.samples.SupportTest.addDocument":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":71,"org.easymock.tests2.CaptureTest.testCaptureFirst":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":323,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":319,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":276,"org.easymock.tests2.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests2.NameTest.nameForMock":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":109,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":340,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":94,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":151,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":83,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":264,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.NameTest.nameForStrictMock":280,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":306,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":326,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":349,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":204,"org.easymock.tests.UsageTest.wrongArguments":120,"org.easymock.tests.MockClassControlTest.testHashCode":228,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":224,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":108,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":117,"org.easymock.tests2.UsageConstraintsTest.cmpTo":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":356,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":328,"org.easymock.tests.DefaultClassInstantiatorTest.object":241,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":157,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":119,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.CaptureTest.testCapture":369,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":84,"org.easymock.tests.CapturesMatcherTest.test":368,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":291,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CompareToTest.testGreateThan":105,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":367,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145}}]
