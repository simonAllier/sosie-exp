[{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[36,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,9,55,56,57,58,59,60,10,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,13,132,133,134,135,136,137,138,139,140,141,142,16,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,36,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,11,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,34,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,12,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,14,424,425,17,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,18,19,449,20,450,451,21,22,23,24,25,452,453,454,455,456,457,458,459,460,461,462,26,27,463,28,464,465,29,30,31,32,33,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,0,484,1,2,3,4,5,485,486,6,8,487,488,489],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1832","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[147,190,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[293,293,294,294,494,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[155,156,209,210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[55,10,62,64,65,66,67,68,69,70,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,13,133,137,138,139,140,141,142,16,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,188,189,190,191,192,193,194,195,196,197,198,205,206,208,209,210,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,11,265,266,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,295,315,316,317,318,319,320,321,322,323,349,351,12,352,354,355,356,357,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,418,419,420,421,423,14,424,425,17,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,450,452,453,454,455,456,457,458,459,460,461,464,467,474,478,479,480,481,482,483,0,484,1,2,3,4,5,485,486,6,8,487,488,489],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[62,64,65,68,69,70,71,74,75,76,77,78,95,98,99,100,127,137,145,146,147,148,151,152,153,188,190,191,192,193,194,195,200,203,204,205,206,211,249,258,259,260,268,269,270,299,301,302,306,308,311,312,314,350,354,355,356,357,362,364,365,366,367,371,372,373,374,376,386,389,391,392,394,396,398,399,401,402,406,408,409,410,411,412,420,434,450,451,464,465,470,471,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[495,0,1,2,3,4,5,485,6,7,8,487,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[40,44,45,54,58,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[147,190,490,491,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[434],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":421,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.argumentsOrdered":372,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":50,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":367,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":116,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests.MockClassControlTest.testToString":268,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":262,"org.easymock.tests2.UsageTest.wrongArguments":365,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":81,"org.easymock.samples.ExampleTest.answerVsDelegate":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":109,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":378,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":402,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":273,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":276,"org.easymock.tests.UsageTest.argumentsOrdered":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":224,"org.easymock.tests.UsageVarargTest.varargIntAccepted":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":257,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests.ReplayStateInvalidUsageTest.times":220,"org.easymock.tests2.DependencyTest.testClassMocking":358,"org.easymock.tests2.AnswerTest.answer":452,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":73,"org.easymock.tests2.UsageTest.strictResetToDefault":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.DelegateToTest.testDelegate":483,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.LimitationsTest.mockFinalMethod":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":205,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageThrowableTest.throwError":86,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":214,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":75,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":296,"org.easymock.tests.MockingTest.testInterfaceMocking":106,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests2.UsageTest.niceToStrict":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":40,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":398,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":79,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":432,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":431,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":6,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":124,"org.easymock.tests.MockClassControlTest.testEquals":272,"org.easymock.tests2.EasyMockSupportClassTest.testAll":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.CaptureTest.testCaptureAll":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.MockNameTest.defaultName":211,"org.easymock.tests2.UsageConstraintsTest.testMatches":433,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":277,"org.easymock.samples.ExampleTest.voteForRemovals":287,"org.easymock.tests.UsageVarargTest.allKinds":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":92,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests2.UsageConstraintsTest.greaterThan":435,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":389,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":187,"org.easymock.samples.ExampleTest.voteForRemoval":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":390,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":381,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":83,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":362,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":395,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":115,"org.easymock.tests2.CaptureTest.testCaptureFirst":489,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":396,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":374,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":488,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.UsageTest.moreThanOneArgument":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":69,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":440,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":470,"org.easymock.tests.MockingTest.testNiceClassMocking":110,"org.easymock.tests.MockingTest.testClassMocking":102,"org.easymock.tests2.UsageConstraintsTest.testContains":430,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":460,"org.easymock.tests2.UsageConstraintsTest.testFind":423,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":281,"org.easymock.tests.MockTypeTest.fromEasyMockClass":74,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":351,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":401,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":202,"org.easymock.tests.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":177,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":446,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests.MockClassControlTest.testHashCode":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":417,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":180,"org.easymock.tests2.CaptureTest.testCaptureMultiple":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":61,"org.easymock.tests2.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":404,"org.easymock.tests.DefaultClassInstantiatorTest.object":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":387,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":208,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":346,"org.easymock.tests2.UsageTest.resumeIfFailure":373,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":118,"org.easymock.tests2.StubTest.stubWithReturnValue":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":468,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":10,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":453,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":179,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":438,"org.easymock.tests2.DelegateToTest.testWrongClass":481,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":306,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":144,"org.easymock.tests.UsageUnorderedTest.message":137,"org.easymock.tests.UsageVerifyTest.twoReturns":260,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":67,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":59,"org.easymock.tests2.UsageConstraintsTest.any":428,"org.easymock.tests2.StubTest.stub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":210,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":60,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":218,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":409,"org.easymock.tests2.SerializationTest.testClass":466,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":464,"org.easymock.tests.LimitationsTest.mockNativeMethod":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":412,"org.easymock.tests2.NameTest.nameForMocksControl":357,"org.easymock.tests2.MockedExceptionTest.testMockedException":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":375,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":380,"org.easymock.tests2.CaptureTest.testCaptureLast":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":476,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":439,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":371,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":443,"org.easymock.samples.ExampleTest.removeNonExistingDocument":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":183,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":314,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":447,"org.easymock.tests.UsageVerifyTest.twoThrows":259,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":340,"org.easymock.samples.ExampleTest.voteAgainstRemoval":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":388,"org.easymock.tests.LimitationsTest.privateConstructor":112,"org.easymock.tests2.UsageConstraintsTest.testNotNull":442,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":93,"org.easymock.tests2.UsageTest.defaultResetToNice":370,"org.easymock.samples.ExampleTest.voteAgainstRemovals":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":18,"org.easymock.tests2.CallbackTest.callback":392,"org.easymock.tests2.UsageConstraintsTest.equals":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":384,"org.easymock.tests.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":82,"org.easymock.tests.UsageThrowableTest.throwCheckedException":90,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":475,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":474,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":457,"org.easymock.tests.ObjectMethodsTest.testHashCode":201,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.NameTest.nameForNiceMock":356,"org.easymock.tests2.DependencyTest.testInterfaceMocking":360,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.DelegateToTest.testStubDelegate":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":456,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":309,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":445,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":436,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":87,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":419,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.SerializationTest.test":467,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":182,"org.easymock.tests2.UsageConstraintsTest.testSame":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":332,"org.easymock.tests.GenericTest.testPackageScope":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":108,"org.easymock.tests2.NameTest.nameForMock":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.UsageStrictMockTest.differentMethods":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":461,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":263,"org.easymock.tests2.NameTest.nameForStrictMock":355,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":184,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":301,"org.easymock.tests2.UsageStrictMockTest.range":410,"org.easymock.tests2.UsageConstraintsTest.lessThan":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":48,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":336,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":15,"org.easymock.tests2.UsageConstraintsTest.testOr":425,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":376,"org.easymock.tests.UsageTest.wrongArguments":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":333,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":185,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":68,"org.easymock.tests2.UsageConstraintsTest.cmpTo":429,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests2.CaptureTest.testCaptureFromStub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":213,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":147,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":66,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.CaptureTest.testCapture":7,"org.easymock.tests2.UsageConstraintsTest.constraints":420,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":289,"org.easymock.tests.UsageStrictMockTest.testVerify":196,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":290,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.LimitationsTest.abstractClass":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":399,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":122}}]
