[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,6,7,8,9,10,11,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,12,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,0,1,2,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,14,15,16,17,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[299,300,301,178,302,303,179,304,305,306,307,308,309,310,311,312,180,313,314,315,316,317,181,318,319,0,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[26,27,28,29,31,32,33,34,35,36,37,38,39,40,6,7,8,9,10,11,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,65,77,78,12,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,145,147,148,150,151,152,153,154,156,158,159,163,166,167,168,169,170,171,172,173,174,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,0,1,218,220,221,222,223,227,228,229,231,233,234,235,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,14,15,16,17,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,281,282,285,286,287,288,289,290,291,294,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[330,0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[331,332],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[208,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[335],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[336,337,338,19,3,4,5,339,340,341,26,27,28,29,30,31,32,33,34,35,36,6,7,8,9,10,11,41,42,43,342,45,46,47,48,49,50,51,57,58,61,62,65,343,77,78,12,79,344,345,346,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,347,131,132,133,134,135,136,137,348,349,138,139,140,141,350,351,352,353,329,145,147,148,150,151,152,153,154,156,157,158,158,159,159,163,166,167,168,169,170,171,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,0,1,219,220,222,223,225,227,228,229,231,233,234,235,238,239,240,354,355,241,242,243,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,14,15,16,17,264,265,266,267,268,269,270,271,272,273,356,274,275,276,357,277,278,279,281,282,285,286,287,288,289,290,291,294,296,297],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,46,47,48,49,50,51,78,358,359,360,361,362,125,126,129,133,134,135,136,137,348,145,158,158,159,159,191,192,195,196,197,198,203,205,206,208,209,215,216,217,271,289,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[363,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[42,152,356,274,275,276,357,277],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[47,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[336,337,338,364,365,19,20,21,22,23,24,25,3,4,5,366,367,368,369,370,371,372,373,339,340,341,26,27,28,374,375,376,377,378,379,380,29,30,31,32,33,34,35,36,37,38,39,40,6,7,8,9,10,11,41,381,42,43,382,342,44,45,46,383,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,384,69,70,71,72,73,74,75,76,385,343,386,387,388,77,389,78,12,331,79,80,344,332,358,390,391,392,359,360,393,13,394,395,396,397,398,399,361,400,345,401,402,362,403,404,346,405,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,406,407,408,121,122,409,123,410,411,412,124,125,126,127,128,129,413,414,415,416,417,418,419,420,421,422,423,424,425,363,426,427,428,429,430,431,432,130,347,131,132,133,134,135,136,137,348,433,349,434,435,436,437,438,439,440,441,442,138,139,140,141,350,351,352,353,329,142,143,144,145,146,147,148,149,443,150,151,152,153,154,155,156,444,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,445,173,446,447,174,175,176,177,448,449,299,300,301,178,302,303,179,304,305,306,307,308,309,310,311,312,180,313,314,315,316,317,181,318,319,182,183,184,185,450,186,187,188,334,189,451,190,191,192,193,194,452,195,196,197,198,199,200,453,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,0,1,2,218,454,219,455,456,457,220,221,222,458,223,459,320,224,225,460,226,227,228,229,230,231,232,233,234,235,236,237,238,239,461,462,463,464,465,466,467,240,354,355,241,242,243,244,245,246,247,468,469,470,471,472,248,473,474,475,476,477,478,249,250,251,252,253,254,255,256,257,258,259,260,261,479,480,481,482,483,484,485,486,487,488,262,489,490,491,492,493,494,263,495,496,14,15,16,17,264,265,266,267,268,269,270,271,497,498,272,273,356,274,275,276,357,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,499,292,293,294,295,296,297,298],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,458,320,263,495,500,501,502,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[336,337,338,364,365,19,20,21,22,23,24,25,3,4,5,366,367,368,369,370,371,372,373,339,340,341,26,27,28,374,375,376,377,378,379,380,29,30,31,32,33,34,35,36,37,38,39,40,6,7,8,9,10,11,41,381,42,43,382,342,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,384,69,70,71,72,73,74,75,76,385,343,386,387,388,77,389,78,12,331,79,80,344,332,358,390,391,392,359,360,393,13,394,395,396,397,398,399,361,400,345,401,402,362,403,404,346,405,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,406,407,408,121,122,409,123,410,411,412,124,125,126,127,128,129,414,415,416,417,418,419,421,422,423,424,425,363,426,427,428,429,430,431,432,130,347,131,132,133,134,135,136,137,348,433,349,434,435,436,437,438,439,440,441,442,138,139,140,141,350,351,352,353,329,142,143,144,145,146,147,148,149,443,150,151,152,153,154,155,156,444,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,445,173,446,447,174,175,176,177,448,449,299,300,301,178,302,303,179,304,305,306,307,308,309,310,311,312,180,313,314,315,316,317,181,318,319,182,183,184,185,450,186,187,188,334,189,451,190,191,192,193,194,452,195,196,197,198,199,200,453,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,0,1,2,218,219,455,457,220,221,222,223,320,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,461,465,466,467,240,354,355,241,242,243,244,245,246,247,468,469,470,471,472,248,473,474,475,476,477,478,249,250,251,252,253,254,255,256,257,258,259,260,261,479,480,481,482,483,484,485,486,487,488,262,489,490,491,492,493,494,263,495,14,15,16,17,264,265,266,267,268,269,270,271,497,498,272,273,356,274,275,276,357,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[193,194,196,198,199,453,210,215,278,280,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[208,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[150,158,159,179,180,222,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[425],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[45,46,47,48,49,50,51,78,125,126,129,133,134,135,136,137,145,158,158,159,159,191,192,195,196,197,198,203,205,206,208,209,215,216,217,289,294],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:259","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[191,208,214,505],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[57,61,62,65,139,141,145,227,233,234,239,240,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[10,45,46,47,48,49,50,51,76,78,12,124,125,126,127,128,129,144,145,173,189,190,191,192,193,194,195,196,197,198,199,200,453,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,278,279,280,281,282,283,284,285,286,287,288,289,290,291,499,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[58,60,63,64,124,506,507,508,139,140,141,144,145,147,148,229,230,236,237,480,481,482,483,294,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[509,510,59,144,511,512],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,57,62,140,227,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[514],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":194,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":396,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":160,"org.easymock.tests2.DelegateToTest.testReturnException":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":7,"org.easymock.tests.MockingTest.testPartialClassMocking":121,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":506,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageTest.wrongArguments":230,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":39,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":281,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":135,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":51,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests2.DependencyTest.testClassMocking":497,"org.easymock.tests2.AnswerTest.answer":240,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests2.CaptureTest.testAnd":278,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":368,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests2.DelegateToTest.testDelegate":277,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests.LimitationsTest.mockFinalMethod":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":56,"org.easymock.tests2.DependencyTest.testClassMockingSupport":498,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":433,"org.easymock.tests2.CaptureTest.testCapture1_2446744":282,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":424,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":319,"org.easymock.samples.PartialClassMockTest.testGetArea":150,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":425,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests2.CompareToTest.testLessOrEqual":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":308,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":379,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":37,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":323,"org.easymock.tests.UsageOverloadedMethodTest.overloading":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":317,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":204,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":287,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":384,"org.easymock.tests.MockClassControlTest.testEquals":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests2.CaptureTest.testCaptureAll":279,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":136,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.samples.BasicClassMockTest.testPrintContent":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":11,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":420,"org.easymock.tests2.UsageConstraintsTest.greaterThan":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":177,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":421,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":448,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":6,"org.easymock.tests2.CaptureTest.testCaptureFirst":291,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":108,"org.easymock.tests2.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.CaptureTest.testCapture2_2446744":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":75,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":52,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":213,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":4,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests2.UsageConstraintsTest.testContains":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":195,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":190,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests.UsageExpectAndReturnTest.object":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":70,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":117,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":69,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":413,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":414,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":336,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":3,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests2.UsageTest.resumeIfFailure":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":9,"org.easymock.tests2.StubTest.stubWithReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":458,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":163,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.DelegateToTest.testWrongClass":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":158,"org.easymock.tests.UsageStrictMockTest.range":147,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":466,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":38,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":74,"org.easymock.tests2.ThreadingTest.testThreadSafe":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":313,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":22,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":164,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":8,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests2.NameTest.nameForMocksControl":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":303,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests2.CaptureTest.testCaptureLast":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":349,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":212,"org.easymock.tests.MockingTest.testTwoMocks":408,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":216,"org.easymock.samples.ExampleTest.removeNonExistingDocument":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":435,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests.LimitationsTest.privateConstructor":388,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":335,"org.easymock.tests2.UsageConstraintsTest.testNotNull":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":14,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.UsageVarargTest.differentLength":71,"org.easymock.tests2.CallbackTest.callback":264,"org.easymock.tests2.UsageConstraintsTest.equals":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":446,"org.easymock.tests.UsageTest.openCallCountByLastCall":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":127,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":40,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":243,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":514,"org.easymock.tests2.NameTest.nameForNiceMock":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":314,"org.easymock.tests2.DelegateToTest.testStubDelegate":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.AnswerTest.stubAnswer":242,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":459,"org.easymock.tests.UsageVarargTest.varargLongAccepted":73,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":119,"org.easymock.tests.UsageExpectAndReturnTest.floatType":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests.UsageThrowableTest.noUpperLimit":30,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":209,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":192,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":461,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":102,"org.easymock.tests2.UsageConstraintsTest.testSame":197,"org.easymock.samples.SupportTest.addDocument":162,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":450,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":305,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests2.NameTest.nameForMock":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":460,"org.easymock.tests2.UsageStrictMockTest.differentMethods":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":447,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":132,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":399,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":294,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests2.NameTest.nameForStrictMock":481,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":465,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests2.CaptureTest.testCaptureRightOne":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":309,"org.easymock.tests2.UsageConstraintsTest.testOr":198,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":60,"org.easymock.tests2.MockBuilderTest.testWithConstructor":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":306,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":114,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":23,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":423,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":455,"org.easymock.tests.UsageTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.constraints":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":443,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":161,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":53,"org.easymock.tests2.CompareToTest.testGreateThan":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":49,"org.easymock.tests.LimitationsTest.abstractClass":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":50,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":508,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
