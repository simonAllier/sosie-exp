[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[7,8,9,10,11,12],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,66,67,68,69,70,71,72,73,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,65,99,100,101,4,5],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[69,70,73,105,106,107,108,109,3,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,11,124,125,126,127,128,129,130,131,132,133,134,63,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[136,137,138,139,140,141],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[142],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[144,145,146,147,148,102,149,150,151,152,153,154,155,156,157,117,118,22,120,158,104,121,122,159,160,161,162,163,164,165,166,167,168,169,170,123,171,11,172,125,126,55,12,131,132,133,173,63,135],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[174,175,176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[177,178,179,180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:153","failures":[18,19,20,21,32,33,57,58,59,60,61,62],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[71,72,183,4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[185,186,187,188,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[192],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[193,144,194,195,196,145,146,197,198,147,199,200,201,202,148,203,204,205,206,207,208,209,210,211,212,213,214,215,102,216,217,218,219,220,221,222,223,224,149,225,226,227,151,73,228,229,153,230,231,103,232,233,154,234,155,235,236,14,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,17,20,3,116,117,118,78,81,91,97,252,22,253,119,158,254,23,255,159,160,256,257,258,259,99,260,261,262,100,263,264,265,266,267,268,24,25,26,27,28,29,30,269,270,271,272,177,273,274,275,31,276,277,165,278,279,280,281,282,283,284,285,286,287,288,289,124,125,126,55,130,290,56,173,291,292,293,178,294,295,296,297,298,179,299,300,301,302,303,304,180,181,305,306,134,135,307,308,111,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[224,310],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[311,312,313,314,315,252,316,317,318,319,320,321,322,323,324,325,326,257,327,328,329,330,331,332,333,334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[335],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":203,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":176,"org.easymock.tests.MockingTest.testPartialClassMocking":307,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":35,"org.easymock.tests.UsageExpectAndThrowTest.object":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":127,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":258,"org.easymock.tests2.UsageConstraintsTest.testNull":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests2.CaptureTest.testPrimitive":242,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":54,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":289,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":163,"org.easymock.tests.UsageVerifyTest.twoReturns":135,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests.UsageTest.argumentsOrdered":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":34,"org.easymock.tests2.UsageConstraintsTest.any":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.SerializationTest.testClass":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.ReplayStateInvalidUsageTest.times":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":306,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests2.CaptureTest.testAnd":240,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests2.NameTest.nameForMocksControl":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":39,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":243,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.tests.UsageThrowableTest.throwError":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":0,"org.easymock.tests.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":14,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.samples.ExampleTest.voteAgainstRemoval":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":36,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":66,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.UsageTest.defaultResetToNice":255,"org.easymock.tests2.MockBuilderTest.testCreateMock":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests.UsageVarargTest.differentLength":162,"org.easymock.tests2.CallbackTest.callback":161,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":183,"org.easymock.tests.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests2.ConstraintsToStringTest.nullToString":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":300,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":260,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests.UsageThrowableTest.throwCheckedException":27,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":52,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":186,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":114,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":29,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests2.AnswerTest.stubAnswer":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests2.UsageConstraintsTest.greaterThan":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.samples.ExampleTest.voteForRemoval":266,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":141,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":305,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":330,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":202,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.SerializationTest.test":228,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.tests2.UsageConstraintsTest.testSame":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.CaptureTest.testCaptureFirst":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":83,"org.easymock.tests.GenericTest.testPackageScope":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":248,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":329,"org.easymock.tests2.NameTest.nameForMock":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":169,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":53,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":51,"org.easymock.tests2.UsageStrictMockTest.differentMethods":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":294,"org.easymock.tests.UsageCallCountTest.tooManyCalls":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":40,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":259,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.NameTest.nameForStrictMock":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":204,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndReturnTest.object":299,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.UsageStrictMockTest.range":117,"org.easymock.tests2.UsageConstraintsTest.lessThan":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":281,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":87,"org.easymock.tests2.ConstraintsToStringTest.findToString":192,"org.easymock.tests2.UsageConstraintsTest.testOr":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.UsageTest.wrongArguments":131,"org.easymock.tests2.MockBuilderTest.testWithConstructor":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":84,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":88,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":140,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":166,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.CompareToTest.testLessThan":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests.DefaultClassInstantiatorTest.object":136,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":42,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":296,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146}}]
