[{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,19,3,4,5,6,7,8,9,10,11,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[29,30,5,10,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[33,34,35,36,37,38],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[40,41,42,43,44,45,46],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[47,48,34,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[21,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[53,3,4,54,55,12,56,57,58,18,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.Range:40","failures":[62,63,33,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,0,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,2,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,53,3,4,185,186,187,188,189,190,191,192,193,54,5,6,194,195,7,8,196,197,198,199,200,201,202,47,203,48,204,205,206,9,207,208,10,55,209,11,12,56,210,211,212,213,214,215,216,27,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,23,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,34,373,374,35,36,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,49,61,50,419,420,421,422,423,424,425,426,427,428,429,45,430,431,432,433,434,435,13,436,437,438,439,440,441,442,443,444,57,14,445,28,446,447,448,15,16,449,450,451,452,58,453,17,18,59,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,22,485,20,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,37,504,38,505,46,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[507,485,490,502],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:135","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Method.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[10,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[508,376,377,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[53,4,193,194,195,196,55,34,443,446,447,450,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,63,64,65,67,71,98,99,100,102,105,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,172,174,175,176,177,178,179,180,181,184,53,4,193,54,194,195,196,206,55,11,12,214,215,27,229,231,240,241,243,253,254,255,279,280,281,282,283,299,300,303,308,23,309,310,311,312,315,319,320,321,324,325,327,328,331,332,333,334,336,337,338,339,340,341,342,346,349,359,365,371,34,36,376,377,379,380,381,382,383,384,385,386,387,388,389,390,397,404,405,406,407,409,410,411,61,423,427,429,430,434,443,444,57,445,446,447,448,449,450,58,17,18,460,461,463,469,476,477,478,479,481,482,483,484,22,485,486,487,488,489,490,491,492,493,494,495,496,497,499,500,501,502,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[62,63,33,64,65,67,69,71,73,73,74,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,107,109,0,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,152,153,154,155,156,157,158,159,160,161,162,163,166,167,168,172,173,174,175,176,177,178,179,180,181,182,183,184,53,3,4,185,188,189,190,191,192,193,54,5,6,194,195,7,8,196,197,198,199,200,201,202,47,203,48,204,205,206,9,207,10,55,209,11,12,56,213,214,215,27,236,242,246,253,254,255,256,257,258,259,260,262,265,266,279,280,281,282,283,284,285,286,298,299,300,303,305,306,308,23,309,310,311,312,313,315,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,346,349,359,365,368,369,370,371,372,34,373,374,35,36,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,397,398,404,405,406,407,409,410,411,418,49,61,50,419,420,421,423,424,427,428,429,430,433,434,13,443,444,57,14,445,28,446,447,448,15,16,449,450,451,58,453,17,18,59,454,455,456,457,460,461,462,463,469,470,476,477,478,479,481,482,483,484,22,485,20,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,37,38,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[376,40,41,42,509,510,45,432,505,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[230,418,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":479,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":28,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testReturnException":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":198,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests.MockClassControlTest.testToString":166,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":413,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":78,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":40,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":154,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":190,"org.easymock.tests2.UsageConstraintsTest.testNull":482,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":310,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":388,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":171,"org.easymock.tests2.CaptureTest.testPrimitive":327,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":137,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":397,"org.easymock.tests.ReplayStateInvalidUsageTest.times":275,"org.easymock.tests2.DependencyTest.testClassMocking":458,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":457,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":187,"org.easymock.tests2.CaptureTest.testAnd":324,"org.easymock.tests2.UsageTest.strictResetToDefault":444,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":383,"org.easymock.tests2.DelegateToTest.testDelegate":420,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":93,"org.easymock.tests.LimitationsTest.mockFinalMethod":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":160,"org.easymock.tests2.DependencyTest.testClassMockingSupport":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":328,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":455,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":189,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":62,"org.easymock.tests.MockingTest.testInterfaceMocking":216,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":99,"org.easymock.tests2.UsageTest.niceToStrict":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":79,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":427,"org.easymock.tests2.MockBuilderTest.testCreateMock":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":87,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":490,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":489,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":333,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":290,"org.easymock.tests.MockClassControlTest.testEquals":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureAll":325,"org.easymock.tests.MockNameTest.defaultName":109,"org.easymock.tests2.UsageConstraintsTest.testMatches":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":267,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":298,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":159,"org.easymock.samples.BasicClassMockTest.testPrintContent":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests2.UsageConstraintsTest.greaterThan":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":321,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":151,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":313,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":443,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":381,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":197,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":382,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":450,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests.UsageExpectAndReturnTest.longType":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":96,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":498,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":24,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":405,"org.easymock.tests.MockingTest.testNiceClassMocking":219,"org.easymock.tests.MockingTest.testClassMocking":212,"org.easymock.tests2.UsageConstraintsTest.testContains":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":371,"org.easymock.tests2.UsageConstraintsTest.testFind":481,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests.UsageExpectAndReturnTest.object":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":41,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":138,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.MockClassControlTest.testHashCode":169,"org.easymock.tests2.EasyMockSupportTest.testVerify":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":356,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":25,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":143,"org.easymock.tests2.CaptureTest.testCaptureMultiple":39,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":390,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":365,"org.easymock.tests2.UsageTest.resumeIfFailure":449,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":200,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":119,"org.easymock.tests2.SerializationTest.testAllMockedMethod":378,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":236,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":32,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":90,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":103,"org.easymock.tests.UsageExpectAndThrowTest.object":88,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":496,"org.easymock.tests2.DelegateToTest.testWrongClass":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":441,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":429,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":100,"org.easymock.tests2.CaptureTest.testCaptureNone":332,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":1,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":75,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":240,"org.easymock.tests2.UsageConstraintsTest.any":486,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":273,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests2.SerializationTest.testClass":376,"org.easymock.tests.LimitationsTest.mockNativeMethod":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.NameTest.nameForMocksControl":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":504,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":308,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":430,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.CaptureTest.testCaptureLast":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":411,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":497,"org.easymock.tests.MockingTest.testTwoMocks":213,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":86,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":146,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":340,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":164,"org.easymock.tests.UsageExpectAndThrowTest.floatType":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":359,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":320,"org.easymock.tests.LimitationsTest.privateConstructor":302,"org.easymock.tests2.UsageConstraintsTest.testNotNull":500,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":369,"org.easymock.tests2.UsageTest.defaultResetToNice":448,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":293,"org.easymock.tests2.CallbackTest.callback":368,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":316,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":155,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":30,"org.easymock.tests.MockingTest.testStrictClassMocking":211,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":410,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":409,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":375,"org.easymock.tests2.CompareToTest.testGreateOrEqual":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":43,"org.easymock.tests2.NameTest.nameForNiceMock":416,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":42,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":431,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.floatType":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":477,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":436,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":329,"org.easymock.tests2.SerializationTest.test":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testSame":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":111,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":408,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":351,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":217,"org.easymock.tests2.NameTest.nameForMock":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":435,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":92,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests2.MockedExceptionTest.testRealException":372,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":278,"org.easymock.tests2.NameTest.nameForStrictMock":415,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":426,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":440,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":147,"org.easymock.tests.ErrorMessageTest.testGetters":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":423,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":355,"org.easymock.tests2.UsageConstraintsTest.testOr":484,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":221,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":250,"org.easymock.tests2.UsageConstraintsTest.cmpTo":487,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":447,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":268,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":424,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.constraints":478,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests.UsageStrictMockTest.testVerify":210,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":116,"org.easymock.tests.LimitationsTest.abstractClass":301,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":385,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288}}]
