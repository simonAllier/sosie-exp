[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,0,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[130,202,135,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[210,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[50,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[218,9,10,11,13,14,17,18,44,45,47,48,115,116,121,122,125,127,128,219,220,221,222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[223,224,225,44,226,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[228,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[230,230,231,231,2,3,4,5,6,7,8,232,233,234,235,236,9,10,11,12,13,15,16,19,237,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,238,239,240,241,242,243,50,244,51,52,245,53,54,246,247,228,55,248,249,250,251,252,253,254,56,57,58,59,60,255,256,257,258,259,260,261,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,214,217,87,262,88,89,90,91,92,93,263,94,95,264,265,266,267,268,269,270,96,271,97,98,99,100,272,101,102,273,103,104,105,106,274,275,107,276,108,109,110,111,112,113,114,115,117,119,120,200,277,123,125,127,128,130,131,278,279,132,133,134,135,136,280,137,138,139,281,140,141,142,143,144,145,146,147,148,149,150,151,282,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,0,172,173,174,175,176,177,178,179,180,283,181,182,284,183,285,286,287,288,184,185,186,188,189,289,290,192,193,291,292,293,194,294,195,196,197,295,198,296,297,199,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[298,299,2,300,4,5,6,7,301,8,232,233,234,235,302,303,304,305,306,307,308,309,310,311,312,313,236,9,10,11,12,13,225,14,15,16,17,18,19,314,237,315,316,317,318,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,319,44,45,46,47,48,49,320,238,239,240,242,50,244,51,52,245,53,54,321,322,323,324,325,246,326,247,228,327,55,328,249,250,251,252,253,254,56,57,58,59,60,329,330,331,332,333,255,256,257,334,258,335,336,337,338,339,340,261,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,341,214,217,342,343,344,345,346,87,262,88,89,90,91,92,93,263,94,95,264,265,266,267,268,269,270,96,271,97,98,99,100,272,101,102,273,103,104,105,106,274,275,107,276,108,109,347,110,111,112,113,114,115,116,117,118,119,120,200,121,122,277,123,124,348,125,126,127,128,129,130,219,220,221,222,131,278,279,132,133,134,349,350,351,352,136,148,151,282,152,153,154,155,156,157,158,159,160,161,162,163,164,353,165,166,167,168,169,170,171,0,172,173,174,175,354,176,177,178,179,180,181,184,355,185,186,187,188,189,190,191,289,290,192,193,291,292,293,194,356,294,195,196,197,295,198,296,297,199,229],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[130,357,205,206,207,358,359,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,247,360,195,197,295,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[158,163,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[361],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[3,362,363,260,135,364,365,281,366,140,141,142,143,367,368,369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[365,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[118,171,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":176,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.tests.MockingTest.testPartialClassMocking":20,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":227,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":278,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":243,"org.easymock.tests.UsageExpectAndThrowTest.object":73,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":205,"org.easymock.tests2.DelegateToTest.testWrongClass":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":324,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":323,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":223,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests.UsageUnorderedTest.message":86,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":337,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":364,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":53,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":360,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests.UsageExpectAndThrowTest.longType":66,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":42,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":352,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests2.NameTest.nameForMocksControl":222,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":265,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":67,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":357,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":333,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":178,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":316,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":368,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":270,"org.easymock.tests.UsageExpectAndThrowTest.floatType":65,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":171,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":57,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":64,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":38,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":61,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":168,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":325,"org.easymock.tests.UsageThrowableTest.throwCheckedException":90,"org.easymock.tests2.EasyMockSupportClassTest.testAll":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.MockNameTest.defaultName":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.testMatches":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":358,"org.easymock.tests2.NameTest.nameForNiceMock":221,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":332,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":92,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":209,"org.easymock.tests2.UsageConstraintsTest.greaterThan":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":288,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.SerializationTest.test":136,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":204,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":24,"org.easymock.tests2.UsageConstraintsTest.testSame":161,"org.easymock.samples.SupportTest.addDocument":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":294,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":30,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.UsageTest.moreThanOneArgument":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":264,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":143,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":339,"org.easymock.tests2.NameTest.nameForMock":219,"org.easymock.tests.UsageExpectAndReturnTest.longType":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":329,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":367,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":79,"org.easymock.tests2.UsageStrictMockTest.differentMethods":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":27,"org.easymock.tests.UsageCallCountTest.tooManyCalls":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":258,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.UsageConstraintsTest.testContains":167,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests2.UsageConstraintsTest.testFind":159,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests.MockTypeTest.fromEasyMockClass":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageExpectAndReturnTest.object":33,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":281,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":208,"org.easymock.tests2.CaptureTest.testCaptureRightOne":193,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests2.UsageConstraintsTest.testOr":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":202,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":247,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockSupportTest.testVerify":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":36,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":233,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":89,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":37,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":286,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.tests.UsageStrictMockTest.testVerify":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":255,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":330,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":59,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":55,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
