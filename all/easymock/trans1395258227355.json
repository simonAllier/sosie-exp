[{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[7,8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,3,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,7,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,1,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,0,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,8,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,4,264,5,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,6,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[98,99,105,106,127,128,129,130,223,225,226,288,290,293,294,489,490,491,366,367,368,378,459,460,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,241,242,492],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[12,13,43,46,51,493,56,494,495,78,83,84,180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[496],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[99,105,106,225,289,290,293,294,340,367,368,378,459,462,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[12,13,43,46,51,7,493,56,494,495,78,83,84,180,181,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[51,499,500,501,502,503,181],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[22,42,507,44,45,48,49,50,52,54,55,508,57,169,8,246,251,272],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[3,86,117,119,131,132,133,134,136,137,1,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,171,183,184,185,0,186,187,188,189,190,191,192,193,194,195,223,254,255,256,257,258,285,296,297,298,299,300,365,378,455,456,459,460,466,467],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[133,134,137,138,139,141,151,156,183,185,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[509,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[171,172,173,174,175,176,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[510,511,512,513,514,515],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[138,142,184,189,190,195,223,254,255,256,257,258,285,296,297,298,299,300,378,455,456,460,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[98,223,226,227,288,339,366,367,368,396,401,405,406,408,411,460,463,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[15,85,120,122,125,334,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":344,"org.easymock.tests.MockClassControlTest.testToString":449,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":126,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":489,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":251,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests2.CaptureTest.testPrimitive":0,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":416,"org.easymock.tests.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":443,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":503,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.DependencyTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":2,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":162,"org.easymock.tests2.CaptureTest.testAnd":183,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":248,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":371,"org.easymock.tests2.DelegateToTest.testDelegate":75,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":412,"org.easymock.tests.LimitationsTest.mockFinalMethod":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":263,"org.easymock.tests2.DependencyTest.testClassMockingSupport":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":394,"org.easymock.tests2.CaptureTest.testCapture1_2446744":186,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":160,"org.easymock.tests.UsageThrowableTest.throwError":301,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":250,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":446,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":445,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":220,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":346,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":398,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":406,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":479,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests.MockClassControlTest.testEquals":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":199,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":414,"org.easymock.tests2.CaptureTest.testCaptureAll":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":261,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":365,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":366,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":65,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":177,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":27,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":498,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":475,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests.GenericTest.testBridgedEquals":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":471,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":259,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":508,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":415,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":441,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":402,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":77,"org.easymock.tests.MockingTest.testNiceClassMocking":350,"org.easymock.tests.MockingTest.testClassMocking":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":507,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":333,"org.easymock.tests.MockTypeTest.fromEasyMockClass":249,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":119,"org.easymock.tests.UsageExpectAndReturnTest.object":478,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":278,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":4,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":484,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":336,"org.easymock.tests.MockClassControlTest.testHashCode":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":59,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":209,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":86,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":310,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":328,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":276,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":485,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":243,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":218,"org.easymock.tests2.UsageTest.resumeIfFailure":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":477,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests2.SerializationTest.testAllMockedMethod":242,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":409,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.UsageExpectAndThrowTest.object":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":5,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":466,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":467,"org.easymock.tests.UsageStrictMockTest.range":462,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":92,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":408,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":196,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests2.CaptureTest.testCaptureNone":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":511,"org.easymock.tests.UsageUnorderedTest.message":378,"org.easymock.tests.UsageVerifyTest.twoReturns":368,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":213,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":279,"org.easymock.tests2.CaptureTest.testCapture_2617107":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":487,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":512,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":201,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":401,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":118,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":30,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":405,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":515,"org.easymock.samples.ExampleTest.removeNonExistingDocument":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":60,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":514,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":28,"org.easymock.tests2.MockBuilderTest.testCreateMockString":57,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":447,"org.easymock.tests.UsageExpectAndThrowTest.floatType":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":203,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":182,"org.easymock.tests.UsageVerifyTest.twoThrows":367,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.UsageTest.defaultResetToNice":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.UsageConstraintsTest.equals":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":513,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests.MockingTest.testStrictClassMocking":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":456,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":502,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":29,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":214,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":460,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":53,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":486,"org.easymock.tests.UsageExpectAndReturnTest.floatType":470,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":302,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":87,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":241,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":469,"org.easymock.tests2.UsageConstraintsTest.testSame":1,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":80,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":204,"org.easymock.tests.GenericTest.testPackageScope":270,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":66,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":348,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":480,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":56,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":411,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":372,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":255,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":91,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":44,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests2.CaptureTest.testCaptureRightOne":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":208,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":510,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":205,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests2.CompareToTest.testLessThan":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":45,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":459,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":482,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":461,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.samples.ExampleTest.addAndChangeDocument":21,"org.easymock.tests.UsageStrictMockTest.testVerify":465,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":260,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":474,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
