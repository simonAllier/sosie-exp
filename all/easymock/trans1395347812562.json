[{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[2,3,4,5,6,7,8,8,9,9],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[76,77,78,79,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[81,82,83,84,85,86,3,4,6,7],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[76,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,4,110,111,112,113,114,115,116,10,117,118,119,6,120,121,77,122,78,0,123,11,124,125,126,127,128,129,130,131,132,133,134,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,135,136,137,138,139,140,141,142,143,144,145,43,44,46,47,50,51,52,53,54,55,56,146,147,148,149,150,151,152,153,154,155,156,157,158,159,8,8,9,9,160,161,162,163,164,165,166,167,168,57,58,169,170,171,172,173,79,80,174,175,59,60,61,62,63,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,65,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,66,246,247,248,249,67,68,69,70,71,250,251,252,253,254,255,256,257,258,259,72,260,261,262,263,264,265,266,267,268,269,270,73,74,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[272,93,273,94,274,95,96,275,97,276,4,277,111,112,114,115,116,278,10,279,117,118,119,280,6,135,136,137,138,147,148,149,150,152,153,156,8,8,9,9,160,281,282,283,284,285,286,287,288,289,290,176,177,291,178,292,293,212,213,214,250,294,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[76,89,90,91,92,272,93,273,297,94,274,275,97,276,4,110,277,111,112,113,114,115,116,278,10,298,279,117,118,119,299,6,77,122,78,123,300,301,11,302,124,125,303,304,305,306,307,308,126,127,128,309,129,310,130,131,132,311,312,133,134,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,139,141,142,143,144,145,43,44,45,46,47,48,49,50,51,52,53,54,55,56,313,314,315,316,148,149,152,153,154,155,156,157,158,159,317,318,319,320,162,163,164,165,321,166,322,167,323,324,168,325,326,327,328,329,330,57,58,169,170,171,172,173,283,284,285,286,287,288,289,290,79,331,80,174,175,332,59,60,61,62,63,176,177,291,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,333,334,212,213,335,214,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,215,351,352,353,64,65,354,216,217,355,356,357,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,358,359,243,244,360,361,245,66,246,247,248,249,67,68,69,70,71,250,256,257,258,259,72,260,362,363,364,365,366,367,368,369,370,371,372,373,265,266,267,268,269,270,73,74,374,375,376,377,378,379,380,381,382,383,75,295,384,385,296,386,387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[126,131,154,155,156,157,159,58,174,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,210,211,241,244,69,70,256,257,258,259,72,260,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[112,279,119,388,389,390,149,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[76,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,4,110,111,112,113,114,115,116,10,117,118,119,6,120,121,77,122,78,0,123,11,124,125,126,127,128,129,130,131,132,133,134,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,135,136,137,138,139,140,141,142,143,144,145,43,44,46,47,50,51,52,53,54,55,56,146,147,148,149,150,151,152,153,154,155,156,157,158,159,8,8,9,9,160,161,162,163,164,165,166,167,168,57,58,169,170,171,172,173,79,80,174,175,59,60,61,62,63,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,65,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,66,246,247,248,249,67,68,69,70,71,250,251,252,253,254,255,256,257,258,259,72,260,261,262,263,264,265,266,267,268,269,270,73,74,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[81,82,83,85,86,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[272,93,273,94,274,95,96,275,97,276,4,277,111,112,114,115,116,278,10,279,117,118,119,280,6,135,136,137,138,147,148,149,150,152,153,156,8,8,9,9,160,281,282,283,284,285,286,287,288,289,290,176,177,291,178,292,293,212,213,214,250,294,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[81,82,83,392,393,86,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,13,14,17,18,19,20,26,28,29,31,32,38,39,40,54,159,8,8,9,9,57,169,170,171,172,173,59,60,61,62,63,395,396,397,398,399,65,67,68,71,73,74,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[400,401,402,403,404],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[76,89,90,91,92,272,93,94,274,95,96,275,97,276,98,99,100,101,102,103,104,105,106,107,108,109,405,4,110,277,111,112,113,114,115,116,278,10,279,117,118,119,6,120,77,122,78,123,300,301,11,302,124,125,303,126,127,128,309,129,310,130,131,132,311,312,133,134,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,136,137,138,139,140,141,142,143,144,145,43,44,45,46,47,48,49,50,51,52,53,54,55,56,313,314,315,316,146,147,148,149,150,151,152,153,154,155,156,157,158,159,8,9,406,160,407,408,161,162,163,164,165,321,166,167,281,282,168,325,326,327,328,329,330,57,58,169,170,171,172,173,79,80,174,332,59,60,61,62,63,176,177,291,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,352,353,64,65,354,216,217,355,409,409,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,358,359,243,244,360,361,245,66,246,248,249,67,68,69,70,71,250,256,257,258,259,72,260,365,366,367,368,369,370,371,372,373,265,266,267,268,269,270,73,74,374,375,376,377,378,379,380,381,382,383,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[15,16,18,19,20,23,33,38,39,43,45,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.UsageTest.argumentsOrdered":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":310,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":406,"org.easymock.tests2.DelegateToTest.testReturnException":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":257,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.tests.MockClassControlTest.testToString":285,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":367,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":290,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageTest.argumentsOrdered":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":63,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":316,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":160,"org.easymock.tests.MockingTest.testInterfaceMocking":335,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":365,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":135,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":394,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":75,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":268,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":372,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":210,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":278,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":256,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":329,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":36,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":330,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":156,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":42,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":82,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":80,"org.easymock.tests.MockClassControlTest.testHashCode":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":182,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":12,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":181,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.CapturesMatcherTest.test":409,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":286,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":259,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":179,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":87,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":216,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":366,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":240,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":270,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":24,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":155,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":215,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":322,"org.easymock.tests.UsageStrictMockTest.differentMethods":217,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":283,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":269,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":137,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":238,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":211,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":208,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":83,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":2,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":205,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":408,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":308,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":318,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":84,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.UsageConstraintsTest.cmpTo":25,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":88,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":273,"org.easymock.tests.UsageTest.unexpectedCallWithArray":358,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":354,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests.UsageStrictMockTest.testVerify":356,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":407,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":370,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
