[{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[63,64,65,66,67,68,69,70,71,72,0,1,73,74,2,3,4,75,76,5,77,6,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,7,8,9,10,96,97,11,12,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,13,149,150,14,151,152,153,154,155,156,157,158,159,15,160,161,162,163,164,16,165,166,167,168,169,170,171,172,173,174,58,175,176,177,178,179,59,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,17,240,18,241,242,243,60,244,245,23,246,25,26,247,248,27,28,29,249,30,250,251,31,32,252,34,35,36,253,37,38,39,40,254,41,255,256,42,43,44,45,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,46,47,48,274,49,275,276,277,278,50,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,51,336,337,338,339,340,341,342,52,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,62,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,53,54,55,450,56,451,452,453,454,455,456,457,458,459,460,461,462,463,57,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[63,64,65,66,67,68,69,70,71,72,0,1,73,74,2,3,3,4,4,75,76,5,77,6,78,80,81,82,83,84,85,86,87,88,89,90,91,94,95,9,10,97,11,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,13,150,14,152,153,156,157,158,159,15,161,164,16,165,166,167,168,169,170,171,172,173,174,58,175,176,177,178,179,59,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,234,236,237,238,239,17,240,18,241,242,243,60,244,245,25,248,27,28,29,251,31,35,36,253,37,38,39,40,41,255,256,42,43,44,45,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,46,47,48,274,277,50,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,51,336,337,338,339,340,341,342,52,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,62,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,53,54,55,450,56,451,452,453,454,455,456,457,458,459,460,461,462,463,57,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,486,487,489,491,492,493],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[494,495,254],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[242,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[496,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[494,495,254],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[113,124,136,241,290,291,319,333,418],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[78,498,499,500,501,502,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[115,127,133,134,288,290,291,318,321,327,328,331,332,503,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[64,65,66,67,69,71,74,2,3,3,4,4,75,76,5,77,6,85,94,95,7,8,9,10,97,11,12,104,113,115,116,123,124,125,126,128,130,131,132,135,136,137,138,13,14,15,16,167,168,169,170,171,172,173,174,58,176,177,178,179,59,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,204,206,207,208,209,210,211,212,213,214,216,217,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,17,240,241,242,243,60,244,245,25,27,29,30,32,35,36,253,37,38,39,41,43,44,45,259,260,261,266,267,268,269,270,271,272,46,48,286,287,288,289,290,291,308,314,319,321,322,325,326,329,330,333,51,337,338,339,340,341,342,52,361,363,364,366,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,54,55,56,456,471,473,474,475,476,477,478,479,480,492],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[137,307,314,351,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[188,504,505,506,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,240,18,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[113,115,116,126,127,133,134,200,201,202,203,288,289,290,291,318,319,321,322,326,328,331,332,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[204,205],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[512,513],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,0,1,73,74,2,3,3,4,4,75,76,5,77,6,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,7,8,9,10,97,11,12,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,148,13,149,150,14,151,152,153,154,155,156,157,158,159,15,160,161,162,163,164,16,165,166,167,168,169,170,171,172,173,174,58,175,176,177,178,179,59,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,17,240,18,241,242,243,60,244,245,23,25,26,248,27,28,29,30,251,31,32,34,35,36,253,37,38,39,40,254,41,255,256,42,43,44,45,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,46,47,48,274,49,277,278,50,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,51,336,337,338,339,340,341,342,52,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,62,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,53,54,55,450,56,451,452,453,454,455,456,457,458,459,460,461,462,463,57,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,486,487,489,491,492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[174,58,176,177,178,179,59,180,181,182,191,192,196,197,213,214,215,216,223,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[92,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,71,72,0,1,73,74,2,3,3,4,4,75,76,5,77,6,85,94,95,7,8,9,10,97,11,12,104,111,112,113,114,115,116,117,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,13,14,15,16,167,168,169,170,171,172,173,174,58,176,177,178,179,59,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,17,240,18,241,242,243,60,244,245,25,27,29,30,32,35,36,253,37,38,39,41,43,44,45,259,260,261,266,267,268,269,270,271,272,46,47,48,286,287,288,289,290,291,308,314,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,51,337,338,339,340,341,342,52,361,362,363,364,365,366,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399,402,403,404,405,406,408,409,410,411,412,413,414,62,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,54,55,56,454,456,457,458,459,461,462,471,473,474,475,476,477,478,479,480,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[2,27,29,30,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[78,498,499,500,501,502,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[504,505,318,327,514,506],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[174,58,177,179,59,181,191,196,213,215,223],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[207,209,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[515],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":63,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":338,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":464,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":199,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":425,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":509,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":368,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":236,"org.easymock.tests2.CaptureTest.testPrimitive":216,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":371,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":444,"org.easymock.tests.UsageTest.moreThanOneArgument":326,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":475,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":397,"org.easymock.tests.UsageTest.argumentsOrdered":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":376,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.ReplayStateInvalidUsageTest.times":357,"org.easymock.tests2.DependencyTest.testClassMocking":92,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests2.CaptureTest.testAnd":213,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":276,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":401,"org.easymock.tests2.DelegateToTest.testDelegate":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":440,"org.easymock.tests.LimitationsTest.mockFinalMethod":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.DependencyTest.testClassMockingSupport":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":491,"org.easymock.tests2.CaptureTest.testCapture1_2446744":217,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":120,"org.easymock.tests.UsageThrowableTest.throwError":416,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":278,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":166,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":155,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":348,"org.easymock.tests2.ThreadingTest.testChangeDefault":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":88,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":434,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":186,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":388,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":512,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":185,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests.MockClassControlTest.testEquals":468,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":442,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":121,"org.easymock.tests2.CaptureTest.testCaptureAll":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests.MockNameTest.defaultName":415,"org.easymock.tests2.UsageConstraintsTest.testMatches":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":289,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":422,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":106,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":342,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":279,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":337,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":207,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":230,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":384,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":414,"org.easymock.tests.GenericTest.testBridgedEquals":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":461,"org.easymock.tests.UsageExpectAndReturnTest.longType":380,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":443,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":424,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":441,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":473,"org.easymock.tests.UsageCallCountTest.tooManyCalls":462,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":430,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":421,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":8,"org.easymock.tests.MockingTest.testClassMocking":449,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":184,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":24,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":5,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests.UsageExpectAndReturnTest.object":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":89,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":515,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":409,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":363,"org.easymock.tests.MockClassControlTest.testHashCode":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":100,"org.easymock.tests2.EasyMockSupportTest.testVerify":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":157,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":118,"org.easymock.tests.UsageVarargTest.varargCharAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":482,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":238,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":419,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":394,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":478,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":16,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":340,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":437,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":472,"org.easymock.tests.UsageExpectAndThrowTest.object":435,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":321,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":144,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":514,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":447,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.UsageUnorderedTest.message":288,"org.easymock.tests.UsageVerifyTest.twoReturns":291,"org.easymock.tests.UsageVarargTest.varargByteAccepted":413,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":160,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":370,"org.easymock.tests2.UsageConstraintsTest.any":182,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":480,"org.easymock.tests.UsageExpectAndThrowTest.longType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":396,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":82,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests2.NameTest.nameForMocksControl":203,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":429,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":205,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":80,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":433,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":197,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":87,"org.easymock.tests.UsageStrictMockTest.differentMethods":322,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":101,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":497,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":79,"org.easymock.tests.UsageVerifyTest.twoThrows":290,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":15,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests.LimitationsTest.privateConstructor":335,"org.easymock.tests2.UsageConstraintsTest.testNotNull":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":423,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":81,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.UsageConstraintsTest.equals":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":369,"org.easymock.tests.UsageCallCountTest.tooFewCalls":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":448,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":97,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.ObjectMethodsTest.testHashCode":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":202,"org.easymock.tests2.DependencyTest.testInterfaceMocking":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":319,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":412,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":395,"org.easymock.tests.UsageExpectAndReturnTest.floatType":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":108,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":173,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests2.SerializationTest.test":240,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":513,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":483,"org.easymock.tests2.UsageConstraintsTest.testSame":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":378,"org.easymock.samples.SupportTest.addDocument":73,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":96,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":152,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":389,"org.easymock.tests2.UsageStrictMockTest.differentMethods":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":439,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":360,"org.easymock.tests2.NameTest.nameForStrictMock":201,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":248,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":143,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":115,"org.easymock.tests2.UsageConstraintsTest.lessThan":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":156,"org.easymock.tests2.CaptureTest.testCaptureRightOne":223,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":179,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.MockBuilderTest.testWithConstructor":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":153,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":293,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":487,"org.easymock.tests.UsageVarargTest.varargShortAccepted":411,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":183,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":350,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":327,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":391,"org.easymock.tests2.UsageConstraintsTest.constraints":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":320,"org.easymock.samples.ExampleTest.addAndChangeDocument":71,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":374,"org.easymock.tests.LimitationsTest.abstractClass":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":383,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":375,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":233}}]
