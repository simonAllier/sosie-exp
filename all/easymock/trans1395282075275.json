[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,2,3,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,4,255,256,257,5,6,258,7,259,260,8,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,1,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,9,340,341,342,10,11,343,12,344,345,13,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,0,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,14,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,15,16,429,430,431,432,433,434,435,436,17,437,438,18,19,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[240,453,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[455,456,457,458,459,460,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[413],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[462],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[463,36,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,100,101,103,104,107,108,109,110,111,112,113,114,115,116,118,125,126,127,129,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,156,164,167,171,174,175,176,186,187,193,210,219,223,2,3,227,233,255,256,257,258,7,259,260,8,275,276,277,278,292,308,322,323,326,327,328,331,332,335,352,353,354,356,358,359,368,370,371,372,373,374,375,385,390,427,15,16,441,443],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[464,465,466],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[467,468,469,470,329,426],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[471,100,101,102,103,104,105,106,107,109,472,110,111,112,113,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[474,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,463,36,37,44,46,51,57,58,60,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,93,94,95,100,101,102,103,105,106,107,108,109,110,113,114,115,118,120,121,124,125,126,127,128,129,130,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,153,156,158,159,161,163,164,165,166,167,168,171,174,175,176,179,180,477,181,182,478,479,186,187,193,201,202,203,204,480,210,219,221,222,223,224,2,3,225,226,227,233,481,482,483,251,252,253,254,4,255,256,257,5,6,258,7,259,260,8,261,262,263,264,265,275,276,277,278,1,288,294,295,296,298,299,300,301,302,303,304,305,306,307,309,322,323,324,325,326,327,328,330,333,334,335,336,337,338,339,9,340,341,342,10,11,343,12,344,345,13,346,347,348,349,350,352,353,354,355,356,369,370,378,385,387,388,389,390,391,423,424,425,426,427,428,15,16,429,435,444,446,447,448,449,451,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[79,85,101,102,104,105,106,107,108,113],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[253,4,264,265,306,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[287,290],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[484,485,28,29,32,37,38,39,42,44,45,47,48,49,50,52,53,56,163,164,166,167,168,169,171,172,173,174,175,176,177,178,179,180,477,181,478,479,217,218,219,236,237,238,239,240,241,243,244,245,246,481,482,483,250,279,280,281,282,283,284,285,286,287,1,288,290,309,376,377,378,379],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[91,94,95,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[226,325,406,413],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[484,484,485,485,28,29,32,463,37,38,39,42,43,487,44,488,45,46,47,48,489,490,49,491,492,50,493,51,52,53,54,55,56,57,494,495,152,496,497,153,154,498,155,156,157,158,455,159,499,160,161,500,501,162,163,164,166,167,168,169,171,502,172,173,174,175,176,177,178,179,180,477,181,478,479,503,504,480,461,505,217,218,219,235,236,237,238,239,240,241,242,243,244,245,246,481,482,483,250,274,279,280,281,282,283,284,285,286,287,1,288,289,290,309,360,0,376,377,378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[20,22,23,24,25,27,28,29,30,31,33,34,35,37,58,60,72,73,85,86,93,101,102,105,106,107,108,113,114,128,130,134,135,141,147,148,149,150,153,156,161,201,202,203,204,221,222,223,224,2,3,225,226,288,294,295,296,298,299,300,301,302,303,304,305,306,309,324,325,330,333,334,369,393,14,403,408,409,423,424,425,426,427,428,15,16,429,430,437,438,444,446,447,448,449,451,452],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[117,291,293,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[484,484,485,485,61,62,66,67,68,69,75,77,78,80,81,87,88,89,111,223,227,233,306,307,308,322,323,326,387,388,389,390,391,392,396,397,405,410,427,439,440,441,442,443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[20,21,22,23,24,25,27,30,31,33,34,35,36,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,165,182,186,187,193,194,506,507,201,202,203,204,210,211,217,218,219,220,221,222,223,224,2,3,225,226,227,228,229,230,231,232,233,234,236,251,252,253,254,4,255,256,257,5,6,258,7,259,260,8,261,262,263,264,265,266,267,269,270,271,272,273,275,276,277,278,292,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,9,340,341,342,10,11,343,12,344,345,13,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,380,381,382,383,384,385,386,387,388,389,390,391,407,413,415,416,417,418,419,420,421,422,423,424,425,426,427,428,15,16,429,430,431,432,433,434,435,436,17,437,438,18,19,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[240,453,454],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[100,102,103,104,105,106,107,109,472,110,111,113],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[253,4,264,265,306,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,35,463,36,37,58,60,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,152,153,156,157,160,161,162,163,164,165,166,167,168,169,171,173,174,175,176,180,477,478,479,186,201,202,203,204,480,217,218,219,220,221,222,223,224,2,3,225,226,227,228,229,230,231,233,234,236,481,482,483,251,252,253,254,4,255,256,257,5,6,258,7,259,260,8,261,262,263,264,265,267,270,271,272,275,276,277,278,279,280,281,282,283,284,285,286,1,288,294,295,296,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,9,340,341,342,10,11,343,12,344,345,13,346,347,348,349,350,351,352,353,354,355,356,368,369,370,371,372,373,374,375,378,380,381,382,383,385,386,387,388,389,390,391,415,416,417,418,419,423,424,425,426,427,428,15,16,429,430,431,432,433,434,435,436,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[236,237,241],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[484,485,463,496,498,455,499,500,502,480,461,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[32,463,152,497,153,154,156,157,158,159,160,161,501,162,169,289,360,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[125,132,217,218,219,220,227,234,324,325,327,332,336,337,338,339,9,340,341,342,10,11,343,12,344,345,13,346,347,348,349,350,353,370,374,375,383,431,432,433,434,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests2.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":401,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":130,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":31,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":432,"org.easymock.tests.MockingTest.testPartialClassMocking":481,"org.easymock.tests.MockClassControlTest.testToString":281,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":336,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":456,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":322,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":0,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":286,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":326,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":17,"org.easymock.tests.UsageTest.argumentsOrdered":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":296,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":460,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":391,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests.ReplayStateInvalidUsageTest.times":318,"org.easymock.tests2.DependencyTest.testClassMocking":184,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":99,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":346,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":419,"org.easymock.tests2.DependencyTest.testClassMockingSupport":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":266,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":97,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":312,"org.easymock.tests.UsageThrowableTest.throwError":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":362,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":313,"org.easymock.tests2.CompareToTest.testLessOrEqual":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":156,"org.easymock.tests2.MockBuilderTest.testCreateMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":467,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":11,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":444,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":7,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":453,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":297,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":285,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":417,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":98,"org.easymock.tests.MockNameTest.defaultName":232,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":310,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":418,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":374,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":436,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":125,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":431,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":119,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.UsageTest.moreThanOneArgument":127,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":451,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":349,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":452,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":373,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests.MockingTest.testNiceClassMocking":250,"org.easymock.tests.MockingTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":445,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":353,"org.easymock.tests.MockTypeTest.fromEasyMockClass":361,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageExpectAndReturnTest.object":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":457,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":461,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests.MockClassControlTest.testHashCode":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":151,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":506,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":235,"org.easymock.tests2.CaptureTest.testCaptureMultiple":471,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":475,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":420,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.CapturesMatcherTest.test":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":282,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":434,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":455,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":407,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":468,"org.easymock.samples.SupportTest.voteForRemovals":34,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":413,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":91,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":293,"org.easymock.tests.UsageExpectAndThrowTest.object":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":307,"org.easymock.samples.ConstructorCalledMockTest.testTax":484,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":40,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":320,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":469,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":465,"org.easymock.tests.UsageUnorderedTest.message":423,"org.easymock.tests.UsageVerifyTest.twoReturns":356,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":449,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":325,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndThrowTest.longType":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":240,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":316,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.SerializationTest.testClass":463,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests.LimitationsTest.mockNativeMethod":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":190,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":45,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":159,"org.easymock.tests.MockingTest.testNicePartialClassMocking":482,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CompareToTest.testNotComparable":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":188,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":479,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":246,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":10,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":26,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":195,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":466,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":238,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":162,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":338,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":505,"org.easymock.tests.UsageVerifyTest.twoThrows":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":377,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":375,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":189,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":502,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":324,"org.easymock.tests.UsageCallCountTest.tooFewCalls":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":470,"org.easymock.tests.MockingTest.testStrictClassMocking":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":478,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":182,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.ObjectMethodsTest.testHashCode":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests2.NameTest.nameForNiceMock":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":458,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":427,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":480,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":485,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":38,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":454,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":237,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":33,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":48,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":248,"org.easymock.tests2.NameTest.nameForMock":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":500,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":13,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":323,"org.easymock.tests2.NameTest.nameForStrictMock":202,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":39,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":153,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":491,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":464,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":330,"org.easymock.tests2.MockBuilderTest.testWithConstructor":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":489,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":260,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":450,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":311,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":154,"org.easymock.tests.UsageTest.unexpectedCallWithArray":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":8,"org.easymock.tests2.CaptureTest.testCapture":472,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":428,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":27,"org.easymock.tests.UsageStrictMockTest.testVerify":430,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":30,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.LimitationsTest.abstractClass":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":390,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":295}}]
