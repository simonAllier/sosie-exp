[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"this","methodName":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[31,86,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[35,87,88,89,90,39,42,91,47,92,93,94,95,96,48,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,63,66,120,121,122,123,124,125,126,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[91,92],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[9,129,13,130,131,132,133,134,135],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[19,136],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[9,129,10,11,12,13,130,137,131,14,132,138,21,22,133,29,134,139,135,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[141,142,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[144,145,146,147,148,149,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[11,131,132,21],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[144,145,146,147,148,149,150],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:137","sourceCode":"return java.lang.ClassLoader","type":"CtReturnImpl"},"failures":[153,154,155,156],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.RecordState:318","failures":[91,92],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,29,134,139,30,159,160,31,32,86,135,140,33,34,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[153,161,162,163,36,37,38,40,164,165,166,157,167,60,61,62,168,158,169,64,170,171,172,83,126,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,164,165,166,173,157,167,61,174,170,171,172,126,84,175],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[177,153,161,162,163,178,179,180,181,182,183,184,185,186,187,188,189,190,7,8,9,129,191,10,11,12,13,130,137,131,14,192,15,128,16,17,18,19,20,132,138,193,194,195,21,22,23,154,196,197,198,199,200,201,202,203,24,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,25,26,27,227,228,229,230,28,231,232,233,133,29,134,139,30,159,160,31,32,86,135,140,33,34,234,235,236,237,238,239,240,155,156,241,35,87,88,89,90,242,243,36,244,37,38,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,39,274,40,164,275,276,41,42,277,165,166,43,44,45,278,279,280,46,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,91,318,47,92,93,94,95,96,319,320,321,322,323,324,325,326,327,328,329,48,330,331,332,333,334,335,336,337,338,339,340,341,4,342,343,344,345,49,50,51,52,346,97,347,53,98,99,54,348,349,350,351,352,353,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,176,409,410,55,152,56,411,412,413,414,415,416,417,418,57,58,419,59,420,421,422,157,423,424,425,426,427,428,429,167,60,430,61,62,431,432,433,63,64,174,170,65,66,171,172,67,434,435,436,120,121,122,123,124,125,437,438,439,440,441,442,443,444,445,446,447,448,449,68,69,450,451,70,452,71,72,73,74,453,75,76,77,78,454,79,80,81,82,455,456,457,83,126,84,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,127,474,85,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[177,153,161,162,163,178,179,180,181,182,183,184,185,186,187,188,189,190,7,8,9,129,191,10,11,12,13,130,137,131,14,192,15,128,16,17,18,19,20,132,138,193,194,195,21,22,23,154,475,196,197,476,198,199,200,201,144,202,477,478,203,24,479,204,480,205,206,207,208,209,210,211,212,213,214,215,481,216,217,218,219,220,221,222,223,224,225,226,25,26,27,227,228,229,230,28,231,232,233,133,29,134,139,30,159,160,31,32,86,135,140,33,34,234,482,483,484,235,236,237,238,239,240,155,156,241,35,87,88,89,90,485,150,486,242,243,36,244,37,38,245,246,247,487,248,488,249,250,251,252,489,490,253,491,492,254,493,255,256,257,258,259,260,261,494,495,262,263,264,265,266,267,268,269,270,271,272,273,39,274,40,164,275,276,41,42,277,165,166,43,44,45,278,279,280,46,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,496,300,497,301,498,499,302,303,304,500,501,305,306,307,308,309,310,311,312,313,314,315,316,317,91,318,47,92,93,94,95,96,319,320,321,322,323,324,325,326,327,328,329,48,330,331,332,333,334,335,336,337,338,339,340,341,4,342,343,344,345,502,49,50,51,52,346,97,347,53,98,99,54,348,349,350,351,352,353,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,503,504,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,176,409,410,55,152,56,411,412,413,414,415,416,417,418,57,58,419,59,420,421,422,157,423,424,425,426,427,428,429,167,60,430,61,62,431,432,433,63,64,174,170,65,66,171,172,67,434,435,436,120,121,122,123,124,125,437,438,439,440,441,442,443,444,445,446,447,448,449,68,69,450,451,70,452,71,72,73,74,453,75,76,77,78,454,79,80,81,82,455,456,457,83,126,84,458,459,460,461,462,463,464,465,466,505,506,467,507,468,469,470,471,472,473,127,474,85,175],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[178,179,180,181,182,183,184,186,187,188,189,190,7,8,9,129,10,11,12,13,130,137,14,192,15,128,16,17,18,19,20,132,138,193,194,195,21,22,23,205,206,207,208,209,210,211,212,215,25,26,27,227,228,230,28,231,233,133,29,134,139,30,159,160,31,32,86,135,140,33,34,155,156,241,35,87,88,89,90,243,36,244,37,38,245,248,267,39,274,40,275,276,41,42,165,43,44,45,280,46,281,287,294,296,297,298,300,301,303,304,305,307,308,309,310,311,312,313,314,315,317,91,318,47,92,93,94,95,96,319,320,321,322,323,328,329,48,330,331,332,334,335,337,338,339,340,341,342,343,345,49,51,52,346,97,347,53,98,99,54,348,351,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,360,361,364,365,366,367,369,370,377,378,380,381,398,157,429,60,430,61,62,431,433,63,64,65,66,171,67,120,121,122,123,124,125,68,69,450,451,70,452,71,72,73,74,453,75,76,77,78,454,79,80,81,82,83,126,84,458,459,460,461,462,471,473,127],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[144,508,145,146,147,509,148,149,510,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[3,214,511],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[179,183,184,187,9,18,196,203,24,204,208,218,220,242,244,37,38,39,164,275,276,165,166,43,44,297,336,512,502,49,513,173,368,369,370,157,428,167,430,61,62,63,174,170,171,172,67,126,84],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[178,179,180,181,182,183,184,186,187,188,189,129,11,13,130,21,199,201,202,480,205,208,211,219,25,26,27,228,230,28,231,233,133,29,31,32,135,34,155,156,241,35,243,36,244,37,38,245,267,39,274,40,275,276,41,42,43,44,45,280,46,287,297,303,304,305,307,308,309,310,311,312,313,314,315,317,91,318,47,92,93,94,95,96,319,320,321,322,323,328,329,48,330,331,332,334,335,337,338,339,340,341,343,346,347,53,98,99,54,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,377,378,157,429,60,430,61,62,431,63,64,65,66,67,120,121,122,123,124,125,68,69,450,451,70,452,71,72,73,74,453,75,76,77,78,454,79,80,81,82,83,126,84,458,459,460,461,462,471,473,127],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[153,161,162,163,178,179,180,181,182,183,184,185,186,187,188,189,190,7,8,9,129,10,11,12,13,130,137,131,14,192,15,128,16,17,18,19,20,132,138,193,194,195,21,22,23,196,199,201,202,24,480,205,206,207,208,209,210,211,212,215,218,219,220,25,26,27,227,228,229,230,28,231,232,233,133,29,134,139,30,159,160,31,32,86,135,140,33,34,155,156,241,35,87,88,89,90,485,242,243,36,244,37,38,245,248,250,255,261,267,39,274,40,164,275,276,41,42,277,165,166,43,44,45,278,279,280,46,281,287,294,296,297,298,299,496,300,301,498,499,303,304,500,500,501,501,305,306,307,308,309,310,311,312,313,314,315,317,91,318,47,92,93,94,95,96,319,320,321,322,323,325,327,328,329,48,330,331,332,334,335,336,337,338,339,340,341,342,343,344,49,50,51,52,346,97,347,53,98,99,54,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,362,364,365,366,367,369,370,377,378,380,381,398,400,401,402,415,419,420,421,422,157,428,429,167,60,430,61,62,431,432,433,63,64,170,65,66,171,172,67,434,435,436,120,121,122,123,124,125,68,69,450,451,70,452,71,72,73,74,453,75,76,77,78,454,79,80,81,82,83,126,84,458,459,460,461,462,505,506,507,471,473,127,85],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":129,"org.easymock.tests2.UsageTest.argumentsOrdered":166,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":152,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":276,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":305,"org.easymock.tests2.DelegateToTest.testReturnException":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":121,"org.easymock.tests.MockingTest.testPartialClassMocking":505,"org.easymock.tests.MockClassControlTest.testToString":356,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":177,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":100,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":168,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":347,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":439,"org.easymock.samples.ExampleTest.answerVsDelegate":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":469,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":119,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":460,"org.easymock.tests.UsageTest.argumentsOrdered":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":292,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":323,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.DependencyTest.testClassMocking":239,"org.easymock.tests2.AnswerTest.answer":45,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":504,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":115,"org.easymock.tests.LimitationsTest.mockFinalMethod":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":427,"org.easymock.tests2.DependencyTest.testClassMockingSupport":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":455,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":373,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.samples.PartialClassMockTest.testGetArea":306,"org.easymock.tests.MockingTest.testInterfaceMocking":467,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":253,"org.easymock.tests2.UsageTest.niceToStrict":275,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":353,"org.easymock.tests2.ThreadingTest.testChangeDefault":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":199,"org.easymock.tests2.MockBuilderTest.testCreateMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":109,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":183,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":503,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":437,"org.easymock.tests.UsageOverloadedMethodTest.overloading":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":127,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureAll":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests.MockNameTest.defaultName":463,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.samples.ExampleTest.voteForRemovals":315,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":426,"org.easymock.samples.BasicClassMockTest.testPrintContent":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":125,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":220,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":312,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":213,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":72,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":33,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":423,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":118,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":435,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.MockingTest.testNiceClassMocking":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.MockingTest.testClassMocking":465,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":89,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":428,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":296,"org.easymock.tests.UsageExpectAndReturnTest.object":453,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":283,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":513,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":238,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":441,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":59,"org.easymock.tests2.UsageTest.openCallCountByLastCall":41,"org.easymock.tests.DefaultClassInstantiatorTest.object":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":420,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":349,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":106,"org.easymock.tests.CapturesMatcherTest.test":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":357,"org.easymock.tests2.UsageTest.resumeIfFailure":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":123,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":206,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":112,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":419,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":278,"org.easymock.tests.UsageExpectAndThrowTest.object":110,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":326,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":138,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":377,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":378,"org.easymock.samples.ConstructorCalledMockTest.testTax":500,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":402,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":157,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":512,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":256,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":303,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":57,"org.easymock.tests2.UsageConstraintsTest.any":14,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.SerializationTest.testClass":480,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":398,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":82,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":264,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.NameTest.nameForMocksControl":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":249,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":104,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":202,"org.easymock.tests.MockingTest.testNicePartialClassMocking":506,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":212,"org.easymock.tests2.CompareToTest.testNotComparable":151,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":499,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":130,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests.MockingTest.testTwoMocks":466,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":108,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":22,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":316,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":284,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":27,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.floatType":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":255,"org.easymock.samples.ExampleTest.voteAgainstRemoval":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":56,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":397,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":87,"org.easymock.tests2.UsageTest.defaultResetToNice":277,"org.easymock.samples.ExampleTest.voteAgainstRemovals":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":263,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":297,"org.easymock.tests2.UsageConstraintsTest.equals":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":481,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":98,"org.easymock.tests.UsageCallCountTest.tooFewCalls":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":440,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.MockingTest.testStrictClassMocking":464,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":498,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":496,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":301,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":281,"org.easymock.tests.ObjectMethodsTest.testHashCode":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":148,"org.easymock.tests2.NameTest.nameForNiceMock":162,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":228,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":147,"org.easymock.samples.ExampleTest.addDocument":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":28,"org.easymock.tests2.AnswerTest.stubAnswer":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":477,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":55,"org.easymock.tests.UsageExpectAndReturnTest.floatType":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":485,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":501,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":291,"org.easymock.tests.UsageThrowableTest.noUpperLimit":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":234,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":159,"org.easymock.tests2.SerializationTest.test":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":342,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":290,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":468,"org.easymock.tests2.NameTest.nameForMock":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":114,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":90,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":161,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":158,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":491,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":208,"org.easymock.tests.UsageTest.wrongArguments":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":489,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":192,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CaptureTest.testCaptureFromStub":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":167,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests2.CaptureTest.testCapture":5,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":430,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.samples.ExampleTest.addAndChangeDocument":317,"org.easymock.tests.UsageStrictMockTest.testVerify":432,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":424,"org.easymock.tests2.CompareToTest.testGreateThan":136,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":321,"org.easymock.tests.LimitationsTest.abstractClass":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":184,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":169,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331}}]
