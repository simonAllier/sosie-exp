[{"position":"org.easymock.internal.matchers.Compare:53","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,1,29,30,31,32,33,34,35,2,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,0,73,74,75,76,77,78,79,80,81,82,8,10,11,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[20,22,23,25,1,30,183,2,36,38,39,40,184,42,44,45,47,48,185,50,186,187,188,189,54,55,56,58,190,61,62,63,64,191,65,192,193,194,66,195,67,196,197,68,69,70,71,198,72,199,200,0,201,202,73,74,75,77,78,203,204,79,80,81,82,6,8,10,11,13,83,84,85,86,87,88,89,90,91,92,205,94,206,207,208,96,97,98,99,100,101,102,103,104,209,105,106,107,108,110,111,112,113,114,115,116,210,117,211,121,122,123,212,126,128,129,130,131,132,133,213,150,154,156,157,214,215,216,217,162,169,170,218,171,219,220,221,222,223,172,173,224,174,225,226,227,228,175,229,230,231,232,176,233,234,235,236,237,238,239,240,241,177,242,179,243,180,181,182,244,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[183],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[277,120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[27,28,1,280,280,281,281,2,37,282,283,284,285,286,79,287,288,80,289,290,291,292,293,294,295,296,297,81,298,299,300,301,302,82,303,304,4,6,7,305,8,9,10,11,306,12,13,15,307,308,84,85,86,87,88,90,91,94,309,110,111,113,114,115,16,116,310,311,253,210,117,211,312,254,134,313,314,262,263,264,315,316,317,318,319,320,321,322,323,324,325,150,151,17,326,18,19,327,177,328,329,180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"position":"org.easymock.internal.RecordState:233","failures":[20,21,22,23,24,25,26,27,28,1,29,30,31,280,280,281,281,32,330,33,183,34,331,35,2,36,37,38,39,40,332,184,333,334,247,41,42,43,44,45,46,47,48,185,49,50,51,186,187,188,52,53,189,54,55,56,57,58,190,59,60,61,62,63,64,335,191,65,192,193,194,66,195,67,196,197,68,69,336,70,71,198,72,199,200,0,201,202,73,74,75,76,77,78,203,204,79,80,81,82,6,8,10,11,13,83,307,308,84,277,249,250,251,252,85,86,87,88,89,90,91,92,337,338,93,205,339,94,95,206,207,208,96,97,98,99,100,101,102,103,104,209,105,106,107,108,109,110,111,112,113,114,115,116,210,117,211,118,119,120,121,340,341,342,122,123,124,125,212,126,127,128,129,130,131,132,133,343,344,345,346,347,348,213,349,350,351,352,134,353,354,355,356,357,358,359,360,135,136,361,137,362,363,364,365,138,366,367,368,369,139,370,371,372,373,140,141,142,143,144,261,145,146,147,148,149,374,375,376,150,151,17,265,152,153,154,155,156,157,158,377,378,214,215,159,216,217,160,161,162,271,272,163,164,165,166,167,168,169,170,218,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,171,219,220,221,222,223,172,173,224,174,225,226,227,228,175,229,230,231,232,176,233,234,235,236,237,238,239,240,241,177,242,178,179,243,403,180,181,182,244,245,404],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[321,405,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,341,342,407,386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:195","failures":[408,409,410,411,412,40,246,413,414,415,416,417,285,286,287,289,292,293,298,300,301,4,7,11,13,15,418,419,420,421,422,83,248,423,424,425,426,427,249,250,251,252,85,86,91,101,104,105,111,253,211,254,18,267,268,428],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[55,56,57,58,190,59,60,61,63,64,335,191,65,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[66,197,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[333,334,76,78],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[430],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[431,432,433,434,153,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[405],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[431,432,433,434,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[42,44,45,185,49,52,53,435,431,436,437,438,439,440,441,432,442,443,0,258,259,433,444,434,445,446,447,448,153,154,156,157,215,270,159,160,161,168,242,178,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,449,26,27,28,1,29,30,31,280,281,32,33,183,34,35,2,36,37,38,39,40,332,184,333,334,450,451,452,453,247,41,42,43,44,45,46,47,48,185,49,50,51,186,187,188,52,53,189,54,55,56,57,58,190,59,60,61,62,63,64,335,191,65,192,193,194,66,195,67,196,197,68,69,70,71,198,72,199,200,0,201,202,73,74,75,76,77,78,203,204,79,80,81,82,4,6,8,9,10,11,12,13,15,83,307,308,84,277,249,250,251,252,85,86,87,88,89,90,91,92,93,205,339,94,95,206,207,208,96,97,98,99,100,101,102,103,104,209,105,106,107,108,109,110,111,112,113,114,115,16,116,253,210,117,211,118,119,120,121,257,122,123,124,125,212,454,455,456,457,126,127,128,129,130,131,132,133,213,349,350,351,352,134,353,354,355,356,357,358,359,360,135,136,361,137,362,363,364,365,138,366,367,368,369,139,370,371,372,373,140,141,142,143,144,261,145,146,147,148,149,313,314,262,263,264,458,459,315,317,150,151,265,152,153,154,155,156,157,158,377,460,461,462,430,463,464,465,466,467,468,407,469,214,215,270,159,216,217,160,161,162,271,470,272,163,164,165,273,166,167,168,274,471,472,169,170,218,171,219,220,221,222,223,172,173,224,174,225,226,227,228,175,229,230,231,232,176,233,234,235,236,237,238,239,240,241,177,242,178,179,473,474,475,476,477,243,403,180,181,182,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[42,44,45,185,49,52,53,435,436,438,441,432,442,443,255,256,121,258,259,154,156,157,215,159,160,161,168,242,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":389,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":354,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.tests.MockClassControlTest.testToString":262,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":359,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":456,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":212,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":373,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":350,"org.easymock.tests.UsageTest.argumentsOrdered":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":438,"org.easymock.tests.ReplayStateInvalidUsageTest.times":467,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.DependencyTest.testClassMocking":278,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":453,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests2.DelegateToTest.testDelegate":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests.LimitationsTest.mockFinalMethod":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":451,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":267,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":428,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":304,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":431,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":365,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":454,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":302,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":199,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":405,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":63,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":440,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":452,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.MockNameTest.defaultName":260,"org.easymock.tests2.UsageConstraintsTest.testMatches":200,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":351,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":149,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":358,"org.easymock.tests2.UsageConstraintsTest.greaterThan":201,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":211,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":353,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":148,"org.easymock.tests.GenericTest.testBridgedEquals":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":372,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":444,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":470,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":195,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":266,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":334,"org.easymock.tests.UsageExpectAndReturnTest.object":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":447,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":309,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests2.EasyMockSupportTest.testVerify":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":295,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":450,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":316,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":362,"org.easymock.tests.CapturesMatcherTest.test":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":263,"org.easymock.tests2.UsageTest.resumeIfFailure":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":356,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":395,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":432,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":367,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":401,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":280,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":407,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":455,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":433,"org.easymock.tests2.CaptureTest.testCaptureNone":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests.UsageUnorderedTest.message":168,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":147,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":125,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":466,"org.easymock.tests2.StubTest.stub":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":465,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":288,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":364,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":203,"org.easymock.samples.ExampleTest.removeNonExistingDocument":449,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ConstraintsToStringTest.andToString":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":289,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":307,"org.easymock.tests2.UsageTest.defaultResetToNice":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.CallbackTest.callback":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":445,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":457,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":434,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":468,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":339,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":299,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.stubAnswer":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests.UsageVarargTest.varargLongAccepted":146,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.tests2.ConstraintsToStringTest.orToString":435,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":202,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":59,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":406,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":223,"org.easymock.samples.SupportTest.addDocument":29,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":290,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests2.NameTest.nameForMock":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests2.MockedExceptionTest.testRealException":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests2.NameTest.nameForStrictMock":250,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":305,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":283,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":294,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":291,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargShortAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":273,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":7,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.UsageConstraintsTest.constraints":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests2.ConstraintsToStringTest.notToString":436,"org.easymock.tests.UsageStrictMockTest.testVerify":377,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":60,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.LimitationsTest.abstractClass":327,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104}}]
