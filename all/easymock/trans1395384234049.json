[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,11,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,2,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,8,9,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,10,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[45,48,55,73,74,75,76,77,79,82,83,84,85,86,11,105,106,107,108,153,154,155,156,157,158,159,239,240,241,242,243,244,245,246,266,266,267,267,269,270,271,272,273,274,275,276,277,278,279,2,280,281,282,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,327,328,344,345,347,348,349,350,352,353,354,355,356,357,358,359,360,382,478,383,8,9,433,434,435,10,450,451,452,453,454,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[72,109,120,121,124,125,162,165,479,480,231,232,334,340,341,379],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[481,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[472],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[388,389,391,392,393,394,395,396,397,398,407,408,412,413,464,465,466,467,474,475],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[10,449,450],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[193,285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[431,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,122,123,126,163,230,232,331,337,338,343,377,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[71,109,119,121,124,125,162,163,165,166,230,231,232,323,324,325,326,333,334,340,341,377,379,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,458,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1495","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[389,395,407],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[392,397,407,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[57,58,60,61,62,63,64,65,69,87,88,89,90,91,92,118,123,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,231,236,237,254,321,331,338,433,434,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[69,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[465,467,471,472,473,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[386,405,408],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[263,268,418,419,420,421,422,424,425,440,441,442,443,444,446,447],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":389,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.UsageTest.argumentsOrdered":341,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":22,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":336,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":88,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.tests.MockClassControlTest.testToString":241,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":234,"org.easymock.tests2.UsageTest.wrongArguments":334,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":53,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":392,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":347,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":246,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":371,"org.easymock.tests2.CaptureTest.testPrimitive":467,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.UsageTest.argumentsOrdered":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":196,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":420,"org.easymock.tests.ReplayStateInvalidUsageTest.times":192,"org.easymock.tests2.DependencyTest.testClassMocking":327,"org.easymock.tests2.AnswerTest.answer":427,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests2.CaptureTest.testAnd":464,"org.easymock.tests2.UsageTest.strictResetToDefault":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":366,"org.easymock.tests2.DelegateToTest.testDelegate":463,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":114,"org.easymock.tests2.DependencyTest.testClassMockingSupport":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":177,"org.easymock.tests2.CaptureTest.testCapture1_2446744":468,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":186,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":47,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":316,"org.easymock.samples.PartialClassMockTest.testGetArea":269,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":187,"org.easymock.tests.MockingTest.testInterfaceMocking":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":116,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":303,"org.easymock.tests2.UsageTest.niceToStrict":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":276,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":51,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":402,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":401,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":473,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":96,"org.easymock.tests.MockClassControlTest.testEquals":245,"org.easymock.tests2.EasyMockSupportClassTest.testAll":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.CaptureTest.testCaptureAll":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests.MockNameTest.defaultName":183,"org.easymock.tests2.UsageConstraintsTest.testMatches":403,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":104,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":113,"org.easymock.samples.BasicClassMockTest.testPrintContent":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":92,"org.easymock.tests2.UsageConstraintsTest.greaterThan":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":358,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":159,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":364,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":87,"org.easymock.tests2.CaptureTest.testCaptureFirst":477,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":365,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":343,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":476,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":103,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":410,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":452,"org.easymock.tests.MockingTest.testNiceClassMocking":82,"org.easymock.tests.MockingTest.testClassMocking":74,"org.easymock.tests2.UsageConstraintsTest.testContains":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":435,"org.easymock.tests2.UsageConstraintsTest.testFind":391,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":319,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":370,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":174,"org.easymock.tests.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.MockClassControlTest.testHashCode":244,"org.easymock.tests2.EasyMockSupportTest.testVerify":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageVarargTest.varargCharAccepted":97,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":35,"org.easymock.tests2.UsageTest.openCallCountByLastCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.object":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":127,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":172,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.CapturesMatcherTest.test":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":314,"org.easymock.tests2.UsageTest.resumeIfFailure":342,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":90,"org.easymock.tests2.StubTest.stubWithReturnValue":321,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":450,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":28,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":34,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":428,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":152,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":408,"org.easymock.tests2.DelegateToTest.testWrongClass":461,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":384,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":278,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":52,"org.easymock.tests2.CaptureTest.testCaptureNone":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":117,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":102,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":175,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":270,"org.easymock.tests2.CaptureTest.testCapture_2617107":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":237,"org.easymock.tests2.UsageConstraintsTest.any":398,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":191,"org.easymock.tests2.StubTest.stub":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":89,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":157,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":190,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":378,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":442,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":381,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":0,"org.easymock.tests2.NameTest.nameForMocksControl":326,"org.easymock.tests2.MockedExceptionTest.testMockedException":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":297,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":344,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":279,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":349,"org.easymock.tests2.CaptureTest.testCaptureLast":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":457,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":395,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":409,"org.easymock.tests.MockingTest.testTwoMocks":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":340,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":413,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":188,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":155,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":239,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":430,"org.easymock.tests.UsageVerifyTest.twoThrows":231,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":357,"org.easymock.tests.LimitationsTest.privateConstructor":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":412,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":433,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.UsageTest.defaultResetToNice":339,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.UsageVarargTest.differentLength":99,"org.easymock.tests2.CallbackTest.callback":361,"org.easymock.tests2.UsageConstraintsTest.equals":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":54,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.MockingTest.testStrictClassMocking":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":456,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":455,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":432,"org.easymock.tests.ObjectMethodsTest.testHashCode":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":287,"org.easymock.tests2.NameTest.nameForNiceMock":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":310,"org.easymock.tests2.DelegateToTest.testStubDelegate":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.AnswerTest.stubAnswer":431,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests.UsageVarargTest.varargLongAccepted":101,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":406,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":387,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":469,"org.easymock.tests2.SerializationTest.test":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":154,"org.easymock.tests2.UsageConstraintsTest.testSame":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":80,"org.easymock.tests2.NameTest.nameForMock":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":436,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":25,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":377,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":235,"org.easymock.tests2.NameTest.nameForStrictMock":324,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":383,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":273,"org.easymock.tests2.UsageStrictMockTest.range":379,"org.easymock.tests2.UsageConstraintsTest.lessThan":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":363,"org.easymock.tests2.CaptureTest.testCaptureRightOne":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":304,"org.easymock.tests2.UsageConstraintsTest.testOr":394,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":345,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":158,"org.easymock.tests.UsageVarargTest.varargShortAccepted":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":399,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":429,"org.easymock.tests2.CompareToTest.testLessThan":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":15,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CaptureTest.testCaptureFromStub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":185,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":274,"org.easymock.tests.UsageTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.constraints":388,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":263,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":111,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.LimitationsTest.abstractClass":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":368}}]
