[{"position":"org.easymock.internal.Range:44","failures":[0],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[9,10,319,320,321],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[52,66,72,84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[322,323,324,325,326,327],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[34,40,46,47,328,239,242,254,255,258,259,262,303,304],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[50,52,60,66,67,69,71,72,74,84,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,18,329,330],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[69,74,84,89],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[331,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[50,52,60,66,67,69,71,72,74,84,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[333],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[17,334,335,336,337,338,339,125,340],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[342,343,344,345,239,254],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,18,329,330],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[346],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,18,329,330],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[32,34,35,39,40,46,47,347,348,349,350,351,352,353,239,240,242,243,253,255,258,259,262,302,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[1,2,3,4,354,5,355,6,356,357,7,358,8,359,9,9,10,10,360,11,12,13,14,15,16,17,18,329,361,362,19,20,363,364,365,366,367,21,22,368,369,370,371,372,373,374,375,376,23,24,25,377,26,27,28,29,30,31,378,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,379,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,380,381,382,92,383,384,93,385,386,387,388,389,390,391,392,393,94,394,395,396,397,398,95,399,400,401,96,97,98,402,99,100,101,102,339,103,104,105,403,404,405,406,407,106,107,408,409,410,411,412,108,109,110,111,341,347,348,349,350,112,113,114,115,116,117,118,119,120,121,122,123,124,125,340,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,413,152,321,414,153,154,155,156,415,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,416,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,417,418,419,420,421,422,423,424,425,426,427,226,0,227,228,229,230,231,428,232,233,234,235,429,430,322,323,324,325,431,326,327,432,236,433,237,434,238,435,239,240,241,242,243,244,436,437,438,439,440,441,442,443,444,445,446,447,448,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,449,450,261,451,452,453,454,455,456,262,457,263,264,458,265,266,267,268,269,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,270,475,476,477,478,479,271,480,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,481,482,301,483,302,303,304,305,306,307,308,309,310,311,484,485,312,313,314,486,315,487,488,489,316,317,490,318,491],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[342,343,344,345,239,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,18,329,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[50,52,53,54,55,56,57,59,492,60,61,63],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[9,9,10,10,24,32,61,64,65,68,69,70,71,77,79,80,82,83,89,90,91,168,169,172,193,194,195,196,197,240,296,297,298,299,300,310,316,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[34,40,46,47,493,328,239,242,254,255,258,259,262,303,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[34,40,46,47,164,328,239,242,254,255,258,259,262,303,304],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[34,352,353,242,262,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[9,9,10,10,32,61,64,65,68,69,70,71,77,79,80,82,83,89,90,91,168,169,172,193,194,195,196,197,240,296,297,298,299,300,310,316,317],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[334,335,336,494,495,338,340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[342,343,344,345,239,254],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":42,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":360,"org.easymock.tests2.DelegateToTest.testReturnException":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":313,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":334,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":249,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageTest.argumentsOrdered":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests.ReplayStateInvalidUsageTest.times":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":361,"org.easymock.tests2.AnswerTest.answer":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":30,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.DelegateToTest.testDelegate":16,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":309,"org.easymock.tests2.DependencyTest.testClassMockingSupport":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":188,"org.easymock.tests2.CaptureTest.testCapture1_2446744":54,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":28,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":439,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":248,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":389,"org.easymock.tests2.UsageTest.niceToStrict":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":333,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":161,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":59,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":429,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":433,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":29,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":307,"org.easymock.tests.MockNameTest.defaultName":205,"org.easymock.tests2.UsageConstraintsTest.testMatches":80,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":226,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":308,"org.easymock.samples.BasicClassMockTest.testPrintContent":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.UsageConstraintsTest.greaterThan":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":11,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":455,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":87,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.UsageCallCountTest.tooManyCalls":456,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests.MockingTest.testNiceClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testClassMocking":485,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":450,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":68,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":269,"org.easymock.tests.MockTypeTest.fromEasyMockClass":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":458,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":340,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":401,"org.easymock.tests.UsageVarargTest.varargCharAccepted":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":185,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":263,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.UsageTest.resumeIfFailure":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":338,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":343,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":120,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":491,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":85,"org.easymock.tests2.DelegateToTest.testWrongClass":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":317,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":242,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":447,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":344,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":192,"org.easymock.tests.UsageUnorderedTest.message":262,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":394,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":453,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":265,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":444,"org.easymock.tests2.StubTest.stub":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":431,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":443,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":36,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":384,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":315,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.samples.ExampleTest.removeNonExistingDocument":355,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":441,"org.easymock.tests.UsageStrictMockTest.differentMethods":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":324,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":122,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":190,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.LimitationsTest.privateConstructor":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests2.UsageTest.defaultResetToNice":45,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests.MockingTest.testStrictClassMocking":484,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":116,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":124,"org.easymock.tests.ObjectMethodsTest.testHashCode":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":346,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":336,"org.easymock.samples.ExampleTest.addDocument":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":13,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":240,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":178,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":83,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":373,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":55,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":323,"org.easymock.tests2.UsageConstraintsTest.testSame":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":358,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":386,"org.easymock.tests.GenericTest.testPackageScope":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":325,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":390,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":331,"org.easymock.tests2.UsageConstraintsTest.testOr":71,"org.easymock.tests.UsageRangeTest.combination":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":387,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.CaptureTest.testCaptureFromStub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":438,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":436,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":359,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.LimitationsTest.abstractClass":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":353}}]
