[{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[64,31,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[66,67,68,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[76,77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[67,80,81,82,83,84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,2,113,114,115,116,117,118,119,120,121,122,123,124,125,126,72,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,60,160,161,162,163,61,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,73,183,184,185,186,62,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,64,204,205,206,207,208,209,37,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,67,68,69,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[29,65,37,38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[93,173,280,254,281,255,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:217","failures":[85,86,87,88,0,0,1,1,89,90,91,92,93,94,95,96,97,98,286,287,288,44,289,290,99,100,101,102,103,104,105,291,106,292,293,294,295,296,297,298,107,299,300,108,109,110,111,112,45,2,113,114,115,116,117,118,119,120,121,122,123,124,3,4,5,6,7,125,126,301,302,46,303,72,127,304,305,128,129,130,8,306,307,308,309,131,132,133,134,135,136,137,138,139,310,140,141,142,311,47,143,144,312,145,313,48,314,315,146,316,317,49,318,147,319,50,320,51,9,10,11,12,13,321,148,149,150,151,152,153,154,322,155,156,157,158,159,60,160,161,162,163,61,164,165,323,324,325,326,14,15,327,166,16,328,167,329,52,168,169,330,170,331,53,332,333,171,334,335,54,336,172,337,55,338,56,17,18,19,173,339,174,175,340,176,177,341,342,343,178,179,180,181,344,182,73,20,183,345,346,184,185,347,348,349,186,62,187,350,351,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,352,26,27,353,64,28,29,30,31,204,205,65,206,207,32,208,33,34,209,35,36,37,210,211,212,213,38,39,40,354,214,355,356,357,215,216,217,218,219,220,221,58,222,223,224,225,226,227,41,59,228,229,230,67,68,69,358,231,359,232,360,361,233,234,235,236,237,362,238,239,240,241,242,363,243,244,245,364,246,247,248,365,366,249,250,251,367,252,253,254,368,281,255,369,282,283,284,256,257,258,259,260,261,262,263,264,370,265,371,266,267,268,269,270,271,272,372,42,285,373,374,375,376,377,273,43,274,378,379,275,276,277,278,279],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[70,71,380,303,72,127,128,129,73,74,381,75,382,364,246,250,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[292,293,294,295,296,297,122,306,327,341,342,343,385,201,202,203,352,42],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":198,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests.MockClassControlTest.testToString":161,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.tests2.UsageTest.wrongArguments":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":93,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":259,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":197,"org.easymock.tests2.CaptureTest.testPrimitive":221,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":56,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":5,"org.easymock.tests.UsageTest.argumentsOrdered":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":287,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":13,"org.easymock.tests.ReplayStateInvalidUsageTest.times":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.CaptureTest.testAnd":218,"org.easymock.tests2.UsageTest.strictResetToDefault":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":325,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests2.DelegateToTest.testDelegate":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":7,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":52,"org.easymock.tests2.UsageTest.niceToStrict":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":77,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":208,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":101,"org.easymock.tests2.CaptureTest.testCaptureAll":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":2,"org.easymock.samples.ExampleTest.voteForRemovals":97,"org.easymock.tests.UsageVarargTest.allKinds":159,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":102,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":371,"org.easymock.samples.ExampleTest.voteForRemoval":94,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":262,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":228,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":59,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":158,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":3,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":170,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":107,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":344,"org.easymock.tests.UsageExpectAndReturnTest.object":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":187,"org.easymock.tests.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":174,"org.easymock.tests.MockClassControlTest.testHashCode":61,"org.easymock.tests2.EasyMockSupportTest.testVerify":200,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":354,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests2.CaptureTest.testCaptureMultiple":383,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests2.UsageTest.openCallCountByLastCall":365,"org.easymock.tests.DefaultClassInstantiatorTest.object":139,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":341,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests2.UsageTest.resumeIfFailure":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":315,"org.easymock.tests2.SerializationTest.testAllMockedMethod":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":350,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":75,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":335,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":171,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":334,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":70,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":157,"org.easymock.tests2.ThreadingTest.testThreadSafe":355,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":109,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests2.CaptureTest.testCapture_2617107":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":166,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":119,"org.easymock.tests2.StubTest.stub":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests2.NameTest.nameForMocksControl":376,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":256,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":83,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":98,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":116,"org.easymock.tests.UsageStrictMockTest.differentMethods":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":357,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":255,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":327,"org.easymock.tests.UsageCallCountTest.tooFewCalls":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":270,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":282,"org.easymock.tests.ObjectMethodsTest.testHashCode":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests2.NameTest.nameForNiceMock":375,"org.easymock.tests2.DependencyTest.testInterfaceMocking":229,"org.easymock.samples.ExampleTest.addDocument":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":359,"org.easymock.tests2.AnswerTest.stubAnswer":369,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":384,"org.easymock.tests.UsageVarargTest.varargLongAccepted":156,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":253,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.SerializationTest.test":68,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":117,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests2.NameTest.nameForMock":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":317,"org.easymock.tests2.UsageStrictMockTest.differentMethods":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":326,"org.easymock.tests2.MockedExceptionTest.testRealException":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":81,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.NameTest.nameForStrictMock":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":260,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":362,"org.easymock.tests2.UsageStrictMockTest.range":378,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":257,"org.easymock.tests.UsageTest.wrongArguments":127,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":155,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":281,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":366,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":113,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":318,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.UsageConstraintsTest.constraints":353,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests.UsageStrictMockTest.testVerify":185,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":89,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":100,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":313,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":12,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":194}}]
