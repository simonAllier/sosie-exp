[{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,79,1,2,80,3,81,82,83,84,85,86,4,87,5,88,89,90,91,92,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,7,8,9,138,139,140,141,142,143,144,145,146,147,148,149,150,10,151,152,11,153,12,13,154,155,156,14,157,158,159,15,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,16,17,18,19,221,20,21,22,222,223,224,23,225,24,25,226,26,27,28,29,30,31,227,228,32,229,230,231,33,34,35,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,36,256,257,37,258,259,260,261,262,263,264,265,266,38,267,268,269,270,271,39,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,40,41,305,42,306,307,308,309,310,311,312,313,43,44,45,46,47,314,315,48,316,49,50,51,52,53,54,317,318,55,56,319,57,58,59,320,60,61,62,63,64,65,66,67,68,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,69,423,424,425,426,427,428,429,430,431,432,433,434,435,436,70,71,72,73,437,438,439,440,441,442,443,444,445,446,447,74,448,75,76,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,77,78,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[323,324],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[9,138,503,504,505,506,507,508,155,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[109,110,115,116,118,128,163,165,173],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[109,110,113,115,116,118,128,133,163,165,173],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[158,15,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:117","failures":[79,104,106,144,147,149,195,437],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[327,444,479,483,484,493,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[177,178,179,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[109,110,112,113,114,115,116,117,118,119,128,129,133,134,163,164,165,166,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[510,511,512,513,393,447],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[109,116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[410,514,515],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[514],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[138,503,504,505,516,517,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[85,86,4,88,88,89,89,100,101,102,136,137,9,138,150,10,151,152,11,153,12,13,155,156,14,157,177,179,16,17,18,19,21,22,26,27,29,30,31,227,32,229,230,231,33,34,35,232,233,247,248,250,253,254,255,36,256,257,37,258,259,260,261,262,263,264,265,266,38,267,268,269,270,271,39,272,273,302,303,304,40,41,42,308,309,310,311,312,313,314,315,48,316,359,360,361,362,363,364,365,366,379,384,406,407,408,409,410,411,412,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[309],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":391,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":489,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":213,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":83,"org.easymock.tests2.DelegateToTest.testReturnException":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":40,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":95,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":282,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":384,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.CaptureTest.testPrimitive":166,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":426,"org.easymock.tests.UsageTest.moreThanOneArgument":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":67,"org.easymock.tests.UsageTest.argumentsOrdered":398,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":517,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":459,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.times":335,"org.easymock.tests2.DependencyTest.testClassMocking":136,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":496,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":143,"org.easymock.tests2.CaptureTest.testAnd":163,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":381,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":72,"org.easymock.tests2.DelegateToTest.testDelegate":162,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":326,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":458,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":297,"org.easymock.tests.LimitationsTest.mockFinalMethod":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":427,"org.easymock.tests2.CaptureTest.testCapture1_2446744":167,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":141,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":329,"org.easymock.tests.UsageThrowableTest.throwError":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":383,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":462,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":283,"org.easymock.tests2.ThreadingTest.testChangeDefault":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":271,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":342,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":299,"org.easymock.tests2.CaptureTest.testCaptureAll":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":327,"org.easymock.samples.ExampleTest.voteForRemovals":3,"org.easymock.tests.UsageVarargTest.allKinds":350,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":451,"org.easymock.samples.BasicClassMockTest.testPrintContent":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":357,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":71,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":463,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":455,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":413,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":185,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":318,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":6,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":421,"org.easymock.tests.UsageExpectAndReturnTest.longType":52,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":444,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":422,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":356,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":17,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":478,"org.easymock.tests.MockTypeTest.fromEasyMockClass":382,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageExpectAndReturnTest.object":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":197,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":264,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":502,"org.easymock.tests2.UsageTest.openCallCountByLastCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":431,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":196,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":461,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.tests.ReplayStateInvalidCallsTest.times":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":376,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":508,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.tests2.SerializationTest.testAllMockedMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":495,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":294,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":501,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":145,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":160,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":251,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":457,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":430,"org.easymock.tests.UsageVerifyTest.twoReturns":453,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":267,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":419,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":425,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.UsageExpectAndThrowTest.longType":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":333,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":237,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":473,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.NameTest.nameForMocksControl":99,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":257,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":396,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":105,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":469,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.samples.ExampleTest.removeNonExistingDocument":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":198,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":234,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":157,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":258,"org.easymock.tests.UsageExpectAndThrowTest.floatType":284,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":147,"org.easymock.tests.UsageVerifyTest.twoThrows":452,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests.LimitationsTest.privateConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":358,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":236,"org.easymock.tests.UsageVarargTest.differentLength":345,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":229,"org.easymock.tests.UsageTest.openCallCountByLastCall":395,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":424,"org.easymock.tests.UsageCallCountTest.tooFewCalls":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":355,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":20,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":149,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":516,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":471,"org.easymock.tests2.NameTest.nameForNiceMock":98,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":466,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":268,"org.easymock.tests2.DelegateToTest.testStubDelegate":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":154,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.floatType":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":247,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":168,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":50,"org.easymock.samples.SupportTest.addDocument":87,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":456,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":259,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":454,"org.easymock.tests2.NameTest.nameForMock":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":73,"org.easymock.tests2.MockedExceptionTest.testRealException":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":492,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":423,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":338,"org.easymock.tests2.NameTest.nameForStrictMock":97,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":460,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":263,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":260,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":420,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":474,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":146,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":151,"org.easymock.tests.UsageTest.unexpectedCallWithArray":393,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":470,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":447,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":320,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":448,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.samples.ExampleTest.addAndChangeDocument":82,"org.easymock.tests.UsageStrictMockTest.testVerify":450,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.LimitationsTest.abstractClass":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":317,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":340}}]
