[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[6,6,7,7,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[106,107,108,109,6,6,7,7,8,110,111,112,113,114,115,116,117,11,118,67,119,120,121,122,12,123,14,15,16,17,124,18,19,125,126,127,128,129,68,130,20,21,131,22,23,24,25,26,27,28,29,30,132,133,32,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,69,70,158,159,71,72,73,74,160,161,162,163,75,164,76,77,165,78,79,166,167,168,169,80,81,82,170,171,172,173,33,36,37,38,39,40,41,42,174,175,176,177,178,179,180,181,182,183,184,185,43,44,45,46,186,187,188,189,190,191,192,84,85,86,87,88,193,194,195,196,197,198,199,200,201,202,89,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,50,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,54,90,279,280,281,282,283,284,91,92,285,93,286,287,288,94,95,96,97,98,99,100,56,57,58,59,60,61,62,63,64,289,65,290,291,292,293,294,295,296,297,298,299,300,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[157,174,180,191,194,195,196,197,198,199,200,216,255,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,288,303,304,305,306,294,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,123,13,307],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[125,308,129,158,159,72,74,160,309,166,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[72,309,166,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[87,281],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:53","sourceCode":"-9054190871232972342L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[120,177,182,183,191,192,313,202,204,257,278,296,297,300,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":5,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":213,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":105,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":258,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests.UsageExpectAndThrowTest.object":268,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests.UsageStrictMockTest.range":204,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":14,"org.easymock.tests2.UsageConstraintsTest.testNull":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests.UsageTest.moreThanOneArgument":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":277,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":98,"org.easymock.tests.UsageUnorderedTest.message":278,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests.UsageExpectAndThrowTest.longType":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":52,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":139,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":299,"org.easymock.tests2.DelegateToTest.testDelegate":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":262,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":273,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":19,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":284,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":220,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":109,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":311,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":59,"org.easymock.tests.UsageExpectAndThrowTest.floatType":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":100,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":191,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":47,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests2.ThreadingTest.testChangeDefault":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":200,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":235,"org.easymock.tests.UsageTest.openCallCountByLastCall":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":267,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":287,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":76,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":17,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":197,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":99,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":283,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests2.DelegateToTest.testStubDelegate":141,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":199,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.UsageConstraintsTest.greaterThan":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.floatType":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":79,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":66,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":221,"org.easymock.tests2.UsageConstraintsTest.testSame":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":212,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":227,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests.GenericTest.testBridgedEquals":53,"org.easymock.tests.UsageExpectAndReturnTest.longType":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":280,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":274,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":293,"org.easymock.tests2.MockedExceptionTest.testRealException":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":263,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":218,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":71,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.object":230,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":129,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":310,"org.easymock.tests2.UsageConstraintsTest.testOr":74,"org.easymock.tests.UsageRangeTest.combination":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.UsageTest.wrongArguments":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests.MockClassControlTest.testHashCode":64,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":136,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests.DefaultClassInstantiatorTest.object":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":296,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":209,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":196,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests2.UsageConstraintsTest.constraints":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.tests.UsageStrictMockTest.testVerify":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":281,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":48,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
