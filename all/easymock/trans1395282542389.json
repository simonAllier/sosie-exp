[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[5,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[5,77,78,79,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,80,81,82,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,83,7,84,8,9,10,11,40,13,14,15,16,85,86,17,18,87,88,89,19,90,91,20,21,22,23,24,25,92,93,70,26,94,95,27,28,29,96,97,98,99,100],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[105,106,107,108,109,110,111],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[105,106,107,110,111],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[112,113,7,13,114,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[129,130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[38,131,132,133,134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[5,6,8,140,141,17,20],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[143,144,105,106,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,2,3,4,174,175,176,177,178,179,180,5,6,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,83,198,7,199,84,8,9,200,201,77,78,79,202,203,204,205,206,30,207,31,32,33,34,35,36,208,209,37,38,210,211,212,213,214,215,216,217,39,218,219,12,220,221,222,223,224,225,226,227,228,229,40,230,13,14,231,41,15,16,85,232,233,234,235,236,237,238,239,129,240,241,242,243,244,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,245,246,247,248,249,250,86,251,252,253,254,255,256,130,257,258,259,260,261,262,263,264,265,266,267,268,269,131,270,271,272,273,274,275,132,276,277,278,279,280,281,282,283,284,285,286,287,62,288,289,290,291,292,293,294,133,295,296,297,298,299,300,301,302,303,80,81,82,63,64,65,66,67,68,304,305,306,307,17,308,69,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,18,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,87,370,371,372,88,89,373,374,19,375,376,377,90,378,379,91,20,21,380,381,382,383,384,22,385,386,387,388,389,390,391,23,24,25,392,393,92,394,395,396,397,398,399,135,400,401,402,403,404,405,406,407,93,408,409,410,411,412,413,414,415,416,417,70,418,419,26,94,95,420,71,142,27,28,29,96,421,422,423,424,425,426,427,116,428,117,118,119,120,121,122,429,123,125,126,430,127,431,432,433,434,435,436,437,438,439,440,441,72,73,74,75,442,443,444,445,97,446,98,447,448,449,450,451,452,453,111,454,455,99,456,100,457,458,134,76,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,102,103,104,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[482,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[482,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[112,113,161,7,199,13,14,231,41,15,16,85,232,233,235,114,115,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[25,456,458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[381,383,413,415],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[112,136,113,492,1,180,5,6,7,199,8,9,230,13,232,233,17,379,20,21,419,493,114,494,137,138,495,496,115,497],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[366,386],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[144,145,147,148,150,157,159,184,185,187,197,199,8,9,202,203,204,205,208,212,225,226,227,228,229,243,244,306,309,310,311,312,313,314,317,318,320,321,322,324,325,326,327,328,18,329,330,331,347,350,360,366,379,20,21,22,387,389,390,24,421,422,423,424,425,426,427,446,98,447,448,449,450,453,99,456,100,473,474,475,480,484],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,5,6,7,8,12,13,14,15,16,17,20,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[112,113,7,13,114,115],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[143,144,105,106,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,498,161,162,163,164,165,166,499,167,168,169,170,171,172,173,2,3,4,174,175,176,177,178,179,180,5,6,181,182,183,184,185,186,187,188,189,190,191,500,501,192,193,194,195,196,197,83,198,7,199,84,8,9,200,201,77,78,79,202,203,204,205,206,30,207,31,32,33,34,35,36,208,209,37,38,210,211,212,213,214,11,215,216,217,39,218,219,12,220,221,222,223,224,225,226,227,228,229,40,230,13,14,231,41,15,16,85,232,233,234,235,236,237,238,239,129,240,241,242,243,244,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,245,246,247,248,249,250,86,251,252,253,254,255,256,130,257,258,259,260,261,262,263,264,265,266,267,268,269,131,270,271,272,273,274,275,132,276,277,278,279,280,281,282,283,284,285,286,287,62,288,289,290,291,292,293,294,133,295,296,297,298,299,300,301,302,303,80,81,82,63,64,65,66,67,68,304,305,306,307,17,308,69,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,18,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,87,370,371,372,88,89,373,374,19,375,376,377,90,378,379,91,20,21,380,381,382,383,384,107,22,385,502,386,387,388,389,503,390,504,391,23,24,110,25,392,393,92,394,395,396,397,398,399,135,400,401,402,403,404,405,406,407,93,408,409,410,411,412,413,414,415,416,417,70,418,419,26,94,95,420,71,142,27,28,29,96,421,422,423,424,505,425,426,427,506,116,428,117,118,119,120,121,122,429,123,125,126,430,127,507,431,432,433,434,435,436,437,438,439,440,441,72,73,74,75,442,443,444,445,97,446,98,447,448,449,450,451,452,453,111,454,455,99,456,100,457,458,134,76,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,102,103,104,475,476,508,477,478,479,480,481,482,483,484,485,486,487,488,509,510,511,489,490,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[105,106,107,502,503,504,391,110,111,102,475,476,508],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":394,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":265,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":95,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":64,"org.easymock.tests.MockingTest.testPartialClassMocking":184,"org.easymock.tests.MockClassControlTest.testToString":279,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":437,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":350,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":400,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":194,"org.easymock.tests2.UsageConstraintsTest.testNull":397,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":284,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":61,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":204,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":510,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":138,"org.easymock.tests.ReplayStateInvalidUsageTest.times":300,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":337,"org.easymock.tests2.DependencyTest.testClassMocking":471,"org.easymock.tests2.AnswerTest.answer":431,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":445,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":501,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":418,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":372,"org.easymock.tests2.DelegateToTest.testDelegate":487,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":57,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":232,"org.easymock.tests2.CaptureTest.testCapture1_2446744":119,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":443,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":133,"org.easymock.tests.UsageThrowableTest.throwError":30,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":193,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":368,"org.easymock.samples.PartialClassMockTest.testGetArea":144,"org.easymock.tests.MockingTest.testInterfaceMocking":186,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.UsageTest.niceToStrict":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":387,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":406,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":39,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":320,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":405,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":248,"org.easymock.tests.MockClassControlTest.testEquals":283,"org.easymock.tests2.EasyMockSupportClassTest.testAll":347,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":444,"org.easymock.tests2.CaptureTest.testCaptureAll":428,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":285,"org.easymock.tests2.UsageConstraintsTest.testMatches":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":255,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":499,"org.easymock.tests2.UsageConstraintsTest.greaterThan":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":478,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":511,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":451,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":214,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":370,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":63,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":482,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":371,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":316,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":480,"org.easymock.tests2.CaptureTest.testCapture2_2446744":430,"org.easymock.tests2.UsageTest.moreThanOneArgument":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":254,"org.easymock.tests.GenericTest.testBridgedEquals":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":413,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":4,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":422,"org.easymock.tests.MockingTest.testNiceClassMocking":190,"org.easymock.tests.MockingTest.testClassMocking":182,"org.easymock.tests2.UsageConstraintsTest.testContains":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":396,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":374,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":250,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":177,"org.easymock.tests.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":158,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":476,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.MockClassControlTest.testHashCode":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":137,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":442,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":507,"org.easymock.tests.UsageVarargTest.varargCharAccepted":249,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastCall":420,"org.easymock.tests.DefaultClassInstantiatorTest.object":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":80,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":175,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":99,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":77,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":495,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":366,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":66,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":115,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":54,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":101,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":432,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":160,"org.easymock.tests.UsageExpectAndThrowTest.object":52,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":411,"org.easymock.tests2.DelegateToTest.testWrongClass":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.samples.ConstructorCalledMockTest.testTax":105,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":490,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":112,"org.easymock.tests2.CaptureTest.testCaptureNone":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":213,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":10,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":253,"org.easymock.tests2.ThreadingTest.testThreadSafe":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":173,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":178,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests2.CaptureTest.testCapture_2617107":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":274,"org.easymock.tests2.UsageConstraintsTest.any":402,"org.easymock.tests2.StubTest.stub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageExpectAndThrowTest.longType":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":165,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":464,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":306,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":380,"org.easymock.tests2.NameTest.nameForMocksControl":441,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":349,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":446,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":390,"org.easymock.tests.MockingTest.testNicePartialClassMocking":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":450,"org.easymock.tests2.CaptureTest.testCaptureLast":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":427,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":135,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":412,"org.easymock.tests.MockingTest.testTwoMocks":183,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":506,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":416,"org.easymock.samples.ExampleTest.removeNonExistingDocument":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":163,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":479,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":508,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":360,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":456,"org.easymock.tests.LimitationsTest.privateConstructor":305,"org.easymock.tests2.UsageConstraintsTest.testNotNull":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests2.UsageTest.defaultResetToNice":142,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":324,"org.easymock.tests.UsageVarargTest.differentLength":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.CallbackTest.callback":97,"org.easymock.tests2.UsageConstraintsTest.equals":395,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":37,"org.easymock.tests.UsageCallCountTest.tooFewCalls":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.MockingTest.testStrictClassMocking":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":426,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":425,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":436,"org.easymock.tests.ObjectMethodsTest.testHashCode":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":481,"org.easymock.tests2.NameTest.nameForNiceMock":440,"org.easymock.tests2.DependencyTest.testInterfaceMocking":473,"org.easymock.samples.ExampleTest.addDocument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.stubAnswer":435,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":504,"org.easymock.tests.UsageVarargTest.varargLongAccepted":252,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":264,"org.easymock.tests.UsageExpectAndReturnTest.floatType":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":475,"org.easymock.tests2.ConstraintsToStringTest.orToString":493,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":409,"org.easymock.tests.UsageThrowableTest.noUpperLimit":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":393,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":488,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":120,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":162,"org.easymock.tests2.UsageConstraintsTest.testSame":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":310,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":188,"org.easymock.tests2.NameTest.nameForMock":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":321,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":56,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":331,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":303,"org.easymock.tests2.NameTest.nameForStrictMock":439,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":489,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":140,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":417,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":263,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.UsageConstraintsTest.testOr":399,"org.easymock.tests.UsageRangeTest.combination":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":322,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":166,"org.easymock.tests.UsageVarargTest.varargShortAccepted":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":2,"org.easymock.tests2.UsageConstraintsTest.cmpTo":403,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":258,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":385,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":172,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":323,"org.easymock.tests2.CaptureTest.testCapture":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":201,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.LimitationsTest.abstractClass":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":315,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246}}]
