[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,1,56,2,57,3,4,58,59,60,61,62,63,64,65,66,67,6,68,69,70,7,71,72,73,8,74,75,76,77,78,79,10,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[33,34,124,127,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[185,186,19,187,44,188,189,190,191,192,193,194,195,196,197,198,199,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"i","minimum":"i","maximum":"i"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[95,96,210,211],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[212,213,214,215,216,217,218,188,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[233,11,234,12,13,235,14,236,237,238,239,240,241,15,16,17,18,185,186,19,187,20,203,242,243,244,245,246,247,21,248,249,250,251,252,253,254,255,22,23,24,25,26,27,256,28,29,30,257,258,259,260,261,262,31,263,264,265,266,267,268,269,270,32,271,33,34,272,273,274,275,276,277,278,35,36,37,279,38,280,39,40,41,281,282,42,43,283,44,284,285,286,287,288,289,290,291,292,293,45,294,295,46,296,297,298,299,300,301,302,303,304,47,305,306,307,308,309,48,310,311,49,50,51,52,53,54,55,0,1,312,56,2,57,3,4,58,5,59,60,61,62,63,64,65,66,67,6,68,69,313,70,7,71,72,314,315,316,317,318,319,320,321,322,323,73,324,325,326,8,74,9,75,76,327,328,77,78,79,10,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,329,95,96,210,330,331,332,333,97,334,335,336,98,337,201,338,99,339,100,209,101,340,341,342,102,343,344,103,104,105,106,107,108,345,346,109,347,348,349,110,111,112,350,351,113,114,115,352,353,354,355,116,117,118,119,356,357,358,359,120,360,121,361,362,363,364,365,366,367,368,369,370,371,372,373,374,122,123,375,124,376,125,212,213,214,215,216,217,218,188,219,220,221,222,223,224,225,226,377,227,228,229,230,231,378,232,379,380,381,126,382,127,128,383,384,129,130,385,386,131,132,387,388,133,389,390,134,391,189,190,191,192,193,194,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,195,409,410,411,412,413,414,135,415,136,137,196,416,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,417,418,419,420,421,164,197,422,423,424,425,426,427,428,429,430,431,432,433,434,165,435,166,167,168,169,170,171,172,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,173,174,175,456,457,458,176,177,459,178,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,179,481,180,181,182,183,184,198,199,200,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[271,33,278,35,43,65,116,375,376,125,382,127,129,133,495,496,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29,257,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[20,203,95,204,205,206,497,209,341],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[233,11,234,12,13,235,14,236,237,238,239,240,241,15,16,17,18,185,186,19,187,20,203,242,243,244,245,246,247,21,248,249,250,251,252,253,254,255,22,23,24,25,26,27,256,28,29,30,257,258,259,260,261,262,31,263,264,265,266,267,268,269,270,32,271,33,34,272,273,274,275,276,277,278,35,36,37,279,38,280,39,40,41,281,282,42,43,283,44,284,285,286,287,288,289,290,291,292,293,45,294,295,46,296,297,298,299,300,301,302,303,304,47,305,306,307,308,309,48,310,311,49,50,51,52,53,54,55,0,1,312,56,2,57,3,4,58,5,59,60,61,62,63,64,65,66,67,6,68,69,313,70,7,71,72,314,315,316,317,318,319,320,321,322,323,73,324,325,326,8,74,9,75,76,327,328,77,78,79,10,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,329,95,96,210,330,331,332,333,97,334,335,336,98,337,201,338,99,339,100,209,101,340,341,342,102,343,344,103,104,105,106,107,108,345,346,109,347,348,349,110,111,112,350,351,113,114,115,352,353,354,355,116,117,118,119,356,357,358,359,120,360,121,361,362,363,364,365,366,367,368,369,370,371,372,373,374,122,123,375,124,376,125,212,213,214,215,216,217,218,188,219,220,221,222,223,224,225,226,377,227,228,229,230,231,378,232,379,380,381,126,382,127,128,383,384,129,130,385,386,131,132,387,388,133,389,390,134,391,189,190,191,192,193,194,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,195,409,410,411,412,413,414,135,415,136,137,196,416,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,417,418,419,420,421,164,197,422,423,424,425,426,427,428,429,430,431,432,433,434,165,435,166,167,168,169,170,171,172,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,173,174,175,456,457,458,176,177,459,178,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,179,481,180,181,182,183,184,198,199,200,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[244,245,246,247,249,250,251,252,253,259,260,261,262,264,265,266,267,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[322,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[11,234,12,13,235,14,237,185,186,19,187,20,22,25,26,29,30,270,32,271,33,34,272,278,35,36,37,279,38,280,39,40,281,282,42,43,283,44,49,50,51,52,53,54,55,0,1,56,2,57,3,4,58,59,60,61,62,63,64,65,66,67,6,68,69,313,70,7,71,72,319,321,323,73,324,326,8,74,9,75,76,327,328,77,78,79,10,80,81,82,95,96,210,330,333,97,334,99,103,104,105,106,107,108,109,111,113,114,115,116,118,119,120,360,122,123,375,124,376,125,380,381,126,382,127,128,383,129,130,386,131,132,387,388,133,134,189,190,191,192,193,194,392,403,410,412,413,135,136,137,196,416,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,197,422,423,424,426,427,429,430,431,432,433,165,435,166,167,168,169,170,171,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,176,177,178,465,466,467,468,470,471,180,181,182,183,184,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[32,33,34,104,106,108,349,112,381,126,127,128,384,385],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,58,63,72],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29,257,298,301,302,104,349,112,176,177,178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[500,501,381,385,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[234,281,312,2,57,7,71,387,422,433],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.UsageTest.argumentsOrdered":282,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":280,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests2.DelegateToTest.testReturnException":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":474,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":314,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":436,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":136,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":354,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":461,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":92,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":455,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":388,"org.easymock.tests.UsageVarargTest.varargIntAccepted":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":286,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":407,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":254,"org.easymock.tests2.AnswerTest.answer":330,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":364,"org.easymock.tests2.UsageTest.strictResetToDefault":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":421,"org.easymock.tests2.DelegateToTest.testDelegate":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":451,"org.easymock.tests.LimitationsTest.mockFinalMethod":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":492,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":311,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":459,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":437,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":398,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":250,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":445,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":309,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":155,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests.MockClassControlTest.testEquals":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":453,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":434,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":433,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":124,"org.easymock.samples.BasicClassMockTest.testPrintContent":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":170,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":497,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":489,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":490,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":345,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":392,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":228,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":432,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":470,"org.easymock.tests.UsageExpectAndReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":454,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":199,"org.easymock.tests.UsageCallCountTest.tooManyCalls":471,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":441,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":169,"org.easymock.tests.MockingTest.testNiceClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":457,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":464,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":321,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":379,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":91,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":205,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":396,"org.easymock.tests.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":203,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests.ResultTest.createThrowResultToString":498,"org.easymock.tests.MockClassControlTest.testHashCode":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":302,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":410,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":273,"org.easymock.tests.UsageVarargTest.varargCharAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastCall":39,"org.easymock.tests.DefaultClassInstantiatorTest.object":483,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":198,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests2.UsageTest.resumeIfFailure":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests2.SerializationTest.testAllMockedMethod":210,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":448,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":211,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":378,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":331,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":481,"org.easymock.tests.UsageExpectAndThrowTest.object":446,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests.UsageStrictMockTest.range":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":289,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":447,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":175,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.UsageUnorderedTest.message":375,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageVarargTest.varargByteAccepted":431,"org.easymock.tests2.ThreadingTest.testThreadSafe":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":305,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":468,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":397,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":494,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":406,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.UsageExpectAndThrowTest.longType":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":487,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":405,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests.LimitationsTest.mockNativeMethod":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":245,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":440,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":458,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":444,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":236,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":403,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":485,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":51,"org.easymock.tests2.MockBuilderTest.testCreateMockString":344,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":472,"org.easymock.tests.UsageExpectAndThrowTest.floatType":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":296,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":333,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":242,"org.easymock.tests.UsageVerifyTest.twoThrows":376,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":171,"org.easymock.tests2.UsageTest.defaultResetToNice":41,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":223,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":244,"org.easymock.tests2.CallbackTest.callback":278,"org.easymock.tests2.UsageConstraintsTest.equals":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":196,"org.easymock.tests.UsageCallCountTest.tooFewCalls":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":28,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":334,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":207,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":53,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":206,"org.easymock.samples.ExampleTest.addDocument":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":306,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":340,"org.easymock.tests.UsageVarargTest.varargLongAccepted":430,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":435,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":284,"org.easymock.tests2.SerializationTest.test":96,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":327,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":145,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":256,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":297,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":265,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":460,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":156,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":450,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":290,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":137,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":288,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":219,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":301,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":386,"org.easymock.tests2.MockBuilderTest.testWithConstructor":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":298,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":488,"org.easymock.tests.UsageVarargTest.varargShortAccepted":429,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":215,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":400,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":385,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":158,"org.easymock.tests2.CaptureTest.testCapture":202,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":382,"org.easymock.samples.ExampleTest.addAndChangeDocument":237,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89}}]
