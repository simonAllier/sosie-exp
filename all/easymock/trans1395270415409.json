[{"position":"org.easymock.internal.LastControl:94","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[20],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[21,22,23,24,25,26],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[27,28,29,30,31,32,33,21,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,24,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,1,337,2,3,4,5,6,7,8,9,338,339,340,341,342,343,344,345,10,11,346,347,348,12,13,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,14,15,16,17,474,475,476,477,478,479,18,19,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[482,483,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[391,392,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,92,93,94,95,97,98,100,101,112,114,115,116,118,119,123,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,172,173,175,176,177,178,179,180,181,184,233,236,239,240,24,241,242,243,244,245,246,247,248,254,255,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,281,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,316,317,318,319,320,321,322,323,326,332,335,336,0,1,2,3,4,5,6,7,9,338,339,340,341,342,343,344,345,10,11,346,347,348,12,13,349,350,353,354,355,360,361,362,363,364,366,367,368,369,370,371,372,378,386,387,388,390,392,393,396,397,398,399,400,401,402,404,405,406,407,408,421,448,455,456,457,458,459,460,461,462,463,465,468,470,14,15,16,17,474,475,476,477,478,479,18,19,480,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[48,238,485,260,261,262,307,414,467,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118,207,275,386,388,389,390],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[326,338,486],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[487,488,489,490,491,492,493,395,467,472,473],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[489,310,494,495,496,497,498,391,394,395],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[335,0,344,348,499],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,3,5,6,8,10,12,14,16,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[21,34,37,38,500,501,122,129,136,137,24,243,291,297,298,459],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[51,52,53,101,132,176,177,178,179,180,181,212,360,361,362,363,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[171,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.Range:83","failures":[32,33,34,35,36,37,38,39,88,125,129,131,134,135,136,137,160,180,24,241,242,243,244,288,290,291,294,295,297,298,300,3,9,343,12,350,354,372,387,410,411,412,413,457,458,459,460,463,15,16,474,475,476,477,478,481],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:907","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[32,33,35,36,39,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,100,101,105,106,108,112,113,114,115,116,118,119,121,123,124,125,126,127,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,172,180,184,221,241,243,244,247,248,249,266,267,268,269,270,272,274,275,276,277,279,287,288,289,290,292,294,295,296,299,300,302,305,307,308,312,316,317,318,319,320,321,322,323,326,330,331,332,335,336,0,1,2,3,4,5,6,7,9,338,339,340,341,342,343,344,345,10,11,346,347,348,12,13,349,350,354,355,362,367,368,369,370,371,372,378,386,387,388,390,391,392,394,396,397,398,399,400,401,402,403,404,405,406,407,421,424,434,440,448,457,459,460,463,465,466,467,468,470,471,472,14,15,16,17,474,477,478,479,18,480,481],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[489,310,494,495,496,497,498,391,394,395],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.UsageTest.argumentsOrdered":298,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":215,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":293,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":273,"org.easymock.tests2.DelegateToTest.testReturnException":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.tests.MockClassControlTest.testToString":260,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":57,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":275,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":110,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":321,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":405,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":29,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":448,"org.easymock.tests.ReplayStateInvalidUsageTest.times":194,"org.easymock.tests2.DependencyTest.testClassMocking":314,"org.easymock.tests2.AnswerTest.answer":350,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":45,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":114,"org.easymock.tests2.DelegateToTest.testDelegate":390,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":72,"org.easymock.tests.LimitationsTest.mockFinalMethod":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":170,"org.easymock.tests2.DependencyTest.testClassMockingSupport":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":126,"org.easymock.tests2.CaptureTest.testCapture1_2446744":474,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":188,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":47,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":31,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":272,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":189,"org.easymock.tests.MockingTest.testInterfaceMocking":107,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":58,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests2.UsageTest.niceToStrict":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":305,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":66,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":340,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":479,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":80,"org.easymock.tests2.EasyMockSupportClassTest.testAll":421,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":168,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":342,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":30,"org.easymock.samples.ExampleTest.voteForRemovals":279,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":169,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":498,"org.easymock.tests2.UsageConstraintsTest.greaterThan":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":332,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":204,"org.easymock.samples.ExampleTest.voteForRemoval":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":333,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":398,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.CaptureTest.testCaptureFirst":481,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":399,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":300,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":480,"org.easymock.tests2.UsageTest.moreThanOneArgument":290,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":75,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":52,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":466,"org.easymock.tests.MockingTest.testNiceClassMocking":111,"org.easymock.tests.MockingTest.testClassMocking":103,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":91,"org.easymock.tests2.UsageConstraintsTest.testContains":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":362,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":366,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":40,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":464,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":483,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":407,"org.easymock.tests.DefaultClassInstantiatorTest.object":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":54,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":234,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":261,"org.easymock.tests2.UsageTest.resumeIfFailure":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":348,"org.easymock.tests2.SerializationTest.testAllMockedMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":69,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":351,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":42,"org.easymock.tests.UsageExpectAndThrowTest.object":67,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":11,"org.easymock.tests2.DelegateToTest.testWrongClass":388,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.tests.UsageStrictMockTest.range":243,"org.easymock.samples.ConstructorCalledMockTest.testTax":282,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":416,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":22,"org.easymock.tests2.CaptureTest.testCaptureNone":478,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests.UsageUnorderedTest.message":129,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":95,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":225,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":202,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":192,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":458,"org.easymock.tests2.SerializationTest.testClass":391,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":378,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":461,"org.easymock.tests2.NameTest.nameForMocksControl":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":61,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":365,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":323,"org.easymock.tests2.CompareToTest.testNotComparable":20,"org.easymock.tests2.CompareToTest.testCompareEqual":486,"org.easymock.tests2.CaptureTest.testCaptureLast":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":346,"org.easymock.tests.MockingTest.testTwoMocks":104,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":65,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.samples.ExampleTest.removeNonExistingDocument":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":200,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":313,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":59,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":353,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":434,"org.easymock.samples.ExampleTest.voteAgainstRemoval":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":331,"org.easymock.tests.LimitationsTest.privateConstructor":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":360,"org.easymock.tests2.UsageTest.defaultResetToNice":296,"org.easymock.samples.ExampleTest.voteAgainstRemovals":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":372,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":327,"org.easymock.tests.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":132,"org.easymock.tests.UsageCallCountTest.tooFewCalls":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests.MockingTest.testStrictClassMocking":102,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":470,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":355,"org.easymock.tests.ObjectMethodsTest.testHashCode":235,"org.easymock.tests2.NameTest.nameForNiceMock":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":371,"org.easymock.tests2.DependencyTest.testInterfaceMocking":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":387,"org.easymock.tests2.AnswerTest.stubAnswer":354,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":309,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":394,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":283,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":336,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":414,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":475,"org.easymock.tests2.SerializationTest.test":392,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":109,"org.easymock.tests2.NameTest.nameForMock":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":460,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":71,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":115,"org.easymock.tests2.MockedExceptionTest.testRealException":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":197,"org.easymock.tests2.NameTest.nameForStrictMock":411,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":364,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":302,"org.easymock.tests2.UsageStrictMockTest.range":459,"org.easymock.tests2.UsageConstraintsTest.lessThan":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":319,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.MockBuilderTest.testWithConstructor":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests2.UsageConstraintsTest.cmpTo":338,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":187,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":94,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.samples.ExampleTest.addAndChangeDocument":281,"org.easymock.tests.UsageStrictMockTest.testVerify":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":167,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.LimitationsTest.abstractClass":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":402,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
