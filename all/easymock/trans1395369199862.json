[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[57,58,59,60,61],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[89,90,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[63,91,92,93,94,73,81,83,84,85,95,96,97,98],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[62,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,116,117,117,118,119,120,121,122,123,124,125,126,127,72,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[65,91,92,93,67,140,141,142,94,143,79,144,86,95,96,97,98],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[148,149,18,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[150,151,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[154,155,156,157,158,159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[62,63,64,162,163,164,65,91,92,93,94,72,73,74,165,166,167,82,83,84,168,169,85,86,95,96,97,98,87,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests.MockNameTest.defaultName":165,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":157,"org.easymock.tests2.SerializationTest.testAllMockedMethod":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":156,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.MockClassControlTest.testToString":51,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":116,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":117,"org.easymock.tests2.ConstraintsToStringTest.orToString":66,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":13,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":1,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.UsageConstraintsTest.testSame":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":145,"org.easymock.tests.UsageUnorderedTest.message":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":5,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":152,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":151,"org.easymock.tests.UsageTest.argumentsOrdered":98,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":8,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":169,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":71,"org.easymock.tests2.NameTest.nameForMock":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":158,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":80,"org.easymock.tests2.MockedExceptionTest.testMockedException":11,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests.MockingTest.testNiceClassMocking":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":133,"org.easymock.tests.MockingTest.testClassMocking":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":3,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":58,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.MockTypeTest.fromEasyMockClass":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":14,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":87,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":139,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":150,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":144,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":96,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":33,"org.easymock.tests2.ConstraintsToStringTest.andToString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":49,"org.easymock.tests.MockClassControlTest.testHashCode":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":4,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":50,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":6,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":111,"org.easymock.tests.DefaultClassInstantiatorTest.object":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests.UsageTest.unexpectedCallWithArray":95,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":168,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":7,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":10,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests2.ConstraintsToStringTest.notToString":68,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":52,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":69,"org.easymock.tests2.EasyMockSupportClassTest.testAll":2,"org.easymock.tests.MockClassControlTest.testEquals":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.MockingTest.testStrictClassMocking":45,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":89}}]
