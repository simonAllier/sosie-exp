[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,456,457,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[67,68,69,472],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[67,68,69,472],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:190","sourceCode":"if ((java.lang.reflect.Type[].int) != (java.lang.Class<?>[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[85,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[36,38,39,40,41,42,43,45,473,46,47,49],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[73,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[103,219,280,281,307,474,475],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[181,182],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[103,109,115,116,219,280,281,304,307,337,338,341,342,365,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[103,109,115,116,219,280,281,304,307,337,338,341,342,365,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[292,367,423],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[10,16,28,477],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,3,6,8,9,11,21,26,36,38,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[30,31,32,34,361,459],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[254,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[67,68,69,472],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[70,71,72,74,77,78,81,136,137,138,140,143,144,147,466,467],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[50,51,52,53,55,56,69,119,120,122,123,124,125,127,129,130,131,132,133,134,135,153,156,158,160,161,164,167,170,171,174,185,186,187,189,190,214,215,216,218,250,251,252,253,254,255,256,282,283,284,285,286,288,291,331,332,333,334,376,392,393,394,395,396,397,398,399,455,456,457,470,471],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[101,103,104,120,122,124,130,133,304,305,307,308,310,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[50,51,52,53,55,56,67,69,95,96,119,120,122,123,124,125,127,128,129,130,131,132,133,134,135,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,185,186,187,189,482,483,190,194,195,196,197,198,199,200,201,202,203,204,205,214,215,216,217,218,238,241,250,251,252,253,254,255,256,282,283,284,285,286,288,291,331,332,333,334,376,392,393,394,395,396,397,398,399,455,456,456,457,457,470,471],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[128,484,485,456,457],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[377,388,389],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[487,488,489,490,491,492,67,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,493,494,202],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[18,111,123],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,8,9,11,21,36,38,46],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[31,50,51,52,53,54,55,56,97,98,101,103,104,119,120,121,122,123,124,127,131,132,133,156,159,169,175,178,183,195,198,200,201,204,215,217,220,231,232,233,234,236,237,269,285,286,288,292,305,307,308,333,344,345,346,347,348,355,356,357,358,367,368,402,403,404,405,406,407,410,411,413,414,415,417,418,419,420,421,423,455,458,460,461,463,469],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":440,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":111,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":467,"org.easymock.tests2.DelegateToTest.testReturnException":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":350,"org.easymock.tests.MockingTest.testPartialClassMocking":285,"org.easymock.tests.MockClassControlTest.testToString":394,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":206,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":163,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":311,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests2.UsageTest.wrongArguments":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":371,"org.easymock.samples.ExampleTest.answerVsDelegate":459,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":91,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":330,"org.easymock.tests.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":425,"org.easymock.tests.UsageTest.argumentsOrdered":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":344,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":348,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests2.DependencyTest.testClassMocking":95,"org.easymock.tests2.AnswerTest.answer":57,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":66,"org.easymock.tests2.CaptureTest.testAnd":36,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":429,"org.easymock.tests2.DelegateToTest.testDelegate":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":326,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests2.DependencyTest.testClassMockingSupport":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":64,"org.easymock.tests.UsageThrowableTest.throwError":223,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":240,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":177,"org.easymock.samples.PartialClassMockTest.testGetArea":455,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.tests.MockingTest.testInterfaceMocking":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":345,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":164,"org.easymock.tests2.UsageTest.niceToStrict":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":312,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":198,"org.easymock.tests2.MockBuilderTest.testCreateMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":320,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":489,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":413,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":479,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests.MockClassControlTest.testEquals":398,"org.easymock.tests2.EasyMockSupportClassTest.testAll":156,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":328,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":486,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":454,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.samples.ExampleTest.voteForRemovals":463,"org.easymock.tests.UsageVarargTest.allKinds":388,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":279,"org.easymock.samples.BasicClassMockTest.testPrintContent":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":354,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.samples.ExampleTest.voteForRemoval":460,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":376,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":84,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":349,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":29,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":409,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":183,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":387,"org.easymock.tests.GenericTest.testBridgedEquals":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":490,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":405,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":329,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":24,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":291,"org.easymock.tests.MockingTest.testClassMocking":283,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":294,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests.MockTypeTest.fromEasyMockClass":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":152,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.object":412,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":90,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":343,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":426,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":418,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":361,"org.easymock.tests.MockClassControlTest.testHashCode":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":71,"org.easymock.tests2.EasyMockSupportTest.testVerify":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":166,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":427,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":193,"org.easymock.tests.UsageVarargTest.varargCharAccepted":381,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":211,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":70,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":396,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":419,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":389,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":175,"org.easymock.tests2.UsageTest.resumeIfFailure":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":352,"org.easymock.tests2.StubTest.stubWithReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":411,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":446,"org.easymock.samples.SupportTest.voteForRemovals":469,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":323,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":472,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":452,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":58,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":424,"org.easymock.tests.UsageExpectAndThrowTest.object":321,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":456,"org.easymock.tests.UsageStrictMockTest.range":307,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":191,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":267,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":370,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":368,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":495,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":281,"org.easymock.tests.UsageVarargTest.varargByteAccepted":386,"org.easymock.tests2.ThreadingTest.testThreadSafe":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":170,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":470,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.UsageConstraintsTest.any":12,"org.easymock.tests2.StubTest.stub":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndThrowTest.longType":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":254,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.LimitationsTest.mockNativeMethod":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":421,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":158,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":340,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":151,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":315,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":201,"org.easymock.tests.MockingTest.testNicePartialClassMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":374,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":23,"org.easymock.tests.MockingTest.testTwoMocks":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":319,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":27,"org.easymock.samples.ExampleTest.removeNonExistingDocument":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":143,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":72,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":252,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":182,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":160,"org.easymock.tests.UsageExpectAndThrowTest.floatType":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":155,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":60,"org.easymock.tests.UsageVerifyTest.twoThrows":280,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":114,"org.easymock.samples.ExampleTest.voteAgainstRemovals":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests.UsageVarargTest.differentLength":383,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":128,"org.easymock.tests.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":372,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.MockingTest.testStrictClassMocking":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":54,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":62,"org.easymock.tests2.CompareToTest.testGreateOrEqual":477,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":184,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.samples.ExampleTest.addDocument":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.DelegateToTest.testStubDelegate":31,"org.easymock.tests2.AnswerTest.stubAnswer":61,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":305,"org.easymock.tests.UsageVarargTest.varargLongAccepted":385,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":420,"org.easymock.tests.UsageExpectAndReturnTest.floatType":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":457,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":79,"org.easymock.tests.UsageThrowableTest.noUpperLimit":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":68,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":403,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":468,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":161,"org.easymock.tests.GenericTest.testPackageScope":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":78,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":289,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":414,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":325,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":358,"org.easymock.tests2.MockedExceptionTest.testRealException":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":190,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":474,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":195,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":165,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":338,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":162,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":415,"org.easymock.tests.UsageVarargTest.varargShortAccepted":384,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":13,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":196,"org.easymock.tests.UsageTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":416,"org.easymock.tests2.CaptureTest.testCapture":473,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":465,"org.easymock.tests.UsageStrictMockTest.testVerify":310,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":466,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":408,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":378}}]
