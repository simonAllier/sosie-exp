[{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[5],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[6],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,73,74,75,76,77,78,79,80,53,81,82,83,84],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[85,86],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,7,103,104,72,105,106,107,8,108,73,74,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,9,138,139,140,141,142,143,144,145,146,55,147,56,57,58,59,60,61,148,62,64,65,149,66,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,10,11,12,13,189,67,190,68,69,191,192,193,194,195,196,197,198,199,75,200,201,202,203,204,205,70,206,207,208,209,210,211,212,213,214,215,216,217,14,218,219,15,220,221,222,223,224,225,16,17,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,18,248,76,77,249,19,78,79,250,251,252,253,254,255,256,257,258,259,260,261,262,80,263,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,264,41,42,43,44,45,46,265,266,47,48,49,50,51,52,267,268,269,270,271,272,273,274,275,276,277,278,279,280,53,81,281,282,283,284,285,286,71,54,287,288,289,290,291,292,293,294,295,296,296,297,298,83,299,300,84,301,302,303,304,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:2124","failures":[95,96,97,101,102,70],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[87,88,89,90,91,92,93,94,95,306,307,96,97,98,99,100,101,102,7,103,104,72,105,106,107,8,108,73,74,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,308,309,310,311,137,9,138,139,140,141,142,143,144,145,146,55,147,56,57,58,59,60,61,148,62,64,65,149,66,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,10,11,12,13,189,312,67,190,68,313,69,191,192,193,194,195,196,197,198,199,75,200,201,202,203,204,205,70,206,207,208,209,314,210,211,212,212,213,213,214,215,216,315,316,317,217,14,218,219,15,220,221,222,223,318,224,225,16,17,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,18,248,76,77,249,19,78,79,250,319,320,321,322,323,251,252,253,254,255,256,257,258,259,260,261,262,80,324,325,326,327,328,329,330,331,332,333,334,335,336,263,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,337,338,40,264,41,42,43,44,45,46,265,266,339,340,341,342,343,344,345,346,47,48,49,50,51,52,267,268,269,270,271,272,273,274,275,276,277,278,279,347,348,349,350,351,352,353,354,355,280,53,81,281,282,283,284,285,286,356,71,54,357,358,287,359,360,361,288,289,290,291,292,293,362,294,295,297,298,83,299,300,84,301,302,363,364,303,304,305,365,366,367,368,369],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[370,179],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[88,132,372,373,374,375,376,377,378,379],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,52,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[97,98],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[55,56,64,164,165,167,169,170,6,181,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[90,106,114,120,121,122,123,137,140,147,56,59,60,61,148,66,184,197,199,75,200,201,202,203,204,205,206,207,208,209,210,211,215,216,16,247,251,252,253,254,256,257,80,264,267,268,269,270,271,273,274,275,276,277,279,298,300,84,301,302],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[88,89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[88,134,135,136,138,139,380,140,142,143,145,146,156,159,160,381,214,382,383,347],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[88,132,372,384,385,386,373,387,374,388,389,212,213],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[390,391,392,393,394,87,395,396,397,398,399,400,88,89,90,91,92,93,94,95,306,307,96,97,98,401,402,99,100,101,403,102,7,103,104,72,105,106,107,8,108,73,74,109,110,404,405,406,407,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,372,384,408,409,410,133,411,412,134,413,414,415,416,417,418,419,420,421,135,422,423,424,425,426,136,427,428,429,308,309,310,311,137,9,138,385,139,380,386,430,140,141,142,373,143,374,144,145,388,146,431,55,147,56,57,58,59,60,61,148,62,64,65,149,66,150,151,152,153,154,155,156,432,157,389,433,158,159,160,161,434,381,162,163,164,165,435,166,167,168,169,170,171,6,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,10,11,12,13,436,437,438,439,440,189,441,442,443,444,445,446,312,67,190,68,313,69,191,192,193,194,195,196,197,198,199,75,200,201,202,203,204,205,70,206,207,208,209,314,210,211,212,212,213,213,214,215,216,315,316,317,217,14,218,219,15,220,221,222,223,318,224,225,16,17,226,382,447,448,383,449,450,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,18,248,76,77,249,19,78,79,250,319,320,321,322,323,251,252,253,254,255,256,257,258,259,260,261,262,80,451,324,452,453,454,455,456,457,458,459,325,326,327,328,329,330,331,332,333,334,335,336,460,461,263,462,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,337,338,463,40,264,41,42,43,44,45,46,265,266,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,339,371,480,481,482,483,340,484,341,342,343,485,344,345,346,486,487,47,48,49,50,51,52,267,268,269,488,270,271,272,273,274,275,276,277,85,278,279,347,86,348,349,350,351,352,353,354,355,280,53,81,281,282,283,284,285,286,356,71,54,357,358,287,359,360,361,288,289,290,291,292,293,362,294,295,297,298,83,299,300,84,301,302,363,489,490,364,303,304,491,305,492,493,494,365,366,367,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,7,103,104,72,105,106,107,8,108,73,74,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,9,138,139,140,141,142,143,144,145,146,55,147,56,57,58,59,60,61,148,62,64,65,149,66,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,10,11,12,13,189,67,190,68,69,191,192,193,194,195,196,197,198,199,75,200,201,202,203,204,205,70,206,207,208,209,210,211,212,213,214,215,216,217,14,218,219,15,220,221,222,223,224,225,16,17,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,18,248,76,77,249,19,78,79,250,251,252,253,254,255,256,257,258,259,260,261,262,80,263,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,264,41,42,43,44,45,46,265,266,47,48,49,50,51,52,267,268,269,270,271,272,273,274,275,276,277,278,279,280,53,81,281,282,283,284,285,286,71,54,287,288,289,290,291,292,293,294,295,297,298,83,299,300,84,301,302,303,304,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[165,170,181],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,76,497,498,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,171,176,188],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:156","sourceCode":"final java.lang.StackTraceElement[] java.lang.StackTraceElement[] = java.lang.Throwable.getStackTrace()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.UsageTest.argumentsOrdered":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":106,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":48,"org.easymock.tests.MockingTest.testPartialClassMocking":303,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":429,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":224,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":222,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":383,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":57,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":445,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.ReplayStateInvalidUsageTest.times":333,"org.easymock.tests2.DependencyTest.testClassMocking":401,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":94,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests2.DelegateToTest.testDelegate":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests.LimitationsTest.mockFinalMethod":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":92,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":327,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":448,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":428,"org.easymock.samples.PartialClassMockTest.testGetArea":214,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":316,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":417,"org.easymock.tests2.UsageTest.niceToStrict":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":220,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":54,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests2.EasyMockSupportClassTest.testAll":133,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":459,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":52,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":457,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":458,"org.easymock.samples.ExampleTest.voteForRemoval":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":113,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":47,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":114,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":145,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests.UsageExpectAndReturnTest.longType":230,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.MockingTest.testClassMocking":490,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":166,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":102,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":119,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":341,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":419,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":431,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":451,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":484,"org.easymock.tests2.UsageTest.openCallCountByLastCall":107,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.tests.CapturesMatcherTest.test":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":50,"org.easymock.tests2.StubTest.stubWithReturnValue":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":373,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":306,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.samples.ConstructorCalledMockTest.testTax":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":406,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":497,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":317,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":422,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":254,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":49,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":455,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":331,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":412,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":143,"org.easymock.tests.MockingTest.testNicePartialClassMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":2,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests.MockingTest.testTwoMocks":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":453,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":193,"org.easymock.tests2.MockBuilderTest.testCreateMockString":146,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":384,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":10,"org.easymock.tests2.UsageTest.defaultResetToNice":108,"org.easymock.samples.ExampleTest.voteAgainstRemovals":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.UsageVarargTest.differentLength":272,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.UsageCallCountTest.tooFewCalls":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":223,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":98,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests2.NameTest.nameForNiceMock":310,"org.easymock.tests2.DependencyTest.testInterfaceMocking":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":377,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":299,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":387,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":444,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":59,"org.easymock.tests2.SerializationTest.test":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":452,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":228,"org.easymock.samples.SupportTest.addDocument":202,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":414,"org.easymock.tests.GenericTest.testPackageScope":278,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":443,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":388,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":13,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":225,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":336,"org.easymock.tests2.NameTest.nameForStrictMock":309,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":405,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":418,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.UsageTest.wrongArguments":77,"org.easymock.tests2.MockBuilderTest.testWithConstructor":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":415,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":240,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":456,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":255,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests2.CaptureTest.testCaptureFromStub":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":241,"org.easymock.tests2.CaptureTest.testCapture":63,"org.easymock.tests2.UsageConstraintsTest.constraints":164,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":211,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CompareToTest.testGreateThan":370,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.LimitationsTest.abstractClass":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":268}}]
