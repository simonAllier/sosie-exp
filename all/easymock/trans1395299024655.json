[{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[7,48,86,87,88,89,98,99,101,102,105,106,108,109,111,118,119,124,125,138,139,156,159,268,279,280,281,282,323,326,327,329,330,331,332,333,334,342,344,347,350,372,373,376,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[488,131],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[363,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[356,360],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.RecordState:274","failures":[7,45,47,48,49,50,51,52,53,238,309],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[2,6,8,9,11,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[93,95,435],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,6,7,8,9,10,11,13,14,18,20,21,22,23,26,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,78,79,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,200,201,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,256,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,441,447,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,472,473,475,476,477,478,479,480,481,483,484,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[2,6,8,9,11,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[116],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[15,16,17,493,494,90,91,163,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,208,211,216,219,495,222],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[17,18,19,496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[120,124,156,225,231,232,237,239,240,241,242,243,252,317,318,319,320,321,323,324,325,373,486,487],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,18,19,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,13,14,17,18,19,24,25,26,27,28,29,32,36,37,38,43,44,45,47,48,51,52,53,56,58,59,60,61,62,63,64,78,86,87,88,89,90,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,173,176,186,192,200,209,213,215,217,221,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,252,257,258,260,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,305,306,309,311,312,314,316,317,318,319,320,321,323,324,325,326,327,329,330,331,332,333,334,337,339,341,342,343,344,346,347,348,349,350,357,358,370,371,372,373,374,375,376,377,378,416,417,418,419,420,421,422,423,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[322,425,429,430,439,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[124,252,318,321,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[39,60,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[5,213,215,217,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.Capture:82","failures":[498,224,226,227,228,229,230,231,233,499,234,235,237],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":435,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests.MockClassControlTest.testToString":389,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":85,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":449,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":176,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":474,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":227,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":468,"org.easymock.tests.UsageTest.moreThanOneArgument":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":381,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":304,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests2.DependencyTest.testClassMocking":41,"org.easymock.tests2.AnswerTest.answer":48,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":23,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":471,"org.easymock.tests2.CaptureTest.testAnd":224,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":464,"org.easymock.tests.LimitationsTest.mockFinalMethod":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests2.DependencyTest.testClassMockingSupport":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":483,"org.easymock.tests2.CaptureTest.testCapture1_2446744":228,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":21,"org.easymock.tests.UsageThrowableTest.throwError":416,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":473,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":424,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":194,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.MockingTest.testInterfaceMocking":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":408,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":181,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":213,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":458,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":294,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":233,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":271,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":22,"org.easymock.tests2.CaptureTest.testCaptureAll":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests.MockNameTest.defaultName":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":382,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":422,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":245,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":93,"org.easymock.tests2.CaptureTest.testCaptureFirst":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":467,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":379,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":454,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.MockingTest.testNiceClassMocking":263,"org.easymock.tests.MockingTest.testClassMocking":255,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":350,"org.easymock.tests.MockTypeTest.fromEasyMockClass":472,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":370,"org.easymock.tests.UsageExpectAndReturnTest.object":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":480,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":91,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":183,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":20,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":65,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":361,"org.easymock.tests2.CaptureTest.testCaptureMultiple":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":490,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":478,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":455,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":410,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":192,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":441,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":461,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":49,"org.easymock.tests.UsageExpectAndThrowTest.object":459,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":325,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":375,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":71,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":460,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":409,"org.easymock.tests2.CaptureTest.testCaptureNone":232,"org.easymock.tests.UsageUnorderedTest.message":323,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":344,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":320,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageExpectAndThrowTest.longType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":302,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests2.NameTest.nameForMocksControl":89,"org.easymock.tests2.MockedExceptionTest.testMockedException":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":453,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CompareToTest.testNotComparable":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests2.CaptureTest.testCaptureLast":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":484,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":256,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":457,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.samples.ExampleTest.removeNonExistingDocument":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests.UsageStrictMockTest.differentMethods":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":364,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":60,"org.easymock.tests2.MockBuilderTest.testCreateMockString":223,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":387,"org.easymock.tests.UsageExpectAndThrowTest.floatType":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":172,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":92,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":186,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":407,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":494,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":423,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":319,"org.easymock.tests.UsageCallCountTest.tooFewCalls":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests.UsageThrowableTest.throwCheckedException":420,"org.easymock.tests.MockingTest.testStrictClassMocking":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":487,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":53,"org.easymock.tests.ObjectMethodsTest.testHashCode":479,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests2.NameTest.nameForNiceMock":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":373,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":218,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatType":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":90,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":66,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":363,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":284,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":165,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":178,"org.easymock.tests.GenericTest.testPackageScope":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":261,"org.easymock.tests2.NameTest.nameForMock":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":463,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":318,"org.easymock.tests2.NameTest.nameForStrictMock":87,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":209,"org.easymock.tests2.UsageStrictMockTest.range":158,"org.easymock.tests2.UsageConstraintsTest.lessThan":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":234,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.MockBuilderTest.testWithConstructor":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":343,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":297,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests2.UsageConstraintsTest.constraints":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":374,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":378,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":371,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
