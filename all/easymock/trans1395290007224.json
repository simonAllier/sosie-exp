[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[14,15,16,17,18,19,20,21,22,7,23,24,25,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[27,28,29,30],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,14,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,15,1,74,16,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,2,112,18,19,3,4,20,21,5,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,27,173,174,28,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,6,22,7,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,8,298,23,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,9,319,320,24,321,322,10,11,323,25,26,324,12,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,13,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,29,431,432,433,434,435,436,30,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,0,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[153,264,410,412,414],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,46,48,51,52,55,70,1,16,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,2,112,3,4,5,122,124,133,134,136,141,142,143,144,145,170,172,181,182,184,207,208,218,219,220,241,242,243,244,6,7,263,265,266,268,273,279,285,294,295,8,23,299,302,310,311,312,313,315,316,317,9,319,320,321,10,11,324,12,327,329,330,331,332,333,334,348,350,352,362,365,375,381,384,385,386,387,388,389,392,397,13,404,411,415,416,418,419,422,423,424,425,427,428,429,430,29,431,432,433,434,436,30,437,438,446,457,458,459,460,462,463,464,465,0,466,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,484,485,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[151,264,13,403,405,406,408,488],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[45],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[411],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[463,477,482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[14,15,1,16,75,106,107,489,490,491,17,112,18,6,22,7,8,23,299,320,492,493,494,495,496,497,498],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[46,47,48,70,140,180,181,182,184,199,204,211,271,271,272,272,273,276,277,499,310,311,312,313,316,317,327,334,342,500,344,345,348,349,350,352,355,356,501,358,362,365,375,381,384,385,387,388,389,390,392,395,396,397,398,485,487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[14,15,16,17,18,19,20,21,22,7,23,24,25,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[471],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[46,47,48,70,140,180,181,182,184,199,204,211,271,271,272,272,273,276,277,499,310,311,312,313,316,317,327,334,342,500,344,345,348,349,350,352,355,356,501,358,362,365,375,381,384,385,387,388,389,390,392,395,396,397,398,485,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[339,398,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[169,463],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,51,52,55,1,141,142,143,144,145,177,207,208,258,259,260,261,262,271,271,272,272,8,426,457,458,462,463,464,465,470,472,473,475,476,482,483,484],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[502,485,486,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[62,322,388,474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[46,47,48,49,70,140,176,180,181,182,184,199,204,210,211,212,213,214,215,217,271,271,272,272,273,276,277,310,311,312,313,316,317,327,334,342,344,345,348,349,350,352,355,356,358,362,365,375,381,384,385,387,388,389,390,392,395,396,397,398,400,485,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[415,417,418,419,420,421,422,424,503,425,426,428],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[504,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[464],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[46,47,48,49,70,140,176,180,181,182,184,199,204,211,212,213,214,217,271,271,272,272,273,276,277,310,311,312,313,316,317,327,334,342,344,345,348,349,350,352,355,356,358,362,365,375,381,384,385,387,388,389,390,392,395,396,397,398,400,485,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[115,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[16,507,22,7,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[474],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":460,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":123,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":322,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests.MockingTest.testPartialClassMocking":181,"org.easymock.tests.MockClassControlTest.testToString":212,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":365,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":466,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":204,"org.easymock.tests2.UsageConstraintsTest.testNull":463,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":217,"org.easymock.tests2.CaptureTest.testPrimitive":418,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":145,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests.ReplayStateInvalidUsageTest.times":64,"org.easymock.tests2.DependencyTest.testClassMocking":292,"org.easymock.tests2.AnswerTest.answer":13,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":456,"org.easymock.tests2.CaptureTest.testAnd":415,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":201,"org.easymock.tests2.UsageTest.strictResetToDefault":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":243,"org.easymock.tests2.DelegateToTest.testDelegate":414,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":150,"org.easymock.tests2.DependencyTest.testClassMockingSupport":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":419,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":454,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":58,"org.easymock.tests.UsageThrowableTest.throwError":78,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":203,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":50,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":273,"org.easymock.tests.MockingTest.testInterfaceMocking":183,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":171,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests2.UsageTest.niceToStrict":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":370,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":348,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":433,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":472,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":471,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":424,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":161,"org.easymock.tests.MockClassControlTest.testEquals":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":455,"org.easymock.tests2.CaptureTest.testCaptureAll":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":148,"org.easymock.tests.MockNameTest.defaultName":209,"org.easymock.tests2.UsageConstraintsTest.testMatches":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":261,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":84,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":287,"org.easymock.tests2.UsageConstraintsTest.greaterThan":475,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":398,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":257,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":399,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":390,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":29,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":428,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":431,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":427,"org.easymock.tests2.UsageTest.moreThanOneArgument":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":146,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":480,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":258,"org.easymock.tests.UsageCallCountTest.tooManyCalls":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":83,"org.easymock.tests.MockingTest.testNiceClassMocking":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests.MockingTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests2.UsageConstraintsTest.testContains":470,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":327,"org.easymock.tests2.UsageConstraintsTest.testFind":462,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":220,"org.easymock.tests.MockTypeTest.fromEasyMockClass":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":408,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests.UsageExpectAndReturnTest.object":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":436,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":163,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":28,"org.easymock.tests.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":118,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":109,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":335,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests.MockClassControlTest.testHashCode":215,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":372,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":440,"org.easymock.tests.UsageVarargTest.varargCharAccepted":162,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":249,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":136,"org.easymock.tests2.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":504,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":438,"org.easymock.tests.DefaultClassInstantiatorTest.object":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":173,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":137,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":495,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":381,"org.easymock.tests2.UsageTest.resumeIfFailure":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":95,"org.easymock.tests2.SerializationTest.testAllMockedMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":135,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":111,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":478,"org.easymock.tests2.DelegateToTest.testWrongClass":412,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":308,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":350,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests2.CaptureTest.testCaptureNone":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":172,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":175,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":417,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":468,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":63,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":134,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":254,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":62,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.tests2.SerializationTest.testClass":485,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":407,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":352,"org.easymock.tests.MockingTest.testNicePartialClassMocking":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":479,"org.easymock.tests.MockingTest.testTwoMocks":180,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":483,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":282,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":252,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":358,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":403,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":336,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":375,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":397,"org.easymock.tests.LimitationsTest.privateConstructor":69,"org.easymock.tests2.UsageConstraintsTest.testNotNull":482,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":325,"org.easymock.tests2.UsageTest.defaultResetToNice":323,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":164,"org.easymock.tests2.CallbackTest.callback":488,"org.easymock.tests2.UsageConstraintsTest.equals":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":3,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests.UsageThrowableTest.throwCheckedException":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":405,"org.easymock.tests.ObjectMethodsTest.testHashCode":174,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":333,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":404,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":1,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":353,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":334,"org.easymock.tests2.ConstraintsToStringTest.orToString":492,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":476,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":458,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":303,"org.easymock.tests2.SerializationTest.test":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":420,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":251,"org.easymock.tests2.UsageConstraintsTest.testSame":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":314,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":367,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":288,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":185,"org.easymock.tests2.NameTest.nameForMock":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":98,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":244,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":309,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":126,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":67,"org.easymock.tests2.NameTest.nameForStrictMock":339,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":406,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":344,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":284,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":371,"org.easymock.tests2.UsageConstraintsTest.testOr":465,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":385,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.MockBuilderTest.testWithConstructor":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":99,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":469,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CaptureTest.testCaptureFromStub":426,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":57,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests2.UsageConstraintsTest.constraints":459,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":77,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":421,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":143,"org.easymock.tests.LimitationsTest.abstractClass":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":144,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":434,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":159}}]
