[{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[17,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[21,0,2,3,4,5,22,23,24,25,26,27,28,29,30,31,32,33,34,9,10,11,12,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[39,40,41,42,43,44,45,46,20,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[17,56,57,58,59,60,61,62,63,64,65,66,67,68,0,69,70,71,22,23,24,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,25,27,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,51,126,127,128,129,9,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,35,36,37,154,155,156,157,158,159,160,161,162,163,18,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[205,206,207,208,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,1,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,49,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,143,258,259,154,180,52,53,183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[67,260,261,262,204,263,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[119],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[264,265,266],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[267,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[5,22,23,24,223,138,140,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[269,270,271,272,273,22,72,73,227,97,98,99,100,101,274,102,103,104,275,276,277,278,279,51,35,154,167,170,171,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[280,281],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,5,6,7,13,15],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,20,47,48,51,52,53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":44,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":83,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":42,"org.easymock.tests.MockingTest.testPartialClassMocking":63,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests.MockClassControlTest.testToString":240,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":267,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":28,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests2.UsageConstraintsTest.testNull":159,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests2.CaptureTest.testPrimitive":196,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":49,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":204,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":233,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.SerializationTest.testClass":184,"org.easymock.tests.ReplayStateInvalidUsageTest.times":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":93,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":254,"org.easymock.tests2.CaptureTest.testAnd":194,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests2.NameTest.nameForMocksControl":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":135,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":140,"org.easymock.tests2.CompareToTest.testCompareEqual":207,"org.easymock.tests2.CaptureTest.testCaptureLast":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":177,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.samples.ExampleTest.removeNonExistingDocument":246,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":250,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":230,"org.easymock.tests2.CompareToTest.testLessOrEqual":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":262,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":261,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":142,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.UsageTest.defaultResetToNice":255,"org.easymock.tests2.MockBuilderTest.testCreateMock":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":89,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":85,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockClassControlTest.testEquals":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":14,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":219,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":236,"org.easymock.tests2.UsageConstraintsTest.testMatches":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":225,"org.easymock.tests2.CompareToTest.testGreateOrEqual":208,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests2.NameTest.nameForNiceMock":33,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":193,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.samples.ExampleTest.voteForRemoval":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.floatType":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":155,"org.easymock.tests2.SerializationTest.test":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":75,"org.easymock.tests2.UsageConstraintsTest.testSame":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":81,"org.easymock.tests.GenericTest.testPackageScope":67,"org.easymock.tests2.CaptureTest.testCapture2_2446744":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.NameTest.nameForMock":31,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":217,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":86,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":274,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":210,"org.easymock.tests2.NameTest.nameForStrictMock":32,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":158,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":139,"org.easymock.tests.UsageExpectAndReturnTest.object":84,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":226,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":201,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":8,"org.easymock.tests2.UsageConstraintsTest.testOr":161,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":136,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests.MockClassControlTest.testHashCode":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests2.EasyMockSupportTest.testVerify":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":87,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":211,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests2.CompareToTest.testLessThan":205,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.DefaultClassInstantiatorTest.object":222,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":1,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":88,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":242,"org.easymock.tests2.UsageConstraintsTest.constraints":156,"org.easymock.tests.UsageStrictMockTest.testVerify":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":91,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":218,"org.easymock.tests2.CompareToTest.testGreateThan":206,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149}}]
