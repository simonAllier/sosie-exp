[{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[29,30,31,32],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,30,6,79,80,81,82,83,84,85,9,86,87,88,10,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,16,20,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,24,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.Range:40","failures":[325,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,326,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,327,0,328,329,330,1,331,2,332,3,333,334,335,4,336,337,29,30,31,5,338,6,7,339,8,340,341,342,343,344,345,346,347,348,349,350,79,80,81,82,83,84,85,9,86,87,88,10,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,351,352,353,354,355,356,357,358,359,360,106,107,108,109,110,111,112,113,11,361,362,114,115,116,117,118,119,120,363,364,365,12,366,367,13,368,369,370,371,372,373,374,375,376,14,377,378,379,380,381,15,382,383,384,385,386,387,388,121,122,389,390,391,392,393,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,394,395,396,397,398,142,143,399,400,401,402,403,144,404,145,146,16,17,18,19,405,20,21,22,406,407,408,409,410,147,23,148,149,150,151,152,153,154,155,156,411,157,158,159,160,161,162,163,164,165,166,24,167,168,169,412,170,413,171,172,173,174,175,176,177,414,178,179,180,181,182,183,184,185,415,186,416,417,418,419,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,420,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,421,422,423,424,425,426,427,428,223,429,224,225,226,227,228,229,230,430,431,432,231,232,433,233,234,235,236,237,238,239,240,241,434,435,436,437,438,439,440,441,442,443,444,445,446,447,25,448,242,243,244,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,245,465,466,467,468,469,246,470,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,471,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,472,473,474,475,476,477,478,479,480,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,481,309,310,311,312,313,314,315,316,317,482,483,484,26,27,485,28,486,487,488,318,319,320,321,322,323,324],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[250,489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[67,490,491,492,493,494,495,125,126,132,133,496,497,498,499,500,258,266,267,268,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[38,42,43,46,52,67,0,335,4,337,338,346,348,85,114,117,118,119,123,126,127,128,132,133,134,135,146,180,187,228,229,230,250,256,258,260,261,262,265,267,268,271,272,273,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[118,119,261,262,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[473,474,478],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[33,34,35,36,116,119,125,126,132,133,250,258,259,262,266,268,271,272,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,0,1,2,3,335,4,337,29,30,5,338,6,7,339,8,342,346,347,348,83,84,85,9,86,87,88,10,89,90,91,92,93,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,11,114,116,117,118,119,12,13,14,15,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,16,17,18,19,20,21,22,409,409,410,410,23,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,24,167,168,169,170,171,172,173,174,180,186,417,187,188,189,190,191,192,193,194,195,196,197,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,228,229,230,235,236,237,238,239,240,241,25,242,243,244,245,246,247,248,249,250,256,258,259,260,261,262,471,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,26,27,28,318,320,321,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[334,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[502,490,503,504,505,506,116,118,119,125,498,507,508,250,259,261,262,266,307,308,309,310,311,319,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[1,509],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[118,119,261,262,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[67,339,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[162,163,310],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[477,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[332,334,29,511,512,513,514,515,361],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[415,418],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[38,42,46,52,67,0,2,335,338,348,114,116,117,118,119,120,121,123,125,126,127,128,132,133,134,135,142,146,18,21,180,187,199,202,420,423,424,425,223,224,225,228,229,230,231,433,234,250,256,258,259,260,261,262,263,265,266,267,268,271,272,273,307,308,309,310,311,317,319,322,323,324],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[10],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[490,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[387,397],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[0,1,2,3,4,5,338,6,7,339,8,342,346,347,348,9,10,106,107,11,116,118,119,12,13,14,15,16,17,18,19,20,21,22,23,150,151,153,154,156,166,24,167,168,169,170,171,187,188,189,190,193,235,236,25,243,259,261,262,287,288,289,290,291,292,295,296,298,299,300,302,303,304,305,306,312,313,314,315,26,27,28],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[325,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,326,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,327,0,328,329,330,1,331,2,332,3,333,334,335,4,336,337,29,30,31,5,338,6,7,339,8,340,341,342,343,344,345,346,347,348,349,350,79,80,81,82,83,84,85,9,86,87,88,10,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,351,352,353,354,355,356,357,358,359,360,106,107,108,109,110,111,112,113,11,361,362,114,115,116,117,118,119,120,363,364,365,12,366,367,13,368,369,370,371,372,373,374,375,376,14,377,378,379,380,381,15,382,383,384,385,386,387,388,121,122,389,390,391,392,393,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,394,395,396,397,398,142,143,399,400,401,402,403,144,404,145,146,16,17,18,19,405,20,21,22,406,407,408,409,410,147,23,148,149,150,151,152,153,154,155,156,411,157,158,159,160,161,162,163,164,165,166,24,167,168,169,412,170,413,171,172,173,174,175,176,177,414,178,179,180,181,182,183,184,185,415,186,416,417,418,419,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,420,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,421,422,423,424,425,426,427,428,223,429,224,225,226,227,228,229,230,430,431,432,231,232,433,233,234,235,236,237,238,239,240,241,434,435,436,437,438,439,440,441,442,443,444,445,446,447,25,448,242,243,244,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,245,465,466,467,468,469,246,470,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,471,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,472,473,474,475,476,477,478,479,480,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,481,309,310,311,312,313,314,315,316,317,482,483,484,26,27,485,28,486,487,488,318,319,320,321,322,323,324],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[517,518,519,520,521,522,327,329,332,523,336,361,524,18,22,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[525,526,524],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[31,5,338,7,339,8,342,344,345,348,349,350,351,355,111,112,363,12,367,368,369,372,375,377,378,381,16,19,407,408,186,416,418,421,422,423,424,425,426,427,428,446,447,25,448,471,473,474,475,476,477,478,480,482,483,484,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,342,345,9,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,358,108,116,117,144,145,146,166,24,167,168,169,185,191,192,193,194,195,196,197,235,236,250,251,258,259,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testReturnException":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":423,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":285,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":433,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":487,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":237,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":353,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":492,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":501,"org.easymock.tests2.DependencyTest.testClassMocking":359,"org.easymock.tests2.AnswerTest.answer":136,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":82,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":432,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":41,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests.LimitationsTest.mockFinalMethod":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":255,"org.easymock.tests2.DependencyTest.testClassMockingSupport":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":80,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":232,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":419,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":243,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":420,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":525,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":520,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":414,"org.easymock.tests.MockClassControlTest.testEquals":427,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":416,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":81,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":253,"org.easymock.tests.MockNameTest.defaultName":317,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":185,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":282,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":479,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":348,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":480,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":471,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":39,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":40,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":294,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":184,"org.easymock.tests.GenericTest.testBridgedEquals":418,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":521,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":251,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":509,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":497,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests.MockingTest.testNiceClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":17,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":429,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":112,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":145,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.object":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":179,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":201,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":522,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":500,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":361,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":374,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":491,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":358,"org.easymock.tests.UsageVarargTest.varargCharAccepted":178,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":526,"org.easymock.tests.DefaultClassInstantiatorTest.object":473,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":247,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":199,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":504,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":150,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":137,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":413,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.samples.ConstructorCalledMockTest.testTax":409,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":519,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":444,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":284,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":244,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":311,"org.easymock.tests.UsageVarargTest.varargByteAccepted":183,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":407,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":202,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":196,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":477,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.tests2.NameTest.nameForMocksControl":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests2.MockedExceptionTest.testMockedException":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.samples.ExampleTest.removeNonExistingDocument":411,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":475,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":85,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":421,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":139,"org.easymock.tests.UsageVerifyTest.twoThrows":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":362,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":347,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":518,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":110,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.UsageVarargTest.differentLength":180,"org.easymock.tests2.CallbackTest.callback":146,"org.easymock.tests2.UsageConstraintsTest.equals":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":499,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":286,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":20,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":141,"org.easymock.tests.ObjectMethodsTest.testHashCode":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":35,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":259,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":333,"org.easymock.tests.UsageVarargTest.varargLongAccepted":182,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.tests2.ConstraintsToStringTest.orToString":502,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":351,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":474,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":288,"org.easymock.samples.SupportTest.addDocument":149,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":405,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":369,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":486,"org.easymock.tests2.NameTest.nameForMock":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":299,"org.easymock.tests2.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests2.MockedExceptionTest.testRealException":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":357,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.NameTest.nameForStrictMock":34,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":524,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":476,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":118,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":38,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":373,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":516,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":338,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":370,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":300,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":478,"org.easymock.tests.UsageVarargTest.varargShortAccepted":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":328,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":523,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":301,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":148,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":252,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
