[{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[6,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[9,9,10,10,11,68,12,13,69,70,71,72,73,74,75,76,77,78,79,14,15,80,16,17,18,19,20,81,82,21,22,23,24,83,84,85,25,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,6,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,29,146,31,32,33,147,35,43,148,46,47,149,48,150,151,152,153,154,155,156,157,158,159,160,50,161,51,162,163,164,165,166,167,7,168,169,170,171,172,173,52,174,53,175,176,177,178,179,180,54,181,182,55,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,56,57,58,242,59,243,244,245,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3,317,318,319,320,321,322,323,61,324,325,326,327,328,329,330,62,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,63,419,64,65,66,420,421,422,423,424,425,426,427,428,429,430,431,67,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[50,161,51,461],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[185,354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[462,463,464,465,466,467,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[94,96,104,201,202,205,207,208,210,220,225],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[87,91,92,127,137,140,468,142,36,185,246,250,251,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,161,51,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[9,10,11,68,12,13,69,70,71,72,73,74,76,77,78,79,14,15,80,16,17,18,19,20,21,22,23,24,84,85,25,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,469,139,140,468,141,470,142,143,144,145,27,29,31,32,33,34,35,36,38,43,44,45,46,47,149,48,49,154,157,158,159,50,161,51,167,52,53,54,55,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,57,58,59,246,247,2,248,249,250,251,252,254,255,256,257,258,259,260,275,276,277,278,279,280,281,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3,317,318,319,320,321,322,326,327,328,329,337,339,340,365,366,367,382,383,384,386,387,388,389,390,391,392,393,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,63,64,65,424,425,426,427,428,429,67,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[50,161,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[471],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[94,96,104,201,202,205,207,208,210,220,225],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[9,9,10,10,11,68,12,13,69,70,71,72,73,74,75,76,77,78,79,14,15,80,16,17,18,19,20,21,22,23,24,84,85,25,86,87,88,89,90,91,92,93,473,474,475,476,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,469,139,140,468,141,470,142,143,144,145,27,29,31,32,33,34,35,36,38,43,44,45,46,47,149,48,49,154,157,158,159,50,161,51,167,52,53,54,55,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,235,236,238,239,57,58,59,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3,317,318,319,320,321,322,326,327,328,329,330,62,331,332,333,334,335,336,337,338,339,340,365,366,367,369,370,371,374,382,383,384,386,387,388,389,390,391,392,393,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,63,64,65,424,425,426,427,428,429,67,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[50,161,51,461],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[89,91,92,113,125,126,132,133,152,167,2,248,250,251,287,288,316,3,317,320,321,323,324,369,372,381,397,398,399,400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[375,379],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[89,91,92,2,248,250,251,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[91,126,132,133,2,250,3,317,320,321,478,397,399,400],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[9,10,11,68,12,13,69,70,71,72,73,74,75,76,77,78,79,14,15,80,16,17,18,19,479,20,81,82,21,22,23,24,83,480,84,85,25,86,87,88,89,90,91,92,93,481,473,474,475,476,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,6,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,469,139,140,468,141,470,142,143,144,145,27,482,29,30,483,146,31,32,33,462,34,484,147,35,36,485,38,43,148,486,44,45,46,47,487,149,48,49,488,150,489,490,491,151,152,153,154,155,156,157,158,159,160,50,161,51,162,163,164,165,166,167,7,168,169,170,171,172,173,492,493,52,494,174,53,495,175,176,496,497,177,178,179,180,54,498,181,499,500,182,55,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,501,502,228,229,230,231,232,233,234,235,236,237,238,239,240,241,56,57,58,242,59,243,244,245,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3,317,318,319,320,321,322,60,503,504,323,8,61,505,324,325,326,327,328,329,330,62,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,506,374,375,376,377,378,379,507,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,508,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,63,419,64,65,66,420,421,422,423,424,425,426,427,428,429,430,431,67,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[9,10,11,68,12,13,69,70,71,72,73,74,75,76,77,78,79,14,15,80,16,17,18,19,479,20,81,82,21,22,23,24,83,480,84,85,25,86,87,88,89,90,91,92,93,481,473,474,475,476,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,6,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,469,139,140,468,141,470,142,143,144,145,27,29,30,146,31,32,33,34,147,35,36,38,43,148,44,45,46,47,149,48,49,150,151,152,153,154,155,156,157,158,159,50,161,51,162,163,164,165,166,167,7,168,169,170,171,172,173,492,493,52,494,174,53,495,175,176,496,497,177,178,179,180,54,498,181,499,500,182,55,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,501,502,228,229,230,231,232,233,234,235,236,237,238,239,240,241,56,57,58,242,59,243,244,245,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3,317,318,319,320,321,322,60,323,8,61,505,324,325,326,327,328,329,330,62,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,63,419,64,65,66,420,421,422,423,424,425,426,427,428,429,430,431,67,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[91,92,129,130,207,219,250,251,275,283,284,318,319,337,342,367,398,402],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[111,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[510,199,201],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":202,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":315,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":68,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":425,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":331,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":481,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":496,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":463,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":61,"org.easymock.tests2.UsageConstraintsTest.testNull":205,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":336,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":314,"org.easymock.tests.UsageTest.moreThanOneArgument":316,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":411,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":282,"org.easymock.tests.UsageTest.argumentsOrdered":321,"org.easymock.tests.UsageVarargTest.varargIntAccepted":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":467,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.ReplayStateInvalidUsageTest.times":269,"org.easymock.tests2.DependencyTest.testClassMocking":501,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":477,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":504,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":339,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":310,"org.easymock.tests.LimitationsTest.mockFinalMethod":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":428,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":294,"org.easymock.tests2.DependencyTest.testClassMockingSupport":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":287,"org.easymock.tests2.CaptureTest.testCapture1_2446744":98,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":120,"org.easymock.tests.UsageThrowableTest.throwError":401,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":263,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":8,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":508,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":413,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":184,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":242,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":264,"org.easymock.tests2.CompareToTest.testLessOrEqual":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":497,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":296,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":115,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":304,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":503,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageOverloadedMethodTest.overloading":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":452,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":103,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.MockClassControlTest.testEquals":335,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":312,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":121,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":292,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":261,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests.UsageVarargTest.allKinds":393,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":398,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":407,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":192,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":83,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":471,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":505,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":424,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":469,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":448,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":106,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":392,"org.easymock.tests.GenericTest.testBridgedEquals":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":280,"org.easymock.tests.UsageExpectAndReturnTest.longType":444,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":290,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":313,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":223,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":409,"org.easymock.tests.UsageCallCountTest.tooManyCalls":281,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":45,"org.easymock.tests.MockingTest.testNiceClassMocking":245,"org.easymock.tests.MockingTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":28,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":204,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":367,"org.easymock.tests.MockTypeTest.fromEasyMockClass":323,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":464,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":387,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":457,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":163,"org.easymock.tests.MockClassControlTest.testHashCode":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":178,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":160,"org.easymock.tests.UsageVarargTest.varargCharAccepted":386,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":394,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":404,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":22,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":332,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":427,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":307,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":155,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":423,"org.easymock.tests.UsageExpectAndThrowTest.object":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":221,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":152,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":271,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":435,"org.easymock.tests2.CaptureTest.testCaptureNone":102,"org.easymock.tests.UsageUnorderedTest.message":397,"org.easymock.tests.UsageVerifyTest.twoReturns":400,"org.easymock.tests.UsageVarargTest.varargByteAccepted":391,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":498,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":278,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":267,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":460,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":41,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests2.NameTest.nameForMocksControl":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":108,"org.easymock.tests2.CaptureTest.testCaptureLast":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":288,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":208,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":222,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":303,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.samples.ExampleTest.removeNonExistingDocument":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":251,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":164,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":495,"org.easymock.tests.UsageExpectAndThrowTest.floatType":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":399,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":84,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.differentLength":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":109,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.UsageConstraintsTest.equals":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.MockingTest.testStrictClassMocking":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":440,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":466,"org.easymock.tests2.NameTest.nameForNiceMock":475,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":465,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":181,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":248,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":390,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.UsageThrowableTest.noUpperLimit":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":170,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":200,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":150,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":442,"org.easymock.tests2.UsageConstraintsTest.testSame":206,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":175,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":169,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":243,"org.easymock.tests2.NameTest.nameForMock":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":309,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":340,"org.easymock.tests2.MockedExceptionTest.testRealException":86,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":272,"org.easymock.tests2.NameTest.nameForStrictMock":474,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":151,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":104,"org.easymock.tests2.UsageConstraintsTest.testOr":207,"org.easymock.tests.UsageRangeTest.combination":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":317,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":176,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":342,"org.easymock.tests.UsageVarargTest.varargShortAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":279,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CaptureTest.testCaptureFromStub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":262,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":277,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":455,"org.easymock.tests2.UsageConstraintsTest.constraints":201,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":76,"org.easymock.tests.UsageStrictMockTest.testVerify":253,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":79,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":416,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":447,"org.easymock.tests.LimitationsTest.abstractClass":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":417,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":468,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":383}}]
