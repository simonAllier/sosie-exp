[{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[253,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[278,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[281,171,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[282,283,14,15,16,17,18,284,285,286,287,21,288,22,289,290,291,292,293,294,295,296,46,297,47,48,298,299,300,63,301,302,79,303,304,305,306,108,307,308,309,310,311,312,129,138,140,142,143,145,146,151,152,154,313,155,314,315,316,159,160,317,161,318,162,163,319,320,321,322,323,324,177,325,179,180,326,181,327,183,184,187,188,196,210,221,328,229,329,230,330,242,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,0,1,1,3,333,334,289,292,335,23,24,25,64,80,336,81,105,337,164,171,338,173,174,175,176,324,339,177,325,178,340,179,180,326,181,341,327,182,183,184,185,187,188,220,221,223,224,225,342,226,328,227,228,229,343,344,345,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,6,7,8,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,59,63,71,72,73,74,75,80,81,82,83,84,105,106,107,346,347,348,349,350,111,113,114,115,116,117,118,129,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,245,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests2.UsageTest.argumentsOrdered":316,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":68,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":314,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":35,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":277,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":85,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":110,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":166,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":276,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":107,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests2.UsageTest.wrongArguments":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":55,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests2.UsageConstraintsTest.testNull":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":179,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":286,"org.easymock.tests.UsageTest.moreThanOneArgument":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":104,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":126,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":258,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":51,"org.easymock.tests.UsageUnorderedTest.message":108,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests.UsageTest.argumentsOrdered":287,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":119,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":333,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":340,"org.easymock.tests2.UsageConstraintsTest.any":204,"org.easymock.tests2.StubTest.stub":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndThrowTest.longType":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":67,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":45,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":345,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":274,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":180,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":225,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":273,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":288,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":270,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":93,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":315,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.tests.UsageThrowableTest.throwError":111,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":327,"org.easymock.tests.UsageExpectAndThrowTest.floatType":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":128,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":175,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":86,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":118,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.UsageTest.defaultResetToNice":158,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":41,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests.UsageTest.openCallCountByLastCall":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":62,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.UsageThrowableTest.throwCheckedException":115,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":102,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":343,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":332,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests.MockNameTest.defaultName":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":127,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":272,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":334,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":117,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests2.AnswerTest.stubAnswer":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":70,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":346,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":164,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":256,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":112,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.testSame":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":243,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":33,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":181,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":255,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":29,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":30,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":132,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":79,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":339,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests.MockTypeTest.fromEasyMockClass":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":224,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests.UsageExpectAndReturnTest.object":36,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests.ErrorMessageTest.testGetters":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":261,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageTest.exactCallCountByLastCall":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":120,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":42,"org.easymock.tests.UsageTest.wrongArguments":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":39,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":121,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":304,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":275,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":167,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":10,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":325,"org.easymock.tests.UsageTest.unexpectedCallWithArray":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":310,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":40,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":227,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.ReplayStateInvalidCallsTest.times":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":76,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":269,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143}}]
