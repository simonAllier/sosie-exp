[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[72,73,74,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[76,77,78,79,80,81,40,82,82,83,83,11,41,42,84,12,85,86,87,88,89,13,90,91,92,93,94,95,96,97,43,14,15,16,17,18,19,20,98,44,99,100,101,102,103,45,46,104,105,106,107,47,21,108,22,23,109,24,110,111,112,113,114,115,48,49,116,117,118,119,120,121,122,123,124,125,126,25,127,128,50,129,130,131,132,133,134,135,136,137,138,139,140,141,142,51,143,144,145,146,72,147,148,149,150,73,151,152,153,154,52,155,156,53,157,74,158,159,160,161,75,162,54,163,0,164,165,1,2,166,26,167,27,28,29,30,168,169,170,55,171,172,173,174,175,176,177,178,179,180,31,32,33,34,181,182,183,184,185,186,187,188,189,190,191,35,192,193,194,195,3,4,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,9,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,56,231,232,233,234,235,57,236,237,238,239,240,58,241,242,243,59,244,60,245,246,247,248,249,62,250,251,252,253,254,63,255,256,257,258,259,64,260,261,262,65,263,66,264,67,36,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,68,285,286,287,288,289,290,291,292,37,38,39,293,294,295,296,297,298,299,70,300,301,302,303,304,305,71,306,307,308,309,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[116,117,118,119,142,216,217,218,219,220,221,271,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[82,82,83,83,11,314,315,13,96,316,14,15,16,17,19,20,21,108,23,109,24,317,110,111,112,113,114,115,118,166,26,167,27,318,28,29,319,30,168,31,32,33,34,215,222,225,229,320,230,8,36,321,37,38,39,322,323,293,294,295,324,325,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[326,327,328,329,55,171,177,178,330,331,332,205,71,306,307,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[91,94,95,55,188,189,190,206,209,210,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[7,229,320,230,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[229,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[336,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[98,99,105,144,145,148,149,73,74],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[134,172],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[82,83,341,342,343,344,345],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.tests2.StubTest.stubWithReturnValue":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":316,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":70,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":328,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":7,"org.easymock.tests.MockClassControlTest.testToString":293,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":62,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests.UsageStrictMockTest.range":208,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":78,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":14,"org.easymock.tests2.UsageConstraintsTest.testNull":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":325,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":264,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":184,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.UsageVerifyTest.twoReturns":190,"org.easymock.tests2.ThreadingTest.testThreadSafe":41,"org.easymock.tests.UsageTest.argumentsOrdered":311,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":265,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":318,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests2.StubTest.stub":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.ReplayStateInvalidUsageTest.times":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":245,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":230,"org.easymock.tests2.AnswerTest.answer":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":73,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":111,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":269,"org.easymock.tests2.DelegateToTest.testDelegate":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests.MockingTest.testNicePartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":336,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":3,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":337,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":224,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":84,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.UsageVerifyTest.twoThrows":189,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":215,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":319,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":69,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":341,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":248,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":17,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":331,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":19,"org.easymock.tests.MockNameTest.defaultName":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":18,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":85,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":276,"org.easymock.tests2.DelegateToTest.testStubDelegate":25,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.samples.ExampleTest.voteForRemoval":79,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":42,"org.easymock.tests.UsageExpectAndReturnTest.floatType":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":231,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests.GenericTest.testPackageScope":229,"org.easymock.tests2.UsageTest.moreThanOneArgument":55,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":12,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":273,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":345,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":15,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":146,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests.MockTypeTest.fromEasyMockClass":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":332,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageRangeTest.combination":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":247,"org.easymock.tests2.MockBuilderTest.testWithConstructor":342,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":241,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":164,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":167,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests2.ConstraintsToStringTest.notToString":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":211,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":274,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":57,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
