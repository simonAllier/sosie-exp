[{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.LastControl:48","failures":[17,18,19,20,21,22,23,24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,11,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[17,268,18,19,20,21,269,22,23,270,24,271,272,273,25,25,26,26,27,28,274,29,30,275,276,31,32,33,34,35,36,37,38,39,277,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,278,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,1,95,279,96,97,98,2,3,99,100,101,102,103,104,105,106,280,107,281,108,109,110,111,112,113,114,115,282,283,116,284,117,118,285,119,120,121,122,123,124,125,126,127,128,129,130,131,132,286,287,288,289,290,133,291,292,293,294,134,135,136,137,138,295,139,140,296,141,142,297,143,298,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,299,300,301,302,303,304,305,306,307,308,309,176,177,178,179,180,181,182,183,184,185,186,187,188,189,11,12,13,190,191,14,15,192,310,311,312,313,314,315,193,194,195,196,197,198,199,316,317,318,319,200,201,202,203,204,205,206,207,208,209,210,320,321,16,211,322,212,213,323,324,214,325,215,216,217,218,219,220,221,222,223,224,326,225,327,328,329,330,331,332,226,227,228,229,333,230,231,334,232,335,233,234,235,236,237,238,336,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[337,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,341,342,343,344,6,345,7,116,117,118,174,11,13,14,15,211,212,213,226,227,228,333,334,232,336,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[4,6,8,9,12,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[239],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[27,274,34,51,52,54,56,57,346,68,72],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[347,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[17,268,18,19,20,21,269,22,349,23,270,24,271,272,273,25,25,26,26,27,28,274,29,30,275,276,31,32,33,34,35,36,37,38,39,277,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,346,59,60,61,62,63,64,65,66,67,68,69,70,278,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,0,1,95,279,96,97,98,2,3,99,100,350,101,102,103,104,105,106,280,107,281,108,109,110,111,112,113,114,115,282,283,116,284,117,118,285,119,120,121,122,123,124,125,126,127,128,129,130,131,132,286,287,288,289,290,133,291,292,293,294,134,135,136,137,138,295,139,140,296,141,142,297,143,298,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,351,175,299,300,301,302,303,304,305,306,307,308,309,176,177,178,179,180,181,352,353,354,355,356,357,358,359,182,183,184,185,186,187,188,189,11,12,13,190,191,14,15,192,310,311,312,313,314,315,193,194,195,196,197,198,199,316,317,318,319,200,201,202,203,204,205,206,207,208,209,210,320,321,16,211,322,212,213,323,324,214,325,215,216,217,218,219,220,221,222,223,224,326,360,225,327,328,329,330,331,332,226,227,228,229,333,230,231,334,232,335,233,234,235,236,237,238,336,239,361,362,363,364,365,366,367,368,369,370,371,372,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,373,374,375],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[351,376,377,378,379,380],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[27,274,34,51,52,54,56,57,346,68,72],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[65,0,1,2,3,341,4,342,381,343,382,5,344,6,345,7,116,117,118,174,8,383,9,384,385,10,386,11,12,13,14,15,16,211,212,213,226,227,228,333,334,232,335,336,239],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[83,86,87,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[388],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[54,346,68,72],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[347],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[389,77,81,390,391,392,393,394,395,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[117,118,212,213,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[82,93,96,97,100,116,189,190,191,192,211,226,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:369","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[38,399,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[401,402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[403,404],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[389,405,406,407,408,409,395],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[389,405,406,407,410,408,409,411,395,412],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[102,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[47,135,136,137,138,176,177,178,179,180,181,210,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":279,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":130,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":359,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":244,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":184,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":301,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":343,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.DelegateToTest.testDelegate":45,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":186,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":391,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":234,"org.easymock.tests2.UsageTest.niceToStrict":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":398,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":254,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":338,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests2.EasyMockSupportClassTest.testAll":89,"org.easymock.tests.MockClassControlTest.testEquals":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":325,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":262,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":185,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":411,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":123,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":40,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":124,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":143,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":308,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":383,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":360,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":145,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":406,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests.MockClassControlTest.testHashCode":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":381,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":350,"org.easymock.tests.UsageVarargTest.varargCharAccepted":302,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":132,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":236,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":355,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":382,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":400,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":188,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":83,"org.easymock.tests.UsageExpectAndThrowTest.object":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":256,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":235,"org.easymock.tests.UsageUnorderedTest.message":174,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":307,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests2.StubTest.stub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":249,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests2.CompareToTest.testCompareEqual":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":253,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":349,"org.easymock.tests.UsageStrictMockTest.differentMethods":213,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.ConstraintsToStringTest.andToString":344,"org.easymock.tests2.MockBuilderTest.testCreateMockString":298,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.floatType":247,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":392,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests2.UsageTest.defaultResetToNice":98,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.UsageVarargTest.differentLength":304,"org.easymock.tests2.CallbackTest.callback":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":384,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":87,"org.easymock.tests.ObjectMethodsTest.testHashCode":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":408,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":407,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testStubDelegate":42,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":306,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.ConstraintsToStringTest.orToString":341,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.samples.SupportTest.addDocument":270,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":223,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":397,"org.easymock.tests2.UsageStrictMockTest.differentMethods":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":138,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":385,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":117,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":393,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.UsageVarargTest.varargShortAccepted":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":84,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests2.ConstraintsToStringTest.notToString":342,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":127,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":300}}]
