[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,47,48,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[53,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[122,123],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[124,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[35,128,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[130,131,132,133,134,157,135,136,137,140,141,142,158,159,160,161,162,163,164,143,144,145,146,154,155,156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,14,176,177,178,179,180,181,182,183,184,185,186,187,188,189,18,19,20,24,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,27,28,130,207,208,209,210,211,212,131,213,132,214,215,133,134,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,157,135,239,136,137,240,241,242,243,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,140,141,142,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,47,48,295,49,50,51,52,54,57,58,59,60,62,63,65,296,297,298,127,299,300,301,302,303,70,73,83,89,304,305,306,307,308,309,310,311,143,144,312,313,314,315,316,145,146,317,318,92,93,319,94,95,96,97,98,101,102,103,104,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,154,336,155,156,337,338,339,1,2,340,3,341,4,5,342,343,344,345,346,347,348,349,350,351,7,352,353,354,355,8,356,357,109,358,359,360,361,362,111,112,113,363,364,114,365,115,116,117,118,119,366,120,121,367,368,369,370,9,371,10,372,373,374,375,376,377,378,11,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[382],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[165,166,167,168,170,171,14,176,178,179,180,181,182,183,184,185,186,187,188,383,18,19,20,24,194,196,197,198,199,200,202,203,204,205,206,27,28,130,212,131,132,214,215,133,134,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,157,135,239,136,137,240,241,242,384,385,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,140,141,142,272,273,274,275,276,282,283,284,285,286,287,288,289,290,291,292,293,294,295,49,50,51,57,59,60,296,297,298,127,299,70,73,83,89,304,305,306,307,308,309,310,311,143,144,312,313,314,315,145,146,317,318,92,93,319,94,95,96,98,103,320,321,322,323,324,325,326,327,329,330,331,332,333,335,154,336,155,156,337,338,339,1,2,340,3,341,4,5,342,343,344,345,346,347,348,349,350,351,7,352,353,354,355,8,356,357,109,358,359,360,361,113,364,114,365,115,116,117,118,119,366,120,121,367,368,369,370,9,371,10,372,373,374,375,376,377,378,11,380,381],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[292,295,358,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[388],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":399,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":313,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":18,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":158,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":342,"org.easymock.tests2.UsageTest.wrongArguments":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":13,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":330,"org.easymock.tests2.CaptureTest.testPrimitive":372,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageTest.moreThanOneArgument":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":404,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":358,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":382,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":325,"org.easymock.tests2.DelegateToTest.testDelegate":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests.LimitationsTest.mockFinalMethod":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":138,"org.easymock.tests2.CaptureTest.testCapture1_2446744":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":91,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.UsageTest.niceToStrict":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":88,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":346,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":378,"org.easymock.tests.MockClassControlTest.testEquals":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.CaptureTest.testCaptureAll":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.samples.ExampleTest.voteForRemovals":290,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests2.UsageConstraintsTest.greaterThan":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":37,"org.easymock.samples.ExampleTest.voteForRemoval":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":105,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":14,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":324,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":318,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.CaptureTest.testCapture2_2446744":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":170,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":171,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":21,"org.easymock.tests.MockingTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":53,"org.easymock.tests2.UsageConstraintsTest.testContains":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":340,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":305,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":329,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":187,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":385,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastCall":314,"org.easymock.tests.DefaultClassInstantiatorTest.object":31,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.tests.CapturesMatcherTest.test":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests2.UsageTest.resumeIfFailure":317,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":151,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":122,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":125,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":369,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":47,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":411,"org.easymock.tests2.CaptureTest.testCaptureNone":377,"org.easymock.tests.UsageUnorderedTest.message":130,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":84,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":168,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":343,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":35,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests2.NameTest.nameForMocksControl":164,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":72,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":60,"org.easymock.tests.MockingTest.testNicePartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":96,"org.easymock.tests2.CaptureTest.testCaptureLast":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":356,"org.easymock.tests.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":33,"org.easymock.tests2.ConstraintsToStringTest.andToString":150,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":65,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":74,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":360,"org.easymock.tests.UsageVerifyTest.twoThrows":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.LimitationsTest.privateConstructor":23,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests2.UsageTest.defaultResetToNice":316,"org.easymock.samples.ExampleTest.voteAgainstRemovals":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":99,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.MockingTest.testStrictClassMocking":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":366,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":362,"org.easymock.tests2.NameTest.nameForNiceMock":163,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":299,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.samples.ExampleTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.DelegateToTest.testStubDelegate":368,"org.easymock.tests2.AnswerTest.stubAnswer":361,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":135,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":109,"org.easymock.tests2.ConstraintsToStringTest.orToString":147,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":339,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":107,"org.easymock.tests2.SerializationTest.test":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":374,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.tests2.UsageConstraintsTest.testSame":341,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":75,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.NameTest.nameForMock":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":156,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":402,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests2.NameTest.nameForStrictMock":162,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":56,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":159,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageStrictMockTest.range":155,"org.easymock.tests2.UsageConstraintsTest.lessThan":357,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":322,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":79,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":76,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":36,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":169,"org.easymock.tests2.UsageConstraintsTest.cmpTo":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":315,"org.easymock.tests2.CaptureTest.testCaptureFromStub":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":55,"org.easymock.tests.UsageTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":291,"org.easymock.tests2.ConstraintsToStringTest.notToString":148,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.LimitationsTest.abstractClass":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":327}}]
