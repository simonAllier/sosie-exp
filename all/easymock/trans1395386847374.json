[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[126,127,128,129,130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[131,132,12,133,134,135,136,137,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[132,133,134,135,140,141,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[12,13,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[6,144,145,9,146,10,11,147,126,148,149,150,151,25,152,30,153,32,154,34,36,38,39,41,42,48,62,155,156,157,158,159,160,161,162,163,164,165,166,74,76,167,77,168,169,170,81,82,86,171,87,172,173,174,175,97,176,98,99,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,108,195,196,197,198,199,200,201,117,121,122,202,203,204,205,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[206,207,208,209,210,211],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,213,21,48,49,51,53,54,214,65,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[215,216,217,218,219,220,2,3,4,221,5,6,7,8,131,9,10,11,12,13,222,148,149,223,224,150,151,14,15,16,17,18,19,20,21,23,24,225,25,226,227,26,228,27,28,29,30,31,32,229,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,230,160,73,162,163,165,74,75,76,77,78,79,80,81,82,231,232,233,234,86,87,235,236,237,88,238,90,91,92,93,94,95,96,97,98,99,239,240,241,242,243,244,245,100,101,102,246,247,103,104,105,106,107,248,249,250,251,252,108,253,109,110,111,112,254,113,114,255,256,257,258,259,117,118,119,120,121,122,123,124,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[260,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[262,215,216,263,217,218,264,219,265,266,266,267,267,268,220,269,270,271,2,3,4,221,5,6,7,8,131,145,272,9,146,10,11,147,12,13,142,126,222,148,149,223,224,150,151,14,15,213,16,17,273,274,18,19,20,21,22,23,24,225,25,226,227,26,228,27,28,29,30,127,128,275,276,31,0,32,277,278,229,279,280,281,33,34,35,36,37,38,39,40,41,42,43,44,282,283,45,46,47,48,49,50,51,52,53,54,55,214,56,57,58,59,60,61,62,63,64,65,66,67,284,68,69,70,71,155,156,157,158,72,285,286,129,230,287,160,73,162,163,165,74,75,76,167,77,168,78,79,80,169,170,81,82,231,232,233,234,83,288,84,85,86,171,87,235,236,237,88,238,89,172,173,90,289,91,92,93,94,95,96,174,290,175,97,176,98,99,177,291,292,293,294,295,296,297,298,299,300,187,188,189,301,302,191,192,239,303,240,241,242,243,244,245,100,101,102,246,247,103,104,105,106,107,248,249,250,251,252,304,193,305,1,194,108,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,196,253,326,327,109,328,110,111,329,330,112,254,113,114,331,332,333,334,335,198,336,337,338,339,340,255,256,341,342,115,343,116,257,258,259,344,345,346,347,348,349,117,118,119,120,121,122,203,123,124,204,205,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[350,351,352,353,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[292,345],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[146,10,126,62,74,82,355,356,171,87,176,98,191,192,196,117,121,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[266,266,267,267,220,269,270,131,12,142,222,148,149,223,150,151,225,25,227,26,228,357,27,152,28,29,30,153,31,159,160,161,73,358,162,163,164,165,166,231,232,233,234,180,181,184,239,303,240,253,359,257,258,259,360,361,199,200,201,362,344],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[83,84,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":154,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":142,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":296,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.samples.SupportTest.voteForRemovals":215,"org.easymock.tests.MockClassControlTest.testToString":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":153,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":306,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.UsageExpectAndThrowTest.object":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ExampleTest.answerVsDelegate":263,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":184,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":162,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":85,"org.easymock.tests2.CaptureTest.testCaptureNone":19,"org.easymock.tests.UsageUnorderedTest.message":196,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":2,"org.easymock.tests.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageVarargTest.varargIntAccepted":333,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":302,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.CaptureTest.testCapture_2617107":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":358,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests.UsageExpectAndThrowTest.longType":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":240,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":214,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":152,"org.easymock.tests2.NameTest.nameForMocksControl":158,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":163,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":228,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":172,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":314,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":183,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":208,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":4,"org.easymock.tests2.MockBuilderTest.testCreateMockString":166,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.floatType":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests.UsageVerifyTest.twoThrows":171,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.PartialClassMockTest.testGetArea":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":307,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":180,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":315,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":329,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":1,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":20,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":323,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.MockNameTest.defaultName":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":140,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":5,"org.easymock.tests2.NameTest.nameForNiceMock":157,"org.easymock.tests.UsageVarargTest.allKinds":340,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests2.AnswerTest.stubAnswer":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":280,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":211,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":354,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":344,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":273,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":35,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":295,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":165,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests2.NameTest.nameForMock":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":284,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.MockedExceptionTest.testRealException":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":311,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.NameTest.nameForStrictMock":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests.MockTypeTest.fromEasyMockClass":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.object":103,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":41,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":134,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":132,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests.UsageTest.wrongArguments":203,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":304,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":345,"org.easymock.tests2.CaptureTest.testCaptureFromStub":22,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":202,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":107,"org.easymock.tests2.CaptureTest.testCapture":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":201,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":234,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":200,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":274,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":88,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":356,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39}}]
