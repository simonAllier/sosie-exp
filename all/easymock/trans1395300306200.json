[{"position":"org.easymock.internal.ErrorMessage:50","failures":[0,1,2,3,4,5,6],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[21,22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,1,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,4,226,5,6,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.RecordState:315","failures":[48,49,50,51,73,80,110,153,164,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,201,212,229,233,234,249,250,251,252,253,254,257],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[278],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[279,280,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:243","failures":[283,30,32,33,35,38,40,41,42,43,44,45,46,279,284,47,54,0,56,281,285,286,287,282,18,97,288,289,98,99,290,291,107,292,293,294,112,118,147,148,295,296,297,157,1,159,162,167,168,298,207,299,208,209,235,236,237,238,240,241,242,243,244,300,255,301,258,259,260,261,262,263,266,267,269,270,271,273,274,275,276,277],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[48,49,50,51,164,249,250,251,252,253,254,257],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[54,59,65,66,71,127,130,157,162,163,164,165,166,167,168,4,240,241,242,243,244,253,256,257],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[8,302,303,304,305,306,307,308,309,20,310,311,312,107,313,314,292,315,316,317,318,319,320,321,322,323,293,324,325,326,327,328,294,329,330],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[20,104,105,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[7,8,12,13,14,17,18,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[334],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[283,30,31,32,33,35,38,40,41,42,43,44,45,46,279,284,47,50,54,0,56,58,59,60,61,62,65,66,67,68,70,71,72,73,74,75,77,79,80,336,83,84,85,86,87,88,89,90,91,337,92,93,94,95,281,285,286,287,282,18,97,288,289,98,99,290,291,100,102,103,20,104,106,107,292,293,294,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,338,295,296,297,157,1,159,162,163,166,167,168,339,340,341,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,204,207,299,208,209,342,210,211,212,226,5,6,227,229,230,231,232,233,234,240,241,242,243,244,245,246,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[343,343,344,344,345,8,18,19,20],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[31,111,113,114,152],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[346,25,347,348,26,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[285,350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[7,12,13,14,15,16,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[227,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[283,30,32,33,35,38,40,41,42,43,44,45,46,279,284,47,50,54,0,56,58,59,61,62,65,66,67,68,70,71,72,73,74,75,77,79,80,336,83,84,85,86,87,88,89,90,91,337,92,93,94,95,281,285,286,287,282,18,97,288,289,98,99,290,291,100,102,20,104,106,107,292,293,294,110,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,338,295,296,297,157,1,159,162,163,166,167,168,197,198,200,201,204,207,299,208,209,210,211,212,226,6,227,229,230,231,232,233,234,240,241,242,243,244,246,351,300,255,352,301,353,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[302,303,304,305,306,307,308,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[21,22,156,354,355,23],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[343,344,283,28,29,40,41,43,44,45,356,46,345,357,358,279,284,47,359,280,48,49,50,360,361,281,362,363,364,285,365,286,7,287,8,366,282,367,368,18,19,369,97,288,289,98,290,291,370,371,20,105,310,311,107,314,292,315,316,317,319,320,321,322,293,324,325,326,327,328,294,372,373,374,295,296,297,375,376,377,378,379,380,381,382,383,205,206,346,25,347,348,384,26,349,245,385,246,247,351,248,386,387,255,388],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":123,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests.MockClassControlTest.testToString":380,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":162,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":377,"org.easymock.tests2.UsageConstraintsTest.testNull":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":206,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":237,"org.easymock.tests.UsageTest.argumentsOrdered":203,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":358,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.DelegateToTest.testDelegate":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":340,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests.UsageThrowableTest.throwError":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":239,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":285,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":306,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":328,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.MockClassControlTest.testEquals":205,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests2.UsageConstraintsTest.testMatches":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":238,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":35,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":233,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":254,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":356,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":282,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":304,"org.easymock.tests.UsageExpectAndReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":350,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":235,"org.easymock.tests.UsageCallCountTest.tooManyCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":288,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":124,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":150,"org.easymock.tests.UsageExpectAndReturnTest.object":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":13,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":214,"org.easymock.tests.UsageTest.exactCallCountByLastCall":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":256,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests.MockClassControlTest.testHashCode":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":321,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.CaptureTest.testCaptureMultiple":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":279,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":382,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":294,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":381,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":10,"org.easymock.samples.SupportTest.voteForRemovals":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":332,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":168,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.samples.ConstructorCalledMockTest.testTax":343,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":286,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":355,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests.LimitationsTest.mockNativeMethod":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":277,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":351,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":314,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":287,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":11,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":368,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":101,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":293,"org.easymock.samples.ExampleTest.voteAgainstRemoval":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":284,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":234,"org.easymock.tests2.UsageTest.defaultResetToNice":336,"org.easymock.samples.ExampleTest.voteAgainstRemovals":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":98,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":257,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":99,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests2.DependencyTest.testInterfaceMocking":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":14,"org.easymock.samples.ExampleTest.addDocument":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":325,"org.easymock.tests2.DelegateToTest.testStubDelegate":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":157,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":344,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":121,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":370,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testSame":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":259,"org.easymock.samples.SupportTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":9,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":163,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":371,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":281,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":320,"org.easymock.tests2.UsageConstraintsTest.testOr":127,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":199,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":317,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":69,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":362,"org.easymock.tests.UsageTest.unexpectedCallWithArray":354,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.UsageConstraintsTest.constraints":122,"org.easymock.samples.ExampleTest.addAndChangeDocument":36,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests2.CompareToTest.testGreateThan":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216}}]
