[{"position":"org.easymock.internal.MocksControl:105","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[359,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[355,356],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[367],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[266,301,303,311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[263,278,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[368,369,369,370,370,1,2,3,4,6,8,11,13,17,21,22,23,30,31,32,371,372,373,40,41,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,374,74,76,77,79,375,376,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,135,157,163,166,167,168,186,187,188,189,190,191,192,193,194,377,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,227,378,379,380,381,234,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,252,254,256,382,383,384,385,386,387,388,257,258,259,260,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,389,390,391,392,299,393,394,301,302,304,305,308,309,310,311,312,313,314,316,317,318,319,320,321,327,328,329,330,335,395,396,336,397,398,399,400,401,402,403,337,338,344,351,352,404,353,405,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[263,268,278,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[29,406,407,408,409,410,384,391,393,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[412,413,414,415,416,417,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[383,419],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[273,280,285,420],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[368,421,406,376,379,380,381,422,382,423,383,384,385,387,388,424,401,402,425,404],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[368,369,369,370,370,1,2,3,4,6,8,11,12,13,14,17,30,31,32,371,372,373,40,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,374,74,76,77,79,375,376,81,82,83,84,85,86,87,90,91,94,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,157,163,166,167,168,186,187,188,189,190,191,192,193,194,377,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,227,378,379,380,381,234,235,236,237,238,239,240,241,242,243,244,245,249,251,252,254,256,382,383,384,385,387,257,258,259,260,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,290,292,293,294,297,298,389,390,391,392,299,393,394,301,302,304,305,308,309,310,311,312,313,314,316,317,318,319,320,321,327,328,329,330,335,395,396,336,397,398,399,400,401,402,403,337,338,344,351,352,404,353,405,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[50,51,52,189,190,191,192,193,194,197,327,328,329,330,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[426],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[2,18,20,23,30,31,32,43,44,47,60,86,87,89,90,91,92,93,94,129,140,157,168,195,249,252,263,264,269,270,283,284,286,288,289,292,293,295,296,298,316,323,324,325,326,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[382,387,401,425],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[427,428,302,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[429,430,431,432,30,31,32,43,44,46,47,87,88,95,96,195,249,251,252,288,433,434,435,436,437,438,439],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[440,404,353,441],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[442],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[301,303,304,305,306,307,308,310,443,311,312,314],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[429,430,43,434,438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MocksControl:105","failures":[0,368,369,369,370,370,1,2,3,4,5,6,7,8,444,445,9,10,11,12,13,14,446,447,448,449,450,451,452,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,453,454,455,371,372,33,373,34,35,456,421,36,37,406,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,374,74,75,76,77,78,79,80,367,375,457,376,442,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,458,459,408,409,410,460,461,462,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,463,464,377,465,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,466,467,468,378,469,470,379,471,472,473,474,475,476,477,478,479,380,480,481,482,483,484,381,485,486,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,422,382,423,487,383,488,384,385,489,386,387,388,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,389,390,391,392,299,393,394,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,395,396,336,397,398,399,424,490,400,491,492,493,401,402,403,494,425,337,338,339,340,341,342,343,344,345,346,347,348,349,350,495,496,351,352,404,353,441,405,418,354,355,356,357,358,359,360,361,362,363,364,411,497,365,366],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[429,430,43,88,434,438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[31,32,46,498,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[426,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[264],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[175,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[368,1,3,4,6,11,371,372,373,44,46,47,53,54,55,56,66,81,82,83,84,85,107,108,377,198,199,200,201,202,203,206,207,209,210,211,213,214,215,216,217,218,219,220,221,378,379,380,381,249,251,252,382,383,384,385,387,389,390,391,392,299,393,394,395,396,336,397,398,399,400,401,402,403,351,352,405,357,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[379,488,327,424],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":260,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":151,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":291,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":371,"org.easymock.tests.MockClassControlTest.testToString":408,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":109,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":379,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":100,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":35,"org.easymock.tests2.UsageConstraintsTest.testNull":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":397,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":243,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":128,"org.easymock.tests.UsageTest.moreThanOneArgument":87,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":102,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":85,"org.easymock.tests.ReplayStateInvalidUsageTest.times":182,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":316,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":334,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":106,"org.easymock.tests2.DelegateToTest.testDelegate":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":124,"org.easymock.tests.LimitationsTest.mockFinalMethod":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":173,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":95,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":332,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":176,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":407,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":486,"org.easymock.samples.PartialClassMockTest.testGetArea":368,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":177,"org.easymock.tests.MockingTest.testInterfaceMocking":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":82,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":29,"org.easymock.tests2.UsageTest.niceToStrict":290,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":383,"org.easymock.tests2.MockBuilderTest.testCreateMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":434,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":118,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":132,"org.easymock.tests.MockClassControlTest.testEquals":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":378,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":457,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":171,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":333,"org.easymock.tests.MockNameTest.defaultName":165,"org.easymock.tests2.UsageConstraintsTest.testMatches":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.samples.BasicClassMockTest.testPrintContent":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":172,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests2.UsageConstraintsTest.greaterThan":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":403,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":452,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":494,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":424,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":374,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":236,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.CaptureTest.testCaptureFirst":314,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":237,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":159,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":22,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":234,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":419,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":127,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":23,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":390,"org.easymock.tests.MockingTest.testClassMocking":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":16,"org.easymock.tests2.UsageConstraintsTest.testContains":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":262,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":413,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":134,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":27,"org.easymock.tests.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":146,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":103,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":418,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests.MockClassControlTest.testHashCode":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":477,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":331,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":133,"org.easymock.tests2.CaptureTest.testCaptureMultiple":428,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":164,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests.DefaultClassInstantiatorTest.object":446,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":186,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":478,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":115,"org.easymock.tests.CapturesMatcherTest.test":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":50,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":436,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":381,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.StubTest.stubWithReturnValue":338,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":282,"org.easymock.tests2.SerializationTest.testAllMockedMethod":441,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":438,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":121,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":440,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":163,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":119,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":14,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":279,"org.easymock.tests2.DelegateToTest.testWrongClass":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":369,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":466,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":73,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":444,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.UsageConstraintsTest.any":269,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":181,"org.easymock.tests2.StubTest.stub":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":112,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":450,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":180,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.SerializationTest.testClass":404,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests.LimitationsTest.mockNativeMethod":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":470,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":255,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":395,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":385,"org.easymock.tests.MockingTest.testNicePartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests2.CaptureTest.testCaptureLast":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":394,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":266,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":280,"org.easymock.tests.MockingTest.testTwoMocks":455,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":284,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":178,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":448,"org.easymock.tests2.ConstraintsToStringTest.andToString":437,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":356,"org.easymock.tests2.MockBuilderTest.testCreateMockString":388,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":471,"org.easymock.tests.UsageExpectAndThrowTest.floatType":111,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":319,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":380,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":402,"org.easymock.tests.LimitationsTest.privateConstructor":464,"org.easymock.tests2.UsageConstraintsTest.testNotNull":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests2.CallbackTest.callback":335,"org.easymock.tests2.UsageConstraintsTest.equals":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":491,"org.easymock.tests.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":18,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.MockingTest.testStrictClassMocking":453,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":299,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests.ObjectMethodsTest.testHashCode":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":415,"org.easymock.tests2.NameTest.nameForNiceMock":325,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":414,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.DelegateToTest.testStubDelegate":361,"org.easymock.tests2.AnswerTest.stubAnswer":320,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":405,"org.easymock.tests2.ConstraintsToStringTest.orToString":433,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":370,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":411,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests2.SerializationTest.test":353,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.tests2.UsageConstraintsTest.testSame":264,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":472,"org.easymock.tests.GenericTest.testPackageScope":375,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":34,"org.easymock.tests2.NameTest.nameForMock":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":492,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":123,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":366,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":154,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":249,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests2.NameTest.nameForStrictMock":324,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":487,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":278,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":382,"org.easymock.tests2.UsageStrictMockTest.range":251,"org.easymock.tests2.UsageConstraintsTest.lessThan":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":476,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":265,"org.easymock.tests.UsageRangeTest.combination":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":396,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":473,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":451,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":21,"org.easymock.tests2.UsageConstraintsTest.cmpTo":270,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests2.CompareToTest.testLessThan":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":144,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.CaptureTest.testCaptureFromStub":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":175,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":423,"org.easymock.tests.UsageTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.CaptureTest.testCapture":443,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.UsageConstraintsTest.constraints":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests2.ConstraintsToStringTest.notToString":435,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":83,"org.easymock.tests.LimitationsTest.abstractClass":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":84,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":240}}]
