[{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,13,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,19,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,306,307,308,309,310,311,312,313,314,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[319,320,321,322,323,324,325,20,21,22,23,24,25,26,27,28,29,30,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,31,32,347,348,349,350,351,33,34,35,36,37,352,42,43,44,45,6,353,47,354,48,355,49,50,51,52,53,54,55,56,356,57,357,358,359,360,361,362,363,364,365,366,367,368,58,59,60,61,62,63,64,65,66,67,68,69,70,71,369,370,9,12,13,14,72,73,74,75,76,371,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,123,124,125,126,372,373,374,375,127,128,19,129,130,131,132,133,134,135,376,377,378,379,380,136,137,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,396,171,172,173,174,175,176,177,178,179,397,180,398,399,181,400,401,402,403,404,405,406,407,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,408,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,225,425,426,427,428,429,226,430,431,227,432,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,433,270,271,272,273,274,275,276,277,278,279,434,435,436,437,438,439,440,441,442,280,281,282,443,444,445,446,447,448,318,449,450,451,452,453,283,284,285,286,287,288,289,290,291,454,455,456,457,458,292,293,294,295,296,297,459,298,299,300,301,302,303,304,305,306,306,460,460,461,307,308,309,310,311,312,313,314,462,315,463,464,316,317],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,465],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[48,49,72,127,129,131,183,310],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[24,104,110,111,140,143,180,189,267,268,466,285,286,289,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[467,468],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[27,28,29,30,43,101,108,147,149,150,151,152,153,154,173,186,195,196,197,198,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,256,257,260,267,283,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[412,280,281,282],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[324,469,470,471,335,340,341,6,7,356,362,364,367,370,9,12,306,306,460,460],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[128,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[90],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[36,431,432,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[76,81,93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[51,53,55,185,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,424,226,257,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[24,111,143,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[182,409,413,414,423,427,443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[472,319,321,322,323,473,325,474,475,20,21,22,23,24,25,26,27,28,29,30,327,329,336,339,31,33,34,36,37,42,43,44,45,46,476,6,353,47,354,7,48,49,51,52,53,55,56,356,57,357,358,359,360,361,364,365,366,367,58,59,60,61,62,63,64,65,66,67,68,69,70,71,370,12,13,14,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,389,390,392,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,171,172,173,174,176,177,180,181,183,185,186,189,195,196,197,198,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,442,283,284,285,286,287,288,289,290,291,455,456,295,296,297,298,299,300,301,302,303,304,305,306,460,461,307,308,309,310,311,312,313,314,315,463,464,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[477,478,479,480,103,104,110,111,140,481,482,483,284,285,286,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[477,478,479,480,103,104,110,111,140,481,482,483,284,285,286,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[371,110,289],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[319,321,323,473,474,22,24,25,27,28,29,30,327,329,336,339,31,33,34,35,36,37,42,43,44,45,46,476,6,353,47,354,7,48,49,50,51,52,53,54,55,56,356,57,357,358,359,361,365,366,367,58,59,61,62,65,66,67,68,69,70,71,370,12,13,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,19,129,130,131,136,389,390,392,141,143,144,147,148,149,150,151,152,153,154,155,156,161,162,163,164,165,171,172,173,174,175,176,177,179,180,181,182,183,185,186,188,190,191,192,193,194,195,196,197,198,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,266,267,268,270,277,278,279,442,280,281,282,283,284,287,288,291,455,457,292,293,294,306,306,460,460,461,308,309,310,311,312,314,315],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[24,104,110,111,140,143,180,267,268,466,285,286,289,290],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[475,366,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":419,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":106,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests.MockingTest.testPartialClassMocking":389,"org.easymock.tests.MockClassControlTest.testToString":436,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":352,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":159,"org.easymock.samples.ExampleTest.answerVsDelegate":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":394,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":357,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":224,"org.easymock.tests.UsageTest.moreThanOneArgument":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":190,"org.easymock.tests.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":233,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":135,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":220,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":178,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":133,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":202,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":341,"org.easymock.samples.PartialClassMockTest.testGetArea":461,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests2.UsageTest.niceToStrict":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":321,"org.easymock.tests2.MockBuilderTest.testCreateMock":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":382,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":214,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":157,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":338,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":467,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":87,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests.MockClassControlTest.testEquals":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":456,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":478,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":134,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests.MockNameTest.defaultName":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.samples.ExampleTest.voteForRemovals":314,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.UsageConstraintsTest.greaterThan":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":367,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":407,"org.easymock.samples.ExampleTest.voteForRemoval":311,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":360,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":442,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":116,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":241,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":426,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":458,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":275,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":223,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":276,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":476,"org.easymock.tests.MockingTest.testNiceClassMocking":395,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.MockTypeTest.fromEasyMockClass":201,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":169,"org.easymock.tests.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":483,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests.ResultTest.createThrowResultToString":18,"org.easymock.tests.MockClassControlTest.testHashCode":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":333,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":192,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":167,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":211,"org.easymock.tests.CapturesMatcherTest.test":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":339,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":479,"org.easymock.samples.SupportTest.voteForRemovals":308,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":217,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":226,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":128,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":215,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":374,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":481,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests.UsageUnorderedTest.message":180,"org.easymock.tests.UsageVerifyTest.twoReturns":268,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":273,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":463,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":170,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests2.UsageConstraintsTest.any":84,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":405,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":41,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":328,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":473,"org.easymock.tests.MockingTest.testNicePartialClassMocking":390,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":359,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":213,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.samples.ExampleTest.removeNonExistingDocument":462,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":403,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":475,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests.ResultTest.createReturnResultToString":17,"org.easymock.tests.UsageVerifyTest.twoThrows":267,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":336,"org.easymock.tests.ResultTest.createDelegateResultToString":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":366,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":11,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests2.UsageTest.defaultResetToNice":109,"org.easymock.samples.ExampleTest.voteAgainstRemovals":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":249,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.UsageCallCountTest.tooFewCalls":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":160,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":482,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":47,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":168,"org.easymock.tests2.NameTest.nameForNiceMock":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":37,"org.easymock.tests2.DependencyTest.testInterfaceMocking":44,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":337,"org.easymock.tests2.DelegateToTest.testStubDelegate":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.floatType":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":370,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":460,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":372,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":330,"org.easymock.tests.GenericTest.testPackageScope":455,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":393,"org.easymock.tests2.NameTest.nameForMock":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":219,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":255,"org.easymock.tests2.NameTest.nameForStrictMock":39,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":373,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":319,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":332,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":356,"org.easymock.tests.UsageTest.wrongArguments":286,"org.easymock.tests2.MockBuilderTest.testWithConstructor":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":406,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":274,"org.easymock.tests2.UsageConstraintsTest.cmpTo":85,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":272,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":315,"org.easymock.tests.UsageStrictMockTest.testVerify":146,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":231,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":240,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296}}]
