[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[62,0,1,63,64,2,65,66,67,68,69,70,71,72,73,3,4,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,5,106,107,108,109,6,110,111,112,113,7,8,9,114,10,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,11,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,12,13,14,15,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,16,237,238,239,240,17,18,19,20,21,22,23,24,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,25,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,26,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,27,361,28,362,363,364,29,365,366,30,367,368,369,370,371,372,373,374,375,31,376,377,378,379,380,32,381,382,33,383,34,35,384,385,36,37,38,386,39,387,388,40,41,389,42,390,43,44,45,46,391,392,47,48,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,49,50,428,51,52,53,54,429,55,430,431,56,57,58,59,432,60,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,61,483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[26,484,485,486,487,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[427,491],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[414],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,0,1,1,26,344,345,27,383,384,386,388,389,430],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[408,409],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[62,63,64,2,65,66,67,68,69,70,71,73,3,4,77,78,79,81,82,84,85,86,87,88,91,92,93,8,9,10,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,142,143,144,153,155,156,159,11,187,189,190,191,192,193,204,206,207,12,13,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,16,238,239,280,281,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,321,322,323,325,328,329,335,338,340,341,342,26,351,354,355,356,27,361,28,29,30,31,32,36,38,39,43,44,45,46,392,47,48,394,395,398,399,400,401,402,404,405,406,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,49,428,51,52,53,55,58,438,449,450,451,452,454,455,456,457,458,459,462,468,476,477,480,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[62,0,1,63,64,2,65,66,67,68,69,70,71,72,73,3,4,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,5,108,109,6,110,111,112,113,7,8,9,114,10,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,11,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,12,13,14,15,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,16,237,238,239,240,17,18,19,20,21,22,23,24,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,273,274,275,276,277,278,25,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,26,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,27,361,28,362,363,364,29,365,366,30,367,368,369,370,371,372,373,374,375,31,376,377,378,379,380,32,381,382,33,34,35,385,36,37,38,39,388,40,41,42,43,44,45,46,392,47,48,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,49,50,428,51,52,53,54,429,55,430,431,56,57,58,59,432,60,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,61,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[414],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[492,493,140,494,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[27,361,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[492,493,90,96,97,98,99,100,101,102,103,104,7,140,141,494,495,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[491,496,497,498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[92,94,99,158,179,187,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,279,281,282,283,284,285,286,305,324,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,93,94,95,98,99,102,118,119,122,124,125,126,127,129,130,131,132,134,135,136,137,141,143,144,156,159,181,214,250,252,261,262,264,281,297,298,299,300,305,324,326,330,331,335,336,339,341,342,351,355,41,394,395,396,399,400,401,404,405,406,407,411,413,415,416,417,418,419,425,426,427,450,453,456,457,461,462,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,0,1,1,500,430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[501,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[405,420,425],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[62,0,1,63,64,2,65,66,67,68,69,70,71,72,73,3,4,502,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,5,106,107,108,109,6,110,111,112,113,7,8,9,114,10,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,11,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,12,13,14,15,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,16,237,238,239,240,17,18,19,20,21,22,23,24,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,25,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,26,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,27,361,28,362,363,364,29,365,366,30,367,368,369,370,371,372,373,374,375,31,376,377,378,379,380,32,381,382,33,383,34,35,384,385,36,37,38,386,39,387,388,40,41,389,42,390,43,44,45,46,391,392,47,48,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,49,50,428,51,52,53,54,429,55,430,431,56,57,58,59,432,60,433,434,435,436,437,438,439,440,441,442,443,444,445,503,504,505,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,61,483],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":402,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageTest.argumentsOrdered":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testReturnException":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":184,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests.MockClassControlTest.testToString":19,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":346,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":327,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests2.UsageConstraintsTest.testNull":405,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":315,"org.easymock.tests2.CaptureTest.testPrimitive":452,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageTest.moreThanOneArgument":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":287,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":489,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":504,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":468,"org.easymock.tests.ReplayStateInvalidUsageTest.times":168,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":351,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":360,"org.easymock.tests2.CaptureTest.testAnd":449,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":107,"org.easymock.tests2.UsageTest.strictResetToDefault":325,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":310,"org.easymock.tests2.DelegateToTest.testDelegate":480,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests.LimitationsTest.mockFinalMethod":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":198,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":453,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":358,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":162,"org.easymock.tests.UsageThrowableTest.throwError":279,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":109,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":382,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":163,"org.easymock.tests.MockingTest.testInterfaceMocking":114,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":148,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests2.UsageTest.niceToStrict":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":471,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":415,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":414,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":458,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":80,"org.easymock.tests2.EasyMockSupportClassTest.testAll":29,"org.easymock.tests.MockClassControlTest.testEquals":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.CaptureTest.testCaptureAll":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":359,"org.easymock.tests.MockNameTest.defaultName":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":416,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":91,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":285,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":418,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":395,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":308,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":475,"org.easymock.tests2.CaptureTest.testCaptureFirst":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":309,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":461,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":397,"org.easymock.tests2.UsageTest.moreThanOneArgument":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":259,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests.UsageExpectAndReturnTest.longType":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":423,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":284,"org.easymock.tests.MockingTest.testNiceClassMocking":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":44,"org.easymock.tests.MockingTest.testClassMocking":113,"org.easymock.tests2.UsageConstraintsTest.testContains":413,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":203,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":61,"org.easymock.tests2.UsageConstraintsTest.testFind":404,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests.MockTypeTest.fromEasyMockClass":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":277,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":434,"org.easymock.tests.MockClassControlTest.testHashCode":22,"org.easymock.tests2.EasyMockSupportTest.testVerify":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":176,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":357,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":265,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":264,"org.easymock.tests2.UsageTest.openCallCountByLastCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.object":266,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":74,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":433,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":20,"org.easymock.tests2.UsageTest.resumeIfFailure":335,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":186,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":257,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":352,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":152,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":421,"org.easymock.tests2.DelegateToTest.testWrongClass":478,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":447,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":170,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests2.CaptureTest.testCaptureNone":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":149,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":93,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":451,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":261,"org.easymock.tests2.UsageConstraintsTest.any":411,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":167,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":185,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":166,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":340,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":438,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":137,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":343,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":482,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":302,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests2.CompareToTest.testCompareEqual":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":456,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":422,"org.easymock.tests.MockingTest.testTwoMocks":7,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":426,"org.easymock.samples.ExampleTest.removeNonExistingDocument":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":470,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":164,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":435,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":268,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":396,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":354,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":345,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":31,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":236,"org.easymock.tests2.UsageConstraintsTest.testNotNull":425,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":481,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":286,"org.easymock.tests2.UsageTest.defaultResetToNice":332,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":323,"org.easymock.tests2.UsageConstraintsTest.equals":403,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":430,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":157,"org.easymock.tests.UsageCallCountTest.tooFewCalls":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":283,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":469,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":392,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":356,"org.easymock.tests2.CompareToTest.testGreateOrEqual":498,"org.easymock.tests.ObjectMethodsTest.testHashCode":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":488,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":398,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":487,"org.easymock.samples.ExampleTest.addDocument":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.stubAnswer":355,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":387,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":419,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests.UsageThrowableTest.noUpperLimit":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":400,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":445,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":454,"org.easymock.tests2.SerializationTest.test":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":267,"org.easymock.tests2.UsageConstraintsTest.testSame":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":119,"org.easymock.samples.SupportTest.addDocument":63,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":115,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":389,"org.easymock.tests2.UsageStrictMockTest.differentMethods":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":483,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":339,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":446,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":420,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":341,"org.easymock.tests2.UsageConstraintsTest.lessThan":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":307,"org.easymock.tests2.CaptureTest.testCaptureRightOne":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":407,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":242,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":412,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":353,"org.easymock.tests2.CompareToTest.testLessThan":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests2.CaptureTest.testCaptureFromStub":460,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":161,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests2.UsageConstraintsTest.constraints":401,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":73,"org.easymock.tests.UsageStrictMockTest.testVerify":146,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":62,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":195,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.LimitationsTest.abstractClass":235,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":312}}]
