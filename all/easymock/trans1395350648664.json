[{"transplant":{"position":"org.easymock.EasyMock:1634","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[47,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[16,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[53,53,54,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,61,62,63,64,65,29,32,33,34,37,66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,21,106,107,108,109,110,111,112,113,114,115,116,117,118,119,26,120,121,122,123,124,125,42,126,127,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[130,131,132,133,134,135,136,137,138,53,54,139,140,141,142,143,144,145,146,147,148,149,150,151,55,152,153,67,154,0,1,155,57,156,157,158,159,160,161,162,163,164,165,68,69,70,71,72,73,74,75,76,77,78,79,80,81,166,167,168,169,170,171,6,82,172,173,51,174,83,84,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,22,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,21,106,107,108,109,110,111,112,201,202,203,204,9,205,206,10,207,208,209,210,211,23,212,213,214,215,216,217,24,218,219,220,221,222,223,224,225,226,227,228,229,230,231,25,232,113,114,115,116,117,233,234,235,236,237,238,239,240,241,242,118,119,243,2,3,244,245,246,247,248,26,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,263,264,265,62,63,266,64,267,268,65,269,270,271,272,273,274,275,276,277,27,28,278,279,29,280,30,31,32,33,281,34,35,36,37,282,38,39,40,41,120,283,121,122,284,285,286,287,288,123,124,125,42,126,289,290,43,291,292,293,294,295,296,297,298,299,300,127,128,129,301,302,303,304,305,306,307,308,309,309,310,311,312,313,45,314,315,316,317,46,318,319,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[130,131,132,133,134,135,136,137,138,53,54,139,140,141,142,143,144,145,146,147,148,149,150,151,55,152,153,67,154,0,1,155,57,156,157,158,159,160,161,162,163,164,165,68,69,70,71,72,73,74,75,76,77,78,79,80,81,166,167,168,169,170,171,6,82,172,173,51,174,83,84,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,22,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,21,106,107,108,109,110,111,112,201,202,203,204,9,205,206,10,207,208,209,210,211,23,212,213,214,215,216,217,24,218,219,220,221,222,223,224,225,226,227,228,229,230,231,25,232,113,114,115,116,117,233,234,235,236,237,238,239,240,241,242,118,119,243,2,3,244,245,246,247,248,26,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,263,264,265,62,63,266,64,267,268,65,269,270,271,272,273,274,275,276,277,27,28,278,279,29,280,30,31,32,33,281,34,35,36,37,282,38,39,40,41,120,283,121,122,284,285,286,287,288,123,124,125,42,126,289,290,43,291,292,293,294,295,296,297,298,299,300,127,128,129,301,302,303,304,305,306,307,308,310,311,312,313,45,314,315,316,317,46,318,319,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[321,322,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[57,156,157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":216,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":157,"org.easymock.tests2.DelegateToTest.testReturnException":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":306,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":27,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests2.DelegateToTest.testWrongClass":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":229,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":159,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests.UsageTest.moreThanOneArgument":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":17,"org.easymock.tests.UsageUnorderedTest.message":120,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests.UsageTest.argumentsOrdered":319,"org.easymock.tests.UsageVarargTest.varargIntAccepted":293,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":10,"org.easymock.tests2.UsageConstraintsTest.any":97,"org.easymock.tests2.StubTest.stub":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":47,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":154,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.DelegateToTest.testDelegate":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":208,"org.easymock.tests.MockingTest.testNicePartialClassMocking":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests2.CompareToTest.testCompareEqual":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":288,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":19,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":50,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":103,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.samples.PartialClassMockTest.testGetArea":140,"org.easymock.tests2.CompareToTest.testLessOrEqual":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests2.UsageTest.niceToStrict":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":28,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":240,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":206,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":33,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":125,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":162,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":48,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":100,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":18,"org.easymock.tests.UsageThrowableTest.throwCheckedException":237,"org.easymock.tests2.EasyMockSupportClassTest.testAll":223,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":286,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.tests2.CompareToTest.testGreateOrEqual":14,"org.easymock.samples.ExampleTest.voteForRemovals":137,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":287,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.samples.ExampleTest.addDocument":136,"org.easymock.tests2.DelegateToTest.testStubDelegate":184,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":239,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":119,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":59,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.samples.ExampleTest.voteForRemoval":134,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":272,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests2.SerializationTest.test":156,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":260,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.samples.SupportTest.addDocument":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests2.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":80,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":255,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":284,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":313,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":250,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":280,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.testContains":99,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":84,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":205,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":295,"org.easymock.tests.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":16,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":98,"org.easymock.tests.UsageVarargTest.varargCharAccepted":294,"org.easymock.tests2.CompareToTest.testLessThan":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":44,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests2.UsageTest.openCallCountByLastCall":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":79,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":236,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":65,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":138,"org.easymock.tests.CapturesMatcherTest.test":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":285,"org.easymock.tests2.CompareToTest.testGreateThan":12,"org.easymock.tests2.UsageTest.resumeIfFailure":221,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193}}]
