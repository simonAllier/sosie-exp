[{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[251,252,228],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[17,18,19,20,38,39,40,41,42,43,253,45,48,49,50,109,127,128,254,130,132,133,134,149,151,161,189,191,255,256,257,258,192,195,196,197,200,201,202,204,209,210,211,212,259,260,261,262,263,264,265,266,247,248,249],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[161,162,164,166,167,267,178,183,231,233,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[268,269,270,186,271,272,273,274,275,276,213,277,278],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[168,173,185,279],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[280,281,282,283,284,0,1,2,3,285,4,5,286,287,288,289,290,291,6,7,8,292,293,294,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,295,28,29,296,30,297,31,32,33,34,35,36,37,38,39,40,41,42,43,44,253,45,46,47,48,49,50,51,52,53,54,55,298,56,57,58,59,60,299,61,62,63,64,65,300,301,302,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,303,106,107,108,109,110,111,112,113,114,304,305,306,307,308,115,309,310,311,312,313,314,315,116,316,117,118,119,120,121,122,123,317,318,124,319,320,321,322,323,324,325,326,125,126,127,128,327,328,329,330,331,254,129,130,131,132,133,134,135,332,333,136,137,138,139,140,141,334,142,268,268,269,269,335,336,337,338,339,340,143,144,145,146,147,148,149,150,151,341,152,342,343,344,345,346,347,153,154,348,349,155,156,157,158,159,160,161,162,163,164,165,166,167,168,267,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,350,190,191,255,256,351,257,258,192,193,194,195,196,197,198,199,200,201,202,203,204,205,352,353,206,207,208,209,210,211,212,259,354,355,260,356,261,262,357,263,264,358,359,360,361,362,363,364,365,265,213,214,215,216,217,218,219,220,221,222,223,224,225,226,366,252,227,228,229,367,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,368,266,245,246,247,248,249,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[369,370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[130,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[109,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,374,294,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,43,44,45,46,47,48,49,50,51,52,53,54,55,298,56,57,58,59,60,61,62,63,64,65,375,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,116,117,118,119,120,121,122,123,325,326,125,126,127,128,328,329,254,129,130,131,132,133,134,135,332,136,137,138,139,140,141,142,335,336,337,338,339,340,143,144,145,146,147,148,150,342,343,347,348,349,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,259,354,355,260,356,261,262,357,264,358,359,360,361,265,214,215,216,217,218,219,220,221,222,223,224,225,226,366,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,266,245,246,247,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[173,279],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[280,281,282,283,0,1,2,3,4,5,286,287,288,289,290,291,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,45,46,47,48,49,50,51,52,53,54,55,298,56,57,58,59,60,299,61,62,63,64,65,300,301,302,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,316,117,118,119,120,121,122,123,317,125,126,127,128,328,329,254,129,130,131,132,133,134,135,332,333,136,137,138,139,140,141,142,268,268,269,269,335,336,337,338,339,340,143,144,145,146,147,148,150,341,152,342,343,344,345,346,347,153,154,348,349,155,156,157,158,159,160,161,162,163,164,165,166,167,168,267,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,350,190,255,256,257,192,193,194,195,196,197,198,199,200,201,202,203,204,205,352,353,206,207,208,259,354,355,260,356,261,262,357,263,264,358,359,360,361,362,363,364,365,265,213,214,215,216,217,218,219,220,221,222,223,224,225,226,366,252,227,228,229,367,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,266,245,246,247,248,249,250],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1135","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[335,336,376,377,378,379],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[280,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[280,281,282,283,284,0,1,2,3,285,4,5,286,287,288,380,381,382,383,384,385,386,387,289,290,291,6,7,8,374,292,293,294,388,389,390,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,295,28,29,296,30,297,31,32,391,33,34,35,36,37,38,39,40,41,42,43,44,253,45,46,47,48,49,50,51,52,53,392,54,55,298,56,57,58,59,60,393,299,394,395,396,61,397,62,63,398,64,65,300,375,399,400,401,402,403,404,405,406,407,408,251,409,410,411,412,413,301,414,415,416,417,418,302,419,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,420,421,303,106,107,422,108,423,424,425,109,110,111,112,113,114,426,304,427,428,429,430,431,432,433,305,306,307,308,115,309,310,311,312,313,314,315,116,316,117,118,119,120,121,122,123,317,318,124,434,319,320,321,322,323,324,325,326,125,126,127,128,327,328,329,330,331,254,129,130,131,132,133,134,135,332,333,136,137,138,139,140,141,334,142,268,269,335,336,337,338,339,340,143,144,145,146,147,148,149,435,150,270,436,151,341,152,342,437,438,439,440,441,343,442,443,344,444,445,446,447,448,449,450,451,452,345,453,454,455,456,457,346,458,459,347,153,154,348,460,349,155,156,461,157,462,158,159,160,161,162,463,163,164,165,166,167,168,267,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,271,350,464,272,465,190,191,255,273,256,274,275,351,257,276,258,192,193,194,195,196,197,198,199,200,201,202,203,204,466,369,370,371,467,468,469,205,352,353,206,207,208,209,210,211,212,376,470,471,472,473,259,377,474,475,476,477,478,354,355,260,356,261,262,357,263,264,358,359,360,361,479,362,363,364,365,378,480,481,482,483,265,379,484,485,486,487,488,213,277,278,214,215,216,217,218,219,220,221,222,223,224,225,489,490,226,366,252,227,228,229,367,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,368,266,245,246,247,248,249,250],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[295,296,30,297,491,492,493,494,495,496,497,43,44,253,45,48,49,50,298,109,318,124,126,127,128,254,130,131,132,133,134,135,144,341,342,161,175,192,194,195,196,197,201,202,204,498,372,499,500,501,502,503,504,505,506,507,355,262,357,358,218,266,246,247,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[497,253,45,48,49,109,127,128,130,133,195,201,202,248],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[37,89,95,102,103,120],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[290,291,6,7,8,9,11,12,13,14,15,16,30,31,32,33,34,35,36,37,43,44,46,47,50,299,61,62,64,300,408,409,417,418,419,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,114,116,316,117,118,126,128,131,133,134,333,136,138,139,141,338,143,144,145,146,147,148,150,341,152,342,343,344,345,346,347,153,154,348,349,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,350,190,255,256,257,192,193,194,196,198,199,200,203,204,207,259,354,355,260,356,261,262,357,263,264,358,359,360,265,213,216,219,220,221,222,223,225,226,366,228,231,232,234,235,238,239,240,241,243,244,246,248,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[491,493,253,130,372,505],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[8,11,15,16,21,22,23,24,25,26,29,43,47,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,112,113,192,199,214,215,216,217,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[167,168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[176,509],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":202,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":335,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":344,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":195,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":19,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":385,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":424,"org.easymock.tests2.UsageConstraintsTest.testNull":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":358,"org.easymock.tests2.CaptureTest.testPrimitive":234,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":121,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":501,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests.ReplayStateInvalidUsageTest.times":312,"org.easymock.tests2.DependencyTest.testClassMocking":489,"org.easymock.tests2.AnswerTest.answer":205,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":382,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests.LimitationsTest.mockFinalMethod":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":42,"org.easymock.tests2.DependencyTest.testClassMockingSupport":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":318,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.UsageThrowableTest.throwError":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":307,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":459,"org.easymock.samples.PartialClassMockTest.testGetArea":333,"org.easymock.tests.MockingTest.testInterfaceMocking":422,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":448,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":190,"org.easymock.tests2.MockBuilderTest.testCreateMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":17,"org.easymock.tests.UsageOverloadedMethodTest.overloading":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":173,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":240,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":392,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.MockNameTest.defaultName":390,"org.easymock.tests2.UsageConstraintsTest.testMatches":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":305,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests.UsageVarargTest.allKinds":60,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":41,"org.easymock.samples.BasicClassMockTest.testPrintContent":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":432,"org.easymock.tests2.UsageConstraintsTest.greaterThan":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":342,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":433,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":437,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":149,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":260,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":244,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":356,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":204,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":93,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":59,"org.easymock.tests.GenericTest.testBridgedEquals":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":4,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":38,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":181,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":5,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":492,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests.MockingTest.testNiceClassMocking":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":421,"org.easymock.tests2.UsageConstraintsTest.testContains":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":284,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":216,"org.easymock.tests2.UsageConstraintsTest.testFind":163,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":8,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":158,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndReturnTest.object":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":264,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":55,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":294,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":496,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":51,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":450,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":500,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":54,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":426,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests.DefaultClassInstantiatorTest.object":304,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":292,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":451,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":502,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":346,"org.easymock.tests2.UsageTest.resumeIfFailure":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":380,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.StubTest.stubWithReturnValue":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":95,"org.easymock.tests2.SerializationTest.testAllMockedMethod":188,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":301,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":338,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":302,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":352,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":394,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":179,"org.easymock.tests2.DelegateToTest.testWrongClass":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":439,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests2.CaptureTest.testCaptureNone":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":128,"org.easymock.tests.UsageVarargTest.varargByteAccepted":58,"org.easymock.tests2.ThreadingTest.testThreadSafe":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":453,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":3,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":339,"org.easymock.tests2.CaptureTest.testCapture_2617107":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":113,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":430,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":310,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.tests2.SerializationTest.testClass":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests2.NameTest.nameForMocksControl":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":443,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":462,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":256,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.CaptureTest.testCaptureLast":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":180,"org.easymock.tests.MockingTest.testTwoMocks":303,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":184,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ConstraintsToStringTest.andToString":504,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":258,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":206,"org.easymock.tests.UsageVerifyTest.twoThrows":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":278,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":345,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.LimitationsTest.privateConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testNotNull":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":214,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":218,"org.easymock.tests2.UsageConstraintsTest.equals":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":494,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":270,"org.easymock.tests.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":20,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":420,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":349,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":208,"org.easymock.tests2.CompareToTest.testGreateOrEqual":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":293,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.NameTest.nameForNiceMock":364,"org.easymock.tests2.DependencyTest.testInterfaceMocking":226,"org.easymock.samples.ExampleTest.addDocument":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.DelegateToTest.testStubDelegate":228,"org.easymock.tests2.AnswerTest.stubAnswer":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":131,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":274,"org.easymock.tests.UsageVarargTest.varargLongAccepted":57,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":177,"org.easymock.tests.UsageThrowableTest.noUpperLimit":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":160,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testSame":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.samples.SupportTest.addDocument":337,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":460,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":445,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":423,"org.easymock.tests2.NameTest.nameForMock":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":98,"org.easymock.tests2.UsageStrictMockTest.differentMethods":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":118,"org.easymock.tests2.MockedExceptionTest.testRealException":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":315,"org.easymock.tests2.NameTest.nameForStrictMock":363,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":467,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":178,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":350,"org.easymock.tests2.UsageStrictMockTest.range":248,"org.easymock.tests2.UsageConstraintsTest.lessThan":185,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":449,"org.easymock.tests2.CaptureTest.testCaptureRightOne":241,"org.easymock.tests2.UsageConstraintsTest.testOr":166,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.MockBuilderTest.testWithConstructor":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":446,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":99,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":431,"org.easymock.tests.UsageVarargTest.varargShortAccepted":56,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":306,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":464,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.constraints":161,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests2.ConstraintsToStringTest.notToString":499,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests2.CompareToTest.testGreateThan":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":39,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":35,"org.easymock.tests.LimitationsTest.abstractClass":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":36,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
