[{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[20,16,19,21],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,49,50,51,52,9,53,10,54,55,56,57,58,14,59,60],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[1,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[7,11,54,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[29,30,31,32,33,34,35,69,70,36,71,72,73,74,75,76,77,78,79,80,81,82,83,37,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,38,39,40,41,42,43,44,45,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,171,6,172,173,174,175,176,177,178,179,180,181,182,49,183,184,185,186,1,2,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,8,9,10,11,14,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,29,30,31,32,33,236,237,238,34,35,69,70,36,71,72,73,74,75,76,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,77,78,79,276,80,81,82,277,83,23,37,84,85,86,87,278,279,280,281,282,283,284,88,15,22,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,89,90,91,92,93,94,95,96,97,305,306,307,308,309,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,310,121,122,311,123,124,125,126,127,38,39,312,313,314,40,315,41,42,43,44,45,316,317,318,319,320,321,322,323,324,128,325,129,130,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,26,352,153,154,353,354,155,355,356,357,358,359,360,361,362,156,157,158,46,47,363,159,160,161,162,163,164,165,364,166,167,168,4,169,5,365,366,367,368,170,171,369,6,48,370,172,20,371,372,373,173,174,374,175,375,376,176,377,16,378,379,380,381,382,383,177,384,385,17,386,387,388,389,390,391,392,393,394,395,396,397,178,179,180,398,181,399,400,401,402,403,404,405,406,407,408,409,410,411,412,182,49,183,184,185,186,1,2,3,187,188,189,190,191,192,193,413,194,195,196,197,414,415,198,199,200,416,201,50,51,7,8,417,52,9,53,10,11,418,12,419,420,54,421,55,56,422,57,58,13,423,424,425,426,14,59,60,427,428,429,430,431,202,432,433,434,435,436,437,18,438,439,440,441,442,203,19,204,61,205,443,62,444,445,446,447,448,449,450,451,452,206,453,454,455,456,457,458,459,460,461,462,463,464,21,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,207,208,485,209,210,211,212,486,213,214,215,216,487,488,489,217,218,490,491,492,63,64,493,219,494,495,220,221,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[264,280,281,282,173,217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[384,17,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[253,494,221,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[7,418,55,60,497],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[75,250,78,82,89,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,151,154,359,360,361,174,210,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[46,46,47,47,380,1,443,62,63,64],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[50,57,423],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[239,244,276,283,284,88,15,22,285,286,287,288,289,290,291,292,306,307,308,309,329,330,331,332,333,335,338,344,345,346,347,348,349,351,157,158,46,46,47,47,363,20,371,372,374,175,376,176,377,16,379,380,381,382,383,177,384,385,17,391,392,393,395,399,400,401,402,405,406,1,3,18,439,440,442,203,19,204,205,62,444,445,447,459,460,461,462,463,464,21,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[128,129,198,200,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[283,15,46,46,47,47,363,380,177,17,1,438,441,203,61,443,62,444,446,447,21,474,63,64,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[78,79,23,85,97,498,26,352,353,354,184,486,488,489],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[239,244,15,363,16,1,18,499,439,440,203,19,204,205,444,445,500,501,447],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":489,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":257,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":72,"org.easymock.tests.MockingTest.testPartialClassMocking":332,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":418,"org.easymock.tests2.UsageTest.wrongArguments":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":34,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":244,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":376,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":365,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":231,"org.easymock.tests.UsageTest.argumentsOrdered":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":33,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.ReplayStateInvalidUsageTest.times":301,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":411,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":241,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":113,"org.easymock.tests.LimitationsTest.mockFinalMethod":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":236,"org.easymock.tests2.CaptureTest.testCapture1_2446744":366,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":409,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":295,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":243,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":482,"org.easymock.samples.PartialClassMockTest.testGetArea":363,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":296,"org.easymock.tests.MockingTest.testInterfaceMocking":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":99,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":203,"org.easymock.tests2.MockBuilderTest.testCreateMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests.UsageOverloadedMethodTest.overloading":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":130,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":421,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":369,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":310,"org.easymock.tests2.EasyMockSupportClassTest.testAll":462,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":410,"org.easymock.tests2.CaptureTest.testCaptureAll":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests.MockNameTest.defaultName":305,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":77,"org.easymock.samples.BasicClassMockTest.testPrintContent":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":76,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":384,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":500,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":71,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":415,"org.easymock.tests2.CaptureTest.testCaptureFirst":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":265,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":126,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":425,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":400,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":330,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":82,"org.easymock.tests.MockTypeTest.fromEasyMockClass":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":492,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":194,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":66,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":228,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":118,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":471,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":408,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":121,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.DefaultClassInstantiatorTest.object":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":480,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":74,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":263,"org.easymock.samples.SupportTest.voteForRemovals":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":110,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":494,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":230,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":423,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":303,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":125,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":157,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageConstraintsTest.any":419,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":299,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests2.NameTest.nameForMocksControl":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":464,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":102,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":374,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":333,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":406,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":424,"org.easymock.tests.MockingTest.testTwoMocks":331,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":488,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":59,"org.easymock.samples.ExampleTest.removeNonExistingDocument":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":447,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":465,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":474,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":177,"org.easymock.tests.LimitationsTest.privateConstructor":307,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":20,"org.easymock.tests2.UsageTest.defaultResetToNice":487,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.UsageVarargTest.differentLength":311,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":25,"org.easymock.tests.MockingTest.testStrictClassMocking":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":405,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":404,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":496,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.NameTest.nameForNiceMock":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":67,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":443,"org.easymock.tests.UsageVarargTest.varargLongAccepted":124,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":391,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":367,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests2.UsageConstraintsTest.testSame":53,"org.easymock.samples.SupportTest.addDocument":167,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":403,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":466,"org.easymock.tests.GenericTest.testPackageScope":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":446,"org.easymock.tests2.UsageStrictMockTest.differentMethods":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":304,"org.easymock.tests2.NameTest.nameForStrictMock":388,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":439,"org.easymock.tests2.UsageStrictMockTest.range":184,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":470,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":175,"org.easymock.tests.UsageTest.wrongArguments":352,"org.easymock.tests2.MockBuilderTest.testWithConstructor":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":467,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":248,"org.easymock.tests.UsageVarargTest.varargShortAccepted":123,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":322,"org.easymock.tests2.UsageConstraintsTest.cmpTo":420,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":250,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":156,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.LimitationsTest.abstractClass":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":32,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193}}]
