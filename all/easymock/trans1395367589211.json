[{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[108,4,12,13,14,109,110,111,112,18,27,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[151],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[28,41,51,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[98,152,151],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[115,116,133,134,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[157,158,159],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[161,162,163,164,108,3,4,7,8,9,10,12,13,14,165,109,166,167,168,110,111,169,170,112,171,172,173,15,174,16,17,18,175,19,20,21,22,23,26,27,28,0,31,176,177,178,179,180,113,181,182,114,115,116,183,117,184,185,118,119,120,186,187,150,121,122,123,124,188,189,125,190,191,192,193,194,195,196,197,198,199,200,201,202,126,203,204,160,205,206,207,208,209,210,211,212,213,38,41,51,57,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,60,61,62,63,239,64,65,66,67,68,240,241,242,69,70,243,71,244,245,246,247,248,249,250,251,252,253,72,73,254,255,256,257,127,128,129,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,81,83,84,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,90,91,92,130,302,131,303,132,133,134,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,135,325,136,137,326,327,138,139,140,141,142,328,329,330,331,332,333,334,103,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,154,147,148,353,354,355,356,357,358,359,149,360,361,362,363,364],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[117,187,66,67,68,240,242,259,267,365,366,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,300,301,135,327,332,333,335,336,337,338,339,340,367,368,352,147],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[161,369,370,162,163,164,108,4,7,9,10,13,165,109,166,167,168,110,111,169,170,112,171,172,173,15,174,16,17,18,175,19,20,21,23,26,27,28,0,31,176,371,177,178,179,372,180,113,181,182,114,115,116,183,117,184,185,118,119,120,186,187,150,121,122,123,124,188,189,125,190,191,192,193,194,195,196,373,197,198,199,200,201,202,126,203,204,160,205,206,207,208,209,210,211,212,213,38,41,51,57,214,215,216,217,374,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,238,60,61,62,63,239,64,65,66,67,68,240,241,242,375,376,377,378,69,69,70,70,243,71,244,245,246,247,248,249,250,251,252,253,72,73,379,254,255,256,257,128,129,258,259,260,261,262,263,264,74,265,380,266,267,381,382,269,270,271,272,273,81,83,84,85,383,384,385,365,366,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,89,90,91,92,386,387,130,302,131,303,132,133,134,304,388,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,155,389,390,135,325,137,326,327,138,139,140,141,142,391,328,329,330,331,332,333,334,103,392,393,394,395,396,335,336,337,338,339,340,397,367,368,398,399,350,351,352,154,147,148,353,354,400,355,356,357,358,359,149,360,361,362,363,364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[98,152,151],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[108,3,4,5,9,10,12,13,14,109,167,110,111,170,112,18,26,0,30,176,401,113,182,114,115,116,183,117,185,118,119,120,121,122,123,124,125,126,402,238,403,61,62,64,65,375,376,377,378,379,254,255,127,128,129,75,76,77,380,381,382,268,386,387,130,131,303,132,133,134,304,404,135,325,136,137,138,139,140,141,142,398,405,105,154,147,148,149,106,406,407,107,408,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[410],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[161,369,370,162,163,164,108,4,7,9,10,13,165,109,166,167,168,110,111,169,170,112,171,172,173,15,174,16,17,18,175,19,20,21,23,26,27,28,0,31,176,371,177,178,179,372,180,113,181,182,114,115,116,183,117,184,185,118,119,120,186,187,150,121,122,123,124,188,189,125,190,191,192,193,194,195,196,373,197,198,199,200,201,202,126,203,204,160,205,206,207,208,209,210,211,212,213,38,41,51,57,214,215,216,217,374,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,238,60,61,62,63,239,64,65,66,67,68,240,241,242,375,376,377,378,69,69,70,70,243,71,244,245,246,247,248,249,250,251,252,253,72,73,379,254,255,256,257,128,129,258,259,260,261,262,263,264,74,265,380,266,267,381,382,269,270,271,272,273,81,83,84,85,383,384,385,365,366,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,89,90,91,92,386,387,130,302,131,303,132,133,134,304,388,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,155,389,390,135,325,137,326,327,138,139,140,141,142,391,328,329,330,331,332,333,334,103,392,393,394,395,396,335,336,337,338,339,340,397,367,368,398,399,350,351,352,154,147,148,353,354,400,355,356,357,358,359,149,360,361,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":336,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":75,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests2.UsageTest.wrongArguments":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":343,"org.easymock.samples.ExampleTest.answerVsDelegate":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":107,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":80,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":1,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests.UsageTest.moreThanOneArgument":325,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":139,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":3,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":237,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":396,"org.easymock.tests2.DelegateToTest.testDelegate":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":289,"org.easymock.tests.LimitationsTest.mockFinalMethod":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":235,"org.easymock.tests.UsageThrowableTest.throwError":294,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":59,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":275,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":341,"org.easymock.tests.UsageOverloadedMethodTest.overloading":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":201,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":316,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":200,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":347,"org.easymock.tests.MockNameTest.defaultName":404,"org.easymock.tests2.UsageConstraintsTest.testMatches":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":252,"org.easymock.tests.UsageVarargTest.allKinds":364,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":348,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":300,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":340,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":100,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":29,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":166,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":335,"org.easymock.tests2.CaptureTest.testCaptureFirst":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":167,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":312,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":128,"org.easymock.tests.UsageExpectAndReturnTest.longType":308,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.UsageCallCountTest.tooManyCalls":129,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":299,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testNiceClassMocking":93,"org.easymock.tests.MockingTest.testClassMocking":88,"org.easymock.tests2.UsageConstraintsTest.testContains":199,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":68,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":352,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":321,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.ResultTest.createThrowResultToString":159,"org.easymock.tests.MockClassControlTest.testHashCode":78,"org.easymock.tests2.EasyMockSupportTest.testVerify":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":234,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":385,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":398,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":76,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":338,"org.easymock.tests2.StubTest.stubWithReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.samples.SupportTest.voteForRemovals":246,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":286,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":384,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":369,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":153,"org.easymock.tests.UsageExpectAndThrowTest.object":284,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":205,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":342,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":390,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.UsageUnorderedTest.message":141,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":143,"org.easymock.tests.UsageVerifyTest.twoReturns":148,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":405,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests2.CaptureTest.testCapture_2617107":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":333,"org.easymock.tests2.UsageConstraintsTest.any":197,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageExpectAndThrowTest.longType":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":98,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":324,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":378,"org.easymock.tests2.MockedExceptionTest.testMockedException":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CompareToTest.testCompareEqual":410,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":206,"org.easymock.tests.MockingTest.testTwoMocks":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":210,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":96,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":374,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":276,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.ResultTest.createReturnResultToString":158,"org.easymock.tests.UsageVerifyTest.twoThrows":147,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.tests.ResultTest.createDelegateResultToString":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":28,"org.easymock.tests.LimitationsTest.privateConstructor":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":301,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":320,"org.easymock.tests.UsageVarargTest.differentLength":149,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":24,"org.easymock.tests.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":332,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":344,"org.easymock.tests.UsageThrowableTest.throwCheckedException":298,"org.easymock.tests.MockingTest.testStrictClassMocking":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.NameTest.nameForNiceMock":377,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.samples.ExampleTest.addDocument":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.DelegateToTest.testStubDelegate":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":303,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.floatType":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests.UsageThrowableTest.noUpperLimit":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":33,"org.easymock.tests2.SerializationTest.test":174,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":95,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":306,"org.easymock.samples.SupportTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":43,"org.easymock.tests.GenericTest.testPackageScope":83,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":395,"org.easymock.tests2.NameTest.nameForMock":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":317,"org.easymock.tests2.UsageStrictMockTest.differentMethods":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":329,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":331,"org.easymock.tests2.NameTest.nameForStrictMock":376,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":115,"org.easymock.tests2.UsageConstraintsTest.lessThan":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":230,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":318,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":99,"org.easymock.tests.UsageVarargTest.varargShortAccepted":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":127,"org.easymock.tests2.UsageConstraintsTest.cmpTo":198,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":5,"org.easymock.tests.UsageTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":131,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":319,"org.easymock.tests2.CaptureTest.testCapture":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageStrictMockTest.testVerify":388,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.LimitationsTest.abstractClass":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
