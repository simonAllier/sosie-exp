[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[14,25,26,27,15,16,17,28,18,29,30,31,32,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[1,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,14,54,55,56,25,57,26,27,6,0,58,59,60,61,62,63,64,10,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,15,82,83,84,28,85,86,18,87,88,89,30,31,32,90,91,92,93,94,95,96,97,98,99,100,101,102,103,22,104,105,106,107,108,109,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[111,112,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[114,114,115,115,154,156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[158,159,160,161,162,163],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[3,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[149,167,76,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[149,167,76,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[169,170,28,29,171,172],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[173,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[111,112,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[177,37],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[38,39,178,40,41,42,43,44,45,46,47,48,49,179,114,114,115,115,180,181,182,183,116,184,185,186,187,188,118,189,190,191,119,192,50,51,52,53,14,54,55,56,193,194,195,25,196,57,197,198,199,26,27,200,201,202,203,127,130,140,146,204,205,206,207,208,209,210,1,2,211,3,212,4,5,35,6,0,213,214,215,36,216,217,218,219,7,13,220,58,59,8,221,37,60,61,62,63,222,223,224,225,226,227,228,229,9,64,10,230,231,65,66,67,68,232,11,233,234,69,70,235,236,71,237,238,239,240,241,72,73,74,75,149,167,76,242,243,244,77,245,246,247,78,79,248,249,80,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,81,272,273,274,15,82,16,17,21,275,83,84,28,85,86,18,87,88,89,276,277,29,30,278,279,31,32,280,281,282,283,284,285,286,287,90,288,289,290,291,292,293,294,295,91,92,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,93,94,95,96,97,98,99,100,101,102,103,22,104,329,23,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,105,362,363,106,107,108,109,110,364,365,366,367,368,369,370,371,372,12,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[21,12,373],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":57,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":38,"org.easymock.tests2.SerializationTest.testAllMockedMethod":76,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":21,"org.easymock.tests.MockingTest.testPartialClassMocking":359,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":170,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":164,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":134,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":275,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":130,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":243,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":13,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ConstructorCalledMockTest.testTax":114,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":230,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests.UsageTest.moreThanOneArgument":277,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":101,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":322,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":141,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":92,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests2.StubTest.stub":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":174,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests.LimitationsTest.mockNativeMethod":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":321,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":272,"org.easymock.tests2.AnswerTest.answer":242,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":151,"org.easymock.tests2.NameTest.nameForMocksControl":63,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":129,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":326,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":249,"org.easymock.tests.MockingTest.testNicePartialClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":255,"org.easymock.tests2.CompareToTest.testNotComparable":166,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":231,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":369,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":77,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":298,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":122,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":333,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":317,"org.easymock.tests.UsageVarargTest.differentLength":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":143,"org.easymock.tests2.CallbackTest.callback":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":156,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":91,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":291,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":313,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testAll":127,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":172,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":368,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.NameTest.nameForNiceMock":62,"org.easymock.tests.UsageVarargTest.allKinds":103,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.samples.BasicClassMockTest.testPrintContent":47,"org.easymock.samples.ExampleTest.addDocument":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":142,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":332,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":100,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests.UsageExpectAndReturnTest.floatType":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":115,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":210,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests2.SerializationTest.test":167,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":303,"org.easymock.tests2.UsageConstraintsTest.testSame":212,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":282,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":71,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":132,"org.easymock.tests.GenericTest.testPackageScope":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":234,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":102,"org.easymock.tests.GenericTest.testBridgedEquals":165,"org.easymock.tests2.NameTest.nameForMock":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":109,"org.easymock.tests.UsageExpectAndReturnTest.longType":305,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":314,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":144,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":310,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests2.NameTest.nameForStrictMock":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":211,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":254,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":223,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests.UsageExpectAndReturnTest.object":312,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":19,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":235,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":136,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":323,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":290,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":137,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":173,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":99,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests.UsageVarargTest.varargCharAccepted":96,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":244,"org.easymock.tests2.CompareToTest.testLessThan":177,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":51,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":111,"org.easymock.tests.DefaultClassInstantiatorTest.object":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":268,"org.easymock.tests2.CaptureTest.testCaptureFromStub":233,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":44,"org.easymock.tests.CapturesMatcherTest.test":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":319,"org.easymock.tests.UsageStrictMockTest.testVerify":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":370,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests2.UsageTest.resumeIfFailure":200,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":300,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":20}}]
