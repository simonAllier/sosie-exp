[{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,0,6,7,8,9,10,11,12,13,1,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[49],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[71,72,73,74,61,65],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,4,130,131,132,133,134,135,136,137,138,139,140,141,142,5,143,144,145,50,146,147,148,149,150,51,52,151,152,0,6,153,154,7,8,9,10,155,156,157,158,11,159,12,13,53,1,14,160,161,162,163,2,15,16,17,164,165,166,167,168,169,170,171,172,18,173,54,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,24,25,26,27,28,57,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,29,249,30,31,32,33,34,250,58,59,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,60,270,271,272,273,274,275,36,37,276,277,278,279,280,281,282,283,284,61,62,285,286,63,64,287,288,289,290,291,292,293,65,38,294,66,295,296,39,40,297,298,41,299,300,301,302,303,304,305,306,307,308,309,310,42,43,311,312,313,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[316,317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[318,319,320,321,105,107,120,121,123,124,125,126,127,131,5,143,145,50,148,149,51,52,152,8,157,53,15,18,173,54,174,186,188,57,248,250,58,59,258,274,283,284,62,285,286,63,64,287,65,38,294,66,295,40,41,301],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[54,57,58,59,322,323,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[324,188,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[156,12,17,328],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[50,51,52,54,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[329,330],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[331,332,333,334,335,336,337,338,339,340,182,185,341],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[119,121,129,153,154,8,10,155,342,160,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[318,319,320,321,79,344,81,88,91,345,93,95,97,98,100,101,132,133,346,136,137,138,139,140,141,347,143,145,50,146,147,51,52,151,152,153,53,165,166,169,170,171,18,173,54,174,175,186,67,68,348,349,350,351,352,353,354,355,356,357,358,359,360,57,243,250,58,59,264,69,70,361,60,362,276,277,280,281,282,283,284,61,62,63,64,287,292,65,38,294,66,295,296],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[1,363],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[364,365,366,367,344,368,369,370,371,372,373,374,347,375,376,377,312,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[318,319,320,321,79,80,81,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,379,111,112,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,139,141,142,5,143,144,145,50,146,147,148,149,150,51,52,151,152,0,6,153,154,7,8,9,10,155,156,342,157,158,11,159,12,13,53,1,14,160,161,162,163,2,15,16,17,164,165,166,167,168,169,170,171,172,18,173,54,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,67,68,380,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,24,25,26,27,28,45,57,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,29,381,382,250,58,59,256,257,258,259,260,261,262,263,264,383,265,266,267,69,268,269,70,361,274,36,37,362,276,277,278,279,281,282,283,284,62,285,286,63,64,287,288,289,290,291,292,293,65,38,294,66,295,296,384,39,40,297,298,41,385,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[182,183,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"finalizeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[182,183,184,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[54,58,59,323,66],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[154,155,160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[113,114,115,116,5,143,149,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,249,258,262,263,269,270,271,272,273,274,275,283,286,297,298,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[111,113,388,389,390],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[391,392,393,42,43],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":154,"org.easymock.tests2.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":315,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":271,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":348,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":335,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageTest.wrongArguments":50,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.CaptureTest.testPrimitive":122,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests.UsageTest.moreThanOneArgument":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":32,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":378,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":78,"org.easymock.tests2.CaptureTest.testAnd":119,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.DelegateToTest.testDelegate":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":67,"org.easymock.tests2.CaptureTest.testCapture1_2446744":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":76,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":34,"org.easymock.samples.PartialClassMockTest.testGetArea":311,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests2.CompareToTest.testLessOrEqual":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":46,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.CaptureTest.testCaptureAll":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":253,"org.easymock.tests.MockNameTest.defaultName":354,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.samples.ExampleTest.voteForRemovals":307,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":254,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":383,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.samples.ExampleTest.voteForRemoval":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":270,"org.easymock.tests2.CaptureTest.testCaptureFirst":131,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":139,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":281,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":30,"org.easymock.tests.UsageCallCountTest.tooManyCalls":282,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":336,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":75,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":385,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":351,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":349,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":273,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":184,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":380,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":72,"org.easymock.samples.SupportTest.voteForRemovals":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":386,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":73,"org.easymock.tests2.CaptureTest.testCaptureNone":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":47,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":279,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":316,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.SerializationTest.testClass":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests2.NameTest.nameForMocksControl":321,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":286,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.CaptureTest.testCaptureLast":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":170,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":16,"org.easymock.tests.UsageStrictMockTest.differentMethods":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":330,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":379,"org.easymock.tests2.MockBuilderTest.testCreateMockString":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":106,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":45,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":391,"org.easymock.tests.UsageTest.openCallCountByLastCall":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":167,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":168,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.tests2.CompareToTest.testGreateOrEqual":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":339,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests2.NameTest.nameForNiceMock":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":337,"org.easymock.samples.ExampleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testStubDelegate":188,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":185,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":14,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests.UsageThrowableTest.noUpperLimit":257,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.SerializationTest.test":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":124,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":317,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.samples.SupportTest.addDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":388,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":393,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":40,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":54,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":338,"org.easymock.tests2.CaptureTest.testCaptureRightOne":129,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":329,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":280,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":4,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.constraints":153,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":308,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":312,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":252,"org.easymock.tests2.CompareToTest.testGreateThan":363,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":323}}]
