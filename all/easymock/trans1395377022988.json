[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,88,89,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,161,162,163,1,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,9,10,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[15,195,196,197,198,199,200,201,202,203,204,97,205,206,207,208,209,210,211,212,213,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,214,215,216,217,218,50,54,55,56,57,58,59,60,219,68,78,79,80,81,82,154,155,158,170,173,174,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[220,221,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[14,15,195,196,16,17,197,198,18,222,223,224,225,226,227,228,229,230,231,232,19,20,233,234,21,22,24,25,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,250,251,252,253,254,255,256,51,52,257,53,258,54,55,56,57,58,59,60,61,62,63,64,65,66,67,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,204,68,286,69,70,287,71,288,72,73,74,75,76,77,78,79,80,81,82,83,289,290,291,87,88,89,90,292,91,92,293,93,294,295,296,94,297,298,95,96,97,205,98,299,99,100,101,206,207,102,103,300,104,105,301,106,107,302,108,303,109,110,111,112,113,114,115,116,117,118,119,120,121,304,122,305,123,124,125,126,127,128,129,130,131,306,307,308,309,132,310,133,311,134,135,136,138,139,312,313,140,314,141,142,143,144,145,146,147,148,149,150,151,152,315,316,317,153,318,319,320,154,321,322,155,323,156,157,324,158,159,160,0,161,162,163,1,164,165,166,167,168,169,170,171,172,173,174,175,176,177,325,178,179,180,181,182,183,9,10,11,184,185,326,186,187,327,328,188,189,190,191,192,193,194,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[28,29,36,43,55,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[14,195,196,197,198,18,227,22,254,255,256,257,53,258,284,204,286,69,70,95,205,98,299,206,207,102,103,104,302,108,303,117,123,125,137,142,146,147,150,316,321,323,156,157,160,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[14,15,195,196,16,17,197,198,18,222,223,224,225,226,227,228,229,230,231,232,19,20,233,234,21,22,24,25,235,236,237,238,239,240,331,331,241,242,243,244,245,246,247,248,249,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,250,251,252,253,254,255,256,51,52,257,53,258,54,55,56,57,58,59,60,61,62,63,64,65,66,67,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,204,68,286,69,70,287,71,288,72,73,74,75,76,77,78,79,80,81,82,83,289,290,291,87,88,89,90,292,91,92,293,93,294,295,296,94,297,298,95,96,97,205,98,299,99,100,101,206,207,102,103,300,104,105,301,106,107,302,108,303,109,110,111,112,113,114,115,116,117,118,119,120,121,304,122,305,123,124,125,126,127,128,129,130,131,306,307,308,309,132,310,133,311,134,135,136,137,138,139,312,313,140,314,141,142,143,144,145,146,147,148,149,150,151,152,315,316,317,153,318,319,320,154,321,322,155,323,156,157,324,158,159,160,0,161,162,163,1,164,165,166,167,168,169,170,171,172,173,174,175,176,177,325,178,179,180,181,182,183,9,10,11,184,185,326,186,187,327,328,188,189,190,191,192,193,194,329,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[13,196,197,198,18,222,223,224,225,226,228,229,230,231,232,234,241,242,243,26,30,31,33,38,43,252,253,255,256,51,257,53,61,62,64,65,66,333,266,267,269,274,279,285,204,286,287,71,288,72,73,74,75,76,77,83,289,290,291,87,90,292,91,92,293,93,295,296,94,297,298,95,96,205,98,299,206,207,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,131,132,310,334,134,138,139,140,141,142,143,144,145,146,147,149,150,151,152,315,317,318,322,323,324,0,164,165,166,167,169,172,175,176,177,325,178,182,183,9,10,11,184,185,326,186,327,328,188,189,190,191,194],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[160,326,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[125,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":299,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests2.DelegateToTest.testReturnException":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":48,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":212,"org.easymock.samples.SupportTest.voteForRemovals":87,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":128,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.DelegateToTest.testWrongClass":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":165,"org.easymock.tests2.UsageTest.wrongArguments":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":186,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":86,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.UsageUnorderedTest.message":258,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":295,"org.easymock.tests2.CaptureTest.testCapture_2617107":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":301,"org.easymock.tests2.UsageConstraintsTest.any":166,"org.easymock.tests2.StubTest.stub":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":210,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":47,"org.easymock.tests2.AnswerTest.answer":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":309,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":57,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":249,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests.UsageThrowableTest.throwError":71,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":60,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":310,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":129,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":43,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":233,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":62,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":169,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests.UsageThrowableTest.throwCheckedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":127,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureAll":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":59,"org.easymock.samples.ExampleTest.voteForRemovals":93,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests.UsageVarargTest.allKinds":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.BasicClassMockTest.testPrintContent":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":248,"org.easymock.samples.ExampleTest.addDocument":293,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":76,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":23,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.samples.ExampleTest.voteForRemoval":91,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":290,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":327,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":29,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":235,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":221,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":35,"org.easymock.tests.GenericTest.testPackageScope":83,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":255,"org.easymock.tests.UsageExpectAndReturnTest.longType":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":245,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":325,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests2.UsageStrictMockTest.differentMethods":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":32,"org.easymock.tests.UsageCallCountTest.tooManyCalls":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":250,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests2.NameTest.nameForStrictMock":336,"org.easymock.tests2.UsageConstraintsTest.testContains":168,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":38,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":156,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageTest.exactCallCountByLastCall":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":203,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests.UsageTest.wrongArguments":196,"org.easymock.tests2.EasyMockSupportTest.testVerify":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":41,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":254,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests2.UsageConstraintsTest.cmpTo":167,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.UsageTest.unexpectedCallWithArray":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":42,"org.easymock.tests2.CaptureTest.testCapture":332,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.CapturesMatcherTest.test":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":45,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":246,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":328,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":81,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
