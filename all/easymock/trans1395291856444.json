[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[22],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[23,11,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,12,58,59,60,61,62,63,64,0,65,1,66,67,68,69,70,71,2,72,73,74,75,76,77,78,79,80,4,5,7,81,82,83,84,85,9,86,87,88,89,10,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[182],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[183,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[185,186,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[188],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[23,11,24,25,189,190,191,192,26,27,193,194,28,29,195,196,30,31,197,32,33,34,198,199,200,35,36,201,37,38,39,40,41,42,43,44,202,45,46,47,48,49,50,51,52,53,54,55,56,57,12,58,59,60,61,203,204,205,206,207,208,209,210,62,211,63,64,212,213,214,215,0,65,1,66,216,67,68,69,70,71,2,217,218,72,73,74,75,76,77,78,219,79,220,221,80,222,223,224,3,4,225,5,226,6,7,81,82,83,227,84,228,229,85,230,231,9,86,87,88,89,10,232,233,234,235,90,236,91,92,237,93,94,238,239,240,95,96,241,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,242,112,113,243,243,244,244,114,115,116,245,246,117,118,247,248,249,250,251,119,120,121,122,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,128,268,269,270,129,271,272,130,131,132,273,274,275,133,134,135,276,136,137,277,278,279,280,281,138,282,283,284,285,286,287,288,289,183,290,291,292,293,139,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,145,146,147,148,149,150,151,152,309,310,311,312,313,314,315,316,317,318,319,153,154,155,156,157,320,158,159,160,161,162,163,164,321,322,323,324,325,326,327,328,329,165,166,330,331,332,333,334,167,168,169,170,335,336,337,338,339,340,171,341,342,343,344,172,173,174,175,176,177,178,345,179,180,181],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[346,347,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[185,186,187],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[229],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.RecordState:233","failures":[23,11,24,25,26,350,351,27,193,194,28,29,195,196,30,31,197,32,33,34,198,199,200,35,36,201,37,38,39,40,41,42,43,44,202,45,46,47,48,49,50,51,52,53,54,55,56,57,12,58,59,60,61,203,204,205,206,207,208,210,62,63,64,213,0,65,1,66,216,67,68,69,70,71,2,217,218,72,73,74,75,76,77,78,79,221,80,222,223,224,3,4,225,5,226,6,7,81,8,82,83,227,84,228,229,85,230,231,9,86,87,88,89,10,232,233,234,235,90,236,91,352,92,237,93,353,94,238,239,240,95,96,241,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,243,243,244,244,114,115,116,354,355,356,245,246,117,118,247,357,119,120,121,122,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,128,268,269,129,271,272,130,131,132,358,359,360,273,275,133,134,135,136,137,277,278,279,280,281,138,139,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,145,146,147,148,149,150,151,152,309,310,361,362,363,314,315,316,317,318,319,153,154,155,156,157,320,158,159,160,161,162,163,164,364,329,165,166,330,331,332,333,334,167,168,169,170,365,366,367,171,341,342,343,344,172,173,174,175,176,177,178,345,179,180,181,368,369],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[28,29,51,52,53,54,55,56,57,12,58,59,60,61,210,62,63,64,213,73,74,75,76,77,78,79,221,80,222,237,95,98,100,101,104,106,108,109,111,114,355,356,117,357,119,253,254,123,124,255,125,258,259,260,261,262,127,264,265,266,267,277,278,279,280,281,139,309,310,363,163,364,330,331,332,333,171,341,342,343,174,176,177,179,180,181],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1,2,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[370],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[23,11,24,25,189,190,191,192,26,27,193,194,28,29,195,196,30,31,197,32,33,34,198,199,200,35,36,201,37,38,39,40,41,42,43,44,202,45,46,47,48,49,50,51,52,53,54,55,56,57,12,58,59,60,61,203,204,205,206,207,208,209,210,62,211,63,64,213,214,0,65,1,66,216,67,68,69,70,71,2,217,218,72,73,74,75,76,77,78,79,220,221,80,222,223,224,3,4,225,5,226,6,7,81,82,83,227,84,228,229,85,230,231,9,86,87,88,89,10,232,233,234,235,90,236,91,92,237,93,94,238,239,240,95,96,241,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,243,243,244,244,114,115,116,245,246,117,118,247,248,249,250,251,119,120,121,122,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,128,268,269,270,129,271,272,130,131,132,273,274,275,133,134,135,136,137,277,278,279,280,281,138,284,286,287,289,291,293,139,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,145,146,147,148,149,150,151,152,309,310,314,315,316,317,318,319,153,154,155,156,157,320,158,159,160,161,162,163,164,322,329,165,166,330,331,332,333,334,167,168,169,170,336,337,338,339,340,171,341,342,343,344,172,173,174,175,176,177,178,345,179,180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[23,11,24,26,350,351,27,193,194,28,29,195,196,30,31,197,33,198,199,200,201,37,38,39,40,41,42,43,44,202,45,46,47,48,50,51,52,53,54,55,56,57,12,58,59,60,61,207,208,210,62,63,64,213,0,65,66,216,69,70,71,2,217,218,72,73,74,75,76,77,78,79,221,80,222,223,224,3,4,225,5,226,6,7,81,82,83,227,84,228,229,85,230,231,9,86,87,89,10,232,233,234,235,90,236,91,352,92,237,93,353,94,238,239,240,95,96,98,100,101,104,106,107,108,109,111,112,243,243,244,244,114,354,355,356,245,246,117,118,247,357,119,120,121,122,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,128,268,269,271,272,132,358,359,360,275,277,278,279,280,281,138,139,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,371,145,146,147,148,149,150,151,152,309,310,361,362,363,314,315,316,317,318,319,163,364,329,165,166,330,331,332,333,334,167,168,169,170,365,366,367,171,341,342,343,174,176,177,179,180,181,372,368,369,373,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[375,376,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[378,223,230,89],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[23,189,190,191,192,200,38,202,49,209,211,212,214,0,219,220,234,235,91,242,248,249,250,251,270,274,276,282,283,284,285,286,287,288,289,183,290,291,292,293,311,312,313,321,322,323,324,325,326,327,328,335,336,337,338,339,340,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[379,380,381,382,383,23,384,385,386,387,388,389,11,24,25,189,190,191,192,26,350,351,27,193,194,28,29,195,390,196,30,31,197,32,33,34,198,199,200,35,36,201,37,391,392,393,394,38,39,40,42,43,202,46,47,48,49,50,53,54,55,56,12,13,395,58,396,59,397,398,399,400,401,402,60,403,404,61,405,406,407,207,208,210,408,62,211,63,15,212,215,0,65,1,66,216,67,68,69,70,71,2,217,218,72,73,74,75,76,77,78,219,79,409,410,220,221,80,222,411,223,224,3,4,182,225,5,226,6,7,81,8,82,83,227,84,228,229,85,230,231,9,86,87,88,89,10,232,233,234,235,90,236,412,413,414,415,416,91,417,418,419,420,421,422,352,92,237,93,353,94,238,239,240,95,96,241,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,242,112,113,243,243,244,244,114,115,116,354,355,356,245,246,117,118,247,248,249,250,251,357,119,120,121,122,252,423,424,425,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,128,268,269,270,129,271,272,130,131,132,358,359,360,273,274,275,133,134,135,276,136,137,277,278,279,280,281,138,282,426,427,428,185,429,430,431,283,284,285,286,287,288,289,183,290,291,292,293,432,433,139,434,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,435,371,436,145,146,147,148,149,150,151,152,309,310,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,361,184,453,454,455,456,362,457,458,363,459,460,311,312,313,461,462,314,315,316,317,318,319,153,154,155,463,156,157,320,158,159,160,161,162,464,163,164,364,465,321,322,323,324,325,326,327,328,329,165,166,330,331,332,333,334,167,466,168,169,467,170,335,365,366,367,336,337,338,339,340,171,341,342,343,344,172,173,174,175,176,177,178,345,468,469,470,179,180,471,181,472,473,474,372,368,369,373,374],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[23,11,24,26,193,28,29,30,31,197,33,198,199,200,201,37,38,39,40,41,42,43,44,202,45,46,47,48,51,52,53,54,55,56,57,12,58,59,60,61,208,210,62,63,64,213,0,65,66,216,69,70,71,2,218,72,73,74,75,76,77,78,79,221,80,222,223,224,3,4,225,5,226,6,7,81,82,83,227,84,228,229,85,230,231,9,86,87,89,10,232,233,90,91,237,238,239,240,95,96,98,100,101,104,106,108,109,111,114,355,356,245,117,118,247,119,120,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,268,269,271,272,132,277,278,279,280,281,139,145,147,148,149,150,151,152,309,310,446,448,455,456,457,363,163,364,329,166,170,171,341,342,343,174,176,177,179,180,181],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[464,465],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[379,380,381,382,383,23,384,385,386,387,388,389,24,189,190,191,192,26,350,351,27,193,194,28,29,195,390,196,30,31,197,32,33,34,198,199,200,35,36,201,37,393,394,38,39,40,41,42,43,44,202,45,46,47,48,49,50,55,475,407,203,204,205,206,207,208,215,0,65,1,66,216,67,68,69,70,71,2,217,218,72,75,223,224,3,4,182,225,5,226,6,7,81,8,82,83,227,84,228,229,85,230,231,9,86,87,88,89,10,232,233,234,235,90,236,412,413,414,415,416,91,417,418,419,420,421,422,352,92,237,93,353,94,238,239,240,95,96,241,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,242,112,113,354,355,356,245,246,117,118,247,248,249,250,251,357,119,120,121,122,252,423,476,477,425,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,268,269,270,129,271,272,130,131,132,358,359,360,273,274,275,133,134,135,276,136,137,277,278,279,280,281,138,431,283,284,285,286,287,288,289,183,290,291,292,293,294,295,140,141,296,142,297,298,299,300,143,301,302,303,304,144,305,306,307,308,435,371,436,145,146,147,148,149,150,151,152,309,310,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,361,184,453,454,455,456,362,457,458,363,459,460,311,312,313,461,462,314,315,316,317,318,319,153,154,155,463,156,157,320,158,159,160,161,162,329,165,166,330,331,332,333,334,167,466,168,169,467,170,335,365,366,367,336,337,338,339,340,171,341,342,343,344,172,173,174,175,176,177,178,345,471,472,473,372,368,369,373,374],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,6,7,8,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,11,24,26,193,28,29,30,31,197,33,198,199,200,201,37,38,39,40,41,42,43,44,202,45,46,47,48,51,52,53,54,55,56,57,12,58,59,60,61,208,210,62,63,64,213,0,65,66,216,69,70,71,2,218,72,73,74,75,76,77,78,79,221,80,222,223,224,3,4,225,5,226,6,7,81,82,83,227,84,228,229,85,230,231,9,86,87,89,10,232,233,90,91,237,238,239,240,95,96,98,100,101,104,106,108,109,111,114,245,117,118,247,119,120,252,253,254,123,124,255,125,256,257,258,259,126,260,261,262,263,127,264,265,266,267,268,269,271,272,132,277,278,279,280,281,139,145,147,148,149,150,151,152,309,310,163,321,329,166,170,171,341,342,343,174,176,177,179,180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[197,98,100,101,269,138,478,479,480,481,329,165,166,174,176,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[100,481,165,166,176],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[5],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[11,24,25,482],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[378,223,3,230,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":34,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":105,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":315,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":294,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":478,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":424,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":473,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":252,"org.easymock.tests.UsageTest.moreThanOneArgument":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":332,"org.easymock.tests.UsageTest.argumentsOrdered":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":372,"org.easymock.tests.UsageVarargTest.varargIntAccepted":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":277,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests.ReplayStateInvalidUsageTest.times":290,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":370,"org.easymock.tests2.AnswerTest.answer":26,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":192,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":342,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":435,"org.easymock.tests2.CaptureTest.testCapture1_2446744":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":190,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":285,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":406,"org.easymock.samples.PartialClassMockTest.testGetArea":114,"org.easymock.tests.MockingTest.testInterfaceMocking":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":286,"org.easymock.tests2.CompareToTest.testLessOrEqual":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":355,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests2.UsageTest.niceToStrict":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":62,"org.easymock.tests2.MockBuilderTest.testCreateMock":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":300,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":191,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":338,"org.easymock.tests.MockNameTest.defaultName":431,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":333,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests.UsageVarargTest.allKinds":162,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":329,"org.easymock.samples.BasicClassMockTest.testPrintContent":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":319,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":222,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":430,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":219,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":40,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":314,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":41,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":213,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":161,"org.easymock.tests.GenericTest.testBridgedEquals":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":359,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests.MockingTest.testNiceClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testClassMocking":469,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":90,"org.easymock.tests2.UsageConstraintsTest.testFind":225,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":247,"org.easymock.tests.MockTypeTest.fromEasyMockClass":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":344,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":45,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":17,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":313,"org.easymock.tests.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":156,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":221,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":297,"org.easymock.tests.CapturesMatcherTest.test":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":317,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.samples.SupportTest.voteForRemovals":104,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":302,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":482,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":350,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests.UsageExpectAndThrowTest.object":143,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":310,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":393,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":356,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":346,"org.easymock.tests.UsageUnorderedTest.message":138,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":160,"org.easymock.tests2.ThreadingTest.testThreadSafe":238,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":135,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":115,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":122,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":183,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndThrowTest.longType":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":185,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":289,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":267,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.NameTest.nameForMocksControl":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":396,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":390,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":64,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CompareToTest.testNotComparable":22,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":371,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":470,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":299,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":232,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":348,"org.easymock.samples.ExampleTest.removeNonExistingDocument":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":214,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":140,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":85,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":27,"org.easymock.tests.UsageVerifyTest.twoThrows":165,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests2.UsageConstraintsTest.equals":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":121,"org.easymock.tests.UsageCallCountTest.tooFewCalls":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests.MockingTest.testStrictClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":55,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":205,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":18,"org.easymock.samples.ExampleTest.addDocument":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":349,"org.easymock.tests.UsageVarargTest.varargLongAccepted":159,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":224,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":391,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":187,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testSame":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.samples.SupportTest.addDocument":103,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":472,"org.easymock.tests2.NameTest.nameForMock":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":261,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":304,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":343,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":293,"org.easymock.tests2.NameTest.nameForStrictMock":204,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":392,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":479,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.ErrorMessageTest.testGetters":480,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":188,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":398,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":262,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":429,"org.easymock.tests.UsageVarargTest.varargShortAccepted":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":276,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":284,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":263,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests.UsageStrictMockTest.testVerify":345,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":113,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":337,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":279,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":280,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":481,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":44}}]
