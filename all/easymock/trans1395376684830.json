[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"message"}},{"position":"org.easymock.internal.RecordState:136","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,49,50,50],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,30,0,57,58,59,60,4,61,62,63,5,33,7,64,65,8,9,66,14,67,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[30,57,73,58,74,71,75,76,33,64,77,65,8,9,66,78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[52,91,92,93,58,1,2,3,94,59,95,6,66,10,11,12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[100,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[102,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[16,17,106,102,18,19,20,21,107,108,109,110,22,104,23,24,111,25,26,112,113,114,115,27,28,29,116,117,118,119,120,105,121,122,123,30,124,0,57,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[118,119,140,141,142,81,143,144,145,146,147,148,149,83,150,151,152,70,153,154,49,49,50,50,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[156,157,142,158,159,160,161,147,148,162,163,164,165,152,166,167,168,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[170,171],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[123,0,57,129,133,134,137,160,170,172,173,7,64,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[8,175,176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[30,0,57,58,1,2,3,74,71,75,76,6,33,7,64,65,8,9,66,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[177,178,179,180,181,182,183,184,118,185,186,187,188,189,190,191,192,193,119,194,195,196,197,198,120,199,200,201,202,127,203,157,204,205,142,206,158,159,144,145,160,147,148,207,149,83,208,209,210,211,212,213,214,215,216,217,218,164,219,151,171,220,165,152,69,221,70,222,166,223,224,225,226,227,228,229,230,231,232,233,234,167,168,235,236,100,237,238,239,101,240,241,153,242,243,154,244,245,246,49,49,50,50,155],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[247,121,122,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":169,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":92,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":153,"org.easymock.tests.MockClassControlTest.testToString":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":208,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":168,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":216,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":39,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":194,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":206,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests.LimitationsTest.mockNativeMethod":228,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":141,"org.easymock.tests2.NameTest.nameForMocksControl":76,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":159,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":218,"org.easymock.tests.LimitationsTest.mockFinalMethod":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":55,"org.easymock.tests2.MockBuilderTest.testCreateMockString":147,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":181,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":150,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":43,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":196,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":151,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":52,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":211,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":175,"org.easymock.tests2.EasyMockSupportClassTest.testAll":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":210,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":88,"org.easymock.tests2.NameTest.nameForNiceMock":75,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":86,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":33,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":164,"org.easymock.tests2.ConstraintsToStringTest.orToString":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":177,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":130,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":186,"org.easymock.tests.GenericTest.testPackageScope":242,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":160,"org.easymock.tests.GenericTest.testBridgedEquals":244,"org.easymock.tests2.NameTest.nameForMock":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":128,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":171,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":197,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":209,"org.easymock.tests2.NameTest.nameForStrictMock":71,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":178,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":219,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":95,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":215,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":187,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":191,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":101,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":204,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":192,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":225,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":165,"org.easymock.tests2.ConstraintsToStringTest.notToString":53,"org.easymock.tests.CapturesMatcherTest.test":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":224,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":162,"org.easymock.tests.LimitationsTest.abstractClass":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":134}}]
