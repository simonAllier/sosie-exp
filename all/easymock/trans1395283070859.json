[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[0],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,8,9,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,10,11,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,12,13,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,14,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,15,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,16,17,336,337],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[338,339,340,341,342,42,44,56,59,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[35,1,2,344,3,4,5,345,343,172],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[346,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,1,36,37,38,39,40,352,41,42,43,44,45,353,46,47,48,49,50,51,354,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,355,356,75,76,77,78,344,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,357,358,104,105,106,107,359,360,108,109,110,111,112,113,114,115,116,361,362,363,364,365,117,366,367,368,369,370,371,118,119,120,121,122,123,8,9,124,125,126,127,128,129,130,131,372,373,374,375,376,377,132,378,379,380,381,382,383,384,133,134,135,385,136,386,387,388,389,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,390,391,392,159,393,394,160,395,396,397,398,399,400,401,402,403,161,404,405,406,407,408,162,409,410,163,411,412,164,165,166,167,168,169,170,10,11,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,413,414,415,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,416,417,418,215,216,419,217,420,421,422,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,423,424,425,426,427,428,235,236,237,238,429,239,240,430,241,431,432,242,243,244,245,246,247,248,249,12,13,250,251,252,253,433,434,435,436,437,254,255,256,257,258,259,346,438,439,348,347,440,260,441,442,443,261,262,444,263,264,265,266,267,268,269,270,350,271,272,445,351,273,274,14,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,275,276,277,470,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,471,472,294,473,295,296,297,298,299,300,301,302,303,304,305,306,307,308,474,475,476,477,309,310,311,478,479,312,313,314,315,316,317,15,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,16,17,336,337,480,481,482],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,1,483,484,36,37,38,39,40,352,41,42,43,44,45,353,46,47,48,49,50,51,354,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,485,74,355,486,356,75,76,77,2,78,487,344,79,80,488,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,489,103,357,358,104,105,106,107,359,360,108,109,110,111,112,113,114,115,116,361,362,363,364,365,117,366,367,368,369,370,371,118,119,120,121,122,123,8,9,124,125,126,127,128,490,491,129,130,131,372,373,374,375,376,377,132,378,379,380,381,382,383,384,133,134,135,385,136,386,492,493,494,387,388,389,137,138,139,140,141,142,495,143,144,145,496,146,147,148,149,150,151,152,153,154,155,156,157,158,390,391,392,159,393,394,160,395,396,397,398,399,400,401,402,403,161,404,405,406,407,408,162,409,410,163,411,412,164,165,166,167,168,169,170,10,11,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,413,414,415,497,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,416,417,418,215,216,419,217,420,421,422,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,423,498,499,424,425,426,427,428,235,236,237,238,429,239,240,430,241,431,432,242,243,244,245,246,247,248,249,12,13,250,251,252,253,433,434,435,436,437,254,255,256,257,258,500,259,346,438,439,348,347,501,440,260,441,442,443,261,262,444,263,264,265,266,267,268,269,270,350,271,272,445,351,273,274,14,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,275,276,277,470,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,471,472,294,473,295,296,297,298,299,300,301,302,303,304,305,306,307,308,474,475,476,477,309,310,311,478,479,312,313,314,315,316,317,15,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,16,17,336,337,480,481,482],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[348,502,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[353,125,250],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,75,76,77,78,82,83,84,85,87,88,89,90,91,92,95,96,98,99,100,101,103,104,106,108,109,112,113,114,115,116,117,119,120,122,123,124,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,11,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,230,231,232,233,234,239,431,242,243,244,245,247,253,254,255,256,257,258,261,264,265,271,272,274,14,275,276,277,278,279,281,282,283,284,285,287,294,295,296,299,300,301,302,303,304,305,306,307,308,312,313,314,315,316,317,15,318,319,320,321,322,323,324,325,329,330,332,334,17,336,337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[18,19,20,160,161],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[83,85,87,89,91,92],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[19,19,20,20,35,1,344,357,172],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[504,505,506],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[44,58,74,79,80,81,97,105,107,118,121,122,123,125,126,127,128,131,147,151,152,155,167,170,10,11,507,497,508,509,242,246,248,249,250,251,252,260,280,318,319,326,327,328,331,333,335,16,17],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[134],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[510,511,512,513,248,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[45,49,354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[36,37,38,39,44,58,73,74,355,77,78,79,80,81,97,104,107,360,117,366,118,120,121,122,123,125,126,127,128,131,132,378,140,141,144,145,147,149,151,152,154,155,167,169,170,10,11,171,423,424,425,426,427,428,236,429,239,240,430,241,242,246,247,248,249,250,251,252,260,444,280,288,289,290,309,478,479,15,318,319,320,322,323,326,327,328,331,333,334,335,16,17,336],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[19,20,42,43,46,47,48,49,54,56,57,59,60,66,67,68,93,138,169,230,231,232,233,234,261,295,296,299,304,305,306,307,308,329,330,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":45,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":288,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":484,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":421,"org.easymock.tests2.UsageConstraintsTest.testNull":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":293,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests.ReplayStateInvalidUsageTest.times":226,"org.easymock.tests2.DependencyTest.testClassMocking":490,"org.easymock.tests2.AnswerTest.answer":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":499,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":258,"org.easymock.tests2.DependencyTest.testClassMockingSupport":491,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":430,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":220,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":410,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.MockingTest.testInterfaceMocking":419,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":221,"org.easymock.tests2.CompareToTest.testLessOrEqual":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":481,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":406,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":498,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":502,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.MockClassControlTest.testEquals":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":256,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":233,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":269,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":501,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.GenericTest.testBridgedEquals":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":327,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":432,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":230,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":268,"org.easymock.tests.MockingTest.testNiceClassMocking":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testClassMocking":417,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests.MockClassControlTest.testHashCode":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":401,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":508,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests.DefaultClassInstantiatorTest.object":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":289,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":174,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":462,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":34,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":482,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":505,"org.easymock.tests.UsageUnorderedTest.message":260,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":507,"org.easymock.tests.UsageVerifyTest.twoReturns":319,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":404,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":170,"org.easymock.tests2.SerializationTest.testClass":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests2.NameTest.nameForMocksControl":39,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":394,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests2.CompareToTest.testCompareEqual":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":241,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":418,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":496,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":27,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":506,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":110,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":395,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":483,"org.easymock.tests.UsageVerifyTest.twoThrows":318,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":270,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":131,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":357,"org.easymock.tests.UsageTest.openCallCountByLastCall":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":166,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.tests2.CompareToTest.testGreateOrEqual":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests2.NameTest.nameForNiceMock":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests2.AnswerTest.stubAnswer":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":334,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.SerializationTest.test":173,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":346,"org.easymock.tests2.UsageConstraintsTest.testSame":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":33,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":420,"org.easymock.tests2.NameTest.nameForMock":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests2.NameTest.nameForStrictMock":37,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":74,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":400,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":49,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":97,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests2.MockBuilderTest.testWithConstructor":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":412,"org.easymock.tests2.CompareToTest.testLessThan":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":219,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageStrictMockTest.testVerify":337,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":32,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":255,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
