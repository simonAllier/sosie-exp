[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[2,3],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,146,147,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,227,228,229,230,1,231,2,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[299,300,301,302,303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[304],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[97,196,305],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[306,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[309,310,311,312,313,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[5,6,7,8,27,28,32,33,45,46,79,106,108,109,116,118,119,122,123,125,126,128,129,154,162,174,175,184,185,222,224,316,317,318,2,239,240,242,243,247,248,250,251,252,253,254,255,287,288,289],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[319,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,320,26,27,28,29,30,31,321,32,33,34,35,36,37,38,39,40,41,42,43,322,44,45,46,47,323,324,325,326,327,328,48,329,330,331,49,50,51,52,332,333,334,53,54,55,56,57,58,59,60,61,62,63,335,336,64,337,338,65,339,66,315,340,341,67,68,69,70,71,342,72,73,74,75,343,76,77,78,344,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,345,346,347,348,349,350,94,351,352,95,96,97,98,99,100,101,102,103,353,104,105,106,107,108,109,110,354,355,356,111,357,358,112,359,360,361,362,363,364,365,366,367,113,368,369,370,371,372,114,373,374,375,376,377,378,379,115,380,381,382,383,384,385,116,117,118,119,120,121,122,123,124,125,126,127,128,129,386,387,130,131,132,388,389,390,391,392,133,393,394,395,396,397,398,134,399,135,136,137,138,139,140,400,141,142,143,401,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,402,159,160,161,162,163,164,165,166,167,168,169,170,171,172,403,404,405,406,407,173,174,175,176,177,408,178,179,409,180,181,182,183,184,304,185,186,410,411,187,188,189,190,191,192,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,193,194,195,196,197,434,435,436,437,438,439,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,440,218,441,442,443,444,445,446,219,220,221,222,223,224,447,448,316,449,450,451,452,453,454,455,456,225,226,457,317,318,458,459,460,0,461,227,228,462,229,463,464,230,465,1,466,467,231,468,469,470,471,472,473,474,475,476,477,478,479,480,299,481,300,482,483,484,305,485,486,487,488,301,302,489,303,490,491,492,2,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,493,494,495,256,257,258,259,260,261,262,263,264,265,496,497,498,499,306,500,501,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,502,286,503,287,288,289,290,291,292,293,294,504,505,506,507,295,296,508,297,509,510,511,512,513,514,515,516,298,517],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[108,119,125,126,518,2,239,242,249,250,253,254,288,289],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[319,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,320,26,27,28,29,30,31,321,32,33,34,35,36,37,38,39,40,41,42,43,322,44,45,46,47,48,519,329,330,520,331,49,50,51,521,52,332,333,334,53,522,54,55,56,57,58,59,60,61,62,63,335,336,64,337,338,65,339,66,315,340,341,67,68,69,70,71,72,73,74,75,343,76,77,78,344,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,345,346,347,523,348,349,350,94,351,352,95,96,97,98,99,100,101,102,103,353,524,104,105,106,107,108,109,110,354,355,356,111,357,358,112,359,360,361,362,363,364,365,366,367,113,368,369,370,371,372,114,373,374,375,376,377,378,379,115,380,381,382,383,384,385,116,117,118,119,120,121,122,123,124,125,126,127,128,129,386,387,130,131,132,388,389,390,391,392,133,393,394,395,396,397,398,134,399,135,136,137,138,139,140,400,141,142,143,401,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,402,159,160,161,162,163,164,165,166,167,168,169,170,171,172,403,404,405,406,407,173,174,175,176,177,408,178,179,409,180,181,182,183,184,304,185,186,410,411,525,187,188,189,190,191,192,193,194,195,196,197,434,435,436,437,438,439,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,440,218,441,442,443,444,445,446,219,220,221,222,223,224,447,448,316,449,450,451,452,453,454,455,456,225,226,457,317,318,458,459,460,0,461,227,228,462,229,463,464,230,465,1,466,467,231,468,469,470,471,472,473,474,475,476,477,478,479,480,299,481,300,482,483,484,305,485,486,487,488,301,302,489,303,490,491,492,2,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,493,494,495,256,257,258,259,260,261,262,263,264,265,526,496,497,498,499,306,500,527,501,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,502,286,503,287,288,289,290,291,292,293,294,504,505,506,507,295,296,508,297,509,510,511,512,513,514,515,516,298,517],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[39,528],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[10,14,15,18,24,38,329,334,53,54,59,339,315,104,107,108,109,116,119,120,121,125,126,127,128,136,409,529,525,187,530,518,447,448,316,2,237,239,241,242,243,247,249,250,253,254,255,288,289],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[461,305,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[47,531],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[329,49,51,52,53,54,149],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[18,329,334,53,54,108,109,119,125,126,127,529,525,187,530,518,447,448,316,2,239,242,243,249,250,253,254,288,289,517],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[38,62,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[532],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(this.java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[160,163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[22,39,44,533],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":257,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests.MockClassControlTest.testToString":441,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":96,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":433,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests2.UsageTest.wrongArguments":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":454,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":510,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":254,"org.easymock.tests.UsageVarargTest.varargIntAccepted":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":172,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":417,"org.easymock.tests.ReplayStateInvalidUsageTest.times":464,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.DependencyTest.testClassMocking":351,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":70,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":451,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":520,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":13,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":236,"org.easymock.tests2.DependencyTest.testClassMockingSupport":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":502,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":68,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":461,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":453,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":525,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":420,"org.easymock.samples.PartialClassMockTest.testGetArea":149,"org.easymock.tests.MockingTest.testInterfaceMocking":508,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":533,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":450,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":219,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":310,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":372,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":408,"org.easymock.tests.MockClassControlTest.testEquals":445,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":69,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":234,"org.easymock.tests.MockNameTest.defaultName":504,"org.easymock.tests2.UsageConstraintsTest.testMatches":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":158,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":287,"org.easymock.samples.BasicClassMockTest.testPrintContent":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":235,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":261,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":527,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":315,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":421,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":501,"org.easymock.samples.ExampleTest.voteForRemoval":155,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":72,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":523,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":335,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":413,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":256,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":532,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":448,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":406,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":494,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests.MockingTest.testNiceClassMocking":511,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests.MockingTest.testClassMocking":506,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":220,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":135,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":179,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":514,"org.easymock.tests.MockClassControlTest.testHashCode":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":512,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":530,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":94,"org.easymock.tests.UsageVarargTest.varargCharAccepted":178,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":526,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":443,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":419,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.ReplayStateInvalidCallsTest.times":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":426,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":259,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":521,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":485,"org.easymock.samples.SupportTest.voteForRemovals":152,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":489,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":405,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":42,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":423,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":226,"org.easymock.samples.ConstructorCalledMockTest.testTax":146,"org.easymock.tests.UsageStrictMockTest.range":242,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":471,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":324,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":529,"org.easymock.tests.UsageVerifyTest.twoReturns":289,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":368,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":224,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":144,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":503,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":463,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":495,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":431,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests2.NameTest.nameForMocksControl":8,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":325,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":143,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.MockingTest.testTwoMocks":507,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":427,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":328,"org.easymock.samples.ExampleTest.removeNonExistingDocument":402,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":228,"org.easymock.tests.UsageStrictMockTest.differentMethods":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":498,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":288,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.UsageVarargTest.differentLength":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":337,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":326,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.MockingTest.testStrictClassMocking":505,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":429,"org.easymock.tests2.NameTest.nameForNiceMock":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":75,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":424,"org.easymock.tests2.DependencyTest.testInterfaceMocking":95,"org.easymock.samples.ExampleTest.addDocument":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":369,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":240,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":103,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":147,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":516,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":40,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":345,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":497,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":151,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":414,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":509,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":412,"org.easymock.tests2.NameTest.nameForMock":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":522,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests2.MockedExceptionTest.testRealException":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.NameTest.nameForStrictMock":6,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":418,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":323,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":250,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":500,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":447,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":432,"org.easymock.tests2.UsageConstraintsTest.cmpTo":33,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":422,"org.easymock.tests2.CompareToTest.testLessThan":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":0,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":249,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":428,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests2.CaptureTest.testCapture":4,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":159,"org.easymock.tests.UsageStrictMockTest.testVerify":245,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":150,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests2.CompareToTest.testGreateThan":528,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":233,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":170,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":171,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":15}}]
