[{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[4],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[6,7],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[20,21],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,8,254,9,255,256,257,258,259,260,261,10,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,11,12,285,13,14,15,286,287,288,289,290,291,292,293,4,21,294,17,295,296,297,298,18,19,299,300,301,302,303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[196,304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[38,42,43,45,46,305,306,307,308,309,310,311,312,313,77,78,79,82,83,314,315,316,99,148,149,150,181,183,184,197,198,204,205,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[328,300,301,302],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[329,330,331,332,333,217,334,335,336,300],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[45,46,337,338,148,183,184],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[42,307,309,78,318,325],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[31,32,0,343,344,39,345,85,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,172,173,365,366,188,191,209,210,367,227,368,369,370,371,372,373,374,375,231,232,234,235,236,238,304,239,242,376,377,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,8,254,9,255,256,257,258,259,260,261,10,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,11,12,285,13,14,15,286,287,288,289,290,291,292,293,4,21,294,17,295,296,297,298,18,19,299,300,301,302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[245,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[45,378,149,150,183],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[379,11],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[22,23,381,382,383,384,385,24,25,26,27,28,29,30,31,32,386,33,34,35,36,37,38,387,388,389,390,391,392,393,394,395,396,397,398,39,40,41,42,43,44,45,46,47,399,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,305,306,400,76,77,78,79,80,81,82,83,84,401,402,403,404,405,85,86,87,88,89,90,91,92,93,94,95,96,314,97,98,315,316,99,100,101,102,103,104,105,106,107,108,109,110,406,407,408,409,410,411,412,348,111,112,113,114,115,116,117,118,119,340,337,338,341,342,120,121,350,351,352,353,354,355,356,357,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,413,146,147,148,149,150,151,152,153,154,358,155,156,157,158,159,160,161,162,163,164,165,414,166,167,167,168,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,415,416,417,418,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,419,420,244,245,246,247,249,421,250,251,252,422,253,8,254,9,255,256,257,258,259,260,261,10,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,423,278,279,280,281,282,283,284,11,12,285,13,14,15,286,287,16,288,289,290,291,292,293,4,21,294,17,295,296,297,298,18,19,299,300,301,302,303],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[22,23,381,382,383,384,385,24,25,26,27,28,29,30,5,31,32,386,0,424,33,34,35,36,37,38,387,388,389,390,391,392,393,394,395,396,397,398,343,344,39,345,40,41,42,43,44,45,46,47,399,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,305,306,380,425,400,426,76,77,78,79,80,81,82,83,84,427,428,429,430,431,432,433,434,339,435,436,437,438,439,440,441,401,442,443,444,445,446,402,447,403,404,405,85,86,87,88,89,90,91,92,93,94,95,96,314,97,98,315,316,99,100,101,102,448,103,104,105,106,107,108,109,110,406,407,408,449,409,410,411,450,451,412,346,347,348,111,112,452,113,453,454,349,114,115,116,117,118,119,340,337,338,341,342,455,456,457,458,459,460,461,462,120,121,463,350,351,352,353,354,355,356,357,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,413,146,147,148,149,150,151,152,153,154,464,358,359,360,361,362,363,465,364,155,156,157,158,159,160,161,162,163,164,165,414,166,167,168,169,170,171,172,173,174,175,466,467,468,469,470,176,471,472,473,474,475,476,477,478,177,178,179,180,181,182,183,184,185,186,187,365,479,480,481,366,482,483,188,189,190,191,484,192,193,194,485,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,334,486,487,415,416,417,418,218,488,219,489,490,491,220,221,222,335,223,492,336,224,225,493,226,367,494,495,227,496,368,228,369,370,497,498,371,499,500,372,501,229,373,374,502,503,375,230,504,505,231,232,233,234,235,236,237,506,238,507,304,239,240,241,242,376,377,243,419,420,244,245,246,247,248,249,421,250,251,252,422,253,8,254,9,255,256,257,258,259,260,261,10,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,423,508,509,510,511,512,278,513,514,515,516,517,518,279,280,281,282,283,284,11,12,519,285,13,14,15,286,287,16,288,289,290,291,292,293,4,21,294,17,295,296,297,298,18,19,299,300,301,302,303],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[22,23,33,34,35,36,37,38,42,43,86,87,88,89,90,110,118,120,121,181,215,238,247,249,8,254,9,255,256,257,258,259,260,261,10,262,263,264,423,283,284,11,12,285,13,14,15,286,287,16,288,289,290,291,292,293,4,21,294,17,295,296,297,298,18,19,299],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.DelegateToTest.testReturnException":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":115,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":352,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":487,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":518,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":460,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":234,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":274,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":357,"org.easymock.tests2.CaptureTest.testPrimitive":255,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":144,"org.easymock.tests.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":157,"org.easymock.tests.UsageTest.argumentsOrdered":83,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":321,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests2.DependencyTest.testClassMocking":477,"org.easymock.tests2.AnswerTest.answer":243,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":282,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":457,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":269,"org.easymock.tests2.DelegateToTest.testDelegate":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":140,"org.easymock.tests.LimitationsTest.mockFinalMethod":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":95,"org.easymock.tests2.DependencyTest.testClassMockingSupport":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":256,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":138,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":280,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":389,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":459,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":505,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":407,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":126,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":3,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":515,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":134,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":456,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":291,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":261,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":448,"org.easymock.tests2.EasyMockSupportClassTest.testAll":227,"org.easymock.tests.MockClassControlTest.testEquals":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":142,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":93,"org.easymock.tests2.CaptureTest.testCaptureAll":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":281,"org.easymock.tests.MockNameTest.defaultName":463,"org.easymock.tests2.UsageConstraintsTest.testMatches":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":158,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":110,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":94,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":119,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":496,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":413,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":242,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":364,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":267,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":268,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.CaptureTest.testCapture2_2446744":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":29,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":91,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":143,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":412,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":155,"org.easymock.tests.UsageCallCountTest.tooManyCalls":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":308,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":517,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests.MockingTest.testNiceClassMocking":349,"org.easymock.tests.MockingTest.testClassMocking":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":385,"org.easymock.tests2.UsageConstraintsTest.testContains":290,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":210,"org.easymock.tests2.UsageConstraintsTest.testFind":285,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests.MockTypeTest.fromEasyMockClass":458,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":516,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":273,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":330,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":411,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":500,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":320,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":279,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":423,"org.easymock.tests.UsageVarargTest.varargCharAccepted":103,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":464,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":276,"org.easymock.tests.DefaultClassInstantiatorTest.object":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":381,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":409,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":511,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":240,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":131,"org.easymock.tests.CapturesMatcherTest.test":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":230,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":322,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":353,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":117,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":401,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":325,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":137,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":419,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":135,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DelegateToTest.testWrongClass":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.samples.ConstructorCalledMockTest.testTax":167,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":482,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":408,"org.easymock.tests2.CaptureTest.testCaptureNone":260,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":150,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":27,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":172,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests2.UsageConstraintsTest.any":288,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndThrowTest.longType":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":116,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":300,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":510,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests2.NameTest.nameForMocksControl":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":512,"org.easymock.tests2.MockedExceptionTest.testMockedException":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":129,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":508,"org.easymock.tests2.CaptureTest.testCaptureLast":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":133,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":514,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":360,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.ConstraintsToStringTest.andToString":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.floatType":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":149,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":241,"org.easymock.tests.LimitationsTest.privateConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":208,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":509,"org.easymock.tests.UsageVarargTest.differentLength":105,"org.easymock.tests2.CallbackTest.callback":303,"org.easymock.tests2.UsageConstraintsTest.equals":519,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":507,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":154,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":309,"org.easymock.tests.MockingTest.testStrictClassMocking":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":513,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":410,"org.easymock.tests2.CompareToTest.testGreateOrEqual":379,"org.easymock.tests2.NameTest.nameForNiceMock":417,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":331,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.DelegateToTest.testStubDelegate":251,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":43,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":217,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":168,"org.easymock.tests2.ConstraintsToStringTest.orToString":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":257,"org.easymock.tests2.SerializationTest.test":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":484,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":493,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":139,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":147,"org.easymock.tests2.MockedExceptionTest.testRealException":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":34,"org.easymock.tests2.NameTest.nameForStrictMock":416,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":491,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":183,"org.easymock.tests2.UsageConstraintsTest.lessThan":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":499,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":232,"org.easymock.tests.UsageTest.wrongArguments":79,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":497,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":28,"org.easymock.tests2.UsageConstraintsTest.cmpTo":289,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CaptureTest.testCaptureFromStub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":489,"org.easymock.tests.UsageTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests2.CaptureTest.testCapture":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests2.ConstraintsToStringTest.notToString":319,"org.easymock.tests.UsageStrictMockTest.testVerify":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests2.CompareToTest.testGreateThan":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":92,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.LimitationsTest.abstractClass":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":378}}]
