[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[23,24,25,8,9,26,10,27,11,28,29,12,30,31,32,33,34,35,36,37,15,38,39,16,17,40,41,42,43,44,45,46,18,47,48,49,50,51,52,53,54,55,56,19,57,58,20,21,59,60],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:318","failures":[74,75],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,76,77,78,37,14,15,16,17,79,80,81,82,56,19,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[7,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[91,92,93,94,95,96,97,98,99,100,23,24,101,84,102,103,104,105,61,106,107,108,109,110,111,112,113,114,62,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,63,25,8,9,155,156,157,26,158,159,10,27,160,11,28,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,74,192,29,75,193,194,195,196,12,197,198,199,200,201,202,203,204,64,205,206,207,208,209,65,210,211,212,213,214,215,66,67,216,217,30,218,219,220,221,222,223,224,225,226,227,31,32,228,229,230,231,232,233,234,68,235,236,237,238,239,240,33,241,34,242,243,35,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,69,264,265,266,267,268,269,270,271,272,273,274,275,70,276,277,278,279,280,71,281,282,283,284,285,286,72,73,287,288,36,37,14,15,38,39,16,17,40,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,41,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,85,337,338,339,340,341,342,343,344,345,346,347,348,349,42,43,44,45,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,46,377,18,47,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,48,400,401,402,7,83,403,49,50,89,404,405,90,51,52,406,22,407,408,86,409,410,411,412,413,414,415,53,54,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,0,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,55,488,56,19,489,87,57,58,490,20,21,491,59,492,493,494,495,1,496,60,497,498,499,500,501],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[112,142,149,182,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[502,313,315,316,317,318,319,320,322,503,323,324,326],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[137,395],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,23,24,101,84,102,103,104,105,61,106,107,108,109,110,111,112,113,114,62,115,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,63,25,8,9,155,156,157,26,158,159,10,27,160,11,28,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,74,192,29,75,193,194,195,196,12,197,198,199,200,201,202,203,204,64,205,206,207,208,209,65,210,211,212,213,214,215,66,67,216,217,30,218,219,220,221,222,223,224,225,226,227,31,32,228,229,230,231,232,233,234,68,235,236,237,238,239,240,33,241,34,242,243,35,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,69,265,266,267,268,269,270,272,273,274,275,70,276,277,278,279,280,71,281,282,283,284,285,286,72,73,287,288,36,37,14,15,38,39,16,17,40,289,290,291,292,293,294,295,296,297,298,299,300,300,301,301,302,303,304,41,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,85,337,338,339,340,341,342,343,344,345,346,347,348,349,42,43,44,45,350,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,371,372,373,374,375,376,46,377,18,47,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,48,400,401,402,7,83,403,49,50,89,404,405,90,51,52,406,22,407,408,86,409,410,411,412,413,414,415,53,54,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,434,435,436,437,438,440,441,442,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,55,488,56,19,489,87,57,58,490,20,21,491,59,492,493,494,495,1,60,497,498,499,500,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[264,271,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[313,315,323,402,7,49,89,404,90,411,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[313,315,323,402,7,49,89,404,90,411,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98,102,103,104,105,61,106,109,110,113,136,138,147,148,150,25,9,156,157,26,27,11,28,163,164,165,166,168,74,29,75,193,194,195,196,200,32,228,232,233,249,254,255,257,262,263,69,273,274,275,70,276,277,278,279,280,71,281,282,283,284,285,286,72,73,287,288,36,37,38,39,40,302,304,305,306,308,312,313,314,315,316,317,320,321,322,323,325,326,327,329,332,333,334,335,336,85,337,340,344,345,346,357,358,359,360,361,362,363,364,365,367,368,369,46,18,47,379,380,382,383,384,385,386,387,388,389,390,391,392,393,397,400,401,402,7,403,49,50,89,404,405,51,52,406,22,407,408,86,409,410,411,412,413,414,415,53,54,416,422,431,435,437,438,442,450,460,463,473,479,484,485,55,488,56,489,57,58,490,491,59,495,60,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[119,124,170,302,338,344,345,348,379,429,431,432,435,436,437,438,441,442,444,463,473,479],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[313,315,323,402,7,49,89,404,90,411,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[8,193,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[293,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":137,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":303,"org.easymock.tests2.DelegateToTest.testReturnException":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":254,"org.easymock.tests.MockClassControlTest.testToString":174,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":202,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":124,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":336,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":391,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":179,"org.easymock.tests2.CaptureTest.testPrimitive":316,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":100,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":352,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests.ReplayStateInvalidUsageTest.times":188,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":374,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":121,"org.easymock.tests2.CaptureTest.testAnd":313,"org.easymock.tests2.UsageTest.strictResetToDefault":488,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.DelegateToTest.testDelegate":48,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests.LimitationsTest.mockFinalMethod":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":63,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":317,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":372,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":182,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":123,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.samples.PartialClassMockTest.testGetArea":302,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":183,"org.easymock.tests.MockingTest.testInterfaceMocking":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests2.UsageTest.niceToStrict":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":468,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":435,"org.easymock.tests2.MockBuilderTest.testCreateMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":65,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":79,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":387,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":407,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":22,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":322,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":220,"org.easymock.tests2.EasyMockSupportClassTest.testAll":460,"org.easymock.tests.MockClassControlTest.testEquals":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":67,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":153,"org.easymock.tests2.CaptureTest.testCaptureAll":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":373,"org.easymock.tests.MockNameTest.defaultName":197,"org.easymock.tests2.UsageConstraintsTest.testMatches":408,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":308,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests2.UsageConstraintsTest.greaterThan":409,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":346,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":272,"org.easymock.samples.ExampleTest.voteForRemoval":305,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":384,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":385,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.CaptureTest.testCapture2_2446744":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":145,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":243,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":151,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":382,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":414,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.MockingTest.testNiceClassMocking":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":363,"org.easymock.tests.MockingTest.testClassMocking":252,"org.easymock.tests2.UsageConstraintsTest.testContains":406,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":403,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":26,"org.easymock.tests.MockTypeTest.fromEasyMockClass":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":494,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":94,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":23,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":177,"org.easymock.tests2.EasyMockSupportTest.testVerify":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":470,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":371,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":264,"org.easymock.tests2.CaptureTest.testCaptureMultiple":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":150,"org.easymock.tests2.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":393,"org.easymock.tests.DefaultClassInstantiatorTest.object":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":92,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":471,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":176,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":479,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":175,"org.easymock.tests2.UsageTest.resumeIfFailure":491,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":116,"org.easymock.tests2.StubTest.stubWithReturnValue":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":81,"org.easymock.samples.SupportTest.voteForRemovals":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":149,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":497,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":99,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":412,"org.easymock.tests2.DelegateToTest.testWrongClass":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":355,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":457,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":190,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":69,"org.easymock.tests2.CaptureTest.testCaptureNone":321,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":474,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":315,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":51,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":187,"org.easymock.tests2.StubTest.stub":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":186,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":377,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests2.SerializationTest.testClass":379,"org.easymock.tests.LimitationsTest.mockNativeMethod":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests2.NameTest.nameForMocksControl":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":205,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":438,"org.easymock.tests.MockingTest.testNicePartialClassMocking":255,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.CaptureTest.testCaptureLast":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":369,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":413,"org.easymock.tests.MockingTest.testTwoMocks":253,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":209,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.samples.ExampleTest.removeNonExistingDocument":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":184,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":267,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":359,"org.easymock.tests2.MockBuilderTest.testCreateMockString":444,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":204,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":499,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":473,"org.easymock.samples.ExampleTest.voteAgainstRemoval":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":345,"org.easymock.tests.LimitationsTest.privateConstructor":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":490,"org.easymock.samples.ExampleTest.voteAgainstRemovals":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":223,"org.easymock.tests2.CallbackTest.callback":487,"org.easymock.tests2.UsageConstraintsTest.equals":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":341,"org.easymock.tests.UsageTest.openCallCountByLastCall":38,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":77,"org.easymock.tests.MockingTest.testStrictClassMocking":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":367,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.NameTest.nameForNiceMock":44,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":397,"org.easymock.tests2.AnswerTest.stubAnswer":500,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":495,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":401,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":350,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":318,"org.easymock.tests2.SerializationTest.test":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":266,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":274,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":504,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":366,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":465,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":258,"org.easymock.tests2.NameTest.nameForMock":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":140,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.NameTest.nameForStrictMock":43,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":354,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":411,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":431,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":469,"org.easymock.tests2.CaptureTest.testCaptureRightOne":323,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":334,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":466,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":52,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":498,"org.easymock.tests2.CompareToTest.testLessThan":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests2.CaptureTest.testCaptureFromStub":324,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":181,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":432,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests2.UsageConstraintsTest.constraints":402,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":310,"org.easymock.tests.UsageStrictMockTest.testVerify":162,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":152,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.LimitationsTest.abstractClass":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":388,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218}}]
