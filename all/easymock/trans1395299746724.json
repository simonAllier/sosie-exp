[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[1,3,4,6,28,242,46,47,48,243,89,90,91,92,93,94,95,104,105,106,107,111,114,137,141,209,210,211,237],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[244,245,246,247,0,248,1,2,3,4,5,6,249,7,250,251,8,252,253,9,10,11,12,13,14,15,254,16,17,18,19,21,255,256,22,23,24,25,26,27,28,29,257,258,30,259,31,32,33,34,35,36,37,38,39,40,41,42,43,260,44,45,261,242,262,46,263,47,48,264,243,265,49,266,267,50,51,52,53,54,55,56,57,58,268,59,60,269,61,62,63,64,65,66,67,68,69,70,71,270,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,271,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,272,113,114,115,273,116,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,291,137,138,292,293,140,141,142,143,144,294,295,296,297,298,299,300,301,302,145,303,304,305,306,307,308,309,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,175,176,310,311,312,313,314,315,316,317,318,319,320,177,178,179,321,322,323,324,325,180,181,182,183,184,185,186,187,188,326,327,328,329,189,330,190,191,331,332,333,334,335,336,337,192,338,193,194,195,201,202,339,203,204,205,206,207,208,340,209,210,211,212,341,214,215,216,217,218,219,342,343,344,345,220,221,222,223,224,225,226,227,228,229,230,231,233,234,346,346,347,347,237,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[348,138,139,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[1,3,4,6,28,242,46,47,48,243,89,90,91,92,93,94,95,104,105,106,107,111,114,137,141,209,210,211,237],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[349,350,351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[354,355,356,357,358,359,360,361,362,53,97,99,100,274,275,363,364,365,366,367,145,177,178,179,202,339,214,215,217,218],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[368,369,370,371,21,51,53,54,57,58,59,60,61,67,68,72,73,86,87,97,99,100,116,145,166,175,176,317,318,177,178,179,182,196,198,200,201,202,203,204,205,206,207,208,214,215,217,218,227,229],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[348,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[54,59,60,99,367,145,178,179,333,339,203,206,207,214,217],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[368,369,370,371,244,245,246,247,0,1,2,3,4,5,6,249,7,29,31,32,33,34,35,36,37,38,39,40,41,42,43,260,44,45,62,63,64,65,66,67,68,69,70,71,270,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,372,97,102,103,140,141,142,143,144,145,175,176,310,192,193,194,214,215,220,221,222,223,224],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[244,245,246,247,0,1,2,3,4,5,6,249,7,250,251,8,252,9,10,11,12,13,14,15,254,16,17,18,19,20,21,22,23,24,25,26,28,29,257,258,30,259,31,32,33,34,35,36,37,38,39,40,41,42,43,260,44,45,261,242,46,263,47,48,264,243,265,49,267,50,51,52,53,54,55,56,57,58,268,59,60,269,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,271,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,303,304,305,306,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,373,171,172,173,174,175,176,310,311,312,313,314,315,177,178,179,321,322,323,324,325,180,181,182,183,184,185,186,187,188,327,328,189,190,191,333,334,335,336,337,192,338,193,194,195,196,197,198,374,199,200,201,202,339,203,204,205,206,207,208,209,210,211,212,341,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,346,347,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[349,350,351,352,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[33,35,43,64,65,67,69,70,270,81,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[33,35,43,64,65,67,69,70,270,81,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[50,51,58,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,178,180,182,183,184,185,186,187,191,192,201,205,223,227],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,2,5,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,25,26,27,29,31,32,33,34,40,41,43,45,46,47,48,49,267,50,51,52,53,55,56,57,58,269,61,65,67,69,70,86,96,97,98,99,100,101,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,311,312,313,314,315,177,178,179,180,181,182,183,184,185,186,187,189,190,191,334,335,336,337,192,338,193,194,201,202,204,205,208,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[307,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[375,368,369,370,371,244,245,246,247,376,377,378,379,380,0,248,381,382,383,384,385,1,2,3,4,5,6,249,386,7,387,388,250,251,8,252,389,253,9,10,11,12,13,14,15,254,16,17,18,19,20,21,255,256,22,23,24,25,26,27,28,29,257,258,30,259,390,391,31,32,33,34,35,36,37,38,39,40,41,42,43,260,44,45,261,392,242,262,393,394,46,263,47,395,48,396,397,264,243,398,265,399,400,401,402,403,49,266,404,405,406,407,408,267,50,51,52,53,54,55,56,57,58,268,59,60,269,61,62,63,64,65,409,66,67,68,69,70,71,270,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,372,89,90,91,92,410,93,94,95,411,271,96,97,98,99,100,101,102,412,103,413,414,415,416,417,418,419,420,421,422,104,423,424,105,425,426,427,428,429,430,431,432,433,106,434,435,436,437,438,107,439,440,108,109,110,111,441,442,112,272,113,114,115,273,116,274,275,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,276,460,461,462,463,464,277,465,278,466,279,280,281,282,283,284,285,286,287,288,289,290,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,291,467,468,137,469,348,138,139,292,293,140,141,142,143,144,294,470,471,295,296,297,298,299,300,301,302,145,303,304,305,306,307,308,309,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,472,169,170,373,171,172,173,174,175,176,310,311,312,313,314,315,316,317,318,319,320,177,178,179,321,322,323,324,325,473,474,475,476,477,478,479,480,481,482,483,484,180,181,182,183,184,185,186,187,485,188,326,327,328,329,189,330,190,191,331,332,333,334,335,336,337,192,338,193,194,486,487,195,196,197,198,374,199,200,201,202,339,203,204,205,206,207,208,488,489,340,209,210,490,211,491,492,493,212,341,213,214,215,216,217,218,219,494,342,343,344,495,345,496,220,221,222,223,224,497,498,499,500,501,502,503,504,505,225,226,227,228,229,230,231,232,233,506,234,235,236,346,347,237,238,239,240,241],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[260,50,62,63,66,67,68,69,74,76,77,79,80,86,87,88,97,444,448,449,458,462,140,141,142,143,144,176,311,312,313,314,315,329,193,194,215,220,221,224,346,346,347,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:147","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[0,49,53,54,59,60,97,99,100,418,274,275,286,289,291,295,299,145,177,178,179,202,339,203,206,207,214,215,217,218],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[348,293],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[355,361,363,365,339,214],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[355,361,363,365,339,214],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[33,34,35,40,41,43,45,64,65,67,69,70,86,175,221,222,223],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[1,2,4,5,6,249,7,387,388,250,251,8,252,389,253,257,258,30,261,242,262,394,46,263,47,48,397,264,243,265,89,90,91,92,94,95,413,417,420,421,422,104,423,424,105,425,426,427,428,429,430,431,432,433,106,434,435,436,437,438,107,439,440,108,110,111,441,278,466,279,280,281,282,283,284,467,468,137,469,348,138,139,292,293,294,297,488,489,340,209,210,211,493,212,498,499,500,501,502,503,505,235,236,346,346,347,347,237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[368,369,370,371,244,245,246,247,1,2,3,4,5,6,7,250,8,21,22,23,24,25,26,27,28,29,257,258,30,259,31,33,34,35,36,37,38,39,40,41,42,43,260,44,45,261,46,263,243,265,267,50,51,52,53,54,55,56,57,58,268,59,60,269,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,372,89,90,91,94,95,271,96,97,98,99,100,101,102,103,108,109,110,111,112,113,114,115,116,275,466,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,303,304,305,306,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,310,311,312,313,314,315,177,178,179,321,322,323,324,325,477,180,181,182,183,184,185,186,187,188,326,327,328,332,334,335,336,337,192,338,193,194,486,487,195,196,197,198,201,202,339,203,204,205,206,207,208,209,210,211,212,341,213,214,215,216,217,218,219,494,220,221,222,223,224,226,227,228,229,230,231,232,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[507],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[108,109,110,508],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[33,34,35,36,43,260,64,65,66,67,68,69,70,71,270,72,81,82,86,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[1,2,4,5,6,249,7,250,251,8,252,30,261,242,262,46,263,47,48,264,243,265,89,90,91,92,94,95,509,104,105,106,107,108,110,111,137,138,139,292,340,209,210,211,212,235,236,346,346,347,347,237],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[355,361,363,365,339,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[21,113,115,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":65,"org.easymock.tests2.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":241,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":335,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.tests.MockClassControlTest.testToString":279,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":375,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":17,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":284,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":165,"org.easymock.tests.UsageTest.moreThanOneArgument":202,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":358,"org.easymock.tests.ReplayStateInvalidUsageTest.times":481,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests2.DependencyTest.testClassMocking":390,"org.easymock.tests2.AnswerTest.answer":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":471,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests2.UsageTest.strictResetToDefault":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":13,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":327,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":161,"org.easymock.tests.LimitationsTest.mockFinalMethod":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":325,"org.easymock.tests2.DependencyTest.testClassMockingSupport":391,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":475,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":296,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":440,"org.easymock.samples.PartialClassMockTest.testGetArea":237,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":147,"org.easymock.tests2.UsageTest.niceToStrict":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testCreateMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":155,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":191,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":75,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.MockClassControlTest.testEquals":283,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":509,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":323,"org.easymock.tests.MockNameTest.defaultName":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":233,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.samples.BasicClassMockTest.testPrintContent":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":381,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":504,"org.easymock.tests2.UsageConstraintsTest.greaterThan":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":505,"org.easymock.samples.ExampleTest.voteForRemoval":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":389,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":249,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":212,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":334,"org.easymock.tests2.CaptureTest.testCaptureFirst":45,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":44,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":28,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.GenericTest.testBridgedEquals":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":199,"org.easymock.tests.UsageExpectAndReturnTest.longType":120,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":84,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":200,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":364,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests.MockingTest.testNiceClassMocking":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":487,"org.easymock.tests2.UsageConstraintsTest.testContains":74,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":227,"org.easymock.tests.MockTypeTest.fromEasyMockClass":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.object":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":170,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":441,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests.MockClassControlTest.testHashCode":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":357,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":169,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":57,"org.easymock.tests.DefaultClassInstantiatorTest.object":498,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":286,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":280,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":359,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":337,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests2.SerializationTest.testAllMockedMethod":110,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":350,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":158,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":277,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":496,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":82,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.tests.UsageStrictMockTest.range":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":363,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":145,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":434,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":198,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":235,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests2.UsageConstraintsTest.any":72,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":480,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":502,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":479,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.SerializationTest.testClass":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":292,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests2.MockedExceptionTest.testMockedException":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":412,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":150,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":1,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":6,"org.easymock.tests2.CompareToTest.testNotComparable":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":83,"org.easymock.tests.MockingTest.testTwoMocks":340,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":154,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":87,"org.easymock.samples.ExampleTest.removeNonExistingDocument":506,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":404,"org.easymock.tests.UsageStrictMockTest.differentMethods":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":500,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":27,"org.easymock.tests2.ConstraintsToStringTest.andToString":360,"org.easymock.tests2.MockBuilderTest.testCreateMockString":265,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":442,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.ExampleTest.voteAgainstRemoval":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":8,"org.easymock.tests.LimitationsTest.privateConstructor":468,"org.easymock.tests2.UsageConstraintsTest.testNotNull":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":257,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.UsageVarargTest.differentLength":373,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests2.UsageConstraintsTest.equals":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":222,"org.easymock.tests.UsageCallCountTest.tooFewCalls":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":482,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":24,"org.easymock.tests.ObjectMethodsTest.testHashCode":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":352,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":29,"org.easymock.tests2.NameTest.nameForNiceMock":370,"org.easymock.tests2.DependencyTest.testInterfaceMocking":31,"org.easymock.samples.ExampleTest.addDocument":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":215,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":396,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":347,"org.easymock.tests2.ConstraintsToStringTest.orToString":354,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":80,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.SerializationTest.test":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":410,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":382,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests2.NameTest.nameForMock":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":160,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":328,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests2.NameTest.nameForStrictMock":369,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":501,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageTest.wrongArguments":203,"org.easymock.tests2.MockBuilderTest.testWithConstructor":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":130,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":503,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":374,"org.easymock.tests2.UsageConstraintsTest.cmpTo":73,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests2.CaptureTest.testCaptureFromStub":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":474,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":262,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.samples.ExampleTest.addAndChangeDocument":234,"org.easymock.tests2.ConstraintsToStringTest.notToString":356,"org.easymock.tests.UsageStrictMockTest.testVerify":494,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":322,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.LimitationsTest.abstractClass":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":15}}]
