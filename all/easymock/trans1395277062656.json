[{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[1,2,3,4],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[27],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[34,35,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[40,0,41,42],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[26],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[44,44,45,45,46,47,48,1,49,50,51,41,52,53,54,4,55,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[81,82,83,84,61,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"key"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[87],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,15,16,17,88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[90,91,46,47,92,93,48,1,49,50,94,0,2,95,96,51,97,41,52,98,53,54,3,86,99,100,101,4,55,42,102,103,104,105,106,34,35,36,107,37,108,56,109,39,110,111,57,112,64,113,114,70,71,115,116,72,73,74,75,76,77,117,78,79,10,80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[118,44,44,45,45,119,120,11,12,121,21,122,123,124,125,126,22,127,128,14,129,130,131,132,133,134,135,136,137,138,23,110,139,140,141,142,143,144,145,24,25,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,26,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,20,186,187,188,189,190,191,192,193,194,195,196,197,32,198,199,200,33,201,27,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[219,220,221,222,223,224,225,226,119,120,227,228,229,90,91,46,47,92,93,48,1,49,50,94,0,95,96,51,97,41,52,98,53,54,3,86,99,100,101,4,55,42,102,103,104,105,106,34,35,36,107,37,108,56,109,39,134,135,230,136,137,138,110,144,231,232,233,234,235,25,146,147,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,150,153,260,261,262,263,264,265,266,267,268,269,270,271,272,165,273,274,275,276,277,278,57,279,280,281,282,283,186,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,81,82,304,305,306,307,308,309,83,310,311,312,313,314,315,84,316,317,318,319,58,59,60,61,62,320,321,322,323,324,325,326,327,328,329,330,331,332,333,196,334,335,112,64,113,336,337,338,339,340,341,342,343,202,203,205,344,345,346,347,348,349,350,351,352,353,354,355,356,114,212,213,216,70,71,115,116,72,73,74,75,76,77,357,358,359,360,361,362,117,363,364,365,366,367,368,369,370,371,372,78,79,373,374,10,80,375,376,377,378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[11,16,17,19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[98],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[380,381,382,40,383],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[102,103,104,105,106,34,35,36,107,37,108,56,109,39,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[140,385],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[386,387,388,389,390,391,392,393],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[118,44,44,45,45,119,120,11,21,123,126,22,127,128,129,130,133,134,135,136,137,138,23,110,141,142,143,144,147,150,151,152,153,154,155,165,26,177,183,20,186,189,190,191,192,196,202,203,204,207,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[118,44,44,45,45,11,12,21,123,124,125,126,127,128,394,14,130,133,23,139,142,143,24,25,26,177,183,20,194,195,27,204],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests2.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":243,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":226,"org.easymock.tests2.DelegateToTest.testReturnException":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":360,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":208,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":171,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageTest.wrongArguments":241,"org.easymock.samples.ExampleTest.answerVsDelegate":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":156,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":303,"org.easymock.tests.UsageTest.moreThanOneArgument":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":60,"org.easymock.tests.UsageTest.argumentsOrdered":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":77,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests2.AnswerTest.answer":273,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests2.DelegateToTest.testDelegate":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests.UsageThrowableTest.throwError":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":185,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests2.CompareToTest.testLessOrEqual":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":172,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":218,"org.easymock.tests2.UsageTest.niceToStrict":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":180,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":37,"org.easymock.tests2.EasyMockSupportClassTest.testAll":165,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":157,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":61,"org.easymock.samples.ExampleTest.voteForRemovals":224,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":364,"org.easymock.samples.BasicClassMockTest.testPrintContent":120,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":342,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":144,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":201,"org.easymock.samples.ExampleTest.voteForRemoval":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":145,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":196,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":263,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":359,"org.easymock.tests2.CaptureTest.testCaptureFirst":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":264,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":309,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":234,"org.easymock.tests2.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":356,"org.easymock.tests.GenericTest.testBridgedEquals":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":371,"org.easymock.tests.UsageExpectAndReturnTest.longType":305,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":302,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":100,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":58,"org.easymock.tests.UsageCallCountTest.tooManyCalls":372,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":341,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":151,"org.easymock.tests.MockingTest.testNiceClassMocking":193,"org.easymock.tests.MockingTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":122,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":351,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":358,"org.easymock.tests.UsageTest.exactCallCountByLastCall":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":67,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":321,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":174,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":28,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":339,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":142,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.CapturesMatcherTest.test":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":183,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":209,"org.easymock.tests2.UsageTest.resumeIfFailure":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":362,"org.easymock.tests2.StubTest.stubWithReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":310,"org.easymock.tests2.SerializationTest.testAllMockedMethod":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":229,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":79,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":162,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.UsageUnorderedTest.message":112,"org.easymock.tests.UsageVerifyTest.twoReturns":366,"org.easymock.tests.UsageVarargTest.varargByteAccepted":355,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":178,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":370,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":119,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":116,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.UsageExpectAndThrowTest.longType":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":200,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":160,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":390,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":138,"org.easymock.tests2.CaptureTest.testCaptureLast":36,"org.easymock.tests2.CompareToTest.testCompareEqual":382,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":155,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":377,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":133,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":168,"org.easymock.tests.UsageExpectAndThrowTest.floatType":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests.UsageVerifyTest.twoThrows":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":177,"org.easymock.samples.ExampleTest.voteAgainstRemoval":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":143,"org.easymock.tests.LimitationsTest.privateConstructor":215,"org.easymock.tests2.UsageConstraintsTest.testNotNull":4,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":343,"org.easymock.tests2.UsageTest.defaultResetToNice":385,"org.easymock.samples.ExampleTest.voteAgainstRemovals":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.CallbackTest.callback":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":139,"org.easymock.tests.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":115,"org.easymock.tests.UsageCallCountTest.tooFewCalls":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":153,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":85,"org.easymock.tests.UsageThrowableTest.throwCheckedException":340,"org.easymock.tests.MockingTest.testStrictClassMocking":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":260,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests2.CompareToTest.testGreateOrEqual":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":88,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.ExampleTest.addDocument":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":184,"org.easymock.tests2.DelegateToTest.testStubDelegate":255,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":80,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":354,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.floatType":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":34,"org.easymock.tests2.SerializationTest.test":283,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":169,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":149,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":173,"org.easymock.tests2.CaptureTest.testCaptureRightOne":108,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":170,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":33,"org.easymock.tests.UsageVarargTest.varargShortAccepted":353,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests2.CompareToTest.testLessThan":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":124,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":315,"org.easymock.tests2.CaptureTest.testCapture":38,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":375,"org.easymock.samples.ExampleTest.addAndChangeDocument":225,"org.easymock.tests.UsageStrictMockTest.testVerify":379,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests2.CompareToTest.testGreateThan":381,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":35,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":75,"org.easymock.tests.LimitationsTest.abstractClass":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":267,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
