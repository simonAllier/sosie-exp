[{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[17,18,19,15,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,20,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[36,37,38,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,22,72,17,23,24,73,74,25,75,76,77,78,79,80,81,82,83,84,85,86,36,87,88,89,90,91,37,92,35,93,94,95,0,96,97,98,99,100,34,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,38,118,39,119,1,120,121,122,123,124,40,125,2,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,26,175,176,177,178,179,180,181,182,183,184,185,186,4,187,188,189,190,191,5,192,193,194,195,196,6,197,198,199,7,200,8,201,202,203,204,205,206,207,208,209,210,211,212,213,28,214,19,29,30,215,216,9,217,218,219,220,221,10,222,223,224,225,226,11,227,228,229,12,230,13,231,232,233,14,31,234,235,236,237,238,239,240,15,241,242,243,244,245,246,247,248,249,250,251,252,16,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,32,20,21,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"position":"org.easymock.internal.RecordState:117","failures":[41,44,46,47,108,109,148,170],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[292,293,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:84","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[300,61,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[303,304,113,213,28,234,235,236,237,238,239,240,15,305,306,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[41,44,45,46,47,307,308,309,310,311,312,313,314,315,48,49,50,51,52,53,54,55,56,57,58,59,60,300,61,301,316,317,62,318,319,320,321,322,323,324,325,326,327,63,65,66,67,69,70,71,22,72,17,23,24,73,74,25,75,76,77,78,79,80,81,82,83,84,85,86,36,87,88,89,90,91,37,92,93,94,95,0,96,97,98,99,100,34,101,102,103,104,105,106,107,108,109,110,328,329,330,111,112,113,114,116,117,38,118,39,119,1,120,121,122,123,124,40,125,2,126,127,128,129,130,131,331,332,333,334,132,335,336,133,134,135,136,137,138,337,338,143,339,144,145,146,147,148,149,150,151,152,153,340,341,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,172,173,175,176,177,178,179,180,342,343,344,186,4,187,188,189,190,191,5,192,193,194,195,196,6,197,198,199,7,200,8,201,202,203,204,205,206,207,208,345,346,347,211,212,213,28,214,19,29,30,216,9,217,218,219,220,221,10,222,223,224,225,226,11,227,228,229,12,230,13,14,31,234,235,236,237,238,239,240,15,241,243,244,245,246,247,248,249,250,255,256,257,258,259,260,265,266,267,268,269,270,271,272,273,274,275,276,32,20,21,277,278,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[73,79,133,134,135,136,138,163,173,186,4,187,188,189,190,191,5,192,193,194,195,196,6,197,198,199,7,200,8,201,203,204,205,206,207,208,14,237,247,248,255,256,257,258,259,260,276,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[22,17,23,25,75,81,82,348,303,349,296,350,297,298,351,304,352,353,171,174,26,175,209,210,213,28,19,29,31,234,235,238,239,15,305,354,306,355,356,357,32,20,21],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[41,42,43,44,45,46,47,307,358,308,359,360,361,309,310,311,362,312,363,313,314,364,315,48,49,50,51,52,53,54,55,56,57,58,59,60,300,61,301,316,317,62,318,319,320,321,365,322,366,367,323,324,325,326,368,369,327,370,371,372,373,374,375,376,63,377,378,379,380,381,382,64,65,66,67,68,69,70,71,22,72,17,23,24,383,384,385,386,73,74,25,75,76,77,78,79,80,81,82,83,84,387,85,86,36,87,388,88,89,90,91,37,92,35,93,94,95,0,96,97,98,99,100,34,101,102,103,104,105,106,107,108,389,109,390,391,392,110,393,394,328,395,396,397,398,399,400,401,402,403,329,404,405,406,407,408,330,409,410,411,412,111,112,113,114,115,116,117,38,118,39,119,1,120,121,122,123,124,40,125,2,126,127,128,129,130,413,414,415,416,417,131,418,419,420,421,422,423,331,332,333,334,132,335,336,133,134,135,136,137,138,424,139,140,141,142,337,337,338,338,143,339,144,145,146,147,148,149,150,151,152,425,153,340,341,154,426,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,427,428,429,430,431,432,433,170,171,172,173,174,26,175,176,177,178,179,180,342,434,343,344,435,291,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,295,181,451,3,452,453,454,182,455,183,184,185,186,4,187,188,189,190,191,5,192,193,194,195,196,6,197,198,199,7,200,8,201,202,203,204,205,206,207,208,456,457,458,345,346,459,347,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,209,210,27,211,212,213,28,214,19,29,30,215,475,476,477,478,479,292,480,481,482,216,9,217,218,219,220,221,10,222,223,224,225,226,11,227,228,229,12,230,13,483,231,232,233,14,31,234,235,236,237,238,239,240,15,241,242,243,244,245,246,247,248,249,484,485,250,486,251,252,16,253,254,255,256,257,258,259,260,261,262,263,487,488,489,490,491,492,493,264,494,265,266,267,268,269,270,271,272,273,274,275,276,32,20,21,277,278,279,280,281,282,495,283,284,285,286,287,288,289,290,496,497,498,499,500,501],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":446,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":256,"org.easymock.tests.MockingTest.testPartialClassMocking":345,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":328,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":499,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":461,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":57,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":176,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":350,"org.easymock.tests.ReplayStateInvalidUsageTest.times":471,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.DependencyTest.testClassMocking":411,"org.easymock.tests2.AnswerTest.answer":41,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":243,"org.easymock.tests2.DelegateToTest.testDelegate":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.DependencyTest.testClassMockingSupport":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":209,"org.easymock.tests2.CaptureTest.testCapture1_2446744":1,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":465,"org.easymock.tests.UsageThrowableTest.throwError":201,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":410,"org.easymock.samples.PartialClassMockTest.testGetArea":339,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":466,"org.easymock.tests.MockingTest.testInterfaceMocking":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":4,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":309,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":406,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":293,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":7,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests.MockNameTest.defaultName":483,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":341,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":207,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":321,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":255,"org.easymock.tests2.CaptureTest.testCaptureFirst":126,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":51,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":33,"org.easymock.tests.UsageExpectAndReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":354,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":206,"org.easymock.tests.MockingTest.testNiceClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":332,"org.easymock.tests.MockingTest.testClassMocking":457,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":135,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":56,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":490,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":229,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":172,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":401,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":296,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":387,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":183,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":488,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":330,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":258,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":181,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":304,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":182,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":42,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":494,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":67,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":337,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":385,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":390,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":305,"org.easymock.tests2.CaptureTest.testCaptureNone":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":233,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":404,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":491,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":470,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":469,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests2.SerializationTest.testClass":300,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests2.NameTest.nameForMocksControl":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":394,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":312,"org.easymock.tests.MockingTest.testNicePartialClassMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":320,"org.easymock.tests2.CompareToTest.testNotComparable":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":336,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":425,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.ConstraintsToStringTest.andToString":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":395,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":44,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":371,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":329,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.LimitationsTest.privateConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":208,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":285,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests2.UsageConstraintsTest.equals":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":366,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":205,"org.easymock.tests.MockingTest.testStrictClassMocking":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":46,"org.easymock.tests.ObjectMethodsTest.testHashCode":489,"org.easymock.tests2.NameTest.nameForNiceMock":141,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":117,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.DelegateToTest.testStubDelegate":66,"org.easymock.tests2.AnswerTest.stubAnswer":45,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.floatType":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":327,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":338,"org.easymock.tests2.ConstraintsToStringTest.orToString":348,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.UsageThrowableTest.noUpperLimit":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":383,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":120,"org.easymock.tests2.SerializationTest.test":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":294,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":9,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":343,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":460,"org.easymock.tests2.NameTest.nameForMock":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":244,"org.easymock.tests2.MockedExceptionTest.testRealException":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":386,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":449,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":140,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests.ErrorMessageTest.testGetters":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":400,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":317,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":11,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":159,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":464,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests2.ConstraintsToStringTest.notToString":349,"org.easymock.tests.UsageStrictMockTest.testVerify":215,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests.LimitationsTest.abstractClass":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":281}}]
