[{"position":"org.easymock.internal.EasyMockProperties:133","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,6,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,7,59,60,3,8,61,62,63,64,9,65,66,67,68,69,70,71,72,10,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,113,114,114],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[77,79,165,166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[47,167,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[117,120,121,131,168,143,146,147,149,169,170,152,154,157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[47,171,71,172,173,174,175,176,74,75],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[76],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[177,178,179],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[171,172,173,174,180,181,75],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[183,184,185,186],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[187,188,189,190,191,192,193,194,195,196],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[197,198,168,199,200,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[139,201],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[116,130,131,132,142,149,153,154,155,202,203,204,205,156,157,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[206,188,207,208,209,123,210,211,212,213,127],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[117,120,121,131,168,143,146,147,149,170,152,154,157,158,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[134,135,136,137,10,73,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[47,167,48,216],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[206,188,207,208,209,123,210,211,212,213,127],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[217,218,219,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[47,167,48,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[11,12,13,14,222,15,16,206,187,188,223,190,191,192,193,224,207,194,225,115,226,117,227,228,120,121,122,229,230,231,232,233,234,235,236,237,238,239,240,241,242,22,6,34,40,243,47,167,48,49,50,244,51,52,53,55,59,209,123,211,245,125,126,246,195,213,247,248,196,185,127,129,249,63,250,130,251,131,132,252,253,254,133,67,69,70,74,255,256,257,138,258,259,260,261,262,263,264,265,139,143,146,147,148,149,266,267,268,269,270,271,272,150,273,274,275,276,277,77,78,278,279,83,166,280,281,152,153,282,154,155,283,93,157,158,159,284,160,285,161,99,100,101,286,287,288,289,290,291,292,293,294,295,296,201,297,298,299,164,300,301,302,303,304,305,306,307,110,111,112,308],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[115,117,228,120,121,122,208,309,251,131,132,10,73,141,168,143,146,147,148,149,310,152,282,154,155,157,158],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[209,313],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[11,12,13,14,222,15,16,241,242,22,6,34,40,49,50,244,51,52,53,55,7,59,60,130,131,132,314,9,67,69,70,10,74,255,315,316,317,318,83,153,154,155,319,320,321,322,323,99,100,101,324,325,286,287,326,288,327,328,329,330,331,290,332,333,334,335,295,336,337,338,296,339,340,299,300,301,303,306,112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[13,16,341,342,343,171,344,345,75,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[115,119,348,349,141,145,350,351,266,267,352,268,353,354,355,356,269,357,358,359,360,270,361,362,363,364,271,150,273,274,275,276,277,151,157,293,298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[365,366],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[76,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[76,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[197,198,168,199,200,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[116,117,120,121,368,243,130,131,132,257,142,168,143,146,147,149,369,278,279,370,371,152,153,154,155,372,373,156,157,158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[69],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":209,"org.easymock.tests2.UsageTest.argumentsOrdered":121,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.tests2.StubTest.stubWithReturnValue":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":328,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests2.DelegateToTest.testReturnException":253,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.samples.SupportTest.voteForRemovals":306,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":198,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":76,"org.easymock.tests.MockClassControlTest.testToString":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":6,"org.easymock.tests.UsageExpectAndThrowTest.object":269,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":296,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":113,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":368,"org.easymock.samples.ExampleTest.answerVsDelegate":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":11,"org.easymock.tests2.UsageConstraintsTest.testNull":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.UsageTest.moreThanOneArgument":142,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":199,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":149,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":160,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":371,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests2.DependencyTest.testClassMocking":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":212,"org.easymock.tests2.CaptureTest.testAnd":206,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":343,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests2.NameTest.nameForMocksControl":137,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":182,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":270,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":84,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":248,"org.easymock.tests2.DependencyTest.testClassMockingSupport":18,"org.easymock.tests.MockingTest.testTwoMocks":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":278,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":355,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.tests.UsageThrowableTest.throwError":271,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":2,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":4,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":85,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":25,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":5,"org.easymock.tests2.CompareToTest.testLessOrEqual":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":320,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":351,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":29,"org.easymock.tests.LimitationsTest.privateConstructor":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":277,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests2.CallbackTest.callback":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":56,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":356,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":197,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":39,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":14,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":274,"org.easymock.tests.MockClassControlTest.testEquals":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":200,"org.easymock.tests.MockingTest.testStrictClassMocking":96,"org.easymock.tests2.CaptureTest.testCaptureAll":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":15,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":222,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":180,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":256,"org.easymock.tests2.NameTest.nameForNiceMock":136,"org.easymock.tests.UsageVarargTest.allKinds":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":111,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":276,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.AnswerTest.stubAnswer":365,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":176,"org.easymock.tests2.UsageConstraintsTest.greaterThan":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.floatType":286,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":272,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":43,"org.easymock.tests2.SerializationTest.test":167,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":325,"org.easymock.tests2.UsageConstraintsTest.testSame":124,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":140,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":232,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":26,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":285,"org.easymock.tests2.NameTest.nameForMock":134,"org.easymock.tests.UsageExpectAndReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":330,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":312,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":345,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":326,"org.easymock.tests.UsageCallCountTest.tooManyCalls":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":327,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":12,"org.easymock.tests.MockingTest.testNiceClassMocking":102,"org.easymock.tests.MockingTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":311,"org.easymock.tests2.NameTest.nameForStrictMock":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":313,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":178,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests.UsageExpectAndReturnTest.object":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":46,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests.ErrorMessageTest.testGetters":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":173,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":30,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":162,"org.easymock.tests2.UsageConstraintsTest.testOr":210,"org.easymock.tests.UsageRangeTest.combination":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":342,"org.easymock.tests.MockClassControlTest.testHashCode":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":31,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":219,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":177,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":65,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":273,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":344,"org.easymock.tests2.CaptureTest.testCapture":367,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.UsageConstraintsTest.constraints":208,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":353,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":321,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":94,"org.easymock.tests.LimitationsTest.abstractClass":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":322,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":44}}]
