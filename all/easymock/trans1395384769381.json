[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,1,2,48,3,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,5,82,83,6,7,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,9,10,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,20,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,11,188,189,190,191,192,193,194,195,196,197,198,199,12,200,201,13,14,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[21,24,25,27,28,29,30,31,32,33,34,302,303,304,37,38,39,40,41,42,43,44,45,46,47,305,306,0,1,2,48,3,49,50,51,52,53,54,55,307,308,309,310,311,312,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,5,82,83,6,7,313,314,315,316,317,84,85,86,87,88,89,90,318,91,92,93,94,95,319,96,97,320,321,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,322,323,324,8,9,10,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,325,326,327,328,329,150,151,152,153,154,155,156,157,330,331,332,333,334,158,159,160,161,162,163,335,164,165,166,168,169,20,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,11,188,189,190,191,192,193,194,195,196,197,198,199,12,200,201,13,14,202,15,16,17,18,203,336,337,204,205,206,207,208,209,210,212,231,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,338,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,278,339,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,340,341,294,295,296,342,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[343,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[241,248,253,265,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[28,29,30,31,32,33,347,34,37,38,39,40,41,42,43,44,45,46,47,0,1,2,48,3,49,50,51,52,53,54,55,308,4,348,309,310,349,311,312,350,351,56,57,352,58,353,354,355,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,5,82,83,6,7,313,84,85,86,87,88,89,90,318,356,357,358,359,360,361,362,363,364,365,366,91,92,93,94,95,319,96,97,321,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,8,367,9,10,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,325,368,369,370,371,372,373,374,375,328,376,377,150,151,152,153,154,155,156,157,158,159,160,161,162,163,335,164,165,166,168,169,20,183,185,186,187,11,188,189,190,191,192,193,194,195,196,197,198,199,12,200,201,13,14,202,15,16,17,18,203,204,205,206,207,208,209,210,211,212,213,218,219,378,379,220,221,224,225,226,380,227,228,229,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,381,274,275,276,277,382,383,384,385,386,387,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[388,389,390],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[1,48,52,89,97,104,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,152,153,154,155,156,157,20,186,192],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[391,392,393,394,395,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[22,22,23,23,306,5,84,86,87,90,106,107,108,109,110,147,148,158,159,160,161,162,12,239,240,243,244,245,246,251,253,254,256,257,263,264,265,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,37,38,39,40,41,43,44,45,46,47,0,1,2,48,3,50,51,52,53,54,55,308,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,5,82,83,6,7,84,85,86,87,88,89,90,359,95,96,97,321,99,100,101,102,103,104,105,106,107,108,109,110,9,10,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,20,183,185,186,187,11,188,189,190,191,192,194,195,196,197,199,12,200,201,13,14,202,203,204,205,206,211,212,213,220,228,229,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,276,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[190,255,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,347,34,35,36,302,303,304,37,38,39,397,40,41,42,43,44,45,46,47,305,306,0,1,2,48,3,49,50,51,52,53,54,55,307,308,4,348,398,399,309,310,349,311,312,350,351,400,56,57,352,58,353,354,355,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,5,82,83,6,7,313,314,315,316,401,317,402,84,85,86,87,88,89,90,318,356,357,358,359,360,361,362,363,364,365,366,91,92,93,94,95,319,96,97,320,321,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,322,323,324,8,367,9,10,116,117,118,119,120,403,121,122,404,405,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,406,407,146,408,147,148,149,325,368,369,370,371,372,373,374,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,326,425,426,427,428,429,327,430,375,431,432,433,434,435,436,437,328,376,377,329,438,150,151,152,153,154,155,156,157,330,331,332,333,334,158,159,160,161,162,163,335,164,165,166,167,168,169,20,170,171,172,173,174,175,176,177,178,179,180,181,182,439,440,183,184,185,186,187,11,188,189,190,191,192,193,194,195,196,197,198,199,12,200,201,13,14,202,391,441,15,16,17,18,203,336,337,204,205,206,207,208,209,210,211,212,213,442,443,444,214,445,446,215,447,448,449,450,451,452,453,454,455,216,456,457,458,459,460,217,461,462,218,219,378,379,220,221,222,223,463,464,224,225,226,380,227,228,229,230,465,231,232,233,466,234,235,236,237,238,239,240,241,242,467,243,244,245,246,247,248,338,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,468,273,469,381,274,275,276,277,382,470,471,472,473,474,475,278,339,476,477,478,479,480,481,386,482,387,279,280,281,282,283,284,285,286,287,288,289,290,291,292,483,484,485,486,487,293,340,488,489,490,491,492,341,294,295,296,342,297,298,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[415,336,205,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[22,22,23,23,26,35,36,348,349,400,56,57,58,99,121,122,404,146,325,368,369,370,371,372,438,202,211,213,214,215,216,217,218,219,378,220,221,222,223,224,225,226,227,228,229,230,232,233,266,267,269,270,271,272,273,274,275,276,277,470,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":242,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":419,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":441,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":126,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":86,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":93,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.UsageConstraintsTest.testNull":244,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":269,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":282,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":145,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":160,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":106,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":345,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":439,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":210,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":399,"org.easymock.tests2.CaptureTest.testAnd":279,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.DelegateToTest.testDelegate":297,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":141,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":115,"org.easymock.tests2.DependencyTest.testClassMockingSupport":440,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":283,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":208,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":310,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":462,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.MockingTest.testInterfaceMocking":352,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":451,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":438,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":135,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":398,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":91,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":253,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":252,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":288,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests2.EasyMockSupportClassTest.testAll":214,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":209,"org.easymock.tests2.CaptureTest.testCaptureAll":280,"org.easymock.tests.MockNameTest.defaultName":305,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":318,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":47,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":114,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":156,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":277,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":436,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.CaptureTest.testCaptureFirst":292,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":46,"org.easymock.tests.GenericTest.testBridgedEquals":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":119,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":144,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests2.UsageConstraintsTest.testContains":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":300,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":79,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":394,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":41,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":453,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":344,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":207,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":40,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":454,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":275,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":213,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":138,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":336,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":136,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":148,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":482,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":442,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":92,"org.easymock.tests2.CaptureTest.testCaptureNone":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":389,"org.easymock.tests.UsageUnorderedTest.message":149,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":45,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":456,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":117,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":89,"org.easymock.tests2.UsageConstraintsTest.any":249,"org.easymock.tests2.StubTest.stub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndThrowTest.longType":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":434,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.SerializationTest.testClass":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests.LimitationsTest.mockNativeMethod":146,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":485,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":487,"org.easymock.tests2.MockedExceptionTest.testMockedException":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":446,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":130,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":483,"org.easymock.tests2.CaptureTest.testCaptureLast":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":247,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":400,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":134,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":264,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":488,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":432,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":447,"org.easymock.tests.UsageExpectAndThrowTest.floatType":128,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":276,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testNotNull":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":298,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":484,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":469,"org.easymock.tests.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":88,"org.easymock.tests.UsageCallCountTest.tooFewCalls":10,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":94,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":206,"org.easymock.tests2.CompareToTest.testGreateOrEqual":346,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":395,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests2.AnswerTest.stubAnswer":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":463,"org.easymock.tests.UsageVarargTest.varargLongAccepted":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":202,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":481,"org.easymock.tests2.SerializationTest.test":212,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":465,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":448,"org.easymock.tests.GenericTest.testPackageScope":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":140,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":258,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":201,"org.easymock.tests2.UsageConstraintsTest.lessThan":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":452,"org.easymock.tests2.CaptureTest.testCaptureRightOne":289,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":388,"org.easymock.tests2.UsageConstraintsTest.testOr":246,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":267,"org.easymock.tests.UsageTest.wrongArguments":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":449,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":435,"org.easymock.tests.UsageVarargTest.varargShortAccepted":43,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":250,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.UsageConstraintsTest.constraints":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":112,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":108,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":38}}]
