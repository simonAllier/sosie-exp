[{"position":"org.easymock.internal.matchers.Compare:52","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[7,8,9],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,12],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[13,14,15,16,17,18],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[19,20,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[7,8,9],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,19,40,41,42,43,44,45,46,22,47,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MocksControl:105","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,23,122,123,124,125,126,127,128,129,7,8,130,131,132,9,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,167,168,169,170,171,172,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,16,27,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,28,29,30,31,32,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,33,34,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,5,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,2,3,4,363,364,365,6,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,10,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,35,435,436,437,438,439,440,441,442,443,444,445,446,447,36,448,449,450,451,452,453,454,455,456,457,458,459,37,38,460,461,462,39,19,40,41,463,464,20,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,472,473,474,475,476,477],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[226,233,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[60,61,301,2,478,479,480,412,481,482,483,484,485,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + java.lang.String) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"failMessage"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,23,122,129,7,134,135,136,137,138,139,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,192,193,194,195,16,27,196,197,198,199,200,204,205,207,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,258,259,260,261,262,263,264,265,266,267,268,269,28,29,30,31,32,273,274,275,277,278,279,280,281,282,283,284,33,34,287,292,293,294,295,296,297,298,300,303,304,305,306,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,331,334,343,349,352,353,354,355,356,357,360,361,362,2,3,4,363,364,365,6,366,367,368,369,370,371,372,373,374,380,387,388,389,390,391,392,393,395,396,397,398,400,10,401,403,404,405,408,409,410,411,413,414,415,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,35,435,436,437,438,439,440,441,442,445,446,447,36,453,37,38,460,461,39,19,40,41,463,464,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,472,473,475,476],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[97,486,165,166,15,175,178,179,193,16,197,423,429,430,436],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,23,122,129,7,134,135,136,137,138,139,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,192,193,194,195,16,27,196,197,198,199,200,204,205,207,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,258,259,260,261,262,263,264,265,266,267,268,269,28,29,30,31,32,273,274,275,277,278,279,280,281,282,283,284,33,34,287,292,293,294,295,296,297,298,300,303,304,305,306,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,331,334,343,349,352,353,354,355,356,357,360,361,362,2,3,4,363,364,365,6,366,367,368,369,370,371,372,373,374,380,387,388,389,390,391,392,393,395,396,397,398,400,10,401,403,404,405,408,409,410,411,413,414,415,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,35,435,436,437,438,439,440,441,442,445,446,447,36,453,37,38,460,461,39,19,40,41,463,464,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,473,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,23,122,123,124,125,126,127,128,129,487,7,8,130,131,132,9,488,133,489,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,167,490,491,168,169,170,171,172,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,16,27,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,28,29,30,31,32,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,33,34,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,5,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,2,3,4,363,364,365,6,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,492,391,392,393,493,394,395,396,397,398,399,400,10,401,402,403,404,478,405,406,479,407,408,409,410,480,411,494,412,413,414,482,415,416,495,496,497,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,35,435,436,437,438,439,440,441,442,443,444,445,446,447,36,448,449,450,451,452,453,454,455,456,457,458,459,37,38,460,461,462,39,19,40,41,463,464,20,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,472,473,474,475,476,477,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:78","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllDeclaredMethods(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[50,189,400,401,403],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[499,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,12],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[502,503,504,505,506,480,477],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[48,60,60,61,61,62,63,91,92,93,94,95,129,487,7,8,130,131,132,9,488,133,146,147,148,149,150,151,152,153,167,170,201,202,203,204,205,207,210,285,286,287,288,292,293,295,296,297,298,300,301,302,303,304,305,306,307,308,328,329,330,331,332,333,334,5,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,2,4,387,388,389,390,392,393,404,478,405,406,479,407,408,409,410,480,411,412,413,414,482,415,416,495,496,417,443,444,476,477,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[60,60,61,61,301,2,494,412,476,477],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[48,49,51,52,54,58,92,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,23,154,156,157,158,159,160,161,24,25,26,164,166,173,174,176,177,180,192,27,197,198,204,205,207,244,245,246,28,29,30,31,32,33,34,287,292,293,294,295,296,297,300,304,305,306,309,310,312,313,316,317,318,319,321,322,323,324,325,326,327,331,334,343,349,355,357,361,2,3,363,364,365,6,366,367,368,369,370,371,372,373,380,387,388,389,390,391,392,393,10,405,408,410,411,414,420,421,422,424,426,427,428,431,432,35,436,437,445,446,36,453,37,38,460,461,39,19,40,41,463,464,465,466,42,467,43,44,0,45,46,21,468,469,471,22,47,12,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[49,50,51,52,53,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,89,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,23,122,123,129,143,144,145,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,173,174,15,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,16,27,196,197,198,199,200,227,233,244,245,246,247,248,249,250,251,28,29,30,31,32,270,271,272,273,274,275,277,278,279,280,281,282,283,284,33,34,287,289,290,293,296,300,303,304,305,306,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,331,352,357,358,359,360,361,2,3,363,364,365,6,366,367,368,369,370,371,372,373,380,399,400,10,401,402,403,408,410,411,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,35,435,436,437,438,445,446,447,36,453,37,38,460,461,39,19,40,41,463,464,20,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,473,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[49,50,51,52,53,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,23,122,125,126,129,152,153,154,155,156,157,158,159,160,161,24,25,162,163,26,164,165,166,173,174,176,177,178,180,181,182,183,184,185,186,187,189,190,195,27,196,197,198,199,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,255,28,29,30,31,32,273,274,275,277,278,280,281,282,283,284,33,34,287,292,293,294,295,296,297,300,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,331,352,353,354,355,356,357,360,361,362,3,4,363,364,365,6,366,367,368,370,371,372,373,374,380,387,390,391,400,10,401,403,420,421,422,424,425,426,427,429,431,432,434,35,435,436,437,438,445,446,447,36,453,37,38,460,461,39,19,40,41,463,464,465,466,42,467,43,44,0,45,46,21,468,469,470,471,22,47,12,473,475],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[309,311,319,460,461,19,41,463,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[507,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[508,505,506,484,485],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[122,143,144,145,162,181,182,183,184,185,186,218,353,354,355,356,36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[298,308,353,404,409],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":461,"org.easymock.tests2.UsageTest.argumentsOrdered":430,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":425,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testReturnException":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":148,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":394,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":65,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":464,"org.easymock.tests2.UsageTest.wrongArguments":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":136,"org.easymock.samples.ExampleTest.answerVsDelegate":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":170,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":295,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":371,"org.easymock.tests2.CaptureTest.testPrimitive":312,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":84,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.UsageTest.argumentsOrdered":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":501,"org.easymock.tests.ReplayStateInvalidUsageTest.times":266,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":380,"org.easymock.tests2.DependencyTest.testClassMocking":443,"org.easymock.tests2.AnswerTest.answer":357,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":442,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":491,"org.easymock.tests2.CaptureTest.testAnd":309,"org.easymock.tests2.UsageTest.strictResetToDefault":421,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":366,"org.easymock.tests2.DelegateToTest.testDelegate":403,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":80,"org.easymock.tests.LimitationsTest.mockFinalMethod":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":444,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":440,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":260,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":169,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":206,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":86,"org.easymock.tests2.UsageTest.niceToStrict":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":66,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests2.ThreadingTest.testChangeDefault":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":408,"org.easymock.tests2.MockBuilderTest.testCreateMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":74,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":348,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":467,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":276,"org.easymock.tests.MockClassControlTest.testEquals":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureAll":310,"org.easymock.tests.MockNameTest.defaultName":96,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":258,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests.UsageVarargTest.allKinds":284,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":133,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":420,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":365,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests2.CaptureTest.testCaptureFirst":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":6,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":432,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":422,"org.easymock.tests2.CaptureTest.testCapture2_2446744":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":229,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests.GenericTest.testBridgedEquals":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":83,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":470,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":499,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":388,"org.easymock.tests.MockingTest.testNiceClassMocking":210,"org.easymock.tests.MockingTest.testClassMocking":202,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":236,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":355,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":475,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":255,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":125,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":189,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.MockClassControlTest.testHashCode":151,"org.easymock.tests2.EasyMockSupportTest.testVerify":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":500,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":187,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":472,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastCall":426,"org.easymock.tests.DefaultClassInstantiatorTest.object":7,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":253,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":143,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":349,"org.easymock.tests2.UsageTest.resumeIfFailure":431,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":485,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":18,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":77,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":233,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.UsageExpectAndThrowTest.object":75,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":90,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":468,"org.easymock.tests2.DelegateToTest.testWrongClass":401,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":33,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":60,"org.easymock.tests.UsageStrictMockTest.range":197,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":410,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":87,"org.easymock.tests2.CaptureTest.testCaptureNone":317,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":344,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageConstraintsTest.any":465,"org.easymock.tests2.StubTest.stub":447,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":264,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":435,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":453,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":438,"org.easymock.tests2.NameTest.nameForMocksControl":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":474,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":69,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":411,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":508,"org.easymock.tests2.CaptureTest.testCaptureLast":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":393,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":469,"org.easymock.tests.MockingTest.testTwoMocks":203,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":73,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":429,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.samples.ExampleTest.removeNonExistingDocument":55,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":130,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":325,"org.easymock.tests2.MockBuilderTest.testCreateMockString":415,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":5,"org.easymock.tests.UsageExpectAndThrowTest.floatType":67,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":498,"org.easymock.tests.UsageVerifyTest.twoThrows":165,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":343,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":286,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":353,"org.easymock.tests2.UsageTest.defaultResetToNice":428,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":223,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.CallbackTest.callback":352,"org.easymock.tests2.UsageConstraintsTest.equals":462,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":137,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":392,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":391,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":362,"org.easymock.tests.ObjectMethodsTest.testHashCode":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":397,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":327,"org.easymock.tests2.DependencyTest.testInterfaceMocking":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":345,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":361,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":476,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":416,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.samples.SupportTest.addDocument":57,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":208,"org.easymock.tests2.NameTest.nameForMock":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":482,"org.easymock.tests2.UsageStrictMockTest.differentMethods":437,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests2.MockedExceptionTest.testRealException":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":269,"org.easymock.tests2.NameTest.nameForStrictMock":396,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":473,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":405,"org.easymock.tests2.UsageStrictMockTest.range":436,"org.easymock.tests2.UsageConstraintsTest.lessThan":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":364,"org.easymock.tests2.CaptureTest.testCaptureRightOne":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":293,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":212,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":466,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests2.CompareToTest.testLessThan":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":427,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":259,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":406,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.constraints":460,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":56,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":59,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.LimitationsTest.abstractClass":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":31,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":368}}]
