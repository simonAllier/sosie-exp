[{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[79,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[94,95,96,97,98],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[6,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,3,4,113,114,44,45,46,115,116,117,118,119,120,121,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[123,124,125,126,0,1,127,128,129,130,131,132,2,133,3,4,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,5,152,6,153,154,155,107,156,157,158,159,7,8,9,10,11,12,13,82,160,83,93,161,162,163,164,165,166,84,167,168,169,170,171,113,172,173,174,175,176,177,178,179,180,181,182,14,183,184,185,186,85,86,187,87,188,88,89,189,190,191,192,193,194,195,196,197,198,91,199,200,201,202,92,203,204,205,206,207,208,15,16,17,18,19,20,209,21,210,22,23,24,211,25,26,212,27,28,213,29,214,215,216,217,218,219,30,31,32,33,220,221,222,34,223,35,36,224,37,225,226,227,227,228,228,229,38,230,39,231,232,233,234,114,235,236,237,238,239,240,241,242,243,244,245,246,40,41,42,43,247,248,249,250,251,252,253,254,255,256,257,258,259,260,44,261,45,46,262,263,264,265,266,267,268,269,270,271,272,47,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,48,49,50,51,297,298,299,300,301,302,303,304,52,53,54,55,56,57,305,306,58,59,307,60,61,62,308,63,64,65,66,67,309,310,311,312,313,314,315,68,69,70,71,72,316,317,318,319,320,321,322,323,324,325,326,73,74,75,76,119,120,121,327,328,329,330,122,331,332,333,334,335,336,337,338,339,340,341,342,77,78,343,344,345,346,347,348,349,350,351,352,353,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[188],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[82,160,83,93,84,167,85,86,187,87,188,88,89,189,90,190,91,199,92,203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[123,124,125,126,356,357,0,1,127,358,359,128,129,130,131,132,2,133,3,4,134,360,361,362,363,364,135,365,366,367,368,369,370,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,5,152,6,99,371,153,154,372,155,107,156,157,158,159,7,8,9,10,11,12,13,373,374,375,376,82,160,83,93,161,162,163,164,165,166,84,167,168,169,170,171,113,172,173,174,175,176,177,178,179,180,181,377,182,14,183,378,184,379,185,186,85,86,380,187,87,188,88,89,189,90,190,191,192,193,194,195,196,197,198,91,199,200,201,202,92,203,204,381,205,206,207,208,15,16,17,18,19,20,209,382,21,383,384,210,22,23,24,385,386,211,387,25,388,389,390,26,212,27,108,28,109,213,29,391,214,392,393,394,395,396,215,397,398,399,400,401,402,216,217,218,219,403,404,405,30,406,407,31,408,409,410,411,412,413,414,415,416,32,417,418,419,420,421,33,422,423,220,221,222,34,223,35,36,224,37,225,226,227,227,228,228,229,38,230,39,424,231,232,233,425,426,427,234,94,95,96,79,97,428,98,114,235,236,237,238,239,240,241,242,243,244,245,246,429,430,431,40,41,42,43,247,432,433,434,435,248,249,436,437,250,251,252,253,254,255,256,257,258,259,260,44,261,45,46,262,263,438,439,440,264,265,266,267,268,269,270,271,272,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,47,273,274,275,276,465,466,467,468,469,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,470,471,48,472,473,474,475,476,49,50,477,51,478,479,480,297,298,299,300,301,302,303,304,52,53,54,55,56,57,305,306,58,59,307,60,61,62,308,63,64,65,66,67,309,310,481,482,483,311,312,313,314,315,68,69,70,71,72,316,317,318,484,319,320,321,322,323,324,325,326,73,74,75,76,119,120,121,485,327,328,329,330,122,331,332,333,334,335,336,337,338,339,340,341,486,342,487,488,489,490,491,492,493,77,78,343,344,345,346,494,347,348,349,350,351,352,353,354,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[28],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[177],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[107,209,22,23,386,211,25,388,26,212,27,28,213,29,214,31,32,33,39,436,488,491],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[301,302,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[86,89,91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[6,99,107,495,496,9,13,497,387,389,108,109,498,391,403,404,405,30,406,407,31,408,409,410,411,412,413,414,415,416,32,417,418,419,420,421,33,422,423,227,228],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[440],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[107,156,157,499],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[87,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[500,82,160,83,93,161,162,163,164,165,166,501,84,167,168,169,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[135,365,139,142,144,8,9,12,13,205,206,207,208,16,210,24,386,211,388,27,28,29,214,215,397,231,425,426,252,253,254,473,488,489,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,99,101,102,103,503,106,107,108,109],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[6,99,371,107,157,7,8,9,10,12,13,373,374,15,16,18,19,20,209,21,383,384,210,22,23,24,385,386,211,387,25,388,389,390,26,212,27,108,28,109,213,29,391,214,216,217,218,403,404,30,407,31,408,409,410,412,413,414,415,32,417,418,419,420,421,33,221,222,227,228,39,234,94,95,96,79,97,98,435,248,249,436,437,250,251,252,253,254,255,256,257,470,471,48,472,474,475,476,49,50,51,480,488,491,349],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[107,156,157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[81],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[131,133,3,4,137,141,142,145,153,170,172,173,174,178,179,180,181,85,196,16,22,24,25,213,29,214,114,258,260,261,45,46,270,271,272,504,505,321,73,506,507,120,121,330,331,332,335,336,337],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[2,4,134,113,44,46,262,119,120,121,122,487,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[159,216,217,218,219,274,310,350,351,352,353,354,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[107,156,157,499],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":174,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":351,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":252,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":381,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":115,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":491,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":145,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":257,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.ReplayStateInvalidUsageTest.times":243,"org.easymock.tests2.DependencyTest.testClassMocking":356,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":75,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.DependencyTest.testClassMockingSupport":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":486,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":237,"org.easymock.tests.UsageThrowableTest.throwError":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":490,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":26,"org.easymock.tests2.MockBuilderTest.testCreateMock":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":256,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":235,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":326,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":303,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":355,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":378,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":106,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":98,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":350,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":139,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":306,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":325,"org.easymock.tests.GenericTest.testBridgedEquals":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":485,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":302,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":8,"org.easymock.tests.MockingTest.testClassMocking":475,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":329,"org.easymock.tests.MockTypeTest.fromEasyMockClass":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndReturnTest.object":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":102,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":320,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":112,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":64,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.MockClassControlTest.testHashCode":255,"org.easymock.tests2.EasyMockSupportTest.testVerify":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":343,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":379,"org.easymock.tests.UsageVarargTest.varargCharAccepted":319,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":427,"org.easymock.tests2.CaptureTest.testCaptureMultiple":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":147,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":231,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":22,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":253,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":353,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":157,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":111,"org.easymock.samples.SupportTest.voteForRemovals":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":463,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":199,"org.easymock.tests2.DelegateToTest.testWrongClass":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":403,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":440,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":114,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":504,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":324,"org.easymock.tests2.ThreadingTest.testThreadSafe":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":425,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":241,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.NameTest.nameForMocksControl":208,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":342,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":13,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":200,"org.easymock.tests.MockingTest.testTwoMocks":476,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":203,"org.easymock.samples.ExampleTest.removeNonExistingDocument":225,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":95,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":151,"org.easymock.tests2.MockBuilderTest.testCreateMockString":214,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":371,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":496,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":304,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":63,"org.easymock.tests.UsageVarargTest.differentLength":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.UsageConstraintsTest.equals":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":383,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":301,"org.easymock.tests.MockingTest.testStrictClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":11,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":104,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":207,"org.easymock.tests2.DependencyTest.testInterfaceMocking":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":103,"org.easymock.samples.ExampleTest.addDocument":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":323,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests.UsageThrowableTest.noUpperLimit":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":186,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":373,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":156,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":94,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.samples.SupportTest.addDocument":229,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests2.NameTest.nameForMock":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":391,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":76,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests2.NameTest.nameForStrictMock":206,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":116,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":96,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.ErrorMessageTest.testGetters":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.MockBuilderTest.testWithConstructor":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":62,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":97,"org.easymock.tests.UsageVarargTest.varargShortAccepted":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":236,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":388,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":308,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":142,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":317}}]
