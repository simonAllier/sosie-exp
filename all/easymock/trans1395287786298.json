[{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[45,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[57,58,14,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[59],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[60,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[53],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[44,45,46,47,49,50],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[77,78,79,60,80,81,82,83,84,85,61,86,63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[87,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[90,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[93,94,95,96,97,98,99,59,100,101,102],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,110,111,112,113,114,115,93,94,116,95,117,96,97,118,119,120,121,122,123,124,125,126,127,99,128,129,130,59,131,132,133,134,135,136,77,137,138,139,140,141,78,79,142,143,0,144,66,1,145,146,67,147,148,149,150,151,152,60,153,154,3,155,156,157,158,159,160,161,162,163,164,58,165,166,167,168,169,12,170,103,171,172,173,174,175,176,177,178,179,13,14,180,15,16,17,18,181,182,21,183,24,25,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,90,100,199,101,200,201,202,203,204,205,206,102,207,208,209,30,210,211,212,34,213,214,215,216,217,218,219,220,221,222,223,224,91,225,226,227,82,228,229,83,84,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,85,256,257,61,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,51,52,275,276,277,278,279,280,281,282,283,284,285,286,287,54,288,289,92,290,291,63,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,64,65,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,356,357,357,358,359,360,361,362,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:132","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[125,138,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[105,106,107,108,109,110,111,112,363,113,114,115,93,94,364,116,95,117,96,97,118,98,119,120,121,122,123,124,125,126,127,99,128,129,365,130,59,131,132,366,367,368,87,369,133,370,371,372,373,374,375,134,135,136,77,137,138,139,140,141,78,79,142,143,0,144,66,1,376,145,146,67,68,377,378,147,148,149,150,151,152,60,153,154,2,379,380,3,381,4,155,5,6,382,383,7,384,385,8,386,156,9,10,387,388,11,157,389,390,391,392,393,394,88,395,158,396,397,398,399,400,401,159,160,161,162,163,164,57,58,165,166,167,168,169,12,402,71,170,403,72,404,103,405,171,73,172,406,407,408,173,75,409,410,411,412,413,174,76,414,175,176,177,178,179,13,14,180,15,16,17,415,416,18,417,19,20,181,182,21,22,23,183,24,25,184,185,186,187,188,189,190,191,192,193,194,195,196,197,26,418,419,420,27,421,422,198,90,100,199,101,200,201,202,203,204,205,206,102,207,208,209,28,29,30,31,423,424,425,426,427,428,210,211,212,32,33,34,213,214,429,215,430,431,35,216,217,218,219,220,432,433,434,435,221,222,223,224,91,225,436,226,227,81,82,228,229,83,84,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,437,438,439,440,441,251,252,253,254,255,85,256,257,61,258,259,260,36,37,38,39,40,41,42,43,261,262,263,264,265,266,267,268,269,270,442,44,45,46,47,48,49,443,50,271,272,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,273,461,462,463,464,465,274,466,467,51,52,275,53,276,277,468,278,279,280,281,282,283,284,285,286,287,86,54,469,470,471,472,473,474,475,476,477,478,479,480,288,289,92,290,291,63,481,482,483,484,485,486,487,488,292,293,294,295,296,297,298,299,489,300,490,301,302,303,491,304,305,306,307,308,309,310,311,312,64,65,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,492,338,339,340,341,493,342,343,344,345,346,347,348,349,350,351,352,353,354,494,355,356,357,358,359,360,361,362,55,56],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[160,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.RecordState:233","failures":[105,106,107,108,109,110,111,112,113,114,115,93,94,116,95,117,96,97,118,98,119,120,121,122,123,124,125,126,127,99,128,129,365,130,59,131,132,133,134,135,136,77,137,138,139,140,141,78,79,142,143,0,144,66,1,145,146,67,147,148,149,150,151,152,60,153,154,3,155,156,157,158,159,160,161,162,163,164,58,165,166,167,168,169,12,170,103,171,172,173,174,175,176,177,178,179,13,14,180,15,16,17,18,181,182,21,183,24,25,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,90,100,199,101,200,201,202,203,204,205,206,102,207,208,209,30,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,91,225,226,227,82,228,229,83,84,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,85,256,257,61,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,273,461,462,463,464,465,274,466,51,52,275,278,279,280,281,282,284,285,287,54,288,289,92,290,291,63,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,64,65,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,349,350,351,352,353,354,355,356,356,357,357,358,359,360,361,362,55,56],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[106,107,108,110,111,112,113,114,115,93,94,116,95,117,96,97,118,119,120,121,122,123,124,125,126,127,99,128,129,365,130,59,131,132,133,134,135,136,77,137,138,139,140,141,78,79,142,143,0,144,66,1,145,146,67,147,148,149,150,151,152,60,153,154,3,155,156,157,158,159,162,163,164,168,169,12,402,170,103,405,171,172,408,173,409,410,411,412,413,174,175,176,178,179,13,14,180,15,16,17,415,18,20,181,182,21,183,24,25,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,90,100,199,101,200,201,202,203,204,205,206,102,207,208,209,30,210,211,212,213,214,215,216,217,218,219,220,432,433,434,435,221,222,223,224,91,225,226,227,81,82,228,229,83,84,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,437,438,439,440,441,254,255,85,256,257,61,258,259,261,262,263,264,265,269,270,271,272,51,52,278,280,281,282,284,285,86,54,288,289,92,290,291,63,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,64,65,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,339,340,341,493,342,343,349,350,351,352,353,354,355,356,357,358,359,360,361,362,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[497,498,499,500,501,168,73,407,174,76],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,144,66,1,146,67,2,379,380,3,381,4,155,5,6,382,383,7,384,385,8,386,156,9,10,387,388,11,157,389,390,502,503,504,505,506,168,12,402,507,170,403,404,103,405,171,172,407,408,173,104,409,174,76,13,14,15,16,17,415,18,417,19,20,181,182,21,22,23,183,24,25,26,27,28,29,30,31,428,32,33,34,213,214,215,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,467,51,52,275,53,54,481,486,356,356,357,357,359,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[457,273,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[133,370,136,77,78,79,144,66,146,67,151,60,153,158,396,58,165,166,167,402,403,171,172,173,409,14,20,21,23,188,191,193,424,427,428,436,227,81,82,83,84,85,256,61,258,38,39,40,276,277,63,481,484,485,486,487,488,312,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[183,24,25,184,90,221,222,223,224,91,225,272,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[170,103,171,172,173,409,359],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":455,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":358,"org.easymock.tests2.DelegateToTest.testReturnException":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":222,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":38,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":57,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":434,"org.easymock.samples.ExampleTest.answerVsDelegate":350,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":486,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":291,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":477,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.DependencyTest.testClassMocking":377,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":413,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":483,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":280,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.LimitationsTest.mockFinalMethod":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":441,"org.easymock.tests2.DependencyTest.testClassMockingSupport":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":411,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":471,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":444,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":359,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":472,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":428,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":240,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":432,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":491,"org.easymock.tests.MockClassControlTest.testEquals":42,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":412,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests.MockNameTest.defaultName":436,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.samples.ExampleTest.voteForRemovals":354,"org.easymock.tests.UsageVarargTest.allKinds":311,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":440,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":443,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":50,"org.easymock.samples.ExampleTest.voteForRemoval":351,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":22,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":415,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":221,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":105,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":310,"org.easymock.tests.GenericTest.testBridgedEquals":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":437,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":336,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.UsageCallCountTest.tooManyCalls":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":144,"org.easymock.tests.MockingTest.testNiceClassMocking":35,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":507,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":305,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":426,"org.easymock.tests.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":489,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":76,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests.MockClassControlTest.testHashCode":41,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":410,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":304,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests.DefaultClassInstantiatorTest.object":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":313,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":424,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":238,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":506,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":181,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":237,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":39,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":224,"org.easymock.tests2.StubTest.stubWithReturnValue":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":273,"org.easymock.samples.SupportTest.voteForRemovals":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":490,"org.easymock.tests.UsageExpectAndThrowTest.object":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":356,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":421,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":2,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":433,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":309,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":9,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":290,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":476,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":223,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":475,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.SerializationTest.testClass":168,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests.LimitationsTest.mockNativeMethod":30,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests2.NameTest.nameForMocksControl":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.MockedExceptionTest.testMockedException":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":4,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":235,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":172,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":239,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.samples.ExampleTest.removeNonExistingDocument":494,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":473,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":46,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":409,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":5,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":414,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":182,"org.easymock.tests.LimitationsTest.privateConstructor":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":70,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":306,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":417,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":435,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.MockingTest.testStrictClassMocking":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":425,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.NameTest.nameForNiceMock":166,"org.easymock.tests2.DependencyTest.testInterfaceMocking":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":256,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":406,"org.easymock.tests.UsageVarargTest.varargLongAccepted":308,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.floatType":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":357,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageThrowableTest.noUpperLimit":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":26,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":45,"org.easymock.tests2.UsageConstraintsTest.testSame":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":376,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":6,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":245,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":281,"org.easymock.tests2.MockedExceptionTest.testRealException":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":458,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests2.NameTest.nameForStrictMock":165,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":27,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":47,"org.easymock.tests.ErrorMessageTest.testGetters":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.MockBuilderTest.testWithConstructor":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":493,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":470,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests2.CaptureTest.testCapture":495,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":355,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":360,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":438,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":218,"org.easymock.tests.LimitationsTest.abstractClass":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":219,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302}}]
