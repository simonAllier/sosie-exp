[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,1,48,49,50,51,52,3,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,4,5,6,7,8,9,10,11,69,12,13,14,15,16,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[321,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[322,306],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[104,111,138,184,191,208,248,253,277,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,309,310,311,312,313,314,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[45,59,65,323],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[85,86,326,99,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[47,52,56,68,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[330,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[333,334,335,336,337,338,339,340,122,124,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72,73],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[342,81,95,326,96,97,99,100,343,344,101,102,345,103,125,346,347,212,215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[36,45,56,59,60,68,138,145,146,147,148,149,154,348,349,350,351,352,228,268,269,270,271,272,353,274,275,278,279,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19,32,33,70,354,71,73,136,355,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[81,321,95,100,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[19,70,354,73,136,355,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[357,72,73,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,38,39,106,359,360,361,362,363,364,154,156,157,190,191,192,365,195,366,367,368,249,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[36,38,39,106,154,156,157,190,191,192,249,369,370,371,372,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[373,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.UsageTest.argumentsOrdered":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":109,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":127,"org.easymock.tests2.DelegateToTest.testReturnException":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":181,"org.easymock.tests.MockingTest.testPartialClassMocking":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":356,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":286,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.UsageExpectAndThrowTest.object":296,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageTest.wrongArguments":107,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":141,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":215,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":204,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":343,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":305,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":254,"org.easymock.tests.UsageTest.moreThanOneArgument":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":238,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":306,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests.UsageTest.argumentsOrdered":255,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":224,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":28,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":235,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":272,"org.easymock.tests.UsageExpectAndThrowTest.longType":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":182,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":234,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.SerializationTest.testClass":125,"org.easymock.tests.ReplayStateInvalidUsageTest.times":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":328,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests2.NameTest.nameForMocksControl":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.DelegateToTest.testDelegate":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":290,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":344,"org.easymock.tests.MockingTest.testNicePartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":301,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":195,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.tests.UsageThrowableTest.throwError":307,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":230,"org.easymock.samples.ExampleTest.removeNonExistingDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":232,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":214,"org.easymock.tests2.ConstraintsToStringTest.andToString":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":71,"org.easymock.tests.UsageVerifyTest.twoThrows":191,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":339,"org.easymock.samples.PartialClassMockTest.testGetArea":342,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":231,"org.easymock.tests.MockingTest.testInterfaceMocking":201,"org.easymock.tests2.CompareToTest.testLessOrEqual":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":269,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":287,"org.easymock.tests2.UsageTest.niceToStrict":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":340,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":314,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":101,"org.easymock.tests2.UsageTest.defaultResetToNice":112,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":175,"org.easymock.tests.UsageVarargTest.differentLength":262,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":139,"org.easymock.tests.UsageCallCountTest.tooFewCalls":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":171,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":324,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":142,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":303,"org.easymock.tests.MockingTest.testStrictClassMocking":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.tests2.CompareToTest.testGreateOrEqual":329,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests2.NameTest.nameForNiceMock":130,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":313,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.AnswerTest.stubAnswer":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":87,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests2.ConstraintsToStringTest.orToString":359,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":325,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":358,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":167,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":203,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":226,"org.easymock.tests2.NameTest.nameForMock":128,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":302,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":221,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":31,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":291,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":239,"org.easymock.tests.MockingTest.testNiceClassMocking":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":220,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.NameTest.nameForStrictMock":129,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":119,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":30,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":370,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests.ErrorMessageTest.testGetters":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":96,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":256,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests.UsageTest.wrongArguments":251,"org.easymock.tests2.MockBuilderTest.testWithConstructor":334,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":74,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":354,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests2.UsageTest.openCallCountByLastCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests.DefaultClassInstantiatorTest.object":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":330,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":229,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":97,"org.easymock.tests.UsageTest.unexpectedCallWithArray":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":209,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":223,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":337,"org.easymock.tests2.ConstraintsToStringTest.anyToString":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":85,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":292,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests2.ConstraintsToStringTest.notToString":361,"org.easymock.tests.CapturesMatcherTest.test":17,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":177,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":362,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests2.UsageTest.resumeIfFailure":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":166,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":372,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":27}}]
