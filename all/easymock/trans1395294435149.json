[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[104,105,106,107,108,109,110,111,112,4,113,114,13,14,115,15,16,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,47,139,48,49,140,141,142,143,50,10,51,144,52,53,145,54,146,55,147,148,149,150,151,152,153,56,154,155,57,156,58,157,158,159,160,161,60,63,162,163,164,165,166,167,168,169,170,171,172,173,174,175,99,100,101,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[19,21,22,23,25,26,28,29,30,31,32,33,34,35,36,41,43,44,46,48,52,53,54,55,154,57,59,66,68,69,70,71,73,74,75,77,79,80,81,82,83,186,187,91,96,97,98,188,189],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:210","sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[191,192,193,194,195,196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[197,198,199,0,200],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[183,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[203,204,205,206,207,208,209,210,211,212,104,105,213,214,106,107,108,109,110,111,215,112,4,216,217,218,219,220,11,12,221,222,223,224,225,226,227,228,229,114,13,14,115,230,231,15,16,190,232,233,234,235,236,17,18,237,238,239,240,241,19,242,20,21,22,23,24,243,244,245,246,247,25,26,248,27,28,29,30,249,250,251,31,32,33,34,191,192,194,195,196,252,253,116,254,255,117,256,257,118,119,258,120,259,121,122,123,124,125,260,126,127,128,129,261,130,131,132,133,134,135,136,262,263,264,265,266,267,268,269,270,271,35,272,273,274,275,276,277,278,1,279,280,281,282,283,2,284,36,285,286,287,288,289,290,291,292,293,3,294,37,38,39,40,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,41,319,42,320,43,44,321,45,46,322,323,324,137,325,138,326,327,328,329,330,331,47,48,49,141,142,143,50,51,332,144,52,53,54,146,55,333,147,148,149,150,334,151,152,153,56,154,155,57,156,58,335,336,337,338,339,340,341,59,342,343,344,345,346,347,157,158,159,160,161,60,348,349,61,62,63,64,65,350,351,352,353,354,355,356,66,67,68,69,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,70,381,71,72,73,74,75,76,382,77,78,79,80,383,384,81,82,83,162,163,164,165,385,386,387,388,389,390,166,391,84,392,393,85,86,394,395,396,397,398,399,400,401,402,403,404,405,406,87,407,408,88,89,90,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,91,452,453,454,455,456,92,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,167,168,169,170,171,489,172,490,491,173,93,492,94,95,493,494,96,97,98,174,175,99,100,101,176,177,178,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,179,180,181,182,183,184,185,102,103,528],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[20,22,23,27,66,67,68,69,72,74,75,78,529,530,531,532],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[109,110,111,215,26,250,253,337,68,77,384,385,386,387,388,389,390,408,445,457,459,460,461,462,463,464,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[19,21,22,23,25,26,28,29,30,31,32,33,34,35,36,41,43,44,46,48,52,53,54,55,154,57,59,66,68,69,70,71,73,74,75,77,79,80,81,82,83,186,187,91,96,97,98,188,189],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[35,272,274,275,276,277,278,1,279,280,287,288,292,293,304,305,306,307,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[345,525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[137,325,138,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[200,270,35,285,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[104,105,106,107,107,108,108,111,112,114,13,14,115,15,16,120,122,130,136,137,138,47,48,49,142,143,50,51,52,53,54,146,55,147,148,149,150,151,56,154,155,57,58,158,159,160,60,63,164,166,86,169,170,171,172,174,175,99,100,101,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[203,204,205,206,207,208,209,210,212,104,105,213,214,106,109,110,111,112,11,228,229,114,13,14,115,231,15,16,17,242,21,24,244,245,246,247,25,26,248,28,29,30,251,31,32,34,120,122,130,136,268,269,272,278,1,280,281,283,36,287,288,289,290,291,299,301,304,305,306,307,309,310,311,312,313,314,317,318,41,319,42,320,43,44,321,45,46,322,323,324,137,325,138,326,329,47,142,143,50,51,52,54,146,55,333,147,148,149,150,151,56,155,335,336,338,339,340,341,158,159,350,351,352,353,354,68,69,381,71,73,76,382,79,80,81,82,83,164,166,84,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,89,90,412,421,422,424,429,434,446,447,448,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,468,469,471,476,481,170,171,172,492,493,494,96,97,98,174,175,99,100,101,176,177,178,179,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[137,325,138,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[35,272,275,277,278,279,287,292,304,306,314],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[13,14,15,16,47,48,49,50,51,52,53,54,55,56,57,58,60,63,86,174,99,100,101,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[35,272,274,275,276,277,278,1,279,280,287,288,292,293,304,305,306,307,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[157,161],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[106,107,108,109,13,14,15,16,150,154,155,157,170,171,172],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[534,535,536],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[203,204,205,206,207,208,209,210,211,212,213,214,109,110,111,215,216,217,218,219,220,11,12,221,222,223,224,225,228,229,231,232,233,234,235,236,17,18,237,238,239,240,241,19,242,20,21,22,23,24,243,244,245,246,247,25,26,248,27,28,29,30,249,250,251,31,32,33,34,252,253,256,257,264,266,267,268,269,270,271,35,272,273,274,275,276,277,278,1,279,280,281,282,283,2,284,36,285,286,287,288,289,290,291,292,293,3,294,37,38,39,40,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,41,319,42,320,43,44,321,45,46,322,323,324,325,326,327,328,329,330,331,333,335,336,337,338,339,340,341,59,342,343,344,345,346,347,61,62,64,65,350,351,352,353,354,355,356,66,67,68,69,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,70,381,71,72,73,74,75,76,382,77,78,79,80,383,384,81,82,83,385,386,387,388,389,390,391,84,392,393,85,86,394,395,396,397,398,399,400,401,402,403,404,405,406,87,407,408,88,89,90,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,91,452,453,454,455,456,92,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,93,492,94,95,493,494,96,97,98,495,496,497,498,499,500,501,502,525,526,527,102,103,528],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":272,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":386,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":99,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":294,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":466,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":529,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":409,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.CaptureTest.testPrimitive":307,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":485,"org.easymock.tests.UsageTest.moreThanOneArgument":78,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":500,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageVarargTest.varargIntAccepted":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":255,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":418,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests2.DependencyTest.testClassMocking":226,"org.easymock.tests2.AnswerTest.answer":326,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests2.CaptureTest.testAnd":304,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":349,"org.easymock.tests2.UsageTest.strictResetToDefault":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":303,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":481,"org.easymock.tests.LimitationsTest.mockFinalMethod":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":389,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":354,"org.easymock.tests2.DependencyTest.testClassMockingSupport":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":308,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.UsageThrowableTest.throwError":457,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":62,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":189,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests2.CompareToTest.testLessOrEqual":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":126,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":86,"org.easymock.tests2.ThreadingTest.testChangeDefault":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":536,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":475,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":430,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":201,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":313,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":449,"org.easymock.tests.MockClassControlTest.testEquals":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests2.CaptureTest.testCaptureAll":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":352,"org.easymock.tests.MockNameTest.defaultName":92,"org.easymock.tests2.UsageConstraintsTest.testMatches":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":456,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.samples.BasicClassMockTest.testPrintContent":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":353,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":463,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":302,"org.easymock.tests2.UsageConstraintsTest.greaterThan":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":185,"org.easymock.samples.ExampleTest.voteForRemoval":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":156,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":166,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":319,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":385,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests2.CaptureTest.testCaptureFirst":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":42,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":426,"org.easymock.tests2.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.CaptureTest.testCapture2_2446744":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":375,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":455,"org.easymock.tests.GenericTest.testBridgedEquals":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":422,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":484,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":482,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":526,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":498,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":471,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":462,"org.easymock.tests.MockingTest.testNiceClassMocking":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":13,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":282,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":274,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":337,"org.easymock.tests.MockTypeTest.fromEasyMockClass":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":297,"org.easymock.tests.UsageExpectAndReturnTest.object":429,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":45,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":407,"org.easymock.tests.MockClassControlTest.testHashCode":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":233,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":128,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":450,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":534,"org.easymock.tests.DefaultClassInstantiatorTest.object":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":345,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":84,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":232,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":472,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":436,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":525,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":100,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":388,"org.easymock.tests2.StubTest.stubWithReturnValue":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":428,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":373,"org.easymock.samples.SupportTest.voteForRemovals":214,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":478,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":533,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":379,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":327,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":476,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":288,"org.easymock.tests2.DelegateToTest.testWrongClass":301,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.samples.ConstructorCalledMockTest.testTax":107,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":477,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":118,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":488,"org.easymock.tests2.CaptureTest.testCaptureNone":312,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":192,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":188,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":454,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":131,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":494,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":528,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageConstraintsTest.any":280,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":527,"org.easymock.tests.UsageExpectAndThrowTest.longType":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":438,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":218,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":470,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CompareToTest.testCompareEqual":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":216,"org.easymock.tests2.CaptureTest.testCaptureLast":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":16,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":289,"org.easymock.tests.MockingTest.testTwoMocks":169,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":474,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":293,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":196,"org.easymock.samples.ExampleTest.removeNonExistingDocument":210,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":234,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":181,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":195,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":174,"org.easymock.tests.UsageExpectAndThrowTest.floatType":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":113,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.LimitationsTest.privateConstructor":163,"org.easymock.tests2.UsageConstraintsTest.testNotNull":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":464,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests2.UsageTest.defaultResetToNice":251,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.differentLength":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":217,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":383,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":411,"org.easymock.tests.UsageCallCountTest.tooFewCalls":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":461,"org.easymock.tests.MockingTest.testStrictClassMocking":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":445,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":331,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":300,"org.easymock.tests2.AnswerTest.stubAnswer":330,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":453,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":437,"org.easymock.tests.UsageExpectAndReturnTest.floatType":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":458,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":309,"org.easymock.tests2.SerializationTest.test":325,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":420,"org.easymock.tests2.UsageConstraintsTest.testSame":276,"org.easymock.samples.SupportTest.addDocument":213,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":431,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":423,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":480,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":344,"org.easymock.tests2.MockedExceptionTest.testRealException":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":410,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":535,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":530,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":287,"org.easymock.tests.ErrorMessageTest.testGetters":531,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":236,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":314,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":191,"org.easymock.tests2.UsageConstraintsTest.testOr":277,"org.easymock.tests.UsageRangeTest.combination":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":80,"org.easymock.tests2.MockBuilderTest.testWithConstructor":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":125,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":452,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":281,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests2.CompareToTest.testLessThan":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests2.CaptureTest.testCaptureFromStub":315,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":79,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":433,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":211,"org.easymock.tests.UsageStrictMockTest.testVerify":382,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":212,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests2.CompareToTest.testGreateThan":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":351,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":416,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":425,"org.easymock.tests.LimitationsTest.abstractClass":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":417,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":532,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":44}}]
