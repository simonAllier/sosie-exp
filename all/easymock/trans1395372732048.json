[{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,15,5,13,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.RecordState:274","failures":[44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:227","sourceCode":"net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)))","type":"CtAssignmentImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,57,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[64,147],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"shouldBeUsedInOneThread","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[148,149,150,151,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[152,153,154,155,156,157,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44,45,46,47,48,49,50,58,59,60,61,62,63,64,65,66,67,68,160,161,162,163,164,165,166,167,168,169,170,171,172,56,57,69,70,173,71,72,73,74,174,75,76,77,78,79,80,81,82,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,0,197,198,83,84,199,200,16,201,202,1,203,204,205,17,206,2,3,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,51,239,52,85,86,87,88,89,90,91,93,96,97,98,99,100,101,102,103,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,104,105,106,279,280,108,109,110,281,148,18,282,283,284,285,286,287,111,288,289,152,153,53,154,155,290,156,291,292,112,113,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,114,115,116,117,118,119,120,121,54,309,310,311,312,313,314,315,316,157,317,318,122,123,124,125,126,127,319,320,321,19,322,323,324,325,326,327,328,329,330,331,332,149,333,334,335,336,337,338,150,339,40,41,42,20,21,340,341,22,342,23,24,25,26,343,27,28,29,30,344,31,32,33,34,345,346,347,348,349,350,351,352,128,129,130,353,354,355,134,356,357,151,358,359,360,361,362,363,364,365,366,367,368,369,370,371,4,372,373,5,374,375,376,377,135,136,137,138,139,140,378,141,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,35,403,6,7,404,36,8,9,405,10,406,407,408,409,410,411,412,37,413,142,143,144,145,414,415,416,417,418,419,420,421,422,38,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,158,440,441,442,443,444,445,39,446,13,14,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,146,462,463,147,464,465],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[72,204,228],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[44,47,48,49,50,58,62,63,55,56,57,69,173,71,72,73,75,77,79,466,188,189,192,194,195,197,198,201,202,203,204,206,207,210,211,212,213,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,51,52,242,244,245,248,249,250,251,252,254,255,256,257,258,259,262,263,264,265,266,105,467,107,468,108,109,110,281,148,18,283,284,285,286,153,53,154,155,290,156,292,293,294,295,296,297,298,302,304,305,306,307,308,115,313,315,316,157,317,318,122,124,125,20,21,340,341,22,342,23,24,25,26,343,27,28,29,30,344,31,32,33,34,346,347,131,132,133,371,372,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,403,406,407,408,409,410,411,413,144,419,420,421,422,38,423,436,437,438,439,158,440,441,442,443,445,39,446,13,14,447,448,450,451,452,454,455,457,458,459,460,461],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[139,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[44,47,48,49,50,58,59,62,63,64,65,66,67,68,160,161,162,163,164,165,166,167,168,169,170,171,172,55,56,57,69,70,173,71,72,73,74,75,77,78,79,80,466,180,188,189,190,192,193,194,195,196,0,197,198,16,201,202,1,203,204,205,17,206,2,3,207,208,210,211,212,213,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,51,52,87,89,97,103,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,272,104,105,467,106,279,107,468,108,109,110,281,148,18,471,472,287,111,288,289,152,153,53,154,155,290,156,292,112,113,295,296,297,298,299,300,301,302,303,304,305,306,307,308,54,310,311,314,315,316,157,317,318,122,124,125,20,21,340,341,22,342,23,24,25,26,343,27,28,29,30,344,31,32,33,34,345,346,347,348,349,350,351,352,131,132,133,370,371,4,372,373,5,374,375,473,473,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,35,403,6,7,404,36,8,9,405,10,406,408,409,410,411,412,37,413,144,419,420,421,422,38,423,436,437,438,439,158,440,441,442,443,444,445,39,446,13,14,447,448,450,451,452,454,455,456,457,458,459,460,461],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[67,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[484,249,251,252,253,254,255,256,258,485,259,260,262],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,325,365,419,420,421,422,38,423,424,425,426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":204,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":287,"org.easymock.tests2.DelegateToTest.testReturnException":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":420,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":282,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":410,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":438,"org.easymock.samples.ExampleTest.answerVsDelegate":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":147,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.CaptureTest.testPrimitive":252,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageTest.moreThanOneArgument":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":414,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":479,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":318,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":240,"org.easymock.tests2.AnswerTest.answer":44,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":249,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":418,"org.easymock.tests2.DelegateToTest.testDelegate":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":344,"org.easymock.tests.LimitationsTest.mockFinalMethod":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":443,"org.easymock.tests2.DependencyTest.testClassMockingSupport":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":367,"org.easymock.tests2.CaptureTest.testCapture1_2446744":253,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":151,"org.easymock.tests.UsageThrowableTest.throwError":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.samples.PartialClassMockTest.testGetArea":111,"org.easymock.tests.MockingTest.testInterfaceMocking":353,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":401,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":432,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":93,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":62,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":436,"org.easymock.tests.UsageOverloadedMethodTest.overloading":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":311,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":390,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":469,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":225,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":258,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":441,"org.easymock.tests2.CaptureTest.testCaptureAll":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":356,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":461,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":442,"org.easymock.samples.BasicClassMockTest.testPrintContent":113,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":351,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":480,"org.easymock.tests2.UsageConstraintsTest.greaterThan":229,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.samples.ExampleTest.voteForRemoval":154,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":81,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":419,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":187,"org.easymock.tests2.CaptureTest.testCaptureFirst":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":386,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":460,"org.easymock.tests.GenericTest.testBridgedEquals":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":382,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":350,"org.easymock.tests.MockingTest.testNiceClassMocking":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.MockingTest.testClassMocking":129,"org.easymock.tests2.UsageConstraintsTest.testContains":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":294,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":39,"org.easymock.tests.MockTypeTest.fromEasyMockClass":462,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":52,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":370,"org.easymock.tests.UsageExpectAndReturnTest.object":389,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":475,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":455,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":430,"org.easymock.tests.UsageTest.exactCallCountByLastCall":405,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":483,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":450,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":395,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":176,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":95,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":41,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":209,"org.easymock.tests.UsageVarargTest.varargCharAccepted":454,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":377,"org.easymock.tests2.CaptureTest.testCaptureMultiple":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":40,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":428,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.CapturesMatcherTest.test":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":396,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":103,"org.easymock.tests2.UsageTest.resumeIfFailure":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":422,"org.easymock.tests2.StubTest.stubWithReturnValue":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":333,"org.easymock.samples.SupportTest.voteForRemovals":152,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":150,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":45,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":447,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":448,"org.easymock.samples.ConstructorCalledMockTest.testTax":471,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":402,"org.easymock.tests2.CaptureTest.testCaptureNone":257,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":459,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":98,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":431,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":112,"org.easymock.tests2.CaptureTest.testCapture_2617107":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests2.StubTest.stub":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":139,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":398,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":269,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":286,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":88,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":22,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":239,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":65,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.CaptureTest.testCaptureLast":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":368,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":468,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":274,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests.UsageStrictMockTest.differentMethods":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":177,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":137,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":68,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":90,"org.easymock.tests.UsageExpectAndThrowTest.floatType":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":228,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":47,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests.LimitationsTest.privateConstructor":143,"org.easymock.tests2.UsageConstraintsTest.testNotNull":236,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":352,"org.easymock.tests2.UsageTest.defaultResetToNice":206,"org.easymock.samples.ExampleTest.voteAgainstRemovals":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.differentLength":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":268,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests2.UsageConstraintsTest.equals":214,"org.easymock.tests.UsageTest.openCallCountByLastCall":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":412,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":439,"org.easymock.tests.UsageThrowableTest.throwCheckedException":349,"org.easymock.tests.MockingTest.testStrictClassMocking":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":279,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":49,"org.easymock.tests.ObjectMethodsTest.testHashCode":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":478,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.NameTest.nameForNiceMock":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":476,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":99,"org.easymock.tests2.DelegateToTest.testStubDelegate":189,"org.easymock.tests2.AnswerTest.stubAnswer":48,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":372,"org.easymock.tests.UsageVarargTest.varargLongAccepted":458,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":397,"org.easymock.tests.UsageExpectAndReturnTest.floatType":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":466,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":230,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":83,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":254,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":470,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":380,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":91,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":183,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":354,"org.easymock.tests2.NameTest.nameForMock":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":391,"org.easymock.tests2.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":409,"org.easymock.tests2.MockedExceptionTest.testRealException":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":411,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":284,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":477,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":259,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests.UsageRangeTest.combination":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":92,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":457,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":140,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":19,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":357,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":60,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":393,"org.easymock.tests2.CaptureTest.testCapture":485,"org.easymock.tests2.UsageConstraintsTest.constraints":212,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":373,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests.UsageStrictMockTest.testVerify":376,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":385,"org.easymock.tests.LimitationsTest.abstractClass":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":15}}]
