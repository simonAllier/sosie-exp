[{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[2,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,2,13,14,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,12,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,8,117,118,9,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,10,11,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,1,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[43,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[163,164,165,166,184,191,208,252,253,254,255,256,257,260,338,358,359,362,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,444,458,460,461,462,463,464,465,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[24,26,27,76,77,78,79,186,187,193,194,1,287,289,290,361,362,363,417,440,442,445,446],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[163,164,165,166,208,252,253,254,255,256,257,328,329,330,358,467],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[97],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[117,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[2,14,497,498,499,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,500,108,110,111,113,114,115,116,117,9,119,120,501,122,163,164,165,173,177,10,11,198,199,200,201,204,205,209,210,212,213,214,215,217,218,219,220,221,222,223,224,225,230,232,232,233,233,245,246,298,308,309,310,311,312,313,315,331,332,333,334,345,350,374,375,376,377,378,468,469,470,471,472,474,477,487,489,490,491,492,493,494],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":439,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":271,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":231,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":471,"org.easymock.tests.MockClassControlTest.testToString":489,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":75,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":12,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":356,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":212,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":494,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":497,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":360,"org.easymock.tests.UsageTest.moreThanOneArgument":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":437,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":366,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageVarargTest.varargIntAccepted":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests.ReplayStateInvalidUsageTest.times":324,"org.easymock.tests2.DependencyTest.testClassMocking":226,"org.easymock.tests2.AnswerTest.answer":16,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":183,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":347,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":302,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":433,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":373,"org.easymock.tests2.DependencyTest.testClassMockingSupport":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":453,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":181,"org.easymock.tests.UsageThrowableTest.throwError":458,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":318,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":438,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":70,"org.easymock.samples.PartialClassMockTest.testGetArea":230,"org.easymock.tests.MockingTest.testInterfaceMocking":473,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":419,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":427,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":67,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":408,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":133,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":382,"org.easymock.tests.MockClassControlTest.testEquals":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":435,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":182,"org.easymock.tests2.CaptureTest.testCaptureAll":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":371,"org.easymock.tests.MockNameTest.defaultName":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":367,"org.easymock.samples.ExampleTest.voteForRemovals":242,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":502,"org.easymock.tests.UsageVarargTest.allKinds":390,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":361,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":372,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":464,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":223,"org.easymock.samples.ExampleTest.voteForRemoval":239,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":315,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":42,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":224,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":501,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":298,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":404,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":136,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":279,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":389,"org.easymock.tests.GenericTest.testBridgedEquals":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":485,"org.easymock.tests.UsageExpectAndReturnTest.longType":400,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":436,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":434,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":486,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":423,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":463,"org.easymock.tests.MockingTest.testNiceClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":199,"org.easymock.tests.MockingTest.testClassMocking":469,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":85,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":260,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":73,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests.UsageExpectAndReturnTest.object":407,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":384,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":394,"org.easymock.tests.UsageTest.exactCallCountByLastCall":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":413,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":379,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.MockClassControlTest.testHashCode":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":139,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":59,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":123,"org.easymock.tests.UsageVarargTest.varargCharAccepted":383,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":307,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":304,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":60,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":499,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":138,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":491,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":277,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":430,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":17,"org.easymock.tests.UsageExpectAndThrowTest.object":428,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":456,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":457,"org.easymock.samples.ConstructorCalledMockTest.testTax":232,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":429,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests.UsageUnorderedTest.message":417,"org.easymock.tests.UsageVerifyTest.twoReturns":363,"org.easymock.tests.UsageVarargTest.varargByteAccepted":388,"org.easymock.tests2.ThreadingTest.testThreadSafe":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":63,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":483,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":395,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":359,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageExpectAndThrowTest.longType":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":416,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":31,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests2.NameTest.nameForMocksControl":79,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":51,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":444,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":422,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":472,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":214,"org.easymock.tests2.CaptureTest.testCaptureLast":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":454,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":470,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":426,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":36,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":140,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":43,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":487,"org.easymock.tests.UsageExpectAndThrowTest.floatType":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":53,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":197,"org.easymock.tests.UsageVerifyTest.twoThrows":362,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":222,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":465,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":273,"org.easymock.tests.UsageVarargTest.differentLength":385,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":30,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":218,"org.easymock.tests.UsageTest.openCallCountByLastCall":443,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":358,"org.easymock.tests.UsageCallCountTest.tooFewCalls":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":462,"org.easymock.tests.MockingTest.testStrictClassMocking":468,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":21,"org.easymock.tests.ObjectMethodsTest.testHashCode":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":45,"org.easymock.tests2.NameTest.nameForNiceMock":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":64,"org.easymock.tests2.DelegateToTest.testStubDelegate":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.stubAnswer":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":118,"org.easymock.tests.UsageVarargTest.varargLongAccepted":387,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":415,"org.easymock.tests.UsageExpectAndReturnTest.floatType":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":147,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":173,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":129,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":398,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":202,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":54,"org.easymock.tests.GenericTest.testPackageScope":375,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":146,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests2.NameTest.nameForMock":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":409,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":121,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":432,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":303,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":357,"org.easymock.tests2.NameTest.nameForStrictMock":77,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":113,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":142,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":58,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.UsageRangeTest.combination":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":210,"org.easymock.tests.UsageTest.wrongArguments":442,"org.easymock.tests2.MockBuilderTest.testWithConstructor":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":55,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":262,"org.easymock.tests.UsageVarargTest.varargShortAccepted":386,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":484,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":264,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":317,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":441,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":411,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":244,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":236,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":370,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":403,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":380}}]
