[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,1,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[264,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[266,267,268,269,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[30,37,43,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[2,4,5,7,13,219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[2,4,5,7,10,13,16,17,22,24,25,73,74,75,76,77,78,79,80,81,82,83,87,102,103,104,105,106,122,123,124,125,126,127,128,132,133,134,135,271,272,273,274,275,149,151,152,155,156,157,158,159,160,163,164,166,167,168,170,171,172,173,174,176,177,178,179,184,185,186,190,217,218,219,220,221,223,228,229],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[278],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[279,280,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,69,107,113,114,119,149,180,182,198,201,202,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,282,283,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,284,285,286,287,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,61,62,63,64,65,66,68,69,70,71,72,73,75,76,77,78,79,288,81,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,100,101,289,103,290,104,105,108,109,111,112,115,118,291,292,120,293,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,271,1,142,294,143,295,296,297,298,144,145,272,273,274,275,299,147,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,300,301,302,303,175,304,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,305,192,193,194,195,306,199,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,227,228,229,307,308,309,310,311,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,253,263],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[14,15,312,73,74,76,77,78,79,82,120,122,125,131,132,144,145,313,190,314,315,316,317,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[83,84,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[31,38],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[280],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[46,267],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[30,31,33,35,36,38,48,53,56,58,66],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":112,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.SerializationTest.testAllMockedMethod":131,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":184,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":282,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":277,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests.UsageTest.moreThanOneArgument":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":182,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests.UsageTest.argumentsOrdered":204,"org.easymock.tests.UsageVarargTest.varargIntAccepted":208,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":195,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":290,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.SerializationTest.testClass":129,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":190,"org.easymock.tests2.AnswerTest.answer":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":287,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.DelegateToTest.testDelegate":1,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CompareToTest.testCompareEqual":268,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":70,"org.easymock.tests.UsageVerifyTest.twoThrows":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests2.CompareToTest.testLessOrEqual":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":218,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.UsageTest.niceToStrict":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.UsageTest.defaultResetToNice":115,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.UsageVarargTest.differentLength":211,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":193,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.ConstraintsToStringTest.nullToString":278,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":298,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockClassControlTest.testEquals":316,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":286,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.tests2.CompareToTest.testGreateOrEqual":269,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests2.NameTest.nameForNiceMock":138,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.AnswerTest.stubAnswer":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":177,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":283,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":222,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":87,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":196,"org.easymock.tests2.NameTest.nameForMock":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageCallCountTest.tooManyCalls":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":192,"org.easymock.tests2.MockedExceptionTest.testRealException":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":264,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.NameTest.nameForStrictMock":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":102,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":210,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.UsageTest.wrongArguments":200,"org.easymock.tests.MockClassControlTest.testHashCode":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":209,"org.easymock.tests2.CompareToTest.testLessThan":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":80,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.CapturesMatcherTest.test":276,"org.easymock.tests.UsageStrictMockTest.testVerify":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CompareToTest.testGreateThan":267,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests2.UsageTest.resumeIfFailure":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":220,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95}}]
