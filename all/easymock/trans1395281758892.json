[{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[33,34,0,35],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,24,49,50,51,52,6,53,54,55,56,57,7,8,58,59,60,61,62,63,64,65,66,27,67,68,69,70,28,71,72,73,74,75,76,77,78,79,22,80,81,82,3,4,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,33,112,113,114,115,116,34,117,118,119,120,121,122,123,124,125,126,127,0,128,129,130,131,9,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,5,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,29,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,10,11,253,254,12,13,255,256,257,258,259,260,14,261,262,263,264,265,266,267,268,269,32,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,30,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,17,388,389,18,390,391,392,393,394,395,23,396,397,19,398,20,21,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,31,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[111,33,145,146,147,5,154,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[401,405],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[460,461],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[9,132,285,304,308,309,311,314,352,356,357,359,362,18,390],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[60,80,82,102,103,104,105,107,108,109,110,111,33,112,113,114,115,116,34,117,118,119,120,121,122,123,124,125,126,127,0,130,145,146,147,5,148,149,150,151,152,153,154,155,156,157,206,256,257,258,259,260,14,268,269,345,346,17,388,412,414,415,416,417,418,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[50,56,62,250,251,254,259,332,334,335,336,337,338,339,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,23,20,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,41,43,45,24,25,25,26,26,463,50,51,52,6,53,54,55,56,57,7,8,58,59,61,62,65,27,28,76,77,78,79,22,80,82,2,3,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,33,112,113,114,115,116,34,117,118,119,120,121,122,123,124,125,126,127,0,128,130,131,9,132,133,139,140,141,142,143,144,145,146,147,5,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,169,175,176,464,177,178,465,466,180,181,182,184,185,186,187,188,189,29,192,193,198,199,200,201,202,203,204,206,208,209,210,211,213,219,220,226,227,228,229,230,231,234,236,237,238,239,241,243,244,245,246,247,248,249,250,251,252,10,11,253,254,12,13,255,256,257,258,259,260,14,263,467,468,469,268,269,270,272,274,275,293,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,379,386,17,388,389,18,390,391,393,394,395,23,396,397,19,398,20,21,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,31,432,433,445,447,450,451,454,455,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[104,105,108,110,111,112,121,126,145,147,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[61,259,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[140,141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[52,130,9,132,471,472,473,474,475,476,252,14,477,478,16,274,275,388,18,390,398,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,118,202,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[80,82,124,126],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[47,48,24,25,25,26,26,463,479,65,27,28,76,79,2,4,175,176,464,177,465,466,180,480,181,182,184,185,186,187,188,189,481,29,198,199,201,202,203,204,206,208,209,210,211,231,234,263,467,468,469,270,271,272,368,371,453],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[199,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[185,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[472,482,10,483,477,17],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[52,6,7,8,130,9,132,135,136,137,138,252,11,12,13,14,17,388,18,390,398,20,21,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[36,38,39,40,41,43,44,45,46,47,48,49,54,61,4,86,92,93,94,95,124,129,131,9,132,133,146,147,149,150,151,152,157,184,231,258,14,271,333,379,380,381,382,384,385,387,389,18,390,391,434,435,436,438,439,441,442,443,444,445],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[241,427,429],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[58,294,420,421,422],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[25,26,463,487,63,64,488,65,489,66,27,67,68,490,491,69,492,493,70,494,28,71,72,73,74,75,76,495,496,497,498,2,464,466,179,499,500,501,502,503,504],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[400,401,405],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[275,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":287,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":54,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":46,"org.easymock.tests2.DelegateToTest.testReturnException":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":409,"org.easymock.tests.MockingTest.testPartialClassMocking":467,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":134,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":348,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":484,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":256,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":266,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":201,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":92,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":342,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":430,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":436,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":190,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":161,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests2.UsageTest.strictResetToDefault":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":433,"org.easymock.tests2.DelegateToTest.testDelegate":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":363,"org.easymock.tests.LimitationsTest.mockFinalMethod":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":247,"org.easymock.tests2.DependencyTest.testClassMockingSupport":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":148,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":159,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.UsageThrowableTest.throwError":332,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":496,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":427,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests2.UsageTest.niceToStrict":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":357,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":75,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":311,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":153,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":160,"org.easymock.tests2.CaptureTest.testCaptureAll":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":245,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":445,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":398,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":246,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":338,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":100,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":406,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":211,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":407,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":212,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":204,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":408,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":307,"org.easymock.tests2.CaptureTest.testCapture2_2446744":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":444,"org.easymock.tests.GenericTest.testBridgedEquals":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":384,"org.easymock.tests.UsageExpectAndReturnTest.longType":303,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":243,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":481,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":366,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":385,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":176,"org.easymock.tests.MockingTest.testNiceClassMocking":267,"org.easymock.tests.MockingTest.testClassMocking":262,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":480,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":82,"org.easymock.tests.UsageExpectAndReturnTest.object":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":91,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":439,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":449,"org.easymock.tests.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":487,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":395,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":164,"org.easymock.tests2.EasyMockSupportTest.testVerify":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":493,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":158,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":15,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":438,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":399,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":55,"org.easymock.tests.DefaultClassInstantiatorTest.object":400,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":374,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":447,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":163,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":354,"org.easymock.tests.CapturesMatcherTest.test":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":423,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":474,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests2.UsageTest.resumeIfFailure":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":411,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":309,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":482,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":242,"org.easymock.tests.UsageExpectAndThrowTest.object":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DelegateToTest.testWrongClass":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":269,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":359,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":428,"org.easymock.tests2.CaptureTest.testCaptureNone":152,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":443,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":71,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests2.StubTest.stub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndThrowTest.longType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":404,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":216,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":133,"org.easymock.tests2.NameTest.nameForMocksControl":138,"org.easymock.tests2.MockedExceptionTest.testMockedException":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":66,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":469,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":468,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.CompareToTest.testNotComparable":462,"org.easymock.tests2.CaptureTest.testCaptureLast":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":263,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":356,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.samples.ExampleTest.removeNonExistingDocument":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":165,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ConstraintsToStringTest.andToString":475,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":67,"org.easymock.tests.UsageExpectAndThrowTest.floatType":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":210,"org.easymock.tests.LimitationsTest.privateConstructor":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":339,"org.easymock.tests2.UsageTest.defaultResetToNice":57,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":315,"org.easymock.tests.UsageVarargTest.differentLength":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":215,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.UsageConstraintsTest.equals":106,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":477,"org.easymock.tests.MockingTest.testStrictClassMocking":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":465,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":346,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":178,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests.ObjectMethodsTest.testHashCode":448,"org.easymock.tests2.CompareToTest.testGreateOrEqual":35,"org.easymock.tests2.NameTest.nameForNiceMock":137,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.DelegateToTest.testStubDelegate":98,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":442,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":286,"org.easymock.tests.UsageExpectAndReturnTest.floatType":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":463,"org.easymock.tests2.ConstraintsToStringTest.orToString":471,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":120,"org.easymock.tests.UsageThrowableTest.noUpperLimit":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":103,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":149,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":401,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":301,"org.easymock.samples.SupportTest.addDocument":44,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":68,"org.easymock.tests.GenericTest.testPackageScope":270,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":171,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":265,"org.easymock.tests2.NameTest.nameForMock":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":504,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":362,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":422,"org.easymock.tests2.MockedExceptionTest.testRealException":22,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":257,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":136,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":202,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":181,"org.easymock.tests2.UsageStrictMockTest.range":9,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":492,"org.easymock.tests2.CaptureTest.testCaptureRightOne":154,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":460,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":199,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":490,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":141,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":280,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests2.CaptureTest.testCaptureFromStub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":182,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":314,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":389,"org.easymock.tests2.UsageConstraintsTest.constraints":104,"org.easymock.samples.ExampleTest.addAndChangeDocument":43,"org.easymock.tests2.ConstraintsToStringTest.notToString":473,"org.easymock.tests.UsageStrictMockTest.testVerify":392,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":49,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":244,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":416,"org.easymock.tests.LimitationsTest.abstractClass":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":417,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":486,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89}}]
