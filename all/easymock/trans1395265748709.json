[{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[17,18,19,20,21,22,23,24,25,5,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[27,27,28,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,34,35,36],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,27,27,28,28,55,56,57,58,59,22,60,23,61,34,62,63,64,26,65,36],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[38,66,67,68,69,70,71,72,73,74,75,76,77,78,39,40,79,80,41,81,82,83,84,85,42,86,87,88,89,90,91,92,7,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,13,14,118,8,119,120,121,122,9,123,124,125,126,127,128,129,130,43,44,45,46,47,131,132,133,134,135,136,15,137,138,16,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,48,49,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,10,196,197,198,199,200,50,51,52,53,54,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,55,217,218,219,220,221,222,223,11,224,225,226,227,228,229,12,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,17,264,18,265,266,267,268,269,270,271,19,56,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,57,58,20,21,59,22,60,23,24,292,25,293,294,61,295,34,62,296,63,64,5,6,35,297,298,26,65,36,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[323,324,325,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[240,241],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[202,250,253,254,256,326,257],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[3,20,292,34,36],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[327,328,329,330,331,332,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[37,334,335,302,336,337,338,339,340,341,342,343,344,345,346,347,348,303,304,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,27,27,28,28,305,364,365,366,367,368,369,370,371,372,373,374,375,376,377,235,236,237,244,332,306,307,308,378,309,310,311,312,379,313,314,315,380,381,382,383,384,385,316,386,387,388,389,390,391,392,393,394,317,395,396,397,398,399,318,400,401,402,403,404,405,406,319,407,30,408,409,320,321,410,411,322,299,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[413,299,300,412],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[81,85,87,414,120,121,123,124,140,10,196,218,226,231,232],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":284,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":345,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":171,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":283,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":265,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":190,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":163,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests2.DependencyTest.testClassMocking":366,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":167,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":186,"org.easymock.tests.LimitationsTest.mockFinalMethod":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":13,"org.easymock.tests2.CaptureTest.testCapture1_2446744":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":305,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":172,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":309,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":180,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":295,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":271,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests2.EasyMockSupportClassTest.testAll":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":82,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":151,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":365,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":96,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":262,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":410,"org.easymock.samples.ExampleTest.voteForRemoval":203,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":341,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":258,"org.easymock.tests2.CaptureTest.testCaptureFirst":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":272,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":150,"org.easymock.tests.GenericTest.testBridgedEquals":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":77,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":189,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":156,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":50,"org.easymock.tests.UsageCallCountTest.tooManyCalls":78,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":95,"org.easymock.tests.MockingTest.testNiceClassMocking":348,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":373,"org.easymock.tests.MockingTest.testClassMocking":343,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":237,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":170,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":282,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":328,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":38,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":164,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":137,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":31,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":285,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":67,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":155,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":320,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":318,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":412,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":126,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":183,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":127,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.UsageExpectAndThrowTest.object":181,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":325,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":6,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":48,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":311,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":154,"org.easymock.tests2.CaptureTest.testCaptureNone":270,"org.easymock.tests.UsageUnorderedTest.message":81,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests.UsageVarargTest.varargByteAccepted":149,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":75,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":364,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests2.UsageConstraintsTest.any":293,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":130,"org.easymock.tests.UsageExpectAndThrowTest.longType":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests2.SerializationTest.testClass":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.MockedExceptionTest.testMockedException":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":175,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":402,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":312,"org.easymock.tests.MockingTest.testNicePartialClassMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":406,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.CaptureTest.testCaptureLast":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":14,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":377,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.MockingTest.testTwoMocks":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":179,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":65,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":359,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":173,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":321,"org.easymock.tests.LimitationsTest.privateConstructor":338,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":235,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.CallbackTest.callback":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":79,"org.easymock.tests.UsageCallCountTest.tooFewCalls":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests.UsageThrowableTest.throwCheckedException":94,"org.easymock.tests.MockingTest.testStrictClassMocking":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":329,"org.easymock.samples.ExampleTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":260,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests.UsageVarargTest.varargLongAccepted":148,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":244,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":92,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":267,"org.easymock.tests2.SerializationTest.test":300,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.samples.SupportTest.addDocument":210,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":334,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":166,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":194,"org.easymock.tests2.MockedExceptionTest.testRealException":238,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":40,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":371,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.UsageStrictMockTest.range":218,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":403,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests.UsageVarargTest.varargShortAccepted":147,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":294,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":74,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":207,"org.easymock.tests.UsageStrictMockTest.testVerify":90,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.LimitationsTest.abstractClass":337,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280}}]
