[{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[184,185,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[187,111,188,112,189,190,191],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[90,192,97,159,160,162,164,165,193,176,180],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[160,164,193],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[113,114,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,187,2,3,196,4,197,198,199,5,200,6,7,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,12,224,225,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,40,246,41,42,43,44,45,46,47,48,247,248,49,50,249,51,52,53,250,251,54,55,252,253,56,254,255,256,257,258,259,260,261,262,57,263,264,265,266,58,267,59,60,268,269,61,62,63,270,271,272,273,274,275,276,277,278,64,65,66,67,68,69,70,71,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,73,74,75,76,294,295,296,297,298,299,300,301,302,303,304,77,78,79,80,81,82,83,84,85,305,86,306,87,88,89,90,91,192,92,93,307,308,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,309,310,311,110,312,111,188,112,313,113,114,195,115,116,117,118,119,120,121,122,123,124,125,126,314,127,128,129,130,131,132,133,134,315,316,317,318,319,135,320,321,322,136,137,323,138,139,324,140,325,141,142,143,326,144,327,145,146,147,328,329,148,149,330,331,150,332,151,152,333,334,335,336,337,153,154,338,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,339,179,180,181,182,189,191,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[340,341,342,343,344,345,346,183],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[347,157,174,179],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[348,113,114,195],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,1,187,2,3,196,4,197,198,199,5,200,6,7,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,9,10,349,11,350,351,12,224,13,352,353,225,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,226,39,354,355,356,357,358,227,359,228,360,361,362,363,364,365,366,367,229,230,231,232,233,234,235,236,237,368,369,370,238,239,240,241,242,243,244,245,40,246,41,42,43,44,45,46,47,48,247,248,49,50,249,51,371,372,373,374,375,376,377,378,52,53,250,251,54,55,252,253,56,254,255,256,257,258,259,260,379,261,262,380,57,263,264,265,266,58,267,59,60,268,269,381,382,383,61,62,384,63,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,270,271,272,273,274,275,276,277,278,64,65,66,67,68,69,70,71,412,279,280,281,413,414,282,283,284,285,286,287,288,289,290,291,292,293,72,73,74,75,76,415,416,417,294,295,296,418,297,298,299,300,301,302,303,304,77,78,419,420,79,421,422,423,424,80,81,82,83,84,85,305,425,86,426,427,306,87,88,89,428,429,90,91,192,92,93,307,308,94,95,96,97,98,99,100,101,102,103,104,105,430,431,432,106,433,434,107,435,436,437,438,439,440,441,442,443,108,444,445,446,447,448,109,449,450,309,310,311,110,312,111,451,452,188,112,313,113,114,195,115,116,117,118,119,120,121,122,123,124,125,126,314,453,454,455,456,457,127,458,459,460,461,462,463,128,129,130,131,464,132,133,134,465,194,315,316,317,318,466,319,135,320,467,321,322,468,136,469,470,471,137,323,138,472,139,473,474,324,140,475,325,476,477,478,479,480,481,482,141,142,143,326,144,327,145,146,147,328,329,148,149,330,331,150,332,151,152,333,334,335,336,337,483,484,153,154,338,155,485,486,487,488,489,156,490,491,492,493,494,495,157,158,159,160,496,161,162,163,164,165,166,193,167,168,169,170,171,172,173,174,175,176,177,178,339,179,180,181,182,497,189,190,191,183,498,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[500,174],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[184,185,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[39,388,392,393,402,407,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[162,193,176,180],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[348,113,114,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[0,1,187,2,3,4,198,5,6,6,7,7,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,9,10,11,12,13,352,353,225,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,226,39,354,355,356,357,358,227,229,230,231,232,233,234,235,236,237,368,369,370,238,240,241,242,243,244,245,40,246,41,42,43,44,45,46,47,48,247,248,49,50,249,51,371,374,375,376,377,378,52,53,250,251,54,55,252,253,56,254,255,256,257,258,259,260,379,261,262,380,57,263,264,266,58,267,59,60,268,383,61,62,63,404,410,272,64,65,66,67,68,69,70,71,412,279,280,281,413,414,72,73,74,75,76,415,416,417,304,77,78,79,422,423,80,81,82,83,84,85,305,86,306,87,88,89,429,90,91,192,92,93,307,308,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,309,310,311,110,312,111,451,452,188,112,313,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,458,128,129,130,131,132,133,134,466,319,135,320,467,321,322,136,469,137,323,138,139,324,140,325,141,142,143,326,144,327,145,146,147,328,329,148,149,330,150,332,151,152,333,334,335,336,337,153,154,338,155,156,490,157,158,159,160,161,162,163,164,165,166,193,167,168,169,170,171,172,173,174,175,176,177,178,339,179,180,181,182,189,191,183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,187,3,197,6,6,7,7,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,12,225,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,40,41,42,43,44,45,46,47,48,248,49,50,249,51,52,53,250,251,54,55,252,253,56,254,255,256,257,258,259,260,379,261,262,57,263,264,266,58,267,59,60,268,269,61,62,63,271,276,64,65,66,67,68,69,70,71,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,73,74,75,76,77,78,79,423,80,81,82,83,84,85,305,86,306,87,88,89,90,92,93,96,97,98,99,101,102,103,104,105,106,107,108,109,310,311,110,312,111,188,112,313,113,114,115,116,117,118,119,120,121,122,123,124,125,126,314,127,128,129,130,131,132,133,134,319,135,320,321,322,137,323,138,139,324,140,325,141,142,143,326,144,145,146,147,328,329,148,149,330,150,332,151,152,333,334,335,336,337,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[50,59,60,151,152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[184,185,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[369,370,40,42,43,44,249,416,417],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[200,203,453,454,455,456,457,458,459,460,461,462,463,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[502,503,250,266,504,505],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[200,203,453,454,455,456,457,127,458,459,460,461,462,463,485,486,487,488,489,156,490,491,492,493,494,495],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.UsageTest.argumentsOrdered":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":398,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":327,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":203,"org.easymock.tests2.DelegateToTest.testReturnException":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":255,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":240,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":194,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageTest.wrongArguments":326,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":245,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":49,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":69,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":76,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests.ReplayStateInvalidUsageTest.times":290,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":337,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":36,"org.easymock.tests2.DelegateToTest.testDelegate":321,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":237,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":422,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":335,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":284,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":375,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":450,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":384,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":285,"org.easymock.tests2.CompareToTest.testLessOrEqual":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":414,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.MockClassControlTest.testEquals":244,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":336,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":282,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests.UsageVarargTest.allKinds":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":50,"org.easymock.samples.BasicClassMockTest.testPrintContent":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":236,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":259,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":254,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":466,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":21,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":104,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":303,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":17,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":278,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":66,"org.easymock.tests.MockTypeTest.fromEasyMockClass":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":191,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":281,"org.easymock.tests.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":30,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.MockClassControlTest.testHashCode":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":441,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":334,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":497,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":359,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":411,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":185,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":241,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":257,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":472,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":23,"org.easymock.tests2.SerializationTest.testAllMockedMethod":195,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":348,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":410,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":451,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":350,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":10,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":302,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":444,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":275,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":201,"org.easymock.tests2.CaptureTest.testCapture_2617107":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":289,"org.easymock.tests2.StubTest.stub":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":288,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests.LimitationsTest.mockNativeMethod":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":33,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":434,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":423,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":383,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":181,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests2.MockBuilderTest.testCreateMockString":325,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":435,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":499,"org.easymock.tests.UsageVerifyTest.twoThrows":249,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":310,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":299,"org.easymock.tests2.CallbackTest.callback":309,"org.easymock.tests2.UsageConstraintsTest.equals":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":313,"org.easymock.tests.ObjectMethodsTest.testHashCode":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":105,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.DelegateToTest.testStubDelegate":135,"org.easymock.tests2.AnswerTest.stubAnswer":112,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":473,"org.easymock.tests.UsageVarargTest.varargLongAccepted":301,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.floatType":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":183,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":476,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":15,"org.easymock.samples.SupportTest.addDocument":199,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":436,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":475,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":37,"org.easymock.tests2.MockedExceptionTest.testRealException":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":401,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":293,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":471,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":440,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests.UsageRangeTest.combination":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":251,"org.easymock.tests2.MockBuilderTest.testWithConstructor":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":437,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":27,"org.easymock.tests.UsageVarargTest.varargShortAccepted":300,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":276,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":283,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":469,"org.easymock.tests.UsageTest.unexpectedCallWithArray":250,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":28,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":198,"org.easymock.tests.UsageStrictMockTest.testVerify":269,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":74,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":20,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":295}}]
