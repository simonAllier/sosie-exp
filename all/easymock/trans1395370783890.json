[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[27,28,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[40,41,42,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[44,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[46,47,48,49,50,51,52,53,53,54,54,55,56,57,58,59,60,61,62,63,30,64,7,8,32,65,9,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,10,107,108,109,11,12,110,111,13,112,113,114,115,116,117,118,20,119,120,121,122,123,124,44,125,126,127,128,129,28,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,14,0,149,150,15,151,1,152,153,154,155,156,157,158,159,160,161,162,163,2,164,165,166,167,168,169,170,171,172,173,174,175,3,176,177,178,179,180,181,17,18,182,183,184,185,186,187,188,189,190,191,40,42,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,45,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,19,269,270,271,4,272,273,5,274],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,47,49,50,51,55,56,57,58,59,60,61,62,63,30,64,7,8,32,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,27,88,89,90,91,92,97,99,102,106,10,107,108,109,11,12,110,111,13,112,113,115,116,117,118,20,119,120,121,122,123,124,44,125,126,127,128,129,28,130,131,132,133,134,135,136,137,138,143,145,146,147,148,14,0,149,150,15,151,1,152,153,154,155,156,157,158,161,162,163,164,165,166,167,168,169,171,174,3,176,177,178,179,180,181,17,18,40,42,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,216,238,45,245,246,249,250,251,252,253,254,260,261,262,19,269,270,271,4,272,273,5,274],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[64,115,116,128,130,131,138,159,165,166,167,168,169,181,275,245,246,249,253,254,255,256,257,258,259,276,277,278,279,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[281,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[68,71,147,284,285,286,287,288,289,290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[32,65,291,292],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[118,123,126,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[31,33,34,35,36,293,294,37,38,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.internal.RecordState:153","failures":[95,96,97,98,185,186,187,188,189,190,244,247],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[296,118,124,128,138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[297,46,47,48,49,50,298,51,52,299,300,301,302,56,57,58,60,61,62,63,303,64,304,7,8,305,32,65,9,73,74,77,78,80,83,85,27,91,99,101,102,103,105,106,10,107,108,109,11,12,111,13,112,113,114,115,20,120,122,123,136,139,142,143,146,147,148,0,149,150,15,29,151,1,153,154,163,2,164,165,166,167,168,169,174,175,3,176,177,178,179,180,306,181,307,17,18,308,185,186,187,188,189,190,41,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,45,245,246,247,248,249,250,251,252,309,310,311,312,313,314,315,316,317,318,253,254,255,256,257,258,259,4,272,273,5,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":188,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":29,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":38,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests2.SerializationTest.testAllMockedMethod":291,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":186,"org.easymock.tests.MockingTest.testPartialClassMocking":260,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.MockClassControlTest.testToString":288,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":292,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":140,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":172,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":33,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":257,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":316,"org.easymock.tests2.ThreadingTest.testThreadSafe":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":311,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":187,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests.LimitationsTest.mockNativeMethod":238,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":148,"org.easymock.tests.MockingTest.testNicePartialClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":58,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":259,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.UsageTest.niceToStrict":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":258,"org.easymock.tests2.CompareToTest.testGreateOrEqual":296,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":293,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":60,"org.easymock.tests.UsageVarargTest.allKinds":318,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":35,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.samples.ExampleTest.addDocument":298,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":6,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests.UsageVarargTest.varargLongAccepted":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":26,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":284,"org.easymock.tests2.SerializationTest.test":65,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.samples.SupportTest.addDocument":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":185,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":317,"org.easymock.tests.GenericTest.testBridgedEquals":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":191,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":24,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":145,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":34,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":170,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":25,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":141,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":21,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":182,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests2.UsageTest.resumeIfFailure":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":281}}]
