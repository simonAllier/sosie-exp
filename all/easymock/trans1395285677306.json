[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.RecordState:136","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[51,52,53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Invocation:195","failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[156],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[157,158,159,160,161,162],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,100,190,191,192,101,193,102,194,195,196,157,6,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,7,8,224,41,9,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,74,75,253,76,77,78,79,80,81,10,82,254,83,84,85,86,87,88,255,256,257,89,258,160,259,260,90,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,51,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,42,313,314,315,316,317,318,43,319,320,321,44,322,323,324,325,326,327,328,329,330,331,332,333,46,91,334,335,336,337,11,12,13,14,15,338,92,339,340,16,17,103,18,19,20,21,22,341,342,343,344,345,346,23,24,347,348,349,350,351,47,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,25,370,371,372,104,373,374,375,376,377,378,379,380,381,105,382,383,106,384,107,45,93,385,108,109,110,111,386,387,26,388,389,390,391,392,0,393,394,395,396,397,398,112,113,114,115,116,117,118,119,120,121,122,123,399,124,125,400,126,401,402,127,403,404,128,129,405,406,407,408,409,130,410,131,132,411,412,413,414,27,28,415,416,417,29,30,31,32,418,419,156,420,421,33,422,34,35,423,36,37,424,425,426,427,428,38,39,40,429,48,430,49,431,50,432,433,434,435,436,437,438,439,440,133,134,135,136,137,138,139,140,141,142,143,144,441,442,443,145,444,445,146,446,147,447,448,449,450,451,452,453,94,454,455,456,457,458,459,95,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,148,149,475,476,477,478,479,150,480,151,481,482,152,483,484,485,486,487,5,153,488,489,490,154,491,155,96,97,98,99,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[224,41,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[27,36,428,498],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[157,198,499,160,259,261,262,336,337,92,339,389,456,461,462],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[27,36,428,498],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[168,225,226,227],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[157,158,159,160,161,162],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,101,102,194,195,196,157,6,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,7,8,224,41,9,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,225,226,227,229,233,234,235,236,238,241,251,252,74,75,253,76,77,78,79,80,81,10,82,254,83,84,85,86,87,88,255,256,257,89,258,160,259,260,90,261,262,263,274,275,276,277,286,287,288,290,291,292,293,294,295,296,297,313,43,320,331,332,333,46,91,334,335,336,337,11,12,13,14,15,338,92,339,340,16,17,18,19,20,21,22,341,342,343,347,348,349,350,351,47,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,25,370,371,372,373,45,93,108,109,110,111,386,387,26,388,389,390,391,394,395,396,397,117,118,27,28,415,416,29,30,31,32,418,419,156,420,421,33,422,34,35,423,36,37,424,425,426,427,428,38,39,40,429,48,430,49,431,50,434,435,436,437,438,439,440,138,139,441,442,443,145,444,445,146,446,147,447,448,449,450,451,452,94,454,455,456,457,458,459,95,460,461,462,463,464,465,467,148,478,96,97,98,99,492,493,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[165,170,171,173,178,179,185,186,187,267,268,270,12,14,17,18,19,20,22,344,23,23,24,24,350,351,352,353,355,372,373,374,376,392,400,402,409,412,430,439,148,149,475,476,478,479,150,482,485,487,153,154,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[40,500],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[165,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,196,157,6,197,198,199,200,201,207,208,209,210,211,212,216,217,218,219,220,7,8,224,41,9,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,229,230,233,234,235,236,244,252,74,75,253,76,77,78,79,80,81,10,82,83,84,85,86,87,88,89,258,160,259,260,90,261,262,263,267,268,270,274,275,276,277,286,287,288,290,291,293,294,295,296,297,321,322,323,325,328,330,335,337,11,12,13,14,15,338,92,339,340,16,17,18,19,20,21,22,344,345,346,23,23,24,24,347,348,349,350,351,47,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,25,370,371,372,104,373,374,375,376,379,105,383,45,93,108,109,110,111,386,387,26,388,389,390,391,392,394,395,396,397,117,400,402,409,412,27,28,415,416,29,30,31,32,418,419,420,421,33,422,34,35,423,36,37,424,425,426,428,38,39,40,48,430,49,50,434,435,436,437,438,439,440,138,441,442,443,145,444,445,146,446,147,447,448,449,450,451,452,453,94,454,455,456,457,458,459,95,460,461,462,463,464,465,467,148,149,475,476,478,479,150,151,485,486,487,153,154,155,96,97,98,99,492,495,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[23,24,380,488,501,491,502,503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"failures":[423],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[27,36,425,504],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[359,361,369,415,416,30,32,418,156,424,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[228],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[227,229,231,251],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":416,"org.easymock.tests2.UsageTest.argumentsOrdered":462,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":308,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":458,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests.MockingTest.testPartialClassMocking":267,"org.easymock.tests.MockClassControlTest.testToString":245,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":54,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":419,"org.easymock.tests2.UsageTest.wrongArguments":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":193,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":250,"org.easymock.tests2.CaptureTest.testPrimitive":362,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":73,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":202,"org.easymock.tests.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":22,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests.ReplayStateInvalidUsageTest.times":327,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":503,"org.easymock.tests2.DependencyTest.testClassMocking":432,"org.easymock.tests2.AnswerTest.answer":492,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":397,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":191,"org.easymock.tests2.CaptureTest.testAnd":359,"org.easymock.tests2.UsageTest.strictResetToDefault":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":50,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":69,"org.easymock.tests.LimitationsTest.mockFinalMethod":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":220,"org.easymock.tests2.DependencyTest.testClassMockingSupport":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":221,"org.easymock.tests2.CaptureTest.testCapture1_2446744":363,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":395,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":44,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":101,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":144,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":344,"org.easymock.tests.MockingTest.testInterfaceMocking":269,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":322,"org.easymock.tests2.CompareToTest.testLessOrEqual":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests2.UsageTest.niceToStrict":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":485,"org.easymock.tests2.MockBuilderTest.testCreateMock":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":63,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":181,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":422,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":368,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":289,"org.easymock.tests2.EasyMockSupportClassTest.testAll":400,"org.easymock.tests.MockClassControlTest.testEquals":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":218,"org.easymock.tests2.CaptureTest.testCaptureAll":360,"org.easymock.tests.MockNameTest.defaultName":331,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":355,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":219,"org.easymock.samples.BasicClassMockTest.testPrintContent":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests2.UsageConstraintsTest.greaterThan":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":4,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.samples.ExampleTest.voteForRemoval":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":437,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":377,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":340,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":443,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":429,"org.easymock.tests2.CaptureTest.testCaptureFirst":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":464,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":177,"org.easymock.tests2.UsageTest.moreThanOneArgument":455,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":439,"org.easymock.tests2.CaptureTest.testCapture2_2446744":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":214,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":72,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":427,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":11,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testNiceClassMocking":273,"org.easymock.tests.MockingTest.testClassMocking":265,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":74,"org.easymock.tests.MockTypeTest.fromEasyMockClass":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":467,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.object":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":240,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":167,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":134,"org.easymock.tests.MockClassControlTest.testHashCode":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":398,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":449,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":255,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":238,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":133,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":382,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":412,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":246,"org.easymock.tests2.UsageTest.resumeIfFailure":463,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests2.SerializationTest.testAllMockedMethod":453,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":162,"org.easymock.samples.SupportTest.voteForRemovals":350,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":66,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":43,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":493,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":169,"org.easymock.tests.UsageExpectAndThrowTest.object":64,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":425,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":198,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":399,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":227,"org.easymock.tests2.CaptureTest.testCaptureNone":367,"org.easymock.tests.UsageUnorderedTest.message":337,"org.easymock.tests.UsageVerifyTest.twoReturns":339,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":130,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":241,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageConstraintsTest.any":420,"org.easymock.tests2.StubTest.stub":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageExpectAndThrowTest.longType":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":388,"org.easymock.tests2.SerializationTest.testClass":451,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":114,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests2.NameTest.nameForMocksControl":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":116,"org.easymock.tests2.MockedExceptionTest.testMockedException":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":401,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":466,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":58,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":372,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":153,"org.easymock.tests.MockingTest.testNicePartialClassMocking":268,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":112,"org.easymock.tests2.CaptureTest.testCaptureLast":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":222,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":426,"org.easymock.tests.MockingTest.testTwoMocks":266,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":62,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":461,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.samples.ExampleTest.removeNonExistingDocument":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":135,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":438,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":127,"org.easymock.tests.UsageExpectAndThrowTest.floatType":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":393,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":409,"org.easymock.samples.ExampleTest.voteAgainstRemoval":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":383,"org.easymock.tests.LimitationsTest.privateConstructor":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.UsageTest.defaultResetToNice":460,"org.easymock.samples.ExampleTest.voteAgainstRemovals":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":113,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":358,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":224,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":159,"org.easymock.tests.MockingTest.testStrictClassMocking":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":479,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":478,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":440,"org.easymock.tests2.NameTest.nameForNiceMock":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.AnswerTest.stubAnswer":496,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":392,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":468,"org.easymock.tests2.SerializationTest.test":452,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":364,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.samples.SupportTest.addDocument":349,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":477,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":403,"org.easymock.tests.GenericTest.testPackageScope":229,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":141,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":271,"org.easymock.tests2.NameTest.nameForMock":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":390,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":68,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests2.NameTest.nameForStrictMock":109,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":482,"org.easymock.tests2.UsageStrictMockTest.range":389,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":369,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":404,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":299,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":421,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":494,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":152,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.constraints":415,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":357,"org.easymock.tests.UsageStrictMockTest.testVerify":201,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":347,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":217,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":176,"org.easymock.tests.LimitationsTest.abstractClass":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":21,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":287}}]
