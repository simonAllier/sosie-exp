[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[0],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,2,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,1,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,0,250,251,252],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[253,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[24,25,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[165,166,167,3,168,169,170,171,257,172,1,181,184,185,203,204,258,205,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[259,260],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[170,203,258,210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[5,6,262,263,264,137,265,266,138,267,268,269,270,271,272,273,274,275,139,276,277,278,279,280,140,281,282,283,284,285,286,287,288,198,202,289,290,291,240,242,292],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[293,4,5,6,7,8,9,10,294,11,295,12,296,297,298,299,13,300,14,301,302,303,259,304,305,306,260,307,308,309,310,15,311,312,313,314,315,316,317,318,319,320,321,322,16,17,18,323,324,325,19,20,326,21,327,328,329,330,331,332,333,334,335,336,337,22,338,339,340,23,341,24,25,342,343,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,344,51,345,52,53,346,54,347,261,55,348,56,349,57,58,59,60,61,62,63,350,351,64,65,352,353,66,354,67,355,356,357,358,359,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,2,388,389,390,391,392,95,393,394,395,396,397,398,399,400,401,402,96,97,98,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,99,100,101,102,103,104,105,106,107,420,421,108,422,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,423,424,425,426,427,136,428,429,430,431,432,433,262,263,264,137,265,266,138,267,268,269,270,271,272,273,274,275,139,276,277,278,279,280,140,281,282,141,142,143,144,145,146,147,148,149,150,151,152,434,435,436,153,437,154,155,438,156,439,157,440,283,158,441,284,442,159,443,160,285,161,256,286,444,162,288,445,163,164,165,166,446,167,3,168,169,170,171,257,172,173,174,175,176,177,178,179,180,1,181,182,447,183,184,185,186,187,188,189,448,190,449,191,192,193,450,451,194,195,196,197,198,199,452,200,201,202,289,203,204,258,205,206,453,454,207,208,209,210,211,212,213,455,214,215,216,217,218,219,456,457,458,459,460,220,221,222,223,461,462,463,464,224,225,226,227,228,229,230,465,254,231,466,467,468,232,233,234,469,470,235,236,471,472,473,474,475,237,476,477,478,479,480,481,482,483,238,239,240,241,484,242,292,485,243,244,245,246,247,248,249,0,250,251,252,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[378,215,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,7,9,10,11,13,16,18,19,20,21,23,24,25,34,36,37,38,39,40,41,42,43,46,55,57,58,59,60,61,62,63,64,65,66,73,74,96,97,98,108,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,159,160,161,163,164,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,1,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,218,225,226,227,228,229,230,231,233,236,237,238,239,240,241,242,243,244,245,246,247,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[293,4,5,6,7,8,9,10,294,11,295,12,296,297,298,299,13,300,14,301,302,303,259,304,305,306,260,307,308,309,310,15,311,312,313,314,315,316,317,318,319,320,321,322,16,17,18,323,324,325,19,20,326,21,327,328,329,330,331,332,333,334,335,336,337,22,338,339,340,23,341,24,25,342,343,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,344,51,345,52,53,346,54,347,261,55,348,56,349,57,58,59,60,61,62,63,350,351,64,65,352,353,66,354,67,355,356,357,358,359,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,2,388,389,390,391,392,95,393,394,395,396,397,398,399,400,401,402,96,97,98,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,99,100,101,102,103,104,105,106,107,420,421,108,422,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,423,424,425,426,427,136,428,429,430,431,432,433,262,263,264,137,265,266,138,267,268,269,270,271,272,273,274,275,139,276,277,278,279,280,140,281,282,141,142,143,144,145,146,147,148,149,150,151,152,434,435,436,153,437,154,155,438,156,439,157,440,283,158,441,284,442,159,443,160,285,161,256,286,444,162,288,445,163,164,165,166,446,167,3,168,169,170,171,257,172,173,174,175,176,177,178,179,180,1,181,182,447,183,184,185,186,187,188,189,448,190,449,191,192,193,450,451,194,195,196,197,198,199,452,200,201,202,289,203,204,258,205,206,453,454,207,208,209,210,211,212,213,455,214,215,216,217,218,219,456,457,458,459,460,220,221,222,223,461,462,463,464,224,225,226,227,228,229,230,465,254,231,466,467,468,232,233,234,469,470,235,236,471,472,473,474,475,237,476,477,478,479,480,481,482,483,238,239,240,241,484,242,292,485,243,244,245,246,247,248,249,0,250,251,252,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[293,4,5,5,6,6,7,8,9,10,294,11,295,12,296,297,298,299,13,300,14,301,303,259,304,305,306,260,308,309,310,15,311,312,313,314,315,316,317,318,319,320,321,322,16,17,18,323,324,325,19,20,326,21,327,328,329,330,333,334,335,336,337,22,338,339,340,23,341,24,25,342,343,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,345,52,53,346,54,347,261,55,348,56,349,57,58,59,60,61,62,63,350,351,64,65,352,353,66,354,67,355,356,357,358,359,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,2,388,389,390,391,392,95,393,394,395,396,397,398,399,400,401,402,96,97,98,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,99,100,101,102,103,104,105,106,107,420,421,108,422,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,423,424,425,426,427,136,428,429,430,431,432,433,262,263,264,137,265,266,138,267,268,269,270,271,272,273,274,275,139,276,277,278,279,280,140,281,282,141,142,143,144,145,146,147,148,149,150,151,152,434,435,436,153,437,154,155,438,156,439,157,440,158,441,442,159,443,160,161,286,444,162,445,163,164,165,166,446,167,3,168,169,170,171,257,172,173,174,175,176,177,178,179,180,1,181,182,447,183,184,185,186,187,188,189,448,190,449,191,192,193,450,451,194,195,196,197,198,199,200,201,202,203,204,258,205,206,453,454,207,208,209,210,211,212,213,455,214,215,216,217,218,219,457,458,459,460,220,221,222,223,461,462,463,464,224,225,226,227,228,229,230,465,231,466,467,468,232,233,234,469,470,235,236,471,472,473,474,475,237,476,477,478,479,480,481,238,239,240,241,484,242,292,243,244,245,246,247,248,249,0,250,251,252,486,490,491,492],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[261,349],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[493,494,495,496,497,285,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[165,166,169,170,257,1,203,258,210],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[317,320,143,150],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[261,55,348,56,349],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[499,17,18,340,24,347,350,351,352,353,109,154,448,450,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[4,296,297,303,259,304,305,306,260,308,323,324,325,19,20,21,329,330,335,50,261,55,348,56,349,394,395,396,397,398,399,400,401,420,421,108,422,262,263,137,266,138,267,268,269,271,272,273,274,139,276,277,278,279,280,140,440,158,441,442,159,443,160,161,444,162,445,196,197,199,201,220,221,222,225,226,228,229,230,465,231,467,468,232,233,234,469,470,484,486,490],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests2.UsageTest.argumentsOrdered":451,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":382,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":449,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.DelegateToTest.testReturnException":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":103,"org.easymock.tests.MockingTest.testPartialClassMocking":19,"org.easymock.tests.MockClassControlTest.testToString":396,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":75,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":42,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":335,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":205,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":94,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":68,"org.easymock.tests.UsageTest.argumentsOrdered":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":464,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":332,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":468,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":72,"org.easymock.tests2.DelegateToTest.testDelegate":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":90,"org.easymock.tests.LimitationsTest.mockFinalMethod":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":407,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":206,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":462,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":34,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":334,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":500,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":48,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":271,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":322,"org.easymock.tests2.ThreadingTest.testChangeDefault":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.MockBuilderTest.testCreateMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":430,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":84,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":209,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":363,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.MockNameTest.defaultName":402,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":32,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":371,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":406,"org.easymock.samples.BasicClassMockTest.testPrintContent":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":40,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":107,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":251,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":234,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":469,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":465,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":50,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":102,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":119,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":389,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":162,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":370,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":403,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":93,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":447,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":324,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":222,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":333,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":157,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.object":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":69,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":128,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":52,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":461,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":455,"org.easymock.tests.UsageVarargTest.varargCharAccepted":364,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":302,"org.easymock.tests2.CaptureTest.testCaptureMultiple":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":99,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":105,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":2,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":87,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":95,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":215,"org.easymock.tests.UsageExpectAndThrowTest.object":85,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":491,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":49,"org.easymock.tests2.CaptureTest.testCaptureNone":208,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":369,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":296,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":104,"org.easymock.tests.UsageExpectAndThrowTest.longType":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests2.SerializationTest.testClass":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":438,"org.easymock.tests2.NameTest.nameForMocksControl":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.MockedExceptionTest.testMockedException":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":266,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":439,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":79,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":20,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests2.CaptureTest.testCaptureLast":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":83,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":450,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":304,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":445,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":485,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":139,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":233,"org.easymock.tests.LimitationsTest.privateConstructor":421,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":291,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":220,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.UsageVarargTest.differentLength":366,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.UsageConstraintsTest.equals":446,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":466,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":38,"org.easymock.tests.MockingTest.testStrictClassMocking":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":428,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests.ObjectMethodsTest.testHashCode":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":218,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":256,"org.easymock.tests.UsageVarargTest.varargLongAccepted":368,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.floatType":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests.UsageThrowableTest.noUpperLimit":35,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":164,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":453,"org.easymock.tests2.SerializationTest.test":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":113,"org.easymock.samples.SupportTest.addDocument":299,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":452,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":268,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":327,"org.easymock.tests2.NameTest.nameForMock":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":467,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":89,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":135,"org.easymock.tests2.MockedExceptionTest.testRealException":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":43,"org.easymock.tests2.NameTest.nameForStrictMock":458,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":229,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":158,"org.easymock.tests2.UsageStrictMockTest.range":154,"org.easymock.tests2.UsageConstraintsTest.lessThan":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":272,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.UsageTest.wrongArguments":351,"org.easymock.tests2.MockBuilderTest.testWithConstructor":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":373,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":260,"org.easymock.tests.UsageVarargTest.varargShortAccepted":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":375,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":441,"org.easymock.tests.UsageTest.unexpectedCallWithArray":350,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.constraints":165,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":404,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.LimitationsTest.abstractClass":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":118,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":361}}]
