[{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,0,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,3,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[217,218,78,79,219,220,221,222,223,224,108,225,226,117,227,228,229,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[160,162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[61,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[233,234,235,60,218,79,225,182,236,237,190,191,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[138,238,139,239,240,154,163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[241,242,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[90,95,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[244,245,1,246,247,4,205,209,248,249,250,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[92,93,94,252,253,254,175,255,256,178,179,180,257,181,194,201,258,259,204,205,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[233,235,63,78,182,237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[65,66,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[260,261,155,262,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.UsageTest.argumentsOrdered":189,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":168,"org.easymock.tests2.DelegateToTest.testReturnException":169,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.MockClassControlTest.testToString":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests.UsageExpectAndThrowTest.object":103,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":112,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":203,"org.easymock.tests2.UsageConstraintsTest.testNull":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":178,"org.easymock.tests2.CaptureTest.testPrimitive":157,"org.easymock.tests.UsageTest.moreThanOneArgument":217,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":111,"org.easymock.tests2.CaptureTest.testCaptureNone":161,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":87,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":82,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":37,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":98,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":48,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":47,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":34,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":174,"org.easymock.tests2.CaptureTest.testAnd":154,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":179,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CaptureTest.testCaptureLast":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":31,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":230,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":172,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":43,"org.easymock.samples.ExampleTest.removeNonExistingDocument":26,"org.easymock.tests.UsageStrictMockTest.differentMethods":226,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":45,"org.easymock.tests2.MockBuilderTest.testCreateMockString":181,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":90,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":202,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":250,"org.easymock.tests2.UsageConstraintsTest.testNotNull":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":176,"org.easymock.tests2.MockBuilderTest.testCreateMock":180,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":77,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":110,"org.easymock.tests.UsageOverloadedMethodTest.overloading":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":54,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":113,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.MockClassControlTest.testEquals":96,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":33,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":29,"org.easymock.tests2.CaptureTest.testCaptureAll":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":41,"org.easymock.tests.ObjectMethodsTest.testHashCode":120,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":30,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":258,"org.easymock.tests.UsageVarargTest.varargLongAccepted":86,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":158,"org.easymock.tests2.SerializationTest.test":167,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests2.CaptureTest.testCaptureFirst":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":46,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.GenericTest.testPackageScope":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":263,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":257,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":39,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":27,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":12,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":247,"org.easymock.tests2.UsageStrictMockTest.differentMethods":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":224,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":204,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests.UsageExpectAndReturnTest.object":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":121,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":80,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":106,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests.MockClassControlTest.testHashCode":95,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":75,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests.UsageVarargTest.varargCharAccepted":83,"org.easymock.tests2.CaptureTest.testCaptureMultiple":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":42,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":256,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":36,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":246,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests.CapturesMatcherTest.test":260,"org.easymock.tests.UsageStrictMockTest.testVerify":118,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":93,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":28,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
