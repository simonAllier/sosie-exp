[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,9,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,33,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[56,57,4,242,243,244,245,246,247,248,249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[250,123,146,150,151,153,156,180,184,185,187,190,251,252,239,253,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:99","failures":[256,34,35,43,45,257,258,48,49,50,259,260,52,53,261,262,263,264,265,266,267,268,269,270,271,272,273,274,55,56,275,276,3,57,58,277,278,279,280,64,281,66,282,283,284,68,69,71,285,74,75,76,77,286,78,79,8,80,81,82,83,84,287,85,10,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,33,105,106,107,108,109,110,113,288,116,118,119,289,290,120,122,250,123,291,125,127,128,130,292,132,293,133,134,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,294,163,295,296,297,170,171,172,173,174,175,298,197,299,300,301,302,303,198,199,216,304,219,221,227,233,234,235,236,238,252,239,11,12,13],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[305,306,102,307,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[309,310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[311,312,313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,4,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[314,315,316,317,318,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[68,70,77,88,89,93,94,321,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[102],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[283,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[256,323,49,324,325,326,265,268,270,55,56,3,57,59,60,61,62,65,327,282,283,284,328,8,9,10,329,288,330,122,250,123,322,331,332,333,334,335,163,336,337,338,339,340,341,311,312,342,343,344,345,346,347,219,220,221,348,238,252,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[349,14,15,350,16,256,323,17,18,19,20,21,34,35,36,37,38,39,40,41,351,352,42,43,44,353,354,45,257,46,355,47,258,48,49,324,50,51,259,260,52,325,326,53,261,356,357,358,359,360,361,362,262,263,264,265,266,267,268,269,270,271,272,273,363,54,274,55,56,275,364,276,3,57,4,58,242,365,366,367,368,277,369,370,278,371,372,5,373,374,6,7,375,376,279,377,378,379,380,381,280,382,383,384,59,60,61,62,63,64,65,243,281,327,244,385,66,67,282,245,283,386,387,388,284,247,328,389,68,69,70,71,285,72,73,74,75,76,77,390,286,78,79,8,80,81,82,83,391,392,84,393,394,9,287,85,10,395,329,86,87,88,89,396,90,91,92,93,94,95,321,96,97,98,99,100,101,102,103,104,33,105,106,397,107,108,109,110,111,112,113,114,398,22,23,399,24,288,330,25,26,27,28,29,309,115,116,400,401,117,118,119,289,290,120,402,121,122,403,250,123,124,404,291,405,125,126,127,128,129,130,406,131,407,408,409,292,410,411,412,413,414,132,415,293,133,134,135,136,137,138,416,139,140,417,418,141,322,419,420,331,332,333,334,335,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,294,163,336,337,295,296,338,339,297,421,422,423,164,165,166,167,168,169,424,425,426,170,171,172,173,174,340,427,428,429,430,431,432,433,434,435,341,436,437,438,439,440,441,442,443,444,445,446,447,448,449,175,450,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,311,312,451,298,196,197,299,300,301,302,303,198,199,452,453,454,455,456,457,458,459,251,460,310,461,462,463,464,465,313,466,467,468,469,470,471,472,473,474,475,476,342,477,478,343,344,200,201,202,203,204,205,206,207,208,479,209,210,480,211,212,213,214,215,481,216,217,304,482,483,218,345,346,347,484,485,486,219,220,221,222,223,224,225,226,487,488,489,490,491,227,492,493,494,495,496,228,229,230,231,232,233,234,235,236,497,237,348,238,498,252,239,240,241,499,500,501,11,12,502,13,503,504,505,253,506,507,254,255],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[34,58,242,278,279,66,386,387,388,328,393,85,329,408,409,292,481,304],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[508,340],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.UsageTest.argumentsOrdered":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":405,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageTest.wrongArguments":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":137,"org.easymock.samples.ExampleTest.answerVsDelegate":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":504,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":271,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageTest.argumentsOrdered":339,"org.easymock.tests.UsageVarargTest.varargIntAccepted":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":41,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":266,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":232,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":226,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":292,"org.easymock.tests.MockingTest.testInterfaceMocking":502,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":32,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":135,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests.MockClassControlTest.testEquals":485,"org.easymock.tests2.EasyMockSupportClassTest.testAll":277,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":230,"org.easymock.tests.MockNameTest.defaultName":341,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":225,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":215,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":219,"org.easymock.samples.BasicClassMockTest.testPrintContent":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":231,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":302,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":402,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":435,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":395,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":391,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":264,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":265,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":286,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":284,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":214,"org.easymock.tests.GenericTest.testBridgedEquals":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":425,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":426,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":301,"org.easymock.tests.MockingTest.testNiceClassMocking":505,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testClassMocking":500,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":165,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":210,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":506,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":489,"org.easymock.tests.MockClassControlTest.testHashCode":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":22,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":7,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":494,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":389,"org.easymock.tests.UsageVarargTest.varargCharAccepted":209,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":427,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":259,"org.easymock.tests.DefaultClassInstantiatorTest.object":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":30,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":493,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":398,"org.easymock.tests2.ConstraintsToStringTest.anyToString":508,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":287,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":280,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests2.UsageTest.resumeIfFailure":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.samples.SupportTest.voteForRemovals":291,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":351,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":400,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":199,"org.easymock.samples.ConstructorCalledMockTest.testTax":408,"org.easymock.tests.UsageStrictMockTest.range":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":361,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":446,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":315,"org.easymock.tests.UsageUnorderedTest.message":340,"org.easymock.tests.UsageVerifyTest.twoReturns":221,"org.easymock.tests.UsageVarargTest.varargByteAccepted":213,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":169,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":410,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":343,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":418,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":442,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":403,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":15,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests2.NameTest.nameForMocksControl":62,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":283,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":501,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":319,"org.easymock.samples.ExampleTest.removeNonExistingDocument":406,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":23,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":328,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":483,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":42,"org.easymock.tests.UsageVerifyTest.twoThrows":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":365,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":279,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":249,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":303,"org.easymock.tests2.UsageTest.defaultResetToNice":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests.UsageVarargTest.differentLength":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":14,"org.easymock.tests2.CallbackTest.callback":54,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":417,"org.easymock.tests.UsageCallCountTest.tooFewCalls":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":138,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":317,"org.easymock.tests.UsageThrowableTest.throwCheckedException":300,"org.easymock.tests.MockingTest.testStrictClassMocking":499,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":307,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":44,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":61,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":386,"org.easymock.tests.UsageVarargTest.varargLongAccepted":212,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":409,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":356,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.samples.SupportTest.addDocument":404,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":364,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":503,"org.easymock.tests2.NameTest.nameForMock":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests2.NameTest.nameForStrictMock":60,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":281,"org.easymock.tests2.UsageStrictMockTest.range":250,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":6,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":314,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.UsageTest.wrongArguments":337,"org.easymock.tests2.MockBuilderTest.testWithConstructor":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":5,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageVarargTest.varargShortAccepted":211,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":424,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.CaptureTest.testCaptureFromStub":390,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":437,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":168,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":498,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests2.ConstraintsToStringTest.notToString":2,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":407,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":229,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.LimitationsTest.abstractClass":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":268}}]
