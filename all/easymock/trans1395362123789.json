[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[89,90,91],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[92,93,94,95,96,97,5,6,7,0,1,98,99,100,101,8,102,9,10,11,12,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,13,14,15,16,17,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,18,162,163,164,165,166,167,168,169,170,171,172,173,19,20,21,22,23,24,25,26,174,175,27,28,29,30,31,32,33,34,35,36,37,38,39,176,176,177,177,40,41,178,42,43,44,179,45,46,47,48,49,180,181,182,183,184,185,186,187,188,189,190,50,51,52,191,192,53,54,55,56,193,194,195,196,197,198,57,199,200,201,202,203,204,205,206,58,207,208,209,210,211,212,213,59,60,61,62,214,89,90,63,64,65,66,67,68,215,216,69,70,217,71,72,73,218,74,75,76,77,78,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,79,80,251,252,253,254,255,256,257,258,259,260,81,82,83,261],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[262,263,264,85,86,265,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"parameterType","throwableClass":"parameterType"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[267,268,269,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[271],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,272],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[92,95,96,97,273,274,5,275,6,7,276,0,1,2,98,99,100,101,8,102,9,10,11,12,103,104,105,277,278,279,280,106,107,108,109,110,111,112,113,114,115,281,116,117,118,119,120,121,122,123,124,125,126,127,282,128,129,130,131,13,14,15,16,17,132,133,283,134,135,284,285,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,286,158,161,18,162,164,165,166,167,287,168,288,169,170,171,289,290,172,173,19,20,21,22,23,24,25,26,174,175,27,28,29,30,31,32,33,34,35,36,37,38,39,291,292,40,293,41,178,42,43,294,44,179,295,296,45,46,47,48,49,184,186,187,188,189,297,298,299,50,300,51,52,301,302,191,53,54,55,56,57,199,200,201,202,58,207,208,209,210,211,212,213,89,303,304,305,306,307,308,309,310,311,312,313,314,315,63,64,65,66,67,68,215,216,69,70,217,71,72,73,218,74,75,76,77,78,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,316,242,243,317,318,244,246,247,79,80,251,252,253,254,255,256,257,258,259,260,81,82,83,319,261,320,321,322,323,324],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[28,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[172,174,325,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[0,84,262,263,264,85,86,326,265,266],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[92,95,96,97,273,274,5,275,6,7,276,0,1,2,99,100,101,8,102,103,104,105,277,278,279,280,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,327,14,328,17,329,330,132,133,283,134,135,284,285,136,137,138,139,140,141,142,156,157,158,159,161,18,162,164,331,332,333,334,165,166,167,287,168,288,169,170,171,289,290,172,173,19,21,22,25,26,174,175,27,28,29,30,31,32,33,335,35,37,41,178,42,43,294,44,179,45,46,47,48,49,180,181,182,183,184,185,187,188,297,298,299,50,300,51,52,301,302,336,337,338,339,191,53,54,55,56,340,57,202,58,207,208,209,210,211,212,213,59,60,61,62,214,341,342,343,344,345,89,303,304,305,306,307,308,310,311,312,313,314,63,64,65,66,67,68,215,216,69,70,217,71,72,73,218,74,75,76,77,78,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,346,316,242,243,317,318,244,250,79,80,251,252,253,254,255,256,257,258,259,260,81,82,83,319,347,261,320,321,322,348],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[45,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[156,157,158,159,175,180,181,182,183,184,185,350,196,197,198,208,260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[5,6,7,167,287,289,290,351,352,353,354,355,356,357,358,359,360,361,299,50,51,52,362,363,202,364,365,366,367,368,369,370,271,211,212,213,219,241,346,316,317,318,371,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[84,262,263,264,85,86,326,19],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[8,9,372,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[352,359,299,365,367,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[375,376,377,325,378],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,14,379,380,381,329,19,266,382,35,383,384,90],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":109,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.tests2.StubTest.stubWithReturnValue":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":128,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":189,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":88,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":359,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":4,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":232,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":190,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":374,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":38,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":262,"org.easymock.tests2.DelegateToTest.testWrongClass":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":115,"org.easymock.tests2.UsageTest.wrongArguments":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":338,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":20,"org.easymock.tests2.UsageConstraintsTest.testNull":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":337,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":29,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":206,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":245,"org.easymock.tests.UsageVarargTest.varargIntAccepted":306,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":322,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":328,"org.easymock.tests2.UsageConstraintsTest.any":116,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":182,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":334,"org.easymock.tests2.CaptureTest.testAnd":132,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":335,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":249,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":84,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":371,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.ConstraintsToStringTest.andToString":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":101,"org.easymock.tests2.MockBuilderTest.testCreateMockString":329,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":95,"org.easymock.tests.UsageVerifyTest.twoThrows":212,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":11,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests2.UsageConstraintsTest.testNotNull":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":381,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":368,"org.easymock.tests.UsageTest.openCallCountByLastCall":242,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":119,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":339,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":367,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":333,"org.easymock.tests2.CaptureTest.testCaptureAll":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":25,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.testMatches":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":24,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.samples.ExampleTest.voteForRemovals":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":85,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":102,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.tests2.DependencyTest.testInterfaceMocking":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.samples.BasicClassMockTest.testPrintContent":296,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testStubDelegate":18,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":326,"org.easymock.tests2.UsageConstraintsTest.greaterThan":123,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":54,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":351,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":191,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":284,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":112,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":372,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":8,"org.easymock.tests2.CaptureTest.testCapture2_2446744":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":72,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":56,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":69,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":369,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.UsageConstraintsTest.testContains":118,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":110,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":104,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":269,"org.easymock.tests.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":370,"org.easymock.tests2.UsageConstraintsTest.testOr":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":73,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":331,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":117,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests2.CaptureTest.testCaptureMultiple":349,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests2.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":140,"org.easymock.tests.UsageTest.unexpectedCallWithArray":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":315,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":226,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests2.ConstraintsToStringTest.notToString":353,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":356,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":285,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
