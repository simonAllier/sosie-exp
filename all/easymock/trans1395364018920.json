[{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[383,384,386,387,388,389,390,391,392,393,402,403,407,408,443,444,445,446,453,454],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[1,2,353,366,419],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[390,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[479,480,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[402],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[482,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1952","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[484,324,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[18,19,148,149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[138,145,228,232,373,379,412,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[88,100,102,103,106,137,138,139,140,141,191,192,267,301,381,382,386,387,388,389,395,397,398,400,401,407,408,409],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[37,42,101,104,105,126,131,132,133,134,135,136,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,243,247,248,267,286,293,475,476,477,478],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[307,353,356,361,485,366,371,375,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,489,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,490,491,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,492,363,364,365,366,367,368,369,370,371,372,493,373,374,375,486,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,494,495,496,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[160,161,162,163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[482,497,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[105,217,224,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[384,389],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[333,354,365,422,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[31,103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:210","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[306,307,324,361,363,500,501,502,503],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[400,504],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":384,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":291,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":132,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":196,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":121,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests2.UsageConstraintsTest.testNull":387,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":413,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests2.CaptureTest.testPrimitive":446,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":256,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":249,"org.easymock.tests.UsageVarargTest.varargIntAccepted":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":462,"org.easymock.tests.ReplayStateInvalidUsageTest.times":115,"org.easymock.tests2.DependencyTest.testClassMocking":281,"org.easymock.tests2.AnswerTest.answer":314,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":491,"org.easymock.tests2.CaptureTest.testAnd":443,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":421,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests2.DelegateToTest.testDelegate":474,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":447,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":109,"org.easymock.tests.UsageThrowableTest.throwError":241,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":51,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":110,"org.easymock.tests.MockingTest.testInterfaceMocking":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":240,"org.easymock.tests2.UsageTest.niceToStrict":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":358,"org.easymock.tests2.MockBuilderTest.testCreateMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":119,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":397,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":126,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":76,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":396,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":452,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":23,"org.easymock.tests.MockClassControlTest.testEquals":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.MockNameTest.defaultName":32,"org.easymock.tests2.UsageConstraintsTest.testMatches":398,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":247,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":400,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":424,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":425,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":416,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":131,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":469,"org.easymock.tests2.CaptureTest.testCaptureFirst":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":455,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":365,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":30,"org.easymock.tests.GenericTest.testBridgedEquals":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":157,"org.easymock.tests.UsageExpectAndReturnTest.longType":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":405,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":254,"org.easymock.tests.UsageCallCountTest.tooManyCalls":158,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests.MockingTest.testNiceClassMocking":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":370,"org.easymock.tests.MockingTest.testClassMocking":56,"org.easymock.tests2.UsageConstraintsTest.testContains":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":477,"org.easymock.tests2.UsageConstraintsTest.testFind":386,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests.MockTypeTest.fromEasyMockClass":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":265,"org.easymock.tests.UsageExpectAndReturnTest.object":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":25,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":238,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":307,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":24,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":226,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":225,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":479,"org.easymock.tests.DefaultClassInstantiatorTest.object":227,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":17,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":422,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":82,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":147,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":349,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":134,"org.easymock.tests2.StubTest.stubWithReturnValue":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":74,"org.easymock.tests2.SerializationTest.testAllMockedMethod":326,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":218,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":224,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":315,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":403,"org.easymock.tests2.DelegateToTest.testWrongClass":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":441,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":360,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":117,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":120,"org.easymock.tests2.CaptureTest.testCaptureNone":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":96,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":193,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":29,"org.easymock.tests2.ThreadingTest.testThreadSafe":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":344,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":155,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":222,"org.easymock.tests2.UsageConstraintsTest.any":393,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":114,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":113,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":432,"org.easymock.tests2.SerializationTest.testClass":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":459,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":410,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":362,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":457,"org.easymock.tests2.CaptureTest.testCaptureLast":450,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":375,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":404,"org.easymock.tests.MockingTest.testTwoMocks":57,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":408,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":499,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":111,"org.easymock.tests.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":483,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":229,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":378,"org.easymock.tests2.MockBuilderTest.testCreateMockString":367,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":194,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":317,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":308,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":343,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":423,"org.easymock.tests.LimitationsTest.privateConstructor":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":488,"org.easymock.tests2.UsageConstraintsTest.testNotNull":407,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":475,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":248,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":458,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":419,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":122,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":498,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests.MockingTest.testStrictClassMocking":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":463,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":373,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.ObjectMethodsTest.testHashCode":237,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":380,"org.easymock.tests2.DependencyTest.testInterfaceMocking":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":345,"org.easymock.tests2.DelegateToTest.testStubDelegate":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":318,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":306,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":401,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":382,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":439,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":448,"org.easymock.tests2.SerializationTest.test":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":228,"org.easymock.tests2.UsageConstraintsTest.testSame":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":66,"org.easymock.samples.SupportTest.addDocument":3,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":493,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":62,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":77,"org.easymock.tests2.UsageStrictMockTest.differentMethods":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":478,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":440,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":402,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":354,"org.easymock.tests2.UsageStrictMockTest.range":303,"org.easymock.tests2.UsageConstraintsTest.lessThan":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":482,"org.easymock.tests2.UsageConstraintsTest.testOr":389,"org.easymock.tests.UsageRangeTest.combination":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":411,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":232,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":156,"org.easymock.tests2.UsageConstraintsTest.cmpTo":394,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.CaptureTest.testCaptureFromStub":454,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":108,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":154,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":89,"org.easymock.tests2.UsageConstraintsTest.constraints":383,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests.UsageStrictMockTest.testVerify":93,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests2.CompareToTest.testGreateThan":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests.LimitationsTest.abstractClass":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
