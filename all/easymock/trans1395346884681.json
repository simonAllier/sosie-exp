[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,54,55,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,0,1,2,3,93,94,95,96,97,98,99,100,57,58,101,102,103,104,4,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,7,9,11,12,14,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,17,140,18,19,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,20,21,22,23,156,24,25,157,158,29,30,159,31,32,33,35,37,38,39,160,161,162,163,41,164,165,166,167,168,169,170,171,172,173,42,174,175,59,176,177,60,61,178,179,180,181,182,44,45,46,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,49,50,278,279,280,281,282,283,284,285,286,287,52,53,288,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[289,290,291,54,55],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,0,1,2,3,93,94,95,96,98,99,58,101,102,103,104,292,293,4,294,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,5,9,10,11,12,124,125,127,128,131,134,136,137,139,17,140,18,19,141,142,143,144,146,147,148,149,150,151,153,154,155,20,21,22,23,156,24,25,295,296,297,298,157,158,29,159,31,32,33,35,36,38,160,161,162,163,40,41,164,167,168,172,299,300,301,302,173,303,42,175,176,61,178,179,180,181,182,44,45,46,183,184,187,188,189,190,191,304,305,306,307,308,194,309,310,311,312,313,314,315,316,317,201,318,202,203,204,205,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,319,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,49,50,278,279,280,281,282,283,284,285,286,287,52,53,288,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[57,58,16,126,132,133,320,59,60,61,181,182,321,322,62,195,198,199,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[323,324,325,326,59,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[65,71,76,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[141,142,143,144,145,146,147,148,150,151,328,152,153,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[0,1,2,3,93,292,293,4,5,7,9,10,11,12,13,14,16,17,18,19,141,20,21,22,23,24,25,295,29,30,31,32,33,34,35,36,37,38,160,330,331,332,333,334,335,336,41,337,42,43,44,45,46,208,338,225,49,50,51,278,52,53,54,54,55,55,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[339,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,0,1,2,3,93,341,342,94,95,96,97,99,100,57,58,101,102,103,104,292,293,4,294,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,5,7,9,10,11,12,13,14,16,123,124,125,126,127,128,129,130,131,132,133,134,135,343,136,137,138,344,139,17,140,19,141,142,143,144,145,146,147,148,149,150,151,328,152,153,154,155,20,21,22,23,156,24,25,295,296,297,298,157,158,29,30,159,31,32,33,34,35,36,37,38,39,41,164,165,166,167,168,169,345,170,171,346,172,320,299,300,301,302,173,303,42,174,59,176,177,60,61,178,180,181,182,347,348,349,350,351,352,43,44,45,46,353,183,184,185,186,187,188,189,190,191,192,354,304,305,306,307,308,193,194,62,195,196,197,198,199,200,309,310,311,312,313,314,315,316,317,202,355,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,356,357,358,359,360,248,249,361,327,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,49,51,279,280,281,282,284,285,287,54,54,55,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[362,142,328,152,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[323,324,325,326,59,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[136,138,139,170,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[323,324,325,326,59,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":128,"org.easymock.tests2.StubTest.stubWithReturnValue":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":87,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":192,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":324,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests.MockClassControlTest.testToString":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":1,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":341,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":246,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests2.UsageTest.wrongArguments":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":280,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":20,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":321,"org.easymock.tests.UsageVerifyTest.twoReturns":182,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageTest.argumentsOrdered":199,"org.easymock.tests.UsageVarargTest.varargIntAccepted":210,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":205,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":219,"org.easymock.tests2.CaptureTest.testCapture_2617107":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests2.UsageConstraintsTest.any":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":10,"org.easymock.tests2.StubTest.stub":102,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests.LimitationsTest.mockNativeMethod":41,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":28,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":85,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":247,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":89,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":120,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":16,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.UsageVerifyTest.twoThrows":181,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":2,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":88,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":277,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":291,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":203,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":274,"org.easymock.tests.MockClassControlTest.testEquals":335,"org.easymock.tests2.EasyMockSupportClassTest.testAll":0,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":297,"org.easymock.tests2.CaptureTest.testCaptureAll":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.testMatches":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.NameTest.nameForNiceMock":162,"org.easymock.tests.UsageVarargTest.allKinds":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":276,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageThrowableTest.noUpperLimit":271,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.SerializationTest.test":140,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests2.CaptureTest.testCaptureFirst":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":206,"org.easymock.tests2.NameTest.nameForMock":160,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":15,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":355,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":202,"org.easymock.tests2.MockedExceptionTest.testRealException":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.UsageConstraintsTest.testContains":76,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":6,"org.easymock.tests2.NameTest.nameForStrictMock":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":158,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":7,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":151,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":248,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor":289,"org.easymock.tests.MockClassControlTest.testHashCode":334,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":75,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests2.CaptureTest.testCaptureMultiple":362,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":342,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":350,"org.easymock.tests2.CaptureTest.testCaptureFromStub":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":8,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":273,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":333,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.CapturesMatcherTest.test":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.UsageStrictMockTest.testVerify":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":278,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":3,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":221,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":222,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111}}]
