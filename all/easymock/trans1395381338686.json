[{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:131","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,2,79,80,3,81,4,5,6,82,83,7,8,9,10,11,84,85,86,87,88,89,12,13,90,91,92,93,94,95,96,97,98,99,100,101,19,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,20,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,22,153,154,23,24,25,26,155,156,157,158,27,159,28,29,160,30,31,161,162,163,164,165,32,33,34,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,56,57,58,59,60,61,62,63,64,67,68,70,71,72,74,75,76,77,78,2,79,80,4,7,8,9,10,11,89,12,13,14,15,16,17,98,99,100,101,114,115,20,125,126,127,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,166,167,168,169,170,171,172,173,174,175,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[191,192,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[211,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[213,214,128,215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[64,70,71,72,2,79,80,4,217,218,219,220,221,222,223,224,16,98,99,100,101,114,115,20,125,126,225],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[21,30,162,226],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[156,28,34,227],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[228,229,230,224,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[232,233,234],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[235,130,131,236],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[30,226],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[62,68,75,76,11,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[237,46,48,49,238,50,51,52,239,240,53,54,232,241,55,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,242,243,2,244,79,80,245,3,81,4,5,246,228,6,247,83,248,249,218,250,251,7,8,9,10,11,87,88,252,253,254,255,256,219,257,258,259,260,261,220,221,222,262,263,264,265,266,267,89,12,13,90,91,92,93,94,95,96,97,14,15,16,17,18,98,268,269,19,114,270,116,117,118,271,119,272,120,121,233,273,124,274,20,275,125,126,276,127,128,277,129,278,130,131,137,140,279,142,143,146,147,148,150,151,152,21,22,153,154,23,24,25,26,155,156,157,158,27,159,28,29,160,30,31,161,162,163,165,32,33,34,166,168,169,171,177,178,179,180,181,280,281,182,184,185,35,186,187,215,189,216,282],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[159],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,0,1,1,44,283,284,285,286,287,288,289,56,57,58,290,291,41,85,292,293,42,294,295,89,296,297,298,299,300,301,302,303,304,305,211,306,307,308,212,309,127,310,130,236,311,312,313,132,314,315,133,316,317,318,319,320,321,322,323,324,134,325,326,327,328,329,135,330,331,332,136,333,334,137,335,138,139,336,337,140,279,141,142,143,144,146,147,166,167,169,170,171,338,172,339,340,341,173,174,175,342,343,344,345,346,347,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[348,349,350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":154,"org.easymock.tests2.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.tests2.StubTest.stubWithReturnValue":19,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":236,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests.MockClassControlTest.testToString":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":224,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests.UsageExpectAndThrowTest.object":261,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":115,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":162,"org.easymock.tests2.DelegateToTest.testWrongClass":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.UsageStrictMockTest.range":79,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":16,"org.easymock.tests2.CaptureTest.testCaptureNone":183,"org.easymock.tests.UsageUnorderedTest.message":90,"org.easymock.tests.UsageVerifyTest.twoReturns":50,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests.UsageTest.argumentsOrdered":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":325,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":11,"org.easymock.tests.UsageExpectAndThrowTest.longType":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":205,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":256,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":36,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests.LimitationsTest.mockFinalMethod":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":203,"org.easymock.tests2.CaptureTest.testCaptureLast":182,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":163,"org.easymock.tests.MockingTest.testTwoMocks":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":37,"org.easymock.tests2.CaptureTest.testCapture1_2446744":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":259,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":208,"org.easymock.tests.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":306,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":279,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":202,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":316,"org.easymock.tests.UsageExpectAndThrowTest.floatType":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":18,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":277,"org.easymock.tests.UsageVerifyTest.twoThrows":238,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":8,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":253,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":97,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":204,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests2.UsageConstraintsTest.equals":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":209,"org.easymock.tests.UsageTest.openCallCountByLastCall":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":184,"org.easymock.tests.UsageThrowableTest.throwCheckedException":94,"org.easymock.tests.MockClassControlTest.testEquals":303,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":292,"org.easymock.tests.MockingTest.testStrictClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":207,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":17,"org.easymock.tests2.CompareToTest.testGreateOrEqual":227,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":49,"org.easymock.tests2.DependencyTest.testInterfaceMocking":114,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.DelegateToTest.testStubDelegate":189,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":96,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":200,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":175,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":309,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":127,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":317,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":201,"org.easymock.tests.GenericTest.testBridgedEquals":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":5,"org.easymock.tests.MockingTest.testNiceClassMocking":290,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.MockingTest.testClassMocking":288,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":334,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":269,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":345,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":307,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":198,"org.easymock.tests.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":185,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":310,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.MockClassControlTest.testHashCode":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":318,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests.DefaultClassInstantiatorTest.object":305,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":301,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.UsageConstraintsTest.constraints":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests2.CompareToTest.testGreateThan":226,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":9,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
