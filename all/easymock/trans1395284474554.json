[{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[12,13],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[33,34,35,36,10,11,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[51,3,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[68,69,58,60,70,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[72,54,55,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,38,131,132,133,56,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,58,159,160,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,185,186,187,188,189,190,14,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,60,61,214,215,62,63,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,40,41,42,43,44,45,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,16,276,277,17,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,0,1,2,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,64,335,336,3,52,53,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,4,393,394,5,395,396,397,33,6,34,398,7,399,400,8,401,46,47,48,49,402,403,404,405,406,407,408,65,409,410,411,412,413,66,67,414,415,416,417,418,419,420,421,422,423,424,425,426,19,20,21,22,23,24,25,26,27,28,29,30,31,32,427,50,428,429,430,431,432,433,434,435,436,437,438,35,439,440,441,442,443,444,445,446,447,36,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,9,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,10,11,37,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[18,497,19,20,21,22,23,24,25,26,28,498,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[72,54,55,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,38,131,132,133,56,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,58,159,160,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,185,186,187,188,189,190,14,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,60,61,214,215,62,63,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,40,41,42,43,44,45,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,16,276,277,17,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,0,1,2,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,64,335,336,3,52,53,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,4,393,394,5,395,396,397,33,6,34,398,7,399,400,8,401,46,47,48,49,402,403,404,405,406,407,408,65,409,410,411,412,413,66,67,414,415,416,417,418,419,420,421,422,423,424,425,426,19,20,21,22,23,24,25,26,27,28,29,30,31,32,427,50,428,429,430,431,432,433,434,435,436,437,438,35,439,440,441,442,443,444,445,446,447,36,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,9,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,10,11,37,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[126,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,149,177,181,182,39,185,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,40,41,42,43,44,45,277,46,47,48,49,406,412,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[339,340,343,345,346,348,358,363,19,21,29],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[355],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[499,365],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[72,54,55,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,129,130,38,131,132,133,56,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,58,159,160,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,185,186,187,188,189,190,14,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,60,61,214,215,62,63,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,40,41,42,43,44,45,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,16,276,277,17,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,0,1,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,64,335,336,3,52,53,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,388,389,390,391,392,393,394,395,396,397,33,34,7,399,400,401,46,47,48,49,403,404,405,406,407,408,65,409,410,411,412,413,66,67,414,415,416,417,418,419,420,421,422,423,424,425,426,19,20,21,22,23,24,25,26,27,28,29,30,31,32,427,50,428,429,430,431,432,433,434,435,436,437,438,35,439,440,441,442,443,444,445,446,447,36,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,9,465,466,467,468,469,470,471,472,473,474,475,476,480,481,482,483,484,485,486,487,10,11,37,488,489,490,491,492,493,494,495,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[51,3,52,53],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[339,340,343,345,346,348,358,363,19,21,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[54,55,56,500,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[72,55,76,77,79,88,89,90,91,106,108,117,118,120,130,38,131,132,133,147,148,149,159,59,161,164,165,166,167,168,175,177,178,179,180,181,182,183,184,186,212,213,214,215,216,227,255,256,259,273,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,305,314,0,324,333,64,335,3,52,337,338,339,340,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,384,385,386,393,396,33,34,400,48,406,407,408,409,411,412,413,414,415,416,420,19,20,21,22,23,26,27,28,29,31,32,50,428,429,430,431,432,436,35,36,453,456,457,458,459,460,461,464,467,468,469,474,475,484,37,488,490,491,493],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[76,77,79,88,89,90,91,159,59,161,164,165,166,167,168,169,170,171,172,183,255,256,259,280,281,282,283,284,285,288,289,291,292,293,295,296,297,298,299,314,0,333,64,335,379,380,381,382,384,385,386,393,396,33,34,400,431,436,35,36,453,456,457,458,459,460,461,464,467,468,469,474,475,484,37,488,490,491,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[54,55,56,57,58,59,60,61,62,63,279,64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[276,313,315,317,489],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[72,54,55,76,77,79,88,89,90,91,92,93,94,95,96,130,38,56,134,135,136,138,139,141,142,143,144,145,148,149,157,158,58,159,160,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,185,186,15,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,60,61,214,215,62,63,216,217,218,219,220,221,222,227,228,239,240,241,242,247,255,256,259,40,41,42,43,44,45,265,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,313,314,315,317,0,318,331,332,333,334,64,335,336,3,52,53,337,338,339,340,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,380,381,385,386,388,389,390,391,392,396,397,400,401,46,47,48,49,402,403,405,406,407,408,65,409,410,411,412,413,66,67,414,415,416,419,420,421,423,424,425,426,19,20,21,22,23,24,25,26,27,28,29,30,31,32,427,50,428,429,430,431,432,456,457,458,459,460,461,464,466,468,474,488,489,490,491,492,493,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[501,347,353,365],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[54,55,56,57,58,59,60,61,62,63,279,64,65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[503,9,10,10,11,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:98","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[300,301,302,303,304,306,307,308,309,310,311,319,320,321,322,323,325,326,327,328,329,330,487,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[72,54,55,73,74,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,113,119,121,122,123,124,125,126,127,128,129,130,38,131,132,133,56,134,135,136,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,157,158,58,159,160,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,39,185,186,187,188,189,190,14,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,60,61,214,215,62,63,216,217,218,219,220,221,222,223,224,225,227,228,229,230,234,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,40,41,42,43,44,45,261,262,263,264,265,266,267,268,269,270,271,273,275,16,276,277,17,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,312,313,314,315,316,317,318,331,332,333,334,64,335,336,52,53,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,375,376,377,378,382,384,388,389,390,391,46,47,48,49,402,403,405,406,407,408,65,409,410,411,412,413,66,67,414,415,416,417,418,419,420,421,423,19,20,21,22,23,24,25,26,27,28,29,30,31,32,427,50,428,429,430,431,432,433,436,438,35,440,446,449,452,456,457,458,459,460,461,463,464,465,466,467,469,470,472,473,474,475,476,480,481,482,483,484,485,486,488,489,490,491,492,493,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":340,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":107,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":410,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.tests.MockClassControlTest.testToString":266,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":475,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":489,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":236,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":81,"org.easymock.tests2.UsageConstraintsTest.testNull":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":459,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":375,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":211,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":83,"org.easymock.tests.UsageVarargTest.varargIntAccepted":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":416,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":391,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":233,"org.easymock.tests2.UsageTest.strictResetToDefault":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":466,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":370,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":87,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":207,"org.easymock.tests.LimitationsTest.mockFinalMethod":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":96,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":389,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":235,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":146,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.MockingTest.testInterfaceMocking":78,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":443,"org.easymock.tests2.UsageTest.niceToStrict":409,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":97,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":396,"org.easymock.tests2.MockBuilderTest.testCreateMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":353,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":12,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":352,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":436,"org.easymock.tests.MockClassControlTest.testEquals":270,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":390,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":94,"org.easymock.tests.MockNameTest.defaultName":187,"org.easymock.tests2.UsageConstraintsTest.testMatches":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":243,"org.easymock.samples.ExampleTest.voteForRemovals":493,"org.easymock.tests.UsageVarargTest.allKinds":145,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":95,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":307,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":128,"org.easymock.tests2.UsageConstraintsTest.greaterThan":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":469,"org.easymock.samples.ExampleTest.voteForRemoval":490,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":470,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":429,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":462,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":406,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":174,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":368,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":369,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":415,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":287,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":408,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":144,"org.easymock.tests.GenericTest.testBridgedEquals":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":502,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests.MockingTest.testNiceClassMocking":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":380,"org.easymock.tests.MockingTest.testClassMocking":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":218,"org.easymock.tests2.UsageConstraintsTest.testContains":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":342,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":405,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":374,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":154,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":84,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.MockClassControlTest.testHashCode":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":445,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":388,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":121,"org.easymock.tests2.CaptureTest.testCaptureMultiple":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":120,"org.easymock.tests2.UsageTest.openCallCountByLastCall":411,"org.easymock.tests.DefaultClassInstantiatorTest.object":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":261,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":152,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":467,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":267,"org.easymock.tests2.UsageTest.resumeIfFailure":414,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":362,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":113,"org.easymock.samples.SupportTest.voteForRemovals":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":204,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":119,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.UsageExpectAndThrowTest.object":202,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":359,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":133,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":143,"org.easymock.tests2.ThreadingTest.testThreadSafe":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":448,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":222,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":155,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":117,"org.easymock.tests2.UsageConstraintsTest.any":349,"org.easymock.tests2.StubTest.stub":427,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":195,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":126,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":249,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":321,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.NameTest.nameForMocksControl":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":438,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":196,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":456,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":461,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":386,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":346,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":360,"org.easymock.tests.MockingTest.testTwoMocks":75,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":200,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":364,"org.easymock.samples.ExampleTest.removeNonExistingDocument":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":124,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.MockBuilderTest.testCreateMockString":401,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":439,"org.easymock.tests.UsageExpectAndThrowTest.floatType":194,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":2,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.ExampleTest.voteAgainstRemoval":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":468,"org.easymock.tests.LimitationsTest.privateConstructor":258,"org.easymock.tests2.UsageConstraintsTest.testNotNull":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":46,"org.easymock.tests2.UsageTest.defaultResetToNice":413,"org.easymock.samples.ExampleTest.voteAgainstRemovals":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":295,"org.easymock.tests.UsageVarargTest.differentLength":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":320,"org.easymock.tests2.CallbackTest.callback":318,"org.easymock.tests2.UsageConstraintsTest.equals":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":69,"org.easymock.tests.MockingTest.testStrictClassMocking":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":384,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":421,"org.easymock.tests2.CompareToTest.testGreateOrEqual":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":432,"org.easymock.tests2.NameTest.nameForNiceMock":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":474,"org.easymock.samples.ExampleTest.addDocument":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.AnswerTest.stubAnswer":420,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":398,"org.easymock.tests.UsageVarargTest.varargLongAccepted":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":106,"org.easymock.tests.UsageExpectAndReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests.UsageThrowableTest.noUpperLimit":176,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":309,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":338,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":476,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.tests2.UsageConstraintsTest.testSame":344,"org.easymock.samples.SupportTest.addDocument":483,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":383,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":440,"org.easymock.tests.GenericTest.testPackageScope":227,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":308,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":80,"org.easymock.tests2.NameTest.nameForMock":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.UsageStrictMockTest.differentMethods":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":206,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":49,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":110,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":254,"org.easymock.tests2.NameTest.nameForStrictMock":424,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":403,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":393,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":444,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.UsageConstraintsTest.testOr":345,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":457,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":441,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":141,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":223,"org.easymock.tests2.UsageConstraintsTest.cmpTo":350,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests2.CompareToTest.testLessThan":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":100,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":412,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":244,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":394,"org.easymock.tests.UsageTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":221,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":294,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.UsageConstraintsTest.constraints":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":495,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":496,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":93,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.LimitationsTest.abstractClass":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":372}}]
