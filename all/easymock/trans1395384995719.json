[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,18,19,93,94,95,96,97,98,99,100,21,101,102,22,103,23,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[49,10,121,122,123,124,125,11,126,127,128,129,13,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[133],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,0,4,32,34,152,153,154,155,35,156,36,37,157,158,159,160,161,162,163,164,165,166,167,168,169,170,7,39,40,41,44,45,171,172,173,174,175,176,177,178,179,180,9,181,49,10,121,122,123,124,125,11,12,126,127,129,13,14,51,53,55,57,182,59,61,62,183,65,66,67,68,71,184,185,15,186,187,188,189,190,72,191,73,74,192,193,194,195,196,76,79,197,198,80,83,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,18,93,97,219,99,21,102,103,104,107,220,221,222,223,224,26,225,226,227,228,229,230,231,232,233,234,235,236,108,237,109,110,111,238,113,239,239,114],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[1,135,242,136,243,137,244,138,139,140,141,245,142,143,2,144,145,3,146,147,148,149,150,151,0,246,4,29,30,31,152,247,153,248,154,155,35,156,36,37,157,249,158,250,159,251,252,160,161,162,163,164,253,165,166,254,167,168,169,170,5,6,7,38,255,39,171,172,8,173,174,175,176,177,178,179,256,180,257,47,258,9,259,181,49,10,121,122,123,124,125,11,12,126,127,128,129,13,14,260,50,53,54,261,182,58,59,60,61,62,63,64,68,262,263,264,265,70,184,266,267,185,15,268,269,270,271,272,273,274,275,276,277,188,189,190,72,191,73,74,192,193,194,195,196,78,79,197,278,198,80,82,83,199,17,279,201,202,203,204,205,84,85,86,87,280,281,206,282,207,283,208,209,210,211,212,213,284,214,215,216,217,218,88,89,90,91,92,18,285,19,93,94,95,96,97,20,219,98,99,286,100,21,101,287,102,22,103,23,104,105,106,288,220,24,221,289,290,291,222,25,223,292,224,293,294,26,295,296,225,27,226,28,227,228,229,230,231,232,233,234,235,297,298,133,299,108,237,109,110,300,111,238,301,113,302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[305,306,132,307,308,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[310,311,312,31,313,314,32,315,316,317,318,319,320,321,322,323,33,324,325,326,327,328,34,329,330,331,332,305,131,333,132,48,307,119,52,56,334,335,241,336,337,338,339,340,120,239,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[85,92,95,99,22,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[306,134,308,309,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[242,139,49,121,127],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":134,"org.easymock.samples.SupportTest.voteForRemovals":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":24,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":148,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.samples.ConstructorCalledMockTest.testTax":239,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":337,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":122,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":86,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":5,"org.easymock.tests.UsageTest.argumentsOrdered":204,"org.easymock.tests.UsageVarargTest.varargIntAccepted":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":278,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":92,"org.easymock.tests.UsageExpectAndThrowTest.longType":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.SerializationTest.testClass":132,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":104,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":82,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.DelegateToTest.testDelegate":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":291,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":43,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":225,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":308,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":123,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":246,"org.easymock.tests.UsageThrowableTest.throwError":228,"org.easymock.samples.ExampleTest.removeNonExistingDocument":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":7,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":247,"org.easymock.tests.ResultTest.createReturnResultToString":116,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.PartialClassMockTest.testGetArea":114,"org.easymock.tests.ResultTest.createDelegateResultToString":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":241,"org.easymock.tests2.UsageConstraintsTest.testNotNull":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":120,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":41,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.samples.ExampleTest.voteAgainstRemovals":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageVarargTest.differentLength":284,"org.easymock.tests2.CallbackTest.callback":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":232,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":54,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":71,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":309,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests.UsageVarargTest.allKinds":218,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":29,"org.easymock.samples.BasicClassMockTest.testPrintContent":303,"org.easymock.samples.ExampleTest.addDocument":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":47,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.samples.ExampleTest.voteForRemoval":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":6,"org.easymock.tests.UsageExpectAndReturnTest.floatType":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":183,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.SerializationTest.test":259,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":124,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":297,"org.easymock.tests2.UsageTest.moreThanOneArgument":8,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":283,"org.easymock.tests2.NameTest.nameForMock":69,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageCallCountTest.tooManyCalls":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":327,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":252,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":307,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":22,"org.easymock.tests.UsageTest.wrongArguments":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor":331,"org.easymock.tests.ResultTest.createThrowResultToString":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":97,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":321,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests.UsageVarargTest.varargCharAccepted":212,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.UsageTest.unexpectedCallWithArray":200,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.constraints":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.CapturesMatcherTest.test":130,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests2.UsageTest.resumeIfFailure":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166}}]
