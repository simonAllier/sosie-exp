[{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.Range:36","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,14,105,106,15,16,107,108,109,110,111,112,113,114,17,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,32,33,166,167,34,168,35,36,169,37,170,171,172,173,174,175,176,177,178,38,179,180,181,182,39,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,40,199,41,200,201,202,203,204,205,206,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,2,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,12,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,18,19,20,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,21,324,325,22,23,326,327,24,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,25,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,26,433,434,435,27,28,436,29,437,438,30,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,31],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[238,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[106,15,118,119,35,178,264,269,18,298,325,22,330,331,401,402,421,459],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1634","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[14,106,15,17,296,18,19,20,21,325,22,24,497,498,499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[64,4,0,5,6,7,8,11,12,240],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[501,502,323,328,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[420,423],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[40,199,41,200,201,202,203,204,206,42,207,208,209,506],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[277,279,280],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[276,280],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[162,34,181,418],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[53,54,55,57,58,58,59,59,60,61,62,63,64,71,82,83,84,85,87,88,89,96,137,140,150,156,159,0,2,223,229,231,232,235,236,237,238,241,242,244,245,246,247,248,249,250,251,253,256,257,258,259,261,262,277,278,279,280,281,286,289,337,339,345,347,351,352,449,450,451,453,457,466,467,468,469,470,471,472,473,486,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,14,105,106,15,16,107,108,109,110,111,112,113,114,17,115,116,117,118,119,120,121,122,123,124,507,508,509,510,511,512,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,513,160,161,162,163,164,165,32,33,166,167,34,168,35,36,169,37,170,171,172,173,174,175,176,177,178,38,179,180,181,182,39,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,40,199,41,200,201,202,203,204,205,206,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,2,223,224,225,226,227,228,229,231,232,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,18,19,20,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,21,324,325,22,23,326,327,24,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,25,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,26,433,434,435,27,28,436,29,437,438,30,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,482,483,484,486,487,488,489,490,491,493,495,496,31],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,58,59,59,14,126,164,165,167,34,168,35,172,174,175,177,178,39,183,184,207,294,295,297,301,302,311,316,21,352,370,371,374,375,376,377,378,379,405,428,477,478,479,480,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[44,46,47,49,56,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[44,45,46,47,49,51,56,57,58,58,59,59,60,61,62,63,64,71,80,81,82,83,84,85,87,88,89,96,14,106,15,112,113,114,17,116,118,119,120,123,124,125,126,137,140,150,156,159,160,161,162,163,164,165,32,33,167,34,168,35,36,169,170,171,172,173,174,175,176,177,178,38,179,180,182,39,183,184,190,192,193,194,195,196,197,198,40,199,200,201,204,205,206,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,0,1,223,224,225,226,227,228,231,235,237,238,242,245,246,247,248,249,250,253,257,258,259,262,263,264,269,270,271,272,273,274,275,277,279,294,295,296,18,19,20,313,319,21,325,22,327,24,330,331,334,337,339,340,341,342,343,344,345,364,366,367,25,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,420,421,422,423,424,425,426,427,428,429,430,431,432,26,433,434,435,27,28,436,29,437,438,30,439,440,441,442,443,444,445,446,450,451,453,459,475,477,478,479,480,481,482,483,484,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,14,105,106,15,16,107,108,109,110,111,112,113,114,17,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,32,33,166,167,34,168,35,36,169,37,170,171,172,173,174,175,176,177,178,38,179,180,181,182,39,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,40,199,41,200,201,202,203,204,205,206,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,2,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,12,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,18,19,20,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,21,324,325,22,23,326,327,24,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,25,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,26,433,434,435,27,28,436,29,437,438,30,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,31],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[58,58,59,59,14,126,164,165,167,34,168,35,172,174,175,177,178,39,183,184,207,294,295,297,301,302,311,316,21,370,371,374,375,376,377,378,379,405,428,477,478,479,480,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:124","failures":[43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,71,80,81,82,83,84,85,87,88,89,96,103,104,14,105,106,15,16,108,109,110,111,112,113,114,17,115,116,117,118,119,120,121,122,123,124,125,126,137,140,150,156,159,160,161,162,163,164,165,32,33,167,34,168,35,36,169,170,171,172,173,174,175,176,177,178,38,179,180,181,182,39,183,184,190,192,194,195,196,198,40,199,41,200,201,202,203,204,205,206,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,2,223,226,227,228,229,231,235,236,237,238,241,242,244,245,246,247,248,249,250,251,253,256,257,258,259,262,263,264,265,266,267,268,269,271,272,277,278,289,290,291,292,293,294,295,296,18,19,20,321,322,323,21,324,325,22,23,506,506,327,24,328,329,330,331,332,333,334,337,339,340,341,342,343,344,345,364,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,405,406,407,408,409,411,412,413,414,415,416,417,418,420,421,422,423,424,425,426,427,429,430,431,432,26,433,434,435,27,28,436,29,437,438,30,439,440,441,442,443,450,451,453,459,460,461,462,463,464,465,477,478,479,480,481],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":307,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":117,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":340,"org.easymock.tests.MockingTest.testPartialClassMocking":450,"org.easymock.tests.MockClassControlTest.testToString":468,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":185,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":140,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":497,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":535,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":370,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":286,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":443,"org.easymock.tests.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":479,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":400,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":375,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":229,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":379,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":519,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":360,"org.easymock.tests2.DependencyTest.testClassMocking":78,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":111,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":283,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":518,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":439,"org.easymock.tests.LimitationsTest.mockFinalMethod":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.DependencyTest.testClassMockingSupport":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":495,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":109,"org.easymock.tests.UsageThrowableTest.throwError":420,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":354,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":285,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":522,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":376,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":145,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":235,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":74,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":174,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":391,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":173,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":110,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests.MockNameTest.defaultName":419,"org.easymock.tests2.UsageConstraintsTest.testMatches":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":352,"org.easymock.samples.ExampleTest.voteForRemovals":49,"org.easymock.tests.UsageVarargTest.allKinds":418,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":426,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":259,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":523,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":493,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":515,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":339,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":193,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":387,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":464,"org.easymock.tests.UsageExpectAndReturnTest.longType":383,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":442,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":428,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":181,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":440,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":477,"org.easymock.tests.UsageCallCountTest.tooManyCalls":465,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":433,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":425,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":458,"org.easymock.tests2.UsageConstraintsTest.testContains":172,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":284,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests.UsageExpectAndReturnTest.object":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":396,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":366,"org.easymock.tests.MockClassControlTest.testHashCode":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":92,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":147,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":108,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":485,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":320,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests.DefaultClassInstantiatorTest.object":486,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":273,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":91,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":521,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":434,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.ReplayStateInvalidCallsTest.times":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":482,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":528,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":156,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":342,"org.easymock.tests2.StubTest.stubWithReturnValue":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":437,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":319,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":436,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":179,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":525,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":134,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":517,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":446,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":508,"org.easymock.tests.UsageUnorderedTest.message":296,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":373,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":484,"org.easymock.tests.UsageExpectAndThrowTest.longType":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":490,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":358,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":399,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":68,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":533,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":189,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":139,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":453,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":238,"org.easymock.tests.MockingTest.testNicePartialClassMocking":451,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":66,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":532,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":180,"org.easymock.tests.MockingTest.testTwoMocks":449,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":529,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":50,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":73,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":93,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":488,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":141,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":65,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":258,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":427,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":309,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":67,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests2.UsageConstraintsTest.equals":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":372,"org.easymock.tests.UsageCallCountTest.tooFewCalls":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":424,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":406,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":531,"org.easymock.tests2.NameTest.nameForNiceMock":188,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":526,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":239,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":398,"org.easymock.tests.UsageExpectAndReturnTest.floatType":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":100,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":127,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":487,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":381,"org.easymock.samples.SupportTest.addDocument":55,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":86,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":142,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":99,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":514,"org.easymock.tests2.NameTest.nameForMock":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":392,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":371,"org.easymock.tests2.NameTest.nameForStrictMock":187,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":489,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests.ErrorMessageTest.testGetters":499,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":231,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":520,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":146,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":246,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.MockBuilderTest.testWithConstructor":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":143,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":298,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":491,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":463,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":534,"org.easymock.tests2.UsageConstraintsTest.cmpTo":171,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":524,"org.easymock.tests2.CompareToTest.testLessThan":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":300,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":353,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":328,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":530,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":394,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":324,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":52,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":386,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":378,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":500,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
