[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,2,4,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[108],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[88,109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[110,111,15,25,26,28,30,39,41,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[2,3,4,153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[155,156,157,158,135,148],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,22,174,175,176,177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[127,128,150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[180,181,182,183,184,113,116,117,185,127,128,186,136,137,138,187,188,189,140,190,142,143,148,191,150,151],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[173],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[84,85,86,87,89,90],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[192,193],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,194,48,49,50,51,52,53,54,55,56,195,57,196,58,59,60,61,62,197,63,64,65,66,198,67,68,69,70,71,72,73,199,200,2,4,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[5,6,6,7,7,201,202,203,204,205,206,207,208,209,8,9,210,211,212,10,11,213,214,215,216,217,218,110,152,219,220,221,222,223,224,225,226,227,228,229,179,230,231,111,232,108,233,234,235,236,237,238,239,240,241,242,243,244,15,18,19,20,21,24,25,159,160,161,162,163,164,165,166,167,168,169,170,171,172,29,30,245,31,32,33,34,35,36,37,38,39,40,41,42,246,247,248,249,250,44,45,46,251,252,253,254,255,256,257,258,259,260,261,262,263,112,264,184,113,114,115,265,266,267,116,117,118,119,268,269,120,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,47,48,289,290,192,291,51,52,292,53,293,121,294,295,122,296,124,297,298,299,55,57,58,59,61,62,64,65,66,198,67,69,72,73,199,200,300,301,302,303,304,305,125,306,185,126,127,128,307,2,3,4,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,74,75,76,77,78,351,79,352,353,80,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,82,372,373,374,375,376,377,378,379,154,380,381,382,133,383,384,385,134,186,135,136,386,387,137,138,139,83,388,389,390,391,392,393,394,395,396,397,84,85,86,87,88,89,90,140,398,399,400,401,402,403,404,405,406,407,408,409,410,411,91,92,93,94,95,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,193,437,438,439,440,441,442,443,141,444,445,446,447,448,96,97,98,99,100,101,102,103,104,105,106,107,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,190,142,143,478,479,480,481,482,483,144,145,146,484,485,147,486,148,191,149,150,151,487,488,489,490,491],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[112,266,134,387,406,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[209,210,213,180,181,182,183,30,38,41,43,252,253,254,256,257,258,259,260,263,271,272,273,275,276,277,278,279,282,49,492,123,493,60,63,68,355,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[496,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[5,6,6,7,7,201,202,203,204,206,208,212,10,214,216,217,218,110,152,220,221,222,223,224,225,227,228,229,179,230,231,111,232,108,233,234,235,237,238,239,240,15,19,21,23,26,159,160,162,163,166,167,168,169,170,171,172,29,30,245,31,32,33,35,39,40,41,246,247,248,249,250,44,45,46,251,257,112,264,184,114,265,266,267,118,119,268,269,120,276,283,284,285,286,287,288,192,291,49,50,51,52,292,53,54,293,121,294,492,295,122,123,296,493,124,297,298,57,59,67,73,300,301,302,303,304,305,185,127,128,2,3,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,77,78,79,366,367,368,369,370,373,375,376,378,380,382,133,383,384,385,134,186,386,387,139,83,388,389,390,391,392,140,398,399,400,401,402,404,405,406,407,408,409,410,411,92,94,412,413,414,431,193,106,449,450,451,452,453,458,459,460,461,462,464,472,473,474,475,476,477,190,142,143,480,484,485,191,150,151,489,490,491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,22,174,175,176,177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[152,224,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[84,85,86,87,89,90],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":152,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":209,"org.easymock.tests2.DelegateToTest.testReturnException":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":77,"org.easymock.tests.MockClassControlTest.testToString":98,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":213,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":308,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":187,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":449,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":456,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":221,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":103,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":453,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":388,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageVarargTest.varargIntAccepted":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.AnswerTest.answer":300,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.CaptureTest.testAnd":159,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":392,"org.easymock.tests2.DelegateToTest.testDelegate":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":323,"org.easymock.tests.LimitationsTest.mockFinalMethod":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":154,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests.UsageThrowableTest.throwError":404,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":494,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":130,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":200,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":490,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":471,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":19,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":122,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":454,"org.easymock.tests.UsageOverloadedMethodTest.overloading":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":230,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":376,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":168,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":102,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":369,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":9,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":410,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":287,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":383,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":90,"org.easymock.samples.ExampleTest.voteForRemoval":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":294,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":172,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":492,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":338,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":171,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":145,"org.easymock.tests.UsageExpectAndReturnTest.longType":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":236,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testNiceClassMocking":80,"org.easymock.tests.MockingTest.testClassMocking":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":229,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":220,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":414,"org.easymock.tests.MockTypeTest.fromEasyMockClass":371,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":469,"org.easymock.tests.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":375,"org.easymock.tests.MockClassControlTest.testHashCode":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":253,"org.easymock.tests2.EasyMockSupportTest.testVerify":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":65,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":270,"org.easymock.tests.UsageVarargTest.varargCharAccepted":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests.DefaultClassInstantiatorTest.object":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":398,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":467,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":252,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":314,"org.easymock.tests.CapturesMatcherTest.test":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests2.UsageTest.resumeIfFailure":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":340,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":431,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":156,"org.easymock.samples.SupportTest.voteForRemovals":212,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":320,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":153,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":193,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":465,"org.easymock.tests.UsageExpectAndThrowTest.object":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":234,"org.easymock.tests2.DelegateToTest.testWrongClass":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":289,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":455,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":491,"org.easymock.tests2.CaptureTest.testCaptureNone":167,"org.easymock.tests.UsageUnorderedTest.message":140,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":129,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":68,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":483,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":8,"org.easymock.tests2.CaptureTest.testCapture_2617107":161,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageConstraintsTest.any":227,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndThrowTest.longType":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":273,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":183,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":166,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":224,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests.MockingTest.testTwoMocks":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":316,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.samples.ExampleTest.removeNonExistingDocument":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":254,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":86,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":248,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":60,"org.easymock.tests.UsageExpectAndThrowTest.floatType":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":303,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests.LimitationsTest.privateConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":411,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.UsageTest.defaultResetToNice":267,"org.easymock.samples.ExampleTest.voteAgainstRemovals":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":346,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":272,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests2.UsageConstraintsTest.equals":219,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":451,"org.easymock.tests.UsageCallCountTest.tooFewCalls":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":457,"org.easymock.tests.UsageThrowableTest.throwCheckedException":408,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":158,"org.easymock.tests.MockingTest.testStrictClassMocking":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":305,"org.easymock.tests.ObjectMethodsTest.testHashCode":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":177,"org.easymock.tests2.NameTest.nameForNiceMock":182,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":176,"org.easymock.samples.ExampleTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.DelegateToTest.testStubDelegate":285,"org.easymock.tests2.AnswerTest.stubAnswer":304,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":0,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatType":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.UsageThrowableTest.noUpperLimit":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":164,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":85,"org.easymock.tests2.UsageConstraintsTest.testSame":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":332,"org.easymock.samples.SupportTest.addDocument":211,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":61,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":352,"org.easymock.tests2.NameTest.nameForMock":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":343,"org.easymock.tests2.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":322,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":385,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":428,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":450,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":365,"org.easymock.tests2.NameTest.nameForStrictMock":181,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":18,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":87,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":15,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":64,"org.easymock.tests2.UsageConstraintsTest.testOr":223,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests2.MockBuilderTest.testWithConstructor":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":62,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":344,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":228,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CaptureTest.testCaptureFromStub":170,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":355,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":16,"org.easymock.tests.UsageTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":345,"org.easymock.tests2.CaptureTest.testCapture":496,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":208,"org.easymock.tests.UsageStrictMockTest.testVerify":488,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":460,"org.easymock.tests.LimitationsTest.abstractClass":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":461,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":439,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":123}}]
