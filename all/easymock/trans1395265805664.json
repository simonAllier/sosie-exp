[{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[215],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[217,218,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[188,193,204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[220,221,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[170,171,172,173,179,249,187,188,189,190,191,192,193,194,250,195,204,205,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,251,1,2,3,4,5,6,7,8,9,10,252,253,11,254,255,12,256,13,257,14,258,259,15,16,17,260,18,19,261,262,263,264,265,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,266,267,41,268,269,270,271,272,273,274,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,275,122,123,276,277,124,125,126,127,128,129,130,131,278,132,133,279,134,135,280,281,136,282,283,137,284,138,139,140,141,142,143,285,286,144,145,146,147,148,149,150,151,152,287,288,153,289,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,290,169,170,171,172,173,291,174,175,176,177,178,179,249,292,180,293,242,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[294,295,296,297,150,298,299,151,300,301,287,288,302,303,304,305,306,160,307,211],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[308,211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[309,185,202,205],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[310,210],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[311,312,313,314,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[318,319,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[320,7,8,294,321,322,323,12,324,42,325,326,327,64,65,66,328,295,296,329,75,330,331,332,333,334,335,336,337,338,339,220,340,341,342,342,343,343,297,344,345,346,347,348,128,129,349,130,131,138,139,140,145,316,150,298,299,350,151,152,300,301,318,351,287,288,352,353,354,355,356,357,302,358,359,360,361,362,363,364,365,366,303,367,368,369,370,371,304,372,373,153,289,155,156,157,305,158,374,375,159,306,160,376,377,307,211,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[254,14,259,15,41,378,379,380,381,102,103,104,123,277,124,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[170,172,179,187,193],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[382],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[217,218,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,340],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[383,384,385],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[386],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[387,115,167,290,169],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[211,212,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:124","failures":[165],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[257,388,389,268,390,391],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[223,224,225,231,237,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[308,211,212,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[392,393,296,330,331,332,346,129,130,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":188,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.UsageTest.argumentsOrdered":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":68,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":78,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests2.UsageTest.wrongArguments":279,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":107,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.UsageConstraintsTest.testNull":190,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":170,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.DelegateToTest.testDelegate":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":93,"org.easymock.tests.LimitationsTest.mockFinalMethod":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":52,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":362,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":151,"org.easymock.tests2.MockBuilderTest.testCreateMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":245,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":105,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":221,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests2.EasyMockSupportClassTest.testAll":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests.UsageVarargTest.allKinds":63,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":51,"org.easymock.samples.BasicClassMockTest.testPrintContent":345,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests2.UsageConstraintsTest.greaterThan":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":376,"org.easymock.samples.ExampleTest.voteForRemoval":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":318,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":67,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":27,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":286,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":287,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":62,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.MockingTest.testNiceClassMocking":328,"org.easymock.tests.MockingTest.testClassMocking":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":2,"org.easymock.tests2.UsageConstraintsTest.testContains":197,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":189,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.object":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":246,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":312,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":36,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":226,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":293,"org.easymock.tests.UsageVarargTest.varargCharAccepted":57,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests2.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":304,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":70,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":213,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":319,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":391,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":90,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":308,"org.easymock.tests.UsageExpectAndThrowTest.object":88,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":205,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests.UsageStrictMockTest.range":259,"org.easymock.samples.ConstructorCalledMockTest.testTax":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":300,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":388,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":382,"org.easymock.tests.UsageUnorderedTest.message":254,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":61,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":6,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":253,"org.easymock.tests2.UsageConstraintsTest.any":195,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":69,"org.easymock.tests.UsageExpectAndThrowTest.longType":81,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":220,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.tests2.SerializationTest.testClass":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":12,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":239,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":149,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":301,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":157,"org.easymock.tests2.CompareToTest.testCompareEqual":386,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":206,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":86,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":209,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":244,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":227,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":288,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.floatType":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":323,"org.easymock.tests2.UsageConstraintsTest.testNotNull":208,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":238,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":374,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":252,"org.easymock.tests.UsageCallCountTest.tooFewCalls":4,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":108,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":389,"org.easymock.tests.MockingTest.testStrictClassMocking":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":314,"org.easymock.tests2.NameTest.nameForNiceMock":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":313,"org.easymock.samples.ExampleTest.addDocument":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":60,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":38,"org.easymock.tests.UsageExpectAndReturnTest.floatType":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":145,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":343,"org.easymock.tests.UsageThrowableTest.noUpperLimit":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":186,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":346,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":212,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests2.NameTest.nameForMock":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":32,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests2.MockedExceptionTest.testRealException":141,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests2.NameTest.nameForStrictMock":147,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":339,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":379,"org.easymock.tests.ErrorMessageTest.testGetters":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":298,"org.easymock.tests2.UsageStrictMockTest.range":277,"org.easymock.tests2.UsageConstraintsTest.lessThan":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":229,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.testOr":192,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":289,"org.easymock.tests.UsageTest.wrongArguments":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":33,"org.easymock.tests.UsageVarargTest.varargShortAccepted":59,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":196,"org.easymock.tests2.CompareToTest.testLessThan":310,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":249,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":299,"org.easymock.tests.UsageTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":34,"org.easymock.tests2.UsageConstraintsTest.constraints":187,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.samples.ExampleTest.addAndChangeDocument":120,"org.easymock.tests.UsageStrictMockTest.testVerify":17,"org.easymock.tests2.ConstraintsToStringTest.containsToString":215,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":224,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":49,"org.easymock.tests2.CompareToTest.testGreateThan":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":26,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":55,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":381}}]
