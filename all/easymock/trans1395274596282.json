[{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[1,2,3],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[27,28,29,30],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[31,32],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,34,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,4,5,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,14,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,15,16,17,18,95,96,97,11,34,35,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,27,117,118,119,120,0,121,122,123,124,125,126,127,1,128,129,130,131,132,28,133,134,135,136,137,29,138,139,31,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,12,207,208,13,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,19,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,33,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,20,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,21,22,23,24,25,26,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[445,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[409,458],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[57,58,64,65,132,142,144,145,499,500,501,502,503,504,505,506,507,508,509,278,279,280,283,284,290,510,511,512,513,514,515,516,307,308,423,424,426,427,431,434,435,436,437,438,439],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[58,64,65,144,279,280,283,284,290,514,516,423,426,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[51,52,208,517,211,518,519,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[5,6,7,8,520,521,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[118,119,121,123,124,126,134,138,158,160,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[500,507,279,510,512,423],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[370,371,438],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,4,5,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,14,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,15,16,17,18,95,96,97,11,34,35,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,27,117,118,119,120,0,121,122,123,124,125,126,127,1,128,129,130,131,132,28,133,134,135,136,137,29,138,139,31,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,12,207,208,13,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,19,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,33,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,20,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,21,22,23,24,25,26,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[60,132,228,360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[522,523],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[132],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:551","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[44,69,95,97,142,144,145,155,176,257,19,288,290,334,367,412,414,427,466,468,470],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[44,57,60,61,62,66,69,95,97,116,27,117,118,0,121,122,123,128,129,130,131,28,133,139,31,144,145,159,160,162,163,165,166,170,171,176,252,253,254,276,277,278,281,282,290,334,335,338,340,341,342,343,345,346,347,348,350,351,352,353,367,381,382,385,387,388,389,390,392,393,394,395,397,398,399,400,414,426,427,437,454,455,456,457],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Same:37","failures":[122],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69,288,325,332,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[27,118,28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[66,69,327,361,455,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[5,6,7,8,520,521,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[51,52,208,517,211,518,519,232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,4,55,56,57,58,59,60,61,62,63,64,65,66,67,69,14,73,76,86,92,15,16,17,18,95,97,11,34,35,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,116,27,117,118,119,0,121,122,123,124,125,127,1,128,129,130,131,132,28,133,134,135,136,137,29,138,139,31,140,141,142,143,144,145,146,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,182,189,190,191,192,194,195,196,198,200,204,205,206,207,209,210,212,215,216,224,225,226,227,228,229,230,3,234,235,236,237,245,252,253,254,255,256,257,260,262,263,264,265,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,19,288,289,290,294,295,297,301,302,303,304,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,366,367,368,369,370,371,372,373,374,375,376,377,378,379,20,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,432,433,436,437,438,439,21,22,23,24,25,26,449,450,451,452,453,454,456,457,470,471,472,474,475,476,477,478,479,480,481,524,524],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[28,525],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":320,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":294,"org.easymock.tests.MockClassControlTest.testToString":490,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":147,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":381,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests2.UsageConstraintsTest.testNull":121,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":400,"org.easymock.tests.UsageTest.moreThanOneArgument":278,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":376,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":284,"org.easymock.tests.UsageVarargTest.varargIntAccepted":472,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":521,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":219,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":453,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":503,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":519,"org.easymock.tests2.DependencyTest.testClassMocking":213,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":396,"org.easymock.tests.LimitationsTest.mockFinalMethod":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.DependencyTest.testClassMockingSupport":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":356,"org.easymock.tests.UsageThrowableTest.throwError":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":378,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":94,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":296,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests2.CompareToTest.testLessOrEqual":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":450,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":204,"org.easymock.tests2.MockBuilderTest.testCreateMock":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":248,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":390,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":433,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":497,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":494,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":304,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":377,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":481,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":437,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":372,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":237,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":448,"org.easymock.samples.ExampleTest.voteForRemoval":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":238,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":253,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":341,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":480,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":419,"org.easymock.tests.UsageExpectAndReturnTest.longType":337,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":523,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":399,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":511,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":371,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testNiceClassMocking":300,"org.easymock.tests.MockingTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":17,"org.easymock.tests2.UsageConstraintsTest.testFind":0,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":97,"org.easymock.tests.UsageExpectAndReturnTest.object":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":515,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":432,"org.easymock.tests.MockClassControlTest.testHashCode":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.EasyMockSupportTest.testVerify":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":83,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":502,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":68,"org.easymock.tests.UsageVarargTest.varargCharAccepted":474,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":440,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":441,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":409,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":492,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":387,"org.easymock.tests.CapturesMatcherTest.test":524,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":504,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.StubTest.stubWithReturnValue":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":343,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":393,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":391,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":268,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":302,"org.easymock.tests.UsageStrictMockTest.range":426,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":222,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":392,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.UsageUnorderedTest.message":290,"org.easymock.tests.UsageVerifyTest.twoReturns":439,"org.easymock.tests.UsageVarargTest.varargByteAccepted":479,"org.easymock.tests2.ThreadingTest.testThreadSafe":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":417,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":509,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.any":127,"org.easymock.tests2.StubTest.stub":69,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageExpectAndThrowTest.longType":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":242,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":385,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":96,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":207,"org.easymock.tests.MockingTest.testNicePartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":389,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.samples.ExampleTest.removeNonExistingDocument":43,"org.easymock.tests.UsageStrictMockTest.differentMethods":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":247,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.ConstraintsToStringTest.andToString":506,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":254,"org.easymock.tests2.MockBuilderTest.testCreateMockString":212,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":77,"org.easymock.tests.UsageExpectAndThrowTest.floatType":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":236,"org.easymock.tests.LimitationsTest.privateConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":373,"org.easymock.tests2.UsageTest.defaultResetToNice":63,"org.easymock.samples.ExampleTest.voteAgainstRemovals":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":349,"org.easymock.tests.UsageVarargTest.differentLength":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":241,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":513,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":232,"org.easymock.tests.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":19,"org.easymock.tests.UsageCallCountTest.tooFewCalls":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":512,"org.easymock.tests.MockingTest.testStrictClassMocking":291,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":520,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":256,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":424,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":208,"org.easymock.tests.UsageVarargTest.varargLongAccepted":478,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndReturnTest.floatType":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.tests2.ConstraintsToStringTest.orToString":499,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":217,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":335,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":78,"org.easymock.tests.GenericTest.testPackageScope":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":298,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":346,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":211,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":395,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":457,"org.easymock.tests2.MockedExceptionTest.testRealException":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":514,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":365,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":221,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":318,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":82,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":225,"org.easymock.tests.UsageTest.wrongArguments":280,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":79,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":347,"org.easymock.tests.UsageVarargTest.varargShortAccepted":477,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":446,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":418,"org.easymock.tests2.UsageConstraintsTest.cmpTo":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests2.CompareToTest.testLessThan":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":313,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":355,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":201,"org.easymock.tests.UsageTest.unexpectedCallWithArray":279,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":416,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":348,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":425,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.samples.ExampleTest.addAndChangeDocument":44,"org.easymock.tests2.ConstraintsToStringTest.notToString":501,"org.easymock.tests.UsageStrictMockTest.testVerify":429,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":53,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests2.CompareToTest.testGreateThan":525,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":451,"org.easymock.tests.LimitationsTest.abstractClass":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":452,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104}}]
