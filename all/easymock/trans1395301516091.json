[{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[12,13,14,0,15,16,17,18,19,20,21,22,23,24,25,1,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[36,37],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:228","sourceCode":"return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,13,14,0,15,16,17,18,19,20,21,22,128,129,130,131,42,23,24,25,1,26,27,28,29,30,31,32,33,43,132,133,44,45,46,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3,4,160,161,162,163,164,165,166,167,168,169,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,48,185,186,187,188,189,190,191,192,193,194,195,49,196,197,198,199,200,201,202,203,204,205,50,206,51,207,208,209,40,41,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,52,229,230,231,232,233,234,5,235,236,6,53,54,237,55,56,238,239,57,58,59,240,241,242,60,61,62,63,243,64,244,245,246,65,66,247,248,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,91,287,288,289,290,291,68,292,293,294,70,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,321,322,323,324,325,326,71,327,72,328,73,74,75,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,36,347,348,349,37,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,78,414,415,416,417,418,419,420,421,422,423,424,79,80,81,425,92,426,427,428,429,430,39,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,82,447,448,449,450,451,452,453,454,455,83,456,84,85,457,458,86,87,88,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,89,90,481,482,483,484,34,485,35,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[37],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[94,95,96,97,16,17,42,27,28,43,133,44,45,46,134,47,48,49,205,51,208,213,214,218,219,227,52,229,234,235,53,54,55,56,239,57,58,59,60,61,62,63,64,245,65,66,248,67,68,71,72,328,73,74,75,329,341,342,343,355,356,374,377,378,379,380,381,382,78,419,421,422,79,80,81,82,83,456,84,85,86,87,88,460,463,464,465,475,478,479,480,89,90],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[93,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,13,14,0,15,16,17,18,19,20,21,22,128,129,130,131,42,23,24,25,1,26,27,28,29,30,31,32,33,43,132,133,44,45,46,134,135,138,140,141,143,144,147,148,149,150,151,153,156,157,158,159,3,4,161,165,166,167,168,169,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,48,185,186,187,188,189,190,191,192,193,194,195,49,196,197,198,199,200,202,203,204,205,50,206,51,207,209,40,41,210,211,214,215,217,218,221,222,225,226,52,231,232,233,234,6,53,56,238,239,57,58,59,240,241,242,60,61,62,63,243,64,244,246,65,247,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,91,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,318,319,320,38,321,322,323,324,325,326,71,327,72,328,73,74,75,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,36,347,348,349,37,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,377,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,78,414,415,416,417,418,419,420,421,422,423,424,79,80,81,425,92,426,427,428,429,430,39,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,82,447,448,449,450,451,452,453,454,455,83,456,84,85,457,458,86,87,88,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,89,90,481,482,483,484,34,485,35,486,486,487,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[98,100,190,192],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[94,95,96,97,133,45,46,239,57,60,61,72,328,74,75,82,456,85,86,87,480,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[141],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[496,497,72,498,499,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[98],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,105,106,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"prefix"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,13,14,0,15,16,17,18,19,20,21,22,128,129,130,131,42,23,24,25,1,26,27,28,29,30,31,32,33,43,132,133,44,45,46,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3,4,161,162,163,165,166,167,168,169,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,48,185,186,187,188,189,190,191,192,193,194,195,49,196,197,198,199,200,201,202,203,204,205,50,206,51,207,208,209,504,40,41,210,211,212,213,214,215,216,217,218,219,220,505,506,507,508,509,510,221,222,223,224,225,226,227,52,229,231,232,233,234,235,236,6,53,54,55,56,238,239,57,58,59,240,241,242,60,61,62,63,243,64,244,245,246,65,66,247,248,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,282,283,284,285,286,91,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,318,319,320,38,321,322,323,324,325,326,71,327,72,328,73,74,75,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,36,347,348,349,37,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,78,414,415,416,417,418,419,420,421,422,423,424,79,80,81,425,92,426,427,428,429,430,39,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,82,447,448,449,450,451,452,453,454,455,83,456,84,85,457,458,86,87,88,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,89,90,481,482,483,484,34,485,35,486,487,488,489,490,491,492,493,494,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[533],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[534],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,12,13,14,0,15,16,17,18,19,20,21,22,128,129,130,131,42,23,24,25,1,26,27,28,29,30,31,32,33,43,132,133,44,45,46,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3,4,160,161,162,163,165,166,167,168,169,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,48,185,186,187,188,189,190,191,192,193,194,195,49,196,197,198,199,200,201,202,203,204,205,50,206,51,207,208,209,504,40,41,210,211,212,213,214,215,216,217,218,219,220,505,506,507,508,509,510,221,222,223,224,225,226,227,228,52,229,230,231,232,233,234,5,235,236,6,53,54,237,55,56,238,239,57,58,59,240,241,242,60,61,62,63,243,64,244,245,246,65,66,247,248,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,282,283,284,285,286,91,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,38,321,322,323,324,325,326,71,327,72,328,73,74,75,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,36,347,348,349,37,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,78,414,415,416,417,418,419,420,421,422,423,424,79,80,81,425,92,426,427,428,429,430,39,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,82,447,448,449,450,451,452,453,454,455,83,456,84,85,457,458,86,87,88,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,89,90,481,482,483,484,34,485,35,486,487,488,489,490,491,492,493,494,495],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests2.UsageTest.argumentsOrdered":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":369,"org.easymock.tests.MockingTest.testPartialClassMocking":361,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":93,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":226,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":532,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":319,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":260,"org.easymock.samples.ExampleTest.answerVsDelegate":489,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":379,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":67,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":346,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageTest.moreThanOneArgument":456,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":352,"org.easymock.tests.UsageTest.argumentsOrdered":87,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":451,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":516,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.times":306,"org.easymock.tests2.DependencyTest.testClassMocking":223,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":440,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":376,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.DelegateToTest.testDelegate":257,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":289,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":515,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":473,"org.easymock.tests2.DependencyTest.testClassMockingSupport":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":300,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":378,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":519,"org.easymock.samples.PartialClassMockTest.testGetArea":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":301,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":183,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":399,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":182,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.MockClassControlTest.testEquals":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":471,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":353,"org.easymock.samples.ExampleTest.voteForRemovals":493,"org.easymock.tests.UsageVarargTest.allKinds":418,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":472,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":337,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":51,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":520,"org.easymock.samples.ExampleTest.voteForRemoval":490,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":318,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":380,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":200,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":512,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":282,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":368,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":245,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":395,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":80,"org.easymock.tests.UsageExpectAndReturnTest.longType":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":469,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":190,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":350,"org.easymock.tests.UsageCallCountTest.tooManyCalls":81,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":336,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":367,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":181,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":130,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":468,"org.easymock.tests.MockTypeTest.fromEasyMockClass":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests.UsageExpectAndReturnTest.object":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":248,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":91,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":404,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":76,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":310,"org.easymock.tests2.CaptureTest.testCaptureMultiple":533,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":383,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":518,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.ReplayStateInvalidCallsTest.times":524,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":405,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.UsageTest.resumeIfFailure":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":371,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":397,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":439,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":482,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":445,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":123,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":255,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":522,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":291,"org.easymock.samples.ConstructorCalledMockTest.testTax":486,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":166,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":514,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":69,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":152,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":483,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests2.UsageConstraintsTest.any":179,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":304,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":407,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":530,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":507,"org.easymock.tests2.NameTest.nameForMocksControl":97,"org.easymock.tests2.MockedExceptionTest.testMockedException":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":140,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":458,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":362,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":529,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":526,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":510,"org.easymock.samples.ExampleTest.removeNonExistingDocument":494,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":41,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":142,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":160,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":453,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":338,"org.easymock.tests2.UsageTest.defaultResetToNice":242,"org.easymock.samples.ExampleTest.voteAgainstRemovals":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.UsageVarargTest.differentLength":78,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":203,"org.easymock.tests.UsageTest.openCallCountByLastCall":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":261,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":508,"org.easymock.tests.UsageThrowableTest.throwCheckedException":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":217,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":528,"org.easymock.tests2.NameTest.nameForNiceMock":96,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":211,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":523,"org.easymock.tests2.DependencyTest.testInterfaceMocking":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.DelegateToTest.testStubDelegate":254,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":328,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":406,"org.easymock.tests.UsageExpectAndReturnTest.floatType":390,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":487,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":389,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.samples.SupportTest.addDocument":481,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":216,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":513,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":143,"org.easymock.tests.GenericTest.testPackageScope":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":511,"org.easymock.tests2.NameTest.nameForMock":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":400,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests2.MockedExceptionTest.testRealException":131,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":436,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":320,"org.easymock.tests2.NameTest.nameForStrictMock":95,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":165,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":517,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":118,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests.UsageRangeTest.combination":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":144,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":92,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":79,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":531,"org.easymock.tests2.UsageConstraintsTest.cmpTo":180,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":124,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":527,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":402,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":495,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":470,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":449,"org.easymock.tests.LimitationsTest.abstractClass":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":394,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":450,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66}}]
