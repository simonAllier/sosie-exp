[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.Range:36","failures":[26,27,28,29,30,31,32,33,34,35,36,37,9,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,10,11,12,13,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,6,14,231,15,16,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,0,1,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,21,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,3,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,22,443,23,24,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[463],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[82,269,434,436,437,438],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,9,81,84,85,86,5,498,499,10,11,12,13,14,15,16,21,500,7,501,502,503,504,22,23,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[189],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[71,107,108,115,122,166,170,201,209,210,217,224,393],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[37,9,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,80,82,83,86,93,94,95,96,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,132,133,134,135,163,10,11,12,13,165,166,167,168,169,170,171,172,173,174,178,179,181,197,198,199,200,201,202,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,6,14,231,15,16,232,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,265,266,267,0,1,268,269,270,271,272,273,275,276,277,278,279,280,281,282,21,283,284,285,286,287,288,289,290,291,292,300,302,306,307,308,310,313,314,316,317,318,319,320,322,323,324,326,327,328,329,330,331,332,334,336,337,338,339,347,357,360,370,376,384,391,392,393,394,395,398,399,400,402,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,434,435,436,438,439,440,441,442,22,443,23,24,444,445,446,447,448,450,451,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[37,9,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,505,505,80,82,83,86,93,94,95,96,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,131,132,133,134,135,163,10,11,12,13,165,166,167,168,169,170,171,172,173,174,178,179,181,197,198,199,200,201,202,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,6,14,231,15,16,232,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,265,266,267,0,1,268,269,270,271,272,273,275,276,277,278,279,280,281,282,21,283,284,285,286,287,288,289,290,291,292,300,302,306,307,308,310,313,314,316,317,318,319,320,322,323,324,326,327,328,329,330,331,332,334,336,337,338,339,347,357,360,370,376,384,391,392,393,394,395,398,399,400,402,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,434,435,436,438,439,440,441,442,22,443,23,24,444,445,446,447,448,450,451,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[447,448,451,453,454,456,466,471,481,483,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[142,396,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[91,160,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[37,41,66,67,68,69,70,71,83,11,174,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,243,245,246,247,248,249,250,281,287,410,411,412,413,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[13,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[37,41,59,60,66,67,68,69,70,71,83,11,174,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,243,245,246,247,248,249,250,281,287,410,411,412,413,440],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[38,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,9,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,10,11,12,13,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,6,14,231,15,16,232,233,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,0,1,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,21,283,284,285,286,287,288,289,290,291,292,528,529,530,531,532,533,293,294,295,297,298,299,300,302,303,305,306,307,308,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,3,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,405,534,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,22,443,23,24,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":448,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":146,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":285,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":280,"org.easymock.tests2.DelegateToTest.testReturnException":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.MockingTest.testPartialClassMocking":178,"org.easymock.tests.MockClassControlTest.testToString":74,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":428,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":17,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":527,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageTest.wrongArguments":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":201,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":31,"org.easymock.tests2.UsageConstraintsTest.testNull":451,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":79,"org.easymock.tests2.CaptureTest.testPrimitive":484,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":204,"org.easymock.tests.UsageVarargTest.varargIntAccepted":47,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":511,"org.easymock.tests.ReplayStateInvalidUsageTest.times":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":347,"org.easymock.tests2.DependencyTest.testClassMocking":474,"org.easymock.tests2.AnswerTest.answer":395,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":394,"org.easymock.tests2.CaptureTest.testAnd":481,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":28,"org.easymock.tests2.UsageTest.strictResetToDefault":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":64,"org.easymock.tests2.DelegateToTest.testDelegate":438,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":208,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":510,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":97,"org.easymock.tests2.DependencyTest.testClassMockingSupport":475,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":485,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":392,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":187,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":30,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":514,"org.easymock.samples.PartialClassMockTest.testGetArea":278,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":188,"org.easymock.tests.MockingTest.testInterfaceMocking":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.UsageTest.niceToStrict":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":365,"org.easymock.tests2.ThreadingTest.testChangeDefault":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":136,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":306,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":83,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":460,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":490,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":48,"org.easymock.tests.MockClassControlTest.testEquals":78,"org.easymock.tests2.EasyMockSupportClassTest.testAll":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.CaptureTest.testCaptureAll":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":95,"org.easymock.tests.MockNameTest.defaultName":203,"org.easymock.tests2.UsageConstraintsTest.testMatches":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.samples.ExampleTest.voteForRemovals":273,"org.easymock.tests.UsageVarargTest.allKinds":56,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":96,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":249,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests2.UsageConstraintsTest.greaterThan":464,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":339,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":515,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":242,"org.easymock.samples.ExampleTest.voteForRemoval":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":507,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":265,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":494,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":417,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":493,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":55,"org.easymock.tests.GenericTest.testBridgedEquals":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":134,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":469,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":135,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests.MockingTest.testNiceClassMocking":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":318,"org.easymock.tests.MockingTest.testClassMocking":176,"org.easymock.tests2.UsageConstraintsTest.testContains":459,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":412,"org.easymock.tests2.UsageConstraintsTest.testFind":450,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":497,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndReturnTest.object":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":422,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":50,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":104,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":90,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":123,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":45,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":82,"org.easymock.tests.MockClassControlTest.testHashCode":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":391,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":401,"org.easymock.tests.UsageVarargTest.varargCharAccepted":49,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":234,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":425,"org.easymock.tests.DefaultClassInstantiatorTest.object":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":98,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":102,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":513,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.ReplayStateInvalidCallsTest.times":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":87,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":520,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":502,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":376,"org.easymock.tests2.UsageTest.resumeIfFailure":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.StubTest.stubWithReturnValue":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":8,"org.easymock.samples.SupportTest.voteForRemovals":267,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":158,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":92,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":467,"org.easymock.tests2.DelegateToTest.testWrongClass":436,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":517,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":308,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":200,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":509,"org.easymock.tests2.CaptureTest.testCaptureNone":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":264,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":529,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":54,"org.easymock.tests2.ThreadingTest.testThreadSafe":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":132,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":105,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":457,"org.easymock.tests2.StubTest.stub":439,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":443,"org.easymock.tests2.SerializationTest.testClass":478,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":384,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":525,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":444,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":530,"org.easymock.tests2.NameTest.nameForMocksControl":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":496,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":310,"org.easymock.tests.MockingTest.testNicePartialClassMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":331,"org.easymock.tests2.CaptureTest.testCaptureLast":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":524,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":454,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":324,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":468,"org.easymock.tests.MockingTest.testTwoMocks":177,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":521,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":472,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":533,"org.easymock.samples.ExampleTest.removeNonExistingDocument":274,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":532,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":503,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":407,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":72,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":404,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.samples.ExampleTest.voteAgainstRemoval":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":338,"org.easymock.tests.LimitationsTest.privateConstructor":162,"org.easymock.tests2.UsageConstraintsTest.testNotNull":471,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":410,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":250,"org.easymock.tests2.UsageTest.defaultResetToNice":288,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":122,"org.easymock.tests.UsageVarargTest.differentLength":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.CallbackTest.callback":427,"org.easymock.tests2.UsageConstraintsTest.equals":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":202,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":531,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.MockingTest.testStrictClassMocking":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":322,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":400,"org.easymock.tests.ObjectMethodsTest.testHashCode":103,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":523,"org.easymock.tests2.NameTest.nameForNiceMock":431,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":409,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":518,"org.easymock.tests2.DependencyTest.testInterfaceMocking":476,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":399,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":311,"org.easymock.tests.UsageVarargTest.varargLongAccepted":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":125,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":402,"org.easymock.tests2.ConstraintsToStringTest.orToString":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":446,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":293,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":486,"org.easymock.tests2.SerializationTest.test":479,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":236,"org.easymock.tests2.UsageConstraintsTest.testSame":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":108,"org.easymock.samples.SupportTest.addDocument":266,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":140,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":506,"org.easymock.tests2.NameTest.nameForMock":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":65,"org.easymock.tests2.MockedExceptionTest.testRealException":413,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":299,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":149,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":196,"org.easymock.tests2.NameTest.nameForStrictMock":430,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":305,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":297,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":466,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":238,"org.easymock.tests.ErrorMessageTest.testGetters":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":302,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":512,"org.easymock.tests2.UsageConstraintsTest.lessThan":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":366,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":528,"org.easymock.tests2.UsageConstraintsTest.testOr":453,"org.easymock.tests.UsageRangeTest.combination":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":327,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":120,"org.easymock.tests.UsageVarargTest.varargShortAccepted":52,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":133,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":526,"org.easymock.tests2.UsageConstraintsTest.cmpTo":458,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":139,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests2.CaptureTest.testCaptureFromStub":492,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":522,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":131,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":121,"org.easymock.tests2.UsageConstraintsTest.constraints":447,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests2.ConstraintsToStringTest.notToString":501,"org.easymock.tests.UsageStrictMockTest.testVerify":233,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":94,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.LimitationsTest.abstractClass":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":46,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":20}}]
