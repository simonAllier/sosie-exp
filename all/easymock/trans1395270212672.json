[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,1,2,39,3,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[261,249],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[262,263,264,265,266,267],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[11,108,205,207,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[268,269,270,271,272,273,199,202,212,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,275,14,276,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,277,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,76,278,279,280,281,282,283,284,285,286,287,288,289,269,270,271,290,291,292,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,293,294,295,272,296,297,96,97,264,298,98,99,299,300,100,101,102,103,104,105,106,107,301,108,109,110,302,303,304,265,111,305,112,113,306,307,308,309,114,115,310,116,311,312,313,314,315,119,316,317,318,319,320,321,120,121,122,123,124,125,126,127,322,323,324,325,326,327,328,329,128,330,331,332,333,334,335,129,130,131,132,133,336,337,338,339,340,341,342,343,344,345,346,137,138,139,140,347,141,142,143,144,145,146,348,147,349,350,148,149,150,351,151,152,352,153,154,353,354,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,174,175,176,179,180,181,182,183,355,198,199,202,203,356,357,358,359,205,206,207,209,360,210,361,362,211,363,364,214,365,366,367,368,369,370,215,216,217,371,218,372,219,220,221,373,374,222,223,375,376,224,377,225,226,378,379,380,381,382,227,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,383,254,255,256,257,384,258,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[385,386,387],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[278,388,389,390,391,392],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[393,394,395],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[151,352,153,154,353,354,155,157,396,158,159,161],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[397,241,246,257],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[151,352,158,234,235,237,239,240,398,251,255],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[417,182,183,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[330,145,372,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[418,419,420],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[261,249],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[262,263,264,265,266,267],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[182,421,422,423,424,425,426,427,428,429,430,260,431],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[432,433,434],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[262,263,264,265,266,267],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[262,263,264,265,266,267],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[43,44,262,418,263,435,436,437,438,88,93,94,95,97,264,298,98,299,300,101,301,108,109,439,110,302,304,265,111,112,113,306,307,342,440,140,141,142,143,149,150,172,186,190,193,441,266,442,419,420,443,444,445,267,446,447,204,216,217,371,372,373,374,375,224,377,225,226,378,379,235,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[9,10,12,13,14,16,1,3,44,45,46,47,48,49,52,53,55,56,57,59,60,61,62,63,64,65,66,67,70,88,111,112,113,114,115,116,123,124,125,126,129,130,131,132,133,137,138,139,141,142,143,144,145,146,147,148,149,150,165,167,168,169,170,197,198,199,200,201,202,203,206,210,211,212,213,214,224,225,226,227,228,260],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[248],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[182,423,424,427,260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[448,118,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[151,352,158,234,235,237,239,240,398,251,255],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[10,11,12,13,275,14,15,449,16,399,450,451,400,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,277,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,304,111,305,112,113,306,120,121,122,123,124,125,126,127,129,130,131,132,133,336,337,338,339,340,342,343,344,345,346,137,138,142,145,149,151,152,155,156,158,161,162,163,164,166,171,176,179,180,182,183,184,185,186,187,188,189,190,192,193,194,195,196,205,206,207,209,211,212,213,215,216,217,218,372,219,220,222,223,376,224,377,225,226,378,227,228,229,230,231,235,237,239,240,255],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[19,20,27,34,44,45,52,59,281,106,126,138,381],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[182,422,423,424,427,428,429,260,431],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[148,452,210,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":235,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":374,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":372,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":400,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":102,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":269,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageTest.wrongArguments":371,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":272,"org.easymock.tests2.UsageConstraintsTest.testNull":237,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":153,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":71,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.ReplayStateInvalidUsageTest.times":332,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":382,"org.easymock.tests2.CaptureTest.testAnd":151,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":66,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":75,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":440,"org.easymock.tests2.CaptureTest.testCapture1_2446744":154,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":380,"org.easymock.tests.UsageThrowableTest.throwError":80,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":327,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":295,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":127,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":273,"org.easymock.tests2.ThreadingTest.testChangeDefault":395,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":385,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":266,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":55,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":433,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":245,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":277,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.CaptureTest.testCaptureAll":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":93,"org.easymock.samples.BasicClassMockTest.testPrintContent":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":86,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":106,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":427,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":65,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":150,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":348,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":101,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":47,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":383,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":78,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":418,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":85,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testNiceClassMocking":313,"org.easymock.tests.MockingTest.testClassMocking":309,"org.easymock.tests2.UsageConstraintsTest.testContains":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":236,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":122,"org.easymock.tests.MockTypeTest.fromEasyMockClass":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.object":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":423,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":324,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":39,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":60,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":419,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":379,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":384,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":8,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":134,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":322,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":77,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":270,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":104,"org.easymock.tests2.StubTest.stubWithReturnValue":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":117,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":118,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":177,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":40,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":262,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":2,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":95,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":162,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":450,"org.easymock.tests2.CaptureTest.testCapture_2617107":352,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":242,"org.easymock.tests2.StubTest.stub":229,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":330,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":377,"org.easymock.tests2.SerializationTest.testClass":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":240,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":373,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":256,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":393,"org.easymock.samples.ExampleTest.removeNonExistingDocument":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ConstraintsToStringTest.andToString":445,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":365,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":288,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":94,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests2.UsageConstraintsTest.testNotNull":255,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":87,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":435,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":263,"org.easymock.tests.MockingTest.testStrictClassMocking":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":181,"org.easymock.tests2.CompareToTest.testGreateOrEqual":397,"org.easymock.tests.ObjectMethodsTest.testHashCode":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":426,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":424,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":4,"org.easymock.tests.UsageExpectAndReturnTest.floatType":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":260,"org.easymock.tests2.ConstraintsToStringTest.orToString":441,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests.UsageThrowableTest.noUpperLimit":81,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":274,"org.easymock.tests2.SerializationTest.test":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":353,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":434,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":45,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.samples.SupportTest.addDocument":449,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":128,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":56,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":67,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":436,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":335,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests2.UsageConstraintsTest.lessThan":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":158,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests.UsageRangeTest.combination":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":57,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":243,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":178,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":264,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":58,"org.easymock.tests2.CaptureTest.testCapture":396,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests2.ConstraintsToStringTest.notToString":442,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":399,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests2.CompareToTest.testGreateThan":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337}}]
