[{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,5,6,52,7,53,8,9,54,55,56,57,10,58,59,11,60,61,12,62,63,64,65,66,67,13,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,14,15,116,117,118,119,120,121,122,123,124,125,126,16,17,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,20,198,199,200,201,202,203,204,205,21,22,206,207,23,208,209,210,211,212,213,214,215,216,217,218,24,219,220,221,222,223,25,26,224,27,225,226,227,228,229,28],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[230,0,1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[30,31,32,33,34,35,231,36,44,232,45,46,47,233,234,235,236,237,238,48,239,49,50,51,5,6,52,7,53,8,9,54,55,56,57,10,58,59,11,60,61,12,62,63,64,65,66,67,13,68,69,71,240,241,242,243,72,73,74,75,244,245,76,246,247,248,249,79,80,81,82,83,84,85,86,250,87,88,89,90,91,92,251,252,93,94,95,96,97,98,109,111,112,113,253,114,115,14,15,254,255,256,257,116,118,119,122,123,258,124,125,126,16,17,127,128,259,129,130,260,131,261,262,263,264,265,266,267,268,269,270,271,272,136,273,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,274,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,187,188,189,190,191,292,192,193,194,195,196,197,20,198,199,200,201,202,203,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,204,205,310,311,21,22,312,313,206,314,315,316,230,207,317,318,23,208,209,210,319,211,212,213,214,215,216,217,320,218,24,321,219,220,322,323,324,325,326,327,328,221,329,222,223,25,26,224,330,27,225,226,227,228,331,229,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[332,332,333,333,51,5,7,53,8,9,10,59,11,61,12,62,67,13,68,251,125,136,161,162,163,164,165,275,276,277,278,279,213,214,217,222,227,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[74,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[105,16,17,263,335,158,159,336,337,338,339,340,341,342,343,344,25,26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:101","sourceCode":"this.java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Arrays.java.util.Arrays.asList(java.lang.reflect.Method[]))","type":"CtAssignmentImpl"},"failures":[41,332,332,333,333,237,71,345,244,245,346,347,76,246,77,78,348,247,248,249,94,118,119,122,123,259,261,349,263,264,265,266,350,351,352,353,133,354,355,356,357,358,134,359,360,135,361,362,157,158,159,334,363,339,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[364],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[365,320,366],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[367],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[334,368],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[94,95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[30,32,33,35,43,163,301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[237,238,48,239,267,268,269,270,271,272,273,369,370,371,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[60,115,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[6,52,53,9,54,373,62,67,83,85,92],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[332,333,374,375,376,377,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[74,75,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[253,255,256,16,379,310,311,312,313,218,329,25,225,226],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[39,40,41,332,332,333,333,237,238,48,71,244,245,346,347,76,246,77,78,247,248,249,94,96,117,118,119,120,122,123,128,259,130,260,131,261,262,381,263,264,265,266,382,350,132,383,384,133,134,135,335,385,386,157,158,159,338,274,160,363,166,293,294,295,296,297,298,299,300,339,342,230,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[94,95,96,387],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[388],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[389,390,391,392,310,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.UsageTest.argumentsOrdered":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":37,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":157,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":308,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":156,"org.easymock.tests.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests.ReplayStateInvalidUsageTest.times":288,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":243,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":219,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":241,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":282,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":283,"org.easymock.tests2.CompareToTest.testLessOrEqual":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":306,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":178,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":384,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":154,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testMatches":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":280,"org.easymock.samples.ExampleTest.voteForRemovals":35,"org.easymock.tests.UsageVarargTest.allKinds":196,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests2.UsageConstraintsTest.greaterThan":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":266,"org.easymock.samples.ExampleTest.voteForRemoval":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":261,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":195,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":170,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":155,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.UsageConstraintsTest.testContains":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":262,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":191,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageVarargTest.varargCharAccepted":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests2.UsageTest.openCallCountByLastCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":230,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":264,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":66,"org.easymock.tests2.SerializationTest.testAllMockedMethod":96,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":366,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":390,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":387,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":63,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":290,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":391,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":226,"org.easymock.tests.UsageVarargTest.varargByteAccepted":194,"org.easymock.tests2.ThreadingTest.testThreadSafe":44,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":210,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":216,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageExpectAndThrowTest.longType":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":380,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":22,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":158,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":131,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":320,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.samples.ExampleTest.removeNonExistingDocument":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":284,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":1,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":45,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":139,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.samples.ExampleTest.voteAgainstRemovals":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":182,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":21,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.UsageCallCountTest.tooFewCalls":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":392,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":121,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":47,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":69,"org.easymock.samples.ExampleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":222,"org.easymock.tests.UsageVarargTest.varargLongAccepted":193,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":333,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":20,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests2.SerializationTest.test":95,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":367,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":285,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":179,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":220,"org.easymock.tests2.MockedExceptionTest.testRealException":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":291,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":2,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":259,"org.easymock.tests.UsageTest.wrongArguments":311,"org.easymock.tests2.MockBuilderTest.testWithConstructor":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":29,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":281,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":209,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":36,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188}}]
