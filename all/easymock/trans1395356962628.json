[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,3,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[47,48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[53,54,55,56,57,58,13,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[66,67,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,3,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,53,93,94,95,96,97,98,99,100,101,0,1,102,2,103,3,4,104,45,105,106,107,108,109,110,111,112,6,113,114,115,116,7,117,118,8,119,9,120,121,122,123,124,125,126,10,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,54,177,178,179,180,181,55,56,182,183,184,185,186,187,188,189,190,191,192,193,194,195,68,196,197,198,199,200,201,202,203,204,205,206,207,11,208,209,210,211,212,213,214,215,216,217,218,219,220,57,221,222,58,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,12,249,250,251,252,253,13,59,46,254,255,256,257,258,258,259,260,261,262,263,264,265,266,267,268,269,270,271,61,62,272,273,63,64,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,14,295,296,297,298,299,300,301,302,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,65,35,303,304,36,37,38,39,40,305,306,44,307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[308,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[310,132,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[100,111,113,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[69,70,71,72,73,74,314,75,76,77,78,79,80,81,82,83,84,315,316,85,86,317,318,319,320,321,322,323,87,324,88,89,90,91,92,53,93,94,95,96,97,98,325,326,327,328,329,99,330,331,332,333,334,335,100,101,0,1,336,102,2,103,3,4,104,5,45,105,106,107,108,109,110,111,112,6,113,114,115,116,7,117,118,8,119,9,120,121,122,123,124,125,126,10,127,128,129,130,310,337,131,132,133,338,134,135,136,137,138,139,140,339,141,340,341,142,143,144,145,342,343,146,344,345,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,346,166,347,348,349,167,168,169,350,170,351,66,171,172,352,173,174,175,176,54,177,178,179,180,181,55,56,182,183,184,185,186,187,353,354,355,356,357,188,358,359,360,361,362,363,189,190,191,192,364,193,194,195,365,68,196,197,366,367,368,198,369,370,199,371,372,373,374,375,376,377,378,379,200,380,381,382,383,384,201,385,386,387,388,389,390,391,392,202,203,204,393,205,206,207,11,208,209,210,211,394,212,213,395,396,214,215,216,217,218,397,398,399,400,401,402,403,404,405,219,220,57,221,222,58,223,224,406,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,12,249,250,407,251,252,408,409,410,253,13,59,46,254,411,412,413,414,415,416,417,418,419,311,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,255,256,440,257,441,442,443,444,445,446,447,259,260,261,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,262,464,465,466,263,264,265,266,267,268,269,467,468,469,470,471,472,309,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,270,271,61,62,272,273,63,64,274,275,276,277,489,278,279,280,281,282,283,284,285,286,287,288,289,290,490,491,291,292,293,294,14,295,296,297,298,299,300,301,302,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,65,35,303,304,36,37,38,39,40,492,493,494,495,496,41,42,43,305,497,306,44,498,499,307],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[69,70,71,72,73,74,314,75,85,318,319,320,321,323,87,88,89,90,91,92,53,93,94,95,96,97,98,100,101,0,1,102,2,103,3,4,104,45,105,106,107,108,109,110,111,112,6,113,114,115,116,7,117,118,8,119,9,120,121,122,123,124,125,126,10,127,128,129,130,131,132,133,338,134,135,136,137,138,139,140,141,341,142,143,144,145,342,146,147,148,149,150,151,165,166,347,349,167,168,171,172,173,174,175,176,54,177,178,179,180,181,55,56,182,183,184,185,186,187,190,191,194,195,68,196,197,388,389,390,391,202,203,204,205,206,207,11,208,209,210,211,212,213,214,215,216,217,218,398,219,220,57,221,222,58,223,224,406,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,12,249,250,407,251,252,253,13,59,46,254,412,413,437,438,255,256,440,257,441,442,443,259,260,261,449,450,451,454,457,458,459,460,461,262,465,466,263,264,265,266,267,268,269,467,468,469,470,471,472,309,473,474,475,476,477,478,479,480,481,482,483,484,485,270,271,61,62,272,273,63,64,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,14,295,296,297,298,299,300,301,302,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,65,35,303,304,36,37,38,39,40,305,497,306,44,499,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[87,88,89,91,92,100,101,0,1,102,2,103,3,4,104,5,45,105,106,107,108,109,110,111,112,6,113,114,115,116,7,117,118,8,119,9,120,121,122,123,124,125,126,10,127,128,129,130,338,141,142,150,152,57,221,12,249,46,254,411,285,286,287,288,289,290,292,293,294,14,295,296,297,65,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[76,76,77,77,79,83,84,134,135,137,138,139,140,141,142,143,144,145,146,165,500,166,347,167,168,169,170,171,172,501,173,186,189,190,191,192,194,195,68,197,198,199,200,201,502,212,213,395,439,255,256,257,454,459,262,479,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":255,"org.easymock.tests.MockClassControlTest.testToString":480,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":387,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":442,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":492,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":286,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":290,"org.easymock.tests.ReplayStateInvalidUsageTest.times":474,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.DependencyTest.testClassMocking":315,"org.easymock.tests2.AnswerTest.answer":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":98,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":456,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":496,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":302,"org.easymock.tests2.DependencyTest.testClassMockingSupport":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":411,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":96,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":35,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":386,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests.MockingTest.testInterfaceMocking":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":445,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":453,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":375,"org.easymock.tests2.ThreadingTest.testChangeDefault":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":489,"org.easymock.tests.MockClassControlTest.testEquals":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.CaptureTest.testCaptureAll":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":300,"org.easymock.tests.MockNameTest.defaultName":491,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.samples.BasicClassMockTest.testPrintContent":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":39,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":404,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":145,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":405,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":392,"org.easymock.tests2.CaptureTest.testCaptureFirst":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":172,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.GenericTest.testBridgedEquals":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":298,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":490,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":487,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":38,"org.easymock.tests.MockingTest.testNiceClassMocking":443,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":466,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":219,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":451,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":493,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":306,"org.easymock.tests.MockClassControlTest.testHashCode":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":377,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":398,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":41,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":449,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.CapturesMatcherTest.test":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":486,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.StubTest.stubWithReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":67,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":410,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":297,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":322,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":476,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":446,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":48,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":380,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":83,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":14,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":473,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":309,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests2.NameTest.nameForMocksControl":391,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":49,"org.easymock.tests2.MockedExceptionTest.testMockedException":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":257,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CompareToTest.testNotComparable":313,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":412,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":439,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":52,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":400,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":173,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":131,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":345,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":40,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":326,"org.easymock.tests2.CallbackTest.callback":206,"org.easymock.tests2.UsageConstraintsTest.equals":336,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":50,"org.easymock.tests.UsageThrowableTest.throwCheckedException":37,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":193,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":133,"org.easymock.tests.ObjectMethodsTest.testHashCode":450,"org.easymock.tests2.NameTest.nameForNiceMock":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests2.AnswerTest.stubAnswer":132,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":221,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":351,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":146,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":317,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":81,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":364,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":441,"org.easymock.tests2.NameTest.nameForMock":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":389,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":401,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":376,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":47,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":373,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":403,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":75,"org.easymock.tests.UsageStrictMockTest.testVerify":406,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":78,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":299,"org.easymock.tests2.CompareToTest.testGreateThan":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":288,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
