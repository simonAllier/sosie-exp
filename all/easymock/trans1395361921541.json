[{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[8,10,11,27,12,13,14,15,16,17,19,28,29,30,31,32,33,21,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,22,55,56,57,58,59,60,61,62,63,64,65,66,67,23,68,69,70,71,72,73,74,75,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[76,77,78,79,80,81,82,20,42,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[85,86,87,87,88,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[76,77,78,79,89,90,80,81,91,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[34,86,35,36,37,38,39,40,41,42,83,132,133,43,134,135,136,44,137,138,45,139,140,141,142,143,144,145,146,147,46,148,149,150,151,152,47,153,154,48,49,155,50,51,156,52,53,54,87,87,88,88,22,55,56,57,58,59,60,61,62,63,64,65,157,66,67,23,158,68,69,70,71,72,73,74,159,160,161,162,163,164,165,166,167,75,168,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[169],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[170,17,171,172,173,174,36,175,107,108,176,177,69,71,72,178,179,74,180,122,123,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[1],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[182,183,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:161","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    final java.lang.reflect.Field java.lang.reflect.Field = org.easymock.internal.Injector.org.easymock.internal.Injector.getFieldByName(java.lang.Class<?>, org.easymock.internal.Injection.getQualifier());\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n        java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n    } \n}","type":"CtForEachImpl"},"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:203","sourceCode":"T T","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[100,101,102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[106,108,109,110,111,112,113,114,115,116,120,121,123,124,125,126,127,128,130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[20,207,28,208],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[210,211,212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[214,215,216,217,170,8,12,13,14,15,16,17,19,218,171,219,220,221,172,173,222,223,174,224,225,226,20,207,28,29,30,227,31,32,33,21,34,36,37,38,39,42,228,229,1,230,231,175,232,106,233,107,108,234,235,236,109,110,176,237,238,239,240,111,112,241,242,243,244,245,246,247,248,3,249,250,251,169,252,253,254,26,255,256,257,258,259,5,260,261,262,6,263,264,265,266,44,45,46,47,267,268,269,270,84,271,272,94,273,95,96,97,98,99,100,274,101,103,104,275,105,276,277,278,279,280,48,49,155,50,281,51,156,52,53,54,282,283,284,113,114,115,116,87,87,88,88,205,22,206,285,286,287,288,289,290,291,292,293,294,55,56,295,296,297,298,299,300,301,302,303,304,305,306,307,308,57,58,59,60,61,62,63,64,309,310,311,312,313,314,315,316,317,318,319,65,66,67,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,71,72,73,348,349,184,350,351,352,353,354,355,356,357,358,359,180,360,120,121,361,122,123,362,363,159,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,124,385,125,386,387,126,127,388,128,181,389,390,391,392,393,394,395,396,75,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,129,130,131,418,419,420,421,422,423,424,425,426,427,428,429],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[40,84,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":384,"org.easymock.tests2.UsageTest.argumentsOrdered":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":2,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":237,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":205,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":398,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests.MockClassControlTest.testToString":59,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":320,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":117,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":392,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":408,"org.easymock.samples.ExampleTest.answerVsDelegate":288,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":179,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":64,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":396,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageVarargTest.varargIntAccepted":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":319,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":335,"org.easymock.tests.LimitationsTest.mockFinalMethod":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":184,"org.easymock.tests.UsageThrowableTest.throwError":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":154,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":210,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":406,"org.easymock.tests.UsageOverloadedMethodTest.overloading":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":255,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":375,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":63,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureAll":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":429,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":413,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":346,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":80,"org.easymock.tests2.UsageConstraintsTest.greaterThan":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":165,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":40,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":220,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":371,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":428,"org.easymock.tests.GenericTest.testBridgedEquals":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":410,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":218,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testNiceClassMocking":74,"org.easymock.tests.MockingTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":9,"org.easymock.tests2.UsageConstraintsTest.testContains":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":417,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":266,"org.easymock.tests.UsageExpectAndReturnTest.object":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":223,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":77,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":388,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":420,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":186,"org.easymock.tests.MockClassControlTest.testHashCode":62,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests2.CaptureTest.testCaptureMultiple":93,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.UsageTest.openCallCountByLastCall":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":60,"org.easymock.tests2.UsageTest.resumeIfFailure":241,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":400,"org.easymock.tests2.StubTest.stubWithReturnValue":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":373,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.samples.SupportTest.voteForRemovals":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":208,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":183,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":260,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":418,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":419,"org.easymock.tests.UsageStrictMockTest.range":122,"org.easymock.samples.ConstructorCalledMockTest.testTax":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":134,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":407,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests.UsageUnorderedTest.message":128,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":427,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":148,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":300,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":395,"org.easymock.tests2.UsageConstraintsTest.any":252,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":399,"org.easymock.tests.UsageExpectAndThrowTest.longType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":163,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":353,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.LimitationsTest.mockNativeMethod":75,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.NameTest.nameForMocksControl":116,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":261,"org.easymock.tests.MockingTest.testTwoMocks":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":263,"org.easymock.samples.ExampleTest.removeNonExistingDocument":293,"org.easymock.tests.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":200,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":187,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":161,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":84,"org.easymock.tests2.MockBuilderTest.testCreateMockString":19,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":139,"org.easymock.tests.UsageExpectAndThrowTest.floatType":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":215,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.LimitationsTest.privateConstructor":167,"org.easymock.tests2.UsageConstraintsTest.testNotNull":6,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":347,"org.easymock.tests2.UsageTest.defaultResetToNice":240,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":394,"org.easymock.tests.UsageCallCountTest.tooFewCalls":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":409,"org.easymock.tests.UsageThrowableTest.throwCheckedException":344,"org.easymock.tests.MockingTest.testStrictClassMocking":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":281,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":217,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":89,"org.easymock.tests2.NameTest.nameForNiceMock":115,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":78,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests2.AnswerTest.stubAnswer":216,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":121,"org.easymock.tests.UsageVarargTest.varargLongAccepted":426,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests.UsageExpectAndReturnTest.floatType":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":259,"org.easymock.tests.UsageThrowableTest.noUpperLimit":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":207,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":160,"org.easymock.tests2.UsageConstraintsTest.testSame":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":365,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":177,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":140,"org.easymock.tests.GenericTest.testPackageScope":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":191,"org.easymock.tests2.NameTest.nameForMock":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":376,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":391,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":91,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":393,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":114,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":162,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.UsageConstraintsTest.testOr":250,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":141,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":301,"org.easymock.tests2.UsageConstraintsTest.cmpTo":253,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":213,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests2.CaptureTest.testCaptureFromStub":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":11,"org.easymock.tests.UsageTest.unexpectedCallWithArray":385,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":378,"org.easymock.tests2.CaptureTest.testCapture":102,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":206,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":411,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":317,"org.easymock.tests.LimitationsTest.abstractClass":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":370,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":318,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":119}}]
