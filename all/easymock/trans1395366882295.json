[{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,6,7,8,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,9,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,13,14,15,16,18,132,133,134,135,136,137,138,139,140,141,142,19,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[188,189,190,191,192,193,194,195,196,95,97,197,198,199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[201,202,203,204],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:327","failures":[201,202,203,204],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[136,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[206,207,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[98,99,208,100,101,209,210,102,104,105,211,106,107,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,213,214,215,10,127,216,13,217,218,143,144,219,220,145,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,222,38,39,40,41,42,43,44,45,46,47,48,49,223,50,51,52,53,6,79,98,99,208,100,101,209,210,102,103,104,105,211,106,107,224,225,226,122,127,227,228,216,13,135,136,229,230,137,205,146,147,148,149,150,20,171,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[31,45,6,7,8,231,66,70,73,82,232,9,233,234,89,235,236,108,124,125,237,238,239,240,216,13,14,15,241,16,17,18,139,19,218,219,220,221,242,243,244,245,20,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[247,248,27,249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[0,1,2,250,251,3,4,213,5,6,7,8,9,215,252,10,11,12,216,13,14,15,16,17,18,19,217,20,21,22],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":236,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":74,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":234,"org.easymock.tests2.StubTest.stubWithReturnValue":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":196,"org.easymock.tests.MockingTest.testPartialClassMocking":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":213,"org.easymock.samples.SupportTest.voteForRemovals":186,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":57,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":55,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":199,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":73,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":25,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":248,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":5,"org.easymock.tests2.CaptureTest.testCapture_2617107":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":251,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.LimitationsTest.mockNativeMethod":126,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":222,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":189,"org.easymock.tests2.NameTest.nameForMocksControl":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":140,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":134,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":21,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":249,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.ConstraintsToStringTest.andToString":4,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.PartialClassMockTest.testGetArea":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":198,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":27,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests2.NameTest.nameForNiceMock":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests.UsageVarargTest.allKinds":205,"org.easymock.tests2.DependencyTest.testInterfaceMocking":54,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.tests2.DelegateToTest.testStubDelegate":94,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":200,"org.easymock.tests2.ConstraintsToStringTest.orToString":0,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":209,"org.easymock.tests2.SerializationTest.test":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":66,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":67,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":158,"org.easymock.tests.GenericTest.testPackageScope":180,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests2.NameTest.nameForMock":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":163,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":193,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":155,"org.easymock.tests.UsageCallCountTest.tooManyCalls":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":159,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":195,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":242,"org.easymock.tests2.NameTest.nameForStrictMock":238,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":226,"org.easymock.tests.UsageExpectAndReturnTest.object":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":81,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":72,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":65,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":247,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":197,"org.easymock.tests.UsageRangeTest.combination":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":167,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":164,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":250,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":201,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests.DefaultClassInstantiatorTest.object":246,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":75,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.UsageTest.unexpectedCallWithArray":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests2.ConstraintsToStringTest.notToString":2,"org.easymock.tests.CapturesMatcherTest.test":212,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":3,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":210,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":157,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70}}]
