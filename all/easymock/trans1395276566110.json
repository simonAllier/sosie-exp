[{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,0,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[246,247,248,249,250],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[251],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[60,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[253,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[173,179,233,234,236,237,238,239,240,245],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[265,266,10,267,268,269,60,67,68,270,112,271,146,272,224],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[274,275,276,277,278,279,51,280,112,113,142,281,282,199,208,212,213,215,283,224,225,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[285,285,286,286,256,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[255,288,289,290,291,292,293,294,295,296,297,298,260],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[299,300,301,285,285,286,286,248,302,288,303,304,287,250,305,297,298,260,306,307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[1,2,3,4,5,6,7,266,8,9,10,267,11,313,314,315,316,317,318,319,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,320,37,38,39,40,41,42,321,43,44,45,46,47,48,49,50,275,276,322,51,323,52,53,54,55,56,324,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,300,100,101,102,103,104,105,106,308,325,280,109,270,110,111,112,113,114,326,115,116,327,328,329,330,117,118,121,122,123,124,125,126,301,127,128,129,130,131,132,133,134,285,285,286,286,135,136,137,138,139,140,141,271,142,143,144,145,273,146,272,147,148,331,248,332,333,281,149,150,151,0,152,153,154,155,156,249,250,264,157,158,159,160,161,162,163,164,165,166,334,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,310,335,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,336,201,202,203,337,204,297,205,206,298,207,208,209,210,211,212,213,338,214,215,216,217,218,339,340,341,342,219,306,307,343,220,283,221,222,223,224,225,226,227,228,229,344,261,230,231,345,262,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[255,288,289,346,290,291,292,293,294,295,347,296,297,298,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[265,348,349,270,350,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,349,352,268,353,354,60,66,67,68,110,112,113,355,350,356,357,358,359,141,222,224,225],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[360,297,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[361,362,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[174,364],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[255,288,289,346,290,291,292,293,295,347,296,297,298,260],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[265,348,349,270,350,351],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,7,8,9,11,313,49,275,276,322,51,323,52,53,324,57,58,59,61,62,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,100,106,110,112,113,115,116,327,328,329,121,122,123,124,125,301,128,130,131,133,138,139,140,141,142,144,145,273,147,148,331,248,332,333,281,149,150,151,0,152,153,154,155,156,249,250,264,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,186,190,194,195,196,197,198,200,202,297,205,298,207,208,209,210,211,212,213,338,214,215,216,217,219,306,307,343,220,222,224,225,228,229,344,261,230,231,345,262,232,233,235,236,239,240,241,242,244,245],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests2.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":143,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests2.SerializationTest.testAllMockedMethod":206,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":346,"org.easymock.tests.MockingTest.testPartialClassMocking":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":299,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":325,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":291,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":285,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":229,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":278,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":332,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":215,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":120,"org.easymock.tests2.CaptureTest.testPrimitive":235,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":329,"org.easymock.tests2.CaptureTest.testCaptureNone":240,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":39,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":34,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":46,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":64,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.SerializationTest.testClass":297,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.NameTest.nameForMocksControl":342,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":52,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":251,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":333,"org.easymock.tests.MockingTest.testNicePartialClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":290,"org.easymock.tests2.CaptureTest.testCaptureLast":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":354,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":262,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":353,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.ConstraintsToStringTest.andToString":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":304,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":5,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":307,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.MockingTest.testInterfaceMocking":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":248,"org.easymock.tests2.MockBuilderTest.testCreateMock":303,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":287,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":63,"org.easymock.tests.UsageCallCountTest.tooFewCalls":44,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":241,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":219,"org.easymock.tests.MockClassControlTest.testEquals":119,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":261,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":295,"org.easymock.tests2.NameTest.nameForNiceMock":341,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests.UsageVarargTest.allKinds":41,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":136,"org.easymock.samples.ExampleTest.addDocument":132,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":296,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":264,"org.easymock.tests.UsageVarargTest.varargLongAccepted":38,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.floatType":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":298,"org.easymock.tests2.ConstraintsToStringTest.orToString":355,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":286,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests2.SerializationTest.test":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.samples.SupportTest.addDocument":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":336,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":76,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":40,"org.easymock.tests.GenericTest.testBridgedEquals":99,"org.easymock.tests2.NameTest.nameForMock":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":47,"org.easymock.tests.UsageExpectAndReturnTest.longType":72,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":73,"org.easymock.tests.UsageCallCountTest.tooManyCalls":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":53,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":289,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":344,"org.easymock.tests.MockingTest.testNiceClassMocking":279,"org.easymock.tests.MockingTest.testClassMocking":274,"org.easymock.tests2.NameTest.nameForStrictMock":340,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":247,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":331,"org.easymock.tests2.UsageStrictMockTest.range":224,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":292,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":36,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":108,"org.easymock.tests.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.CaptureTest.testCaptureRightOne":242,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":117,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":260,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":32,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":55,"org.easymock.tests2.MockBuilderTest.testWithConstructor":253,"org.easymock.tests2.EasyMockSupportTest.testVerify":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":54,"org.easymock.tests.UsageVarargTest.varargShortAccepted":37,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests.UsageVarargTest.varargCharAccepted":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":217,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":317,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":45,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":256,"org.easymock.tests2.ConstraintsToStringTest.anyToString":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":249,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests2.ConstraintsToStringTest.notToString":356,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":126,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests2.CompareToTest.testGreateThan":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":361}}]
