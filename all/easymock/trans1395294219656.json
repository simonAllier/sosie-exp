[{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[21,22],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,19,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[58,108,88,109,110],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[50,111,112,113,114,115,116,117,118,58,59,79,119,120,121,122,81,123,124,125,88,89,92,109,110,126,127],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[128,26,27,129,28,29,130,30,31,131,132,133,32,33,134],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[112,116,119,120,123,124],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[46,135],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[13],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[136,137],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[138,139,140,141],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40,142,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[26,30,31,33,42,145,118,79,146,147,148,149,150,151,152,153,125,154,155,156,157,158,159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[128,26,27,129,28,29,130,30,131,132,133,32,33,161,36,37,38,162,39,41,42,163,164,145,43,19,44,45,136,46,47,143,165,166,167,48,49,168,169,170,51,171,172,173,118,58,59,174,175,176,177,178,179,180,181,182,183,60,184,185,78,186,187,188,189,190,191,192,193,84,152,194,124,125,88,89,195,109,154,157],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[138,139,140,141],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[196,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[49,198],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,199,200,201,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[202,203,204,205,206,207,25,128,26,27,129,29,130,30,31,131,132,33,138,139,140,208,209,34,35,161,210,36,37,38,162,39,40,41,42,163,164,145,211,43,19,44,45,136,46,47,143,165,166,167,144,48,49,212,1,213,2,214,215,168,216,217,50,170,51,218,54,219,220,221,137,222,223,24,224,55,56,225,226,118,59,227,228,229,230,231,232,60,233,234,235,236,237,238,239,240,241,242,243,61,62,63,64,244,245,65,246,66,67,68,69,247,70,71,72,73,248,74,75,76,77,78,249,250,251,252,253,254,255,256,257,258,259,20,260,261,262,263,146,264,265,266,267,268,269,270,81,271,272,273,274,275,276,277,278,84,85,86,87,279,280,281,282,147,148,149,150,151,152,283,125,89,284,285,286,287,288,195,90,289,290,91,291,292,293,92,109,110,294,154,155,158,93,94,295,296,95,297,96,97,98,99,298,100,101,102,103,299,104,105,106,107,159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[301,242,302,21,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[79,304],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[112,116,119,120,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[128,27,132,38,162,42,163,142,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":263,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.tests2.StubTest.stubWithReturnValue":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":261,"org.easymock.tests.MockingTest.testPartialClassMocking":276,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":141,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":169,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":203,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":302,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":181,"org.easymock.tests2.CaptureTest.testPrimitive":129,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":119,"org.easymock.tests2.CaptureTest.testCaptureNone":31,"org.easymock.tests.UsageUnorderedTest.message":79,"org.easymock.tests.UsageVerifyTest.twoReturns":110,"org.easymock.tests.UsageVarargTest.varargByteAccepted":258,"org.easymock.tests2.ThreadingTest.testThreadSafe":55,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":199,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":117,"org.easymock.tests2.CaptureTest.testCapture_2617107":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":17,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":300,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.DelegateToTest.testDelegate":34,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":222,"org.easymock.tests2.CaptureTest.testCaptureLast":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":126,"org.easymock.tests2.CaptureTest.testCapture1_2446744":28,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":98,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":201,"org.easymock.tests.UsageThrowableTest.throwError":185,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.ConstraintsToStringTest.andToString":115,"org.easymock.tests.UsageExpectAndThrowTest.floatType":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":215,"org.easymock.tests.UsageVerifyTest.twoThrows":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":4,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":5,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests2.CallbackTest.callback":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":99,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":112,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests2.CaptureTest.testCaptureAll":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":269,"org.easymock.samples.ExampleTest.voteForRemovals":207,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests.UsageVarargTest.allKinds":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.samples.ExampleTest.addDocument":206,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":85,"org.easymock.tests.UsageVarargTest.varargLongAccepted":257,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":14,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":56,"org.easymock.tests.UsageExpectAndReturnTest.floatType":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":210,"org.easymock.tests2.ConstraintsToStringTest.orToString":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":78,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":29,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":260,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":67,"org.easymock.tests.GenericTest.testPackageScope":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":259,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":106,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":87,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":91,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":68,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":290,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":239,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":132,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":256,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests.UsageVarargTest.varargCharAccepted":254,"org.easymock.tests2.CompareToTest.testLessThan":198,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":18,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":133,"org.easymock.tests.UsageTest.unexpectedCallWithArray":123,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":96,"org.easymock.tests2.ConstraintsToStringTest.notToString":113,"org.easymock.tests.CapturesMatcherTest.test":134,"org.easymock.tests.UsageStrictMockTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CompareToTest.testGreateThan":135,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":22,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179}}]
