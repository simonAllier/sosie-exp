[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:353","sourceCode":"return this","type":"CtReturnImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,10,32],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,33,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,119,120,2,3,121,122,123,124,125,4,5,126,127,128,129,130,131,132,133,134,135,7,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,16,171,172,173,174,12,13,14,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[56,57,58,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[178,178,179,179,43,44,45,180,181,52,182,56,58,59,60,61,62,64,65,77,33,79,80,81,183,82,184,185,186,187,83,17,188,18,189,190,84,191,192,193,194,114,195,115,116,196,197,198,199,200,201,202,203,204,205,206,122,207,208,123,209,210,211,212,213,214,215,216,217,124,218,219,220,221,222,125,223,224,225,226,227,228,229,230,231,232,233,234,142,143,235,236,237,238,158,239,240,241,242,171,172,173,243,244,245,246,247,248,249,250,251,174],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,252,253,178,179,42,43,44,45,46,254,255,256,47,48,49,50,51,52,257,53,258,54,0,259,55,56,57,58,260,59,60,61,62,63,64,65,66,67,68,69,20,70,71,72,73,74,75,261,21,76,77,33,78,79,80,81,183,82,186,187,83,17,262,263,189,190,84,264,85,265,266,267,268,86,269,87,270,88,89,90,91,92,93,94,271,95,96,97,98,99,272,273,274,275,276,100,277,278,279,280,101,102,103,104,281,105,282,283,106,284,285,107,108,109,110,111,286,287,288,289,19,290,291,112,113,292,293,191,192,114,195,115,116,197,198,199,117,118,294,1,119,120,295,296,297,2,3,298,121,122,123,124,125,299,300,301,302,303,4,5,304,305,306,307,308,127,128,129,130,131,132,133,134,309,135,7,310,136,8,311,137,312,225,313,314,315,316,317,318,319,320,321,322,323,324,325,138,139,326,140,141,142,143,327,22,144,145,328,146,329,23,330,331,147,332,333,24,334,148,335,25,336,26,337,338,339,340,341,342,343,344,345,346,347,348,149,150,151,152,9,349,27,153,154,350,155,351,28,352,353,156,354,355,29,356,157,357,30,358,31,10,158,359,360,361,362,363,364,365,366,367,368,159,369,160,161,370,162,163,164,165,166,371,167,168,169,170,16,372,373,374,375,376,377,378,171,172,173,244,245,246,247,248,249,250,251,174,379,380,381,382,32,383,11,12,384,385,13,14,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[115],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,252,253,178,178,179,179,42,43,44,45,46,254,255,256,47,48,49,50,51,52,257,53,258,54,0,259,55,56,57,58,260,59,60,61,62,63,64,65,66,67,68,69,20,70,71,72,73,74,75,261,21,76,77,33,78,79,80,81,183,82,186,187,83,17,262,263,189,190,84,264,85,388,265,266,267,268,86,269,87,270,88,89,90,91,92,93,94,271,95,96,97,98,99,272,273,274,275,276,100,277,278,279,280,101,102,103,104,281,105,282,283,106,284,285,107,108,109,110,111,286,287,288,289,19,290,291,112,113,292,293,191,192,114,195,115,116,197,198,199,117,118,294,1,119,120,295,296,297,2,3,298,121,122,123,124,125,299,300,301,302,303,4,5,304,305,306,307,308,127,128,129,130,131,132,133,134,309,135,7,310,136,8,311,137,312,225,313,314,315,316,317,318,319,320,321,322,323,324,325,138,139,326,140,141,142,143,327,22,144,145,328,146,329,23,330,331,147,332,333,24,334,148,335,25,336,26,337,338,339,340,341,342,343,344,345,346,347,348,149,150,151,152,9,349,27,153,154,350,155,351,28,352,353,156,354,355,29,356,157,357,30,358,31,10,158,359,360,361,362,363,364,365,366,367,368,159,369,160,161,370,162,163,164,165,166,371,167,168,169,170,16,372,373,374,375,376,377,378,171,172,173,244,245,246,247,248,249,250,251,174,379,380,381,382,32,383,11,12,384,385,13,14,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[126,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:52","sourceCode":"if ((java.lang.Object instanceof java.lang.Object[]) && ((java.lang.Object == null) || (java.lang.Object instanceof java.lang.Object[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n} else {\n    return org.easymock.internal.matchers.Equals.matches(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:36","sourceCode":"if ((java.lang.Object instanceof boolean[]) && ((java.lang.Object == null) || (java.lang.Object instanceof boolean[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof byte[]) && ((java.lang.Object == null) || (java.lang.Object instanceof byte[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof char[]) && ((java.lang.Object == null) || (java.lang.Object instanceof char[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof double[]) && ((java.lang.Object == null) || (java.lang.Object instanceof double[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof float[]) && ((java.lang.Object == null) || (java.lang.Object instanceof float[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof int[]) && ((java.lang.Object == null) || (java.lang.Object instanceof int[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof long[]) && ((java.lang.Object == null) || (java.lang.Object instanceof long[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof short[]) && ((java.lang.Object == null) || (java.lang.Object instanceof short[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof java.lang.Object[]) && ((java.lang.Object == null) || (java.lang.Object instanceof java.lang.Object[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n} else {\n    return org.easymock.internal.matchers.Equals.matches(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[47,49,258,54,66,67,68,69,20,70,71,72,73,74,75,261,21,76,82,186,262,263,388,265,274,275,276,100,277,278,279,280,101,102,177,103,104,281,105,282,283,106,284,285,107,108,109,110,111,286,287,288,304,305,306,307,308,7,310,320,321,10,359,360,361,366,367,368,159,369,16,372,373,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[390,391,392,393,7,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[66,68,69,20,70,71,72,74,395,75],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":100,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":97,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":42,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":233,"org.easymock.tests2.UsageConstraintsTest.testNull":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":376,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.DependencyTest.testClassMocking":180,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":268,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":381,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.LimitationsTest.mockFinalMethod":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":181,"org.easymock.tests2.CaptureTest.testCapture1_2446744":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":266,"org.easymock.tests.UsageThrowableTest.throwError":127,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":224,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":389,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":220,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":222,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":151,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":282,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":332,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":377,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":303,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":133,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":90,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":91,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":23,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.UsageTest.moreThanOneArgument":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":198,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":170,"org.easymock.tests.GenericTest.testBridgedEquals":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":140,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":358,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":141,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":60,"org.easymock.tests.MockingTest.testNiceClassMocking":243,"org.easymock.tests.MockingTest.testClassMocking":241,"org.easymock.tests2.UsageConstraintsTest.testContains":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":95,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":150,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":265,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":388,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":53,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":98,"org.easymock.tests.DefaultClassInstantiatorTest.object":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":313,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.UsageTest.resumeIfFailure":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":232,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":331,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":391,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":176,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":372,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":373,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":392,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":218,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":159,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":26,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":235,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.NameTest.nameForMocksControl":291,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":208,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":385,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":287,"org.easymock.samples.ExampleTest.removeNonExistingDocument":252,"org.easymock.tests.UsageStrictMockTest.differentMethods":311,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":227,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":256,"org.easymock.tests2.MockBuilderTest.testCreateMockString":199,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":209,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests.LimitationsTest.privateConstructor":238,"org.easymock.tests2.UsageConstraintsTest.testNotNull":286,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":134,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.UsageConstraintsTest.equals":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":184,"org.easymock.tests.UsageTest.openCallCountByLastCall":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":368,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":131,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":393,"org.easymock.tests.MockingTest.testStrictClassMocking":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":360,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":61,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":63,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":293,"org.easymock.tests.ObjectMethodsTest.testHashCode":314,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":48,"org.easymock.tests2.NameTest.nameForNiceMock":290,"org.easymock.tests2.DependencyTest.testInterfaceMocking":50,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":269,"org.easymock.tests2.AnswerTest.stubAnswer":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":310,"org.easymock.tests.UsageVarargTest.varargLongAccepted":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests.UsageThrowableTest.noUpperLimit":128,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":200,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":22,"org.easymock.tests2.UsageConstraintsTest.testSame":279,"org.easymock.samples.SupportTest.addDocument":34,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":210,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":333,"org.easymock.tests2.UsageStrictMockTest.differentMethods":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":382,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":367,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":203,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":192,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":288,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":89,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":214,"org.easymock.tests2.UsageConstraintsTest.testOr":280,"org.easymock.tests.UsageRangeTest.combination":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":24,"org.easymock.tests.UsageVarargTest.varargShortAccepted":167,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":387,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":261,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":193,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":334,"org.easymock.tests2.CaptureTest.testCapture":395,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":136,"org.easymock.tests2.UsageConstraintsTest.constraints":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests.LimitationsTest.abstractClass":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":329,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94}}]
