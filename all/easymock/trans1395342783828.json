[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[161,44,162,74,154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[164,165,22,166,167,168,169,170,171,172,173,174,175,54,176,56,57,58,59,177,178,179,72,180,181,182,183,90,184,185,186,163,91,92,187,93,94,188,95,189,190,96,191,192,97,98,99,100,101,193,194,195,196,102,103,105,106,107,108,109,197,110,111,112,113,114,115,198,199,116,119,200,201,142,202,203,153],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[175,74,75,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[27,204,132],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[69,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[209,210,136,139,140,141,142,144,147],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[164,165,22,166,167,168,169,170,171,172,173,174,175,54,176,56,57,58,59,177,178,179,72,180,181,182,183,90,184,185,186,163,91,92,187,93,94,188,95,189,190,96,191,192,97,98,99,100,101,193,194,195,196,102,103,105,106,107,108,109,197,110,111,112,113,114,115,198,199,116,119,200,201,142,202,203,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[59,212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[213,214,215,72,216,217],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,2,3,218,218,219,219,14,15,220,16,23,221,36,37,38,222,223,224,89,119,121,225,226,227,228,125,229,126,127,230,231,232,233,134,234,235,236,136,137,139,140,141,237,142,202,238,143,239,144,145,146,147,149,150,157,158,159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[72,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":86,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests2.SerializationTest.testAllMockedMethod":121,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":217,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.object":65,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":118,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests2.UsageConstraintsTest.testNull":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":213,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":52,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageVarargTest.varargIntAccepted":47,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":19,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests.UsageExpectAndThrowTest.longType":63,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":187,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":236,"org.easymock.tests2.CaptureTest.testAnd":106,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":202,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":81,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":61,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":60,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.MockBuilderTest.testCreateMockString":233,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":176,"org.easymock.tests.UsageExpectAndThrowTest.floatType":62,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":143,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":43,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests2.UsageConstraintsTest.equals":204,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests.UsageOverloadedMethodTest.overloading":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":234,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.testMatches":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests.UsageVarargTest.allKinds":54,"org.easymock.tests2.DependencyTest.testInterfaceMocking":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":239,"org.easymock.tests.UsageVarargTest.varargLongAccepted":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.UsageThrowableTest.noUpperLimit":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":23,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.SerializationTest.test":120,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":79,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.samples.SupportTest.addDocument":6,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests.GenericTest.testPackageScope":14,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":53,"org.easymock.tests.GenericTest.testBridgedEquals":209,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":40,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":100,"org.easymock.tests2.UsageStrictMockTest.differentMethods":155,"org.easymock.tests.UsageCallCountTest.tooManyCalls":21,"org.easymock.tests2.MockedExceptionTest.testRealException":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":226,"org.easymock.tests2.UsageConstraintsTest.testContains":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":89,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":140,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":201,"org.easymock.tests.UsageExpectAndReturnTest.object":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":142,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":154,"org.easymock.tests2.UsageConstraintsTest.lessThan":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":115,"org.easymock.tests2.UsageConstraintsTest.testOr":163,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":137,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":68,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":222,"org.easymock.tests2.EasyMockSupportTest.testVerify":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":41,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":208,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":67,"org.easymock.tests.UsageVarargTest.varargShortAccepted":50,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests.UsageVarargTest.varargCharAccepted":48,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":198,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":18,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":238,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.UsageConstraintsTest.constraints":183,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":46,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":161}}]
