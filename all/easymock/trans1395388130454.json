[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[93,62,63,67,94,95,96,97,98,68,99,69,100,101,102,103,104,71,105,75,106,107,108,109,110,77,111,112,113,114],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[115,116,117,118,93,67,94,119,120,121,122,123,124,125,126,127,128,129,130,131,84,85,46,112,132,133,0,134,135,136,137,138,1,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,2,158,3,159,160,161,162,163,164,165,4,166,167,168],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[169,170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,7,115,116,186,187,188,189,190,191,192,193,82,194,195,196,197,198,9,10,11,12,199,200,201,202,117,203,204,205,206,207,208,209,210,211,212,213,118,13,14,93,214,215,216,217,218,219,62,63,64,220,221,65,66,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,67,94,246,95,96,247,248,119,120,249,250,251,98,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,170,285,171,121,122,123,124,125,102,103,104,126,127,128,129,130,286,17,18,19,20,287,288,289,290,291,292,293,294,295,296,297,298,83,299,300,301,302,303,304,26,27,29,30,33,34,35,305,306,307,131,308,309,310,311,312,84,85,313,314,315,316,317,318,319,320,321,71,72,322,323,324,325,326,73,74,172,327,40,41,328,42,43,44,45,46,47,48,49,50,86,329,330,112,331,113,114,332,333,132,133,0,134,135,136,137,138,1,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,52,87,89,334,90,335,336,53,337,54,338,55,57,58,60,61,339,340,341,342,2,158,3,159,160,161,162,163,164,165,4,166,167,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[343,344],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357,52,358,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[173,175,176,177,178,180,181,7,187,204,205,206,207,208,209,210,211,212,213,118,13,14,93,359,64,65,66,244,245,67,94,246,95,96,247,248,360,361,128,129,298,299,300,301,302,304,362,363,364,365,24,25,27,29,34,313,315,316,317,318,72,323,73,74,366,367,368,369,370,329,330,112,331,113,114,332,140,141,153,154,55,158,3,161,162,163,164,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[95,96,360,361,102,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[93,62,64,65,66,67,94,95,96,102,103,104,315,316,317,318,71,72,73,74,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,371,372,8,9,10,11,373,374,375,12,376,377,13,14,15,378,243,379,380,381,343,382,383,253,263,286,17,18,19,20,287,288,289,21,21,22,22,23,24,25,26,27,28,384,29,30,31,32,347,33,34,35,385,386,387,36,388,389,37,390,391,392,393,394,395,396,397,398,38,399,400,401,402,403,39,404,405,406,407,40,41,42,43,44,45,408,46,409,410,47,48,49,50,411,51,412,413,52,358,335,336,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[377],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":74,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":368,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testReturnException":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":9,"org.easymock.tests.MockClassControlTest.testToString":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":367,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":206,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":260,"org.easymock.tests2.DependencyTest.testClassMocking":406,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":218,"org.easymock.tests2.DependencyTest.testClassMockingSupport":407,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":97,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":405,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":394,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests2.UsageTest.niceToStrict":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":401,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":288,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":302,"org.easymock.tests.UsageVarargTest.allKinds":118,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":102,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":217,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":192,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":50,"org.easymock.samples.ExampleTest.voteForRemoval":299,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":7,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":347,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.CaptureTest.testCaptureFirst":168,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":366,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":327,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":99,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":57,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":251,"org.easymock.tests.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":115,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":358,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests.MockClassControlTest.testHashCode":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":396,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":207,"org.easymock.tests2.CaptureTest.testCaptureMultiple":80,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":369,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":397,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":19,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":349,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":77,"org.easymock.samples.SupportTest.voteForRemovals":364,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":151,"org.easymock.tests2.DelegateToTest.testWrongClass":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":68,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":399,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":259,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":258,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":12,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.MockedExceptionTest.testMockedException":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":389,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests2.CompareToTest.testCompareEqual":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":98,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":152,"org.easymock.tests.MockingTest.testTwoMocks":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":380,"org.easymock.tests2.ConstraintsToStringTest.andToString":110,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":307,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":390,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":49,"org.easymock.tests.LimitationsTest.privateConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":335,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.UsageVarargTest.differentLength":209,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":69,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":261,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":90,"org.easymock.tests.ObjectMethodsTest.testHashCode":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":355,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":308,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.DelegateToTest.testStubDelegate":340,"org.easymock.tests2.AnswerTest.stubAnswer":334,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.tests2.ConstraintsToStringTest.orToString":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":187,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":149,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":133,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":338,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":344,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.samples.SupportTest.addDocument":363,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":391,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests2.MockedExceptionTest.testRealException":337,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":348,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":263,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":150,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":395,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":392,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":88,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":166,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":253,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests2.ConstraintsToStringTest.notToString":106,"org.easymock.tests.UsageStrictMockTest.testVerify":248,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":362,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":215,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.LimitationsTest.abstractClass":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":205}}]
