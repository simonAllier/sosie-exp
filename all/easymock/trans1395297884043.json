[{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,1,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,2,182,183,184,185,186,3,4,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,7,381,382,383,384,385,386,387,8,388,389,9,390,391,392,393,394,395,10,11,396,397,12,13,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,0,443,14,15,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[72,464,73,74,76,77,78,79,80,81,465,466,82,18,91,219,266,322,325],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[187,269,270,271,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[72,73,74,75,76,77,78,79,17,80,81,82,18,84,85,86,88,89,90,91,93,467,94,95,96,97,98,99,100,130,468,131,135,136,141,142,143,469,24,151,152,470,153,471,154,155,156,157,472,473,158,474,475,159,476,160,161,162,163,164,165,166,477,478,211,212,479,213,480,481,216,217,482,482,483,483,219,263,264,265,266,267,305,306,307,308,309,310,311,312,322,325,347,348,349,350,393,413,414,415,416,417,418,420,450,451,452,484,485,486,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[487],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[25,26,86,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[26,27,28,29,43,44,45,46,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,76,77,81,82,18,83,84,85,86,87,88,89,90,93,95,97,101,102,103,104,105,106,107,108,109,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,137,139,140,141,142,143,144,469,145,146,147,148,1,149,150,179,180,181,2,182,183,184,185,186,3,4,187,188,189,192,193,194,207,209,210,212,479,480,481,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,250,251,252,253,255,256,258,259,260,261,262,264,265,268,269,270,271,272,273,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,313,314,315,316,317,318,328,329,339,349,7,381,382,383,384,385,386,387,8,388,389,9,390,391,392,393,394,395,10,11,396,397,12,13,398,402,403,404,405,406,407,408,409,410,411,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,442,443,14,15,444,445,446,447,448,484,485,486,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[61],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[18,83,84,489],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[45,46,48,49,50,51,52,53,54,55,64,65,69,70,116,117,118,119,126,127],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[490,491,492],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,18,83,84,85,86,87,88,89,90,91,93,95,96,97,98,101,102,103,104,105,106,107,108,109,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,137,138,139,140,141,142,143,144,469,145,146,147,148,1,149,150,153,155,160,166,172,179,180,181,2,182,183,184,185,186,3,4,187,188,189,192,193,194,200,207,209,210,211,212,479,213,214,480,481,216,217,482,483,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,493,493,248,249,250,251,252,253,255,256,257,258,259,260,261,262,264,265,268,270,271,272,273,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,315,316,317,318,319,320,321,328,329,349,7,381,382,383,384,385,386,387,8,388,389,9,390,391,393,394,395,10,11,396,397,12,13,398,402,403,404,405,406,407,408,409,410,411,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,443,14,15,444,445,446,447,448,484,485,486,457,459,460,463],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[71,494],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[25,26,86,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[495],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[140,179,185,231,233,234,235,236,237,238,250,277,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,394,397,406,14,460],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[46,51,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:60","failures":[497,498,499,500,16,501,502,24,479,481,215],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,93,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,147,207,209,239,240,241,242,243,262,272,273,274,275,276,277,278,328,329,7,8,388,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[1,149,9,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[132,147,1,149,172,181,2,3,4,200,280,283,323,327,7,8,388,9,390,395,10,11,12,13,441,442,443,14,15,449],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[51,55,117,123,124,129,147,239,240,241,242,243,272,273,274,275,276,277,278,328,329,7,388,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":394,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":364,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testReturnException":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":403,"org.easymock.tests.MockingTest.testPartialClassMocking":484,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":25,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":410,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":325,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":39,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":446,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":491,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests2.DependencyTest.testClassMocking":135,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests.LimitationsTest.mockFinalMethod":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":385,"org.easymock.tests2.DependencyTest.testClassMockingSupport":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":441,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests.UsageThrowableTest.throwError":231,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":324,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":448,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":219,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":352,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":408,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":432,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":125,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":254,"org.easymock.tests2.EasyMockSupportClassTest.testAll":153,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":383,"org.easymock.tests.MockNameTest.defaultName":449,"org.easymock.tests2.UsageConstraintsTest.testMatches":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":447,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests.UsageVarargTest.allKinds":262,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":384,"org.easymock.samples.BasicClassMockTest.testPrintContent":217,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":237,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":407,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":419,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":420,"org.easymock.samples.ExampleTest.voteForRemoval":225,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":465,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":393,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":32,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":129,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":33,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":428,"org.easymock.tests2.UsageTest.moreThanOneArgument":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":261,"org.easymock.tests.GenericTest.testBridgedEquals":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":424,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":381,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":466,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":67,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":444,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":492,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":236,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":464,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":314,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":143,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests.MockTypeTest.fromEasyMockClass":323,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageExpectAndReturnTest.object":431,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":256,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":282,"org.easymock.tests.UsageTest.exactCallCountByLastCall":398,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":331,"org.easymock.tests2.ConstraintsToStringTest.findToString":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":437,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":475,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":457,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":255,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":412,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":413,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":280,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":438,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":405,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":430,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":370,"org.easymock.samples.SupportTest.voteForRemovals":222,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":376,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":190,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":246,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DelegateToTest.testWrongClass":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":329,"org.easymock.samples.ConstructorCalledMockTest.testTax":482,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":409,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":260,"org.easymock.tests2.ThreadingTest.testThreadSafe":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":161,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":404,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":440,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":169,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":171,"org.easymock.tests2.MockedExceptionTest.testMockedException":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":486,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":485,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":167,"org.easymock.tests2.CaptureTest.testCaptureLast":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":452,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":174,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":107,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":156,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":238,"org.easymock.tests2.UsageTest.defaultResetToNice":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":168,"org.easymock.tests.UsageVarargTest.differentLength":257,"org.easymock.tests2.CallbackTest.callback":210,"org.easymock.tests2.UsageConstraintsTest.equals":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":467,"org.easymock.tests.UsageTest.openCallCountByLastCall":396,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":411,"org.easymock.tests.UsageThrowableTest.throwCheckedException":235,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":109,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":112,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":259,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":469,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":483,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests.UsageThrowableTest.noUpperLimit":232,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":44,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":121,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":422,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":157,"org.easymock.tests.GenericTest.testPackageScope":264,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests2.MockedExceptionTest.testRealException":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":5,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":367,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests.ErrorMessageTest.testGetters":488,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":73,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":474,"org.easymock.tests2.CaptureTest.testCaptureRightOne":126,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":355,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":418,"org.easymock.tests.UsageVarargTest.varargShortAccepted":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":56,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":191,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":74,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":435,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":389,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.tests.UsageStrictMockTest.testVerify":392,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":382,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":427,"org.easymock.tests.LimitationsTest.abstractClass":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":36,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252}}]
