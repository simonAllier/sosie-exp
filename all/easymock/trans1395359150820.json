[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,5,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[104,104,105,105,106,18,19,107,108,109,110,111,112,113,114,115,46,116,117,54,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,0,133,134,135,1,136,137,138,139,89,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,90,166,167,91,168,169,170,171,172,92,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[200,201,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[203,204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[64,65,94,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[137,138,139,205,171,206,207,208,209,210],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:145","sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[211,64,65,72,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[212,213,214,215,216,45,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[250,251,252,253,5,6,254,97,255],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[256,257,258,259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:420","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":251,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.UsageTest.argumentsOrdered":76,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":74,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":205,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests.MockClassControlTest.testToString":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":146,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":257,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":206,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.samples.ConstructorCalledMockTest.testTax":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":174,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":239,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":140,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":28,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":157,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":168,"org.easymock.tests2.StubTest.stub":66,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":135,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":80,"org.easymock.tests2.SerializationTest.testClass":139,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests.LimitationsTest.mockNativeMethod":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":59,"org.easymock.tests2.CaptureTest.testAnd":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":189,"org.easymock.tests2.NameTest.nameForMocksControl":87,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":123,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":253,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":179,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.UsageThrowableTest.throwError":241,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":173,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":124,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests.ResultTest.createReturnResultToString":201,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":88,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.ResultTest.createDelegateResultToString":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":151,"org.easymock.tests.LimitationsTest.privateConstructor":121,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":58,"org.easymock.tests.UsageVarargTest.differentLength":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":159,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockClassControlTest.testEquals":130,"org.easymock.tests2.EasyMockSupportClassTest.testAll":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests2.NameTest.nameForNiceMock":86,"org.easymock.tests.UsageVarargTest.allKinds":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":163,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":192,"org.easymock.tests.UsageVarargTest.varargLongAccepted":27,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":42,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":185,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":105,"org.easymock.tests.UsageThrowableTest.noUpperLimit":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":195,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":171,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":67,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":148,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":29,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests2.NameTest.nameForMock":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":238,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":188,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":234,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests2.NameTest.nameForStrictMock":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":196,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":24,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":57,"org.easymock.tests2.CaptureTest.testCaptureRightOne":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":152,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":256,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":62,"org.easymock.tests2.UsageConstraintsTest.testOr":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":138,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests.ResultTest.createThrowResultToString":202,"org.easymock.tests.MockClassControlTest.testHashCode":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":149,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":153,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":26,"org.easymock.tests.UsageVarargTest.varargCharAccepted":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":240,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":212,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests2.CaptureTest.testCapture":204,"org.easymock.tests2.UsageConstraintsTest.constraints":250,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":128,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":226,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.CapturesMatcherTest.test":203,"org.easymock.tests.UsageStrictMockTest.testVerify":43,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests.LimitationsTest.abstractClass":120,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":21}}]
