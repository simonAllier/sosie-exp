[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[2,3,4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,2,3,4,5,6,70,7,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,12,13,14,15,86,87,16,88,89,90,17,91,18,92,93,94,95,96,97,98,99,100,101,102,103,104,105,1,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,19,20,21,22,166,23,24,25,27,29,30,31,32,33,34,36,167,168,37,38,169,39,40,41,42,43,44,45,46,47,170,171,172,173,174,175,48,49,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,51,52,53,203,204,54,55,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,91,18,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[71,74,75,76,80,81,82,83,93,97,98,101,110,124,135,138,139,140,164,27,33,34,36,38,45,47,188,190,191,194,195,196,202,309,310,264,265,266,267,269,271,272,273,280,281,293,301,311,312],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[134,313],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[71,78,85,187,188,193,314,225,227,228,229,230,231,232,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,315,316,317,277,280,286],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[71,74,75,76,80,81,82,83,93,97,98,101,110,124,135,138,139,140,164,27,33,34,36,38,45,47,188,190,191,194,195,196,202,309,310,264,265,266,267,269,271,272,273,280,281,293,301,311,312],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[61,89,90,142,143,144,145,164,275],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[73,74,75,76,80,81,93,97,98,101,124,135,137,139,140,141,164,34,189,191,194,195,267,270,272,273,274,318,279,280,281,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,91,18,308],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[71,85,188,314,280,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[113,334,127,132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[124],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[71,78,85,86,87,16,88,187,188,193,199,200,225,227,228,229,230,231,232,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,277,280,282,283,284,285,286,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[335,336,337,338,339,340],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[144,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[17,91,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,2,3,4,5,6,70,7,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,12,13,14,15,86,87,16,88,89,90,17,91,18,92,93,94,95,96,97,98,99,100,101,102,103,104,105,1,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,19,20,21,22,166,23,24,25,27,29,30,31,32,33,34,36,167,168,37,38,169,39,40,41,42,43,44,45,46,47,170,171,172,173,174,175,48,49,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,51,52,53,203,204,54,55,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.RecordState:183","failures":[60,61,62,63,64,65,66,67,68,69,2,3,4,70,7,71,72,73,75,76,77,78,83,84,85,13,14,15,16,89,90,17,91,18,92,94,95,96,97,100,101,102,103,104,105,1,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,159,164,165,19,20,21,22,166,23,24,29,31,32,167,168,37,169,39,41,170,171,173,174,175,48,49,186,187,188,189,192,193,196,197,198,199,200,201,202,51,52,53,203,204,55,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,268,270,271,272,273,274,279,280,281,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[118,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[110,111,115,116,334,127,146,148,156],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[121,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[113,127,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[342,343,344],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[345,47,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[347,147,153,154,155,158,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[110,111,115,116,334,127,146,148,156],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,91,18,308],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[1],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":283,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":168,"org.easymock.tests2.DelegateToTest.testWrongClass":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.UsageStrictMockTest.range":272,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":178,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests2.CaptureTest.testCaptureNone":154,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":311,"org.easymock.tests.UsageVerifyTest.twoReturns":281,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests.UsageTest.argumentsOrdered":195,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":263,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":284,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":224,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":56,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":10,"org.easymock.tests2.CaptureTest.testAnd":146,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.MockedExceptionTest.testMockedException":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.DelegateToTest.testDelegate":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":184,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":323,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":36,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":124,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":289,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":86,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests.UsageVarargTest.differentLength":301,"org.easymock.tests2.CallbackTest.callback":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageCallCountTest.tooFewCalls":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":320,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":179,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":55,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":8,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":183,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests2.AnswerTest.stubAnswer":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":270,"org.easymock.tests2.UsageConstraintsTest.greaterThan":125,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":340,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":223,"org.easymock.tests.UsageExpectAndReturnTest.floatType":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":126,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.SerializationTest.test":91,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":151,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":206,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.samples.SupportTest.addDocument":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":282,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":326,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.UsageExpectAndReturnTest.longType":208,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":217,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":209,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":260,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests2.NameTest.nameForStrictMock":345,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":26,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":90,"org.easymock.tests.UsageExpectAndReturnTest.object":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":139,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.CaptureTest.testCaptureRightOne":156,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":322,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":210,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":218,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":342,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":309,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":299,"org.easymock.tests2.CaptureTest.testCaptureMultiple":347,"org.easymock.tests2.CompareToTest.testLessThan":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":314,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":315,"org.easymock.tests2.CaptureTest.testCaptureFromStub":157,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":190,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":219,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.CapturesMatcherTest.test":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":222,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":181,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":291,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
