[{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[90,91,92,22,34,36,93,94,95,37,39,96,43,45,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[12,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[20,90,91,92,21,22,23,100,101,102,103,35,93,94,95,37,38,39,40,104,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[105,106,107],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,14,15,108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,107,125,126,127,15,128,99,129,130,131,132,133,134,135,136,49,50,51,137,138,139,140,97,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[174,175,176,177],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[179,180,181,105,182,183,184,185,98,186,187,188,189,190,99,132,133,136,191,192,193,171],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[105,182,194,183,184,185,98,186,187,188,189,195,196,190,99,191,192,193,171],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[198,199,200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[202,178,21,203,7,204,12,205,206,207,208,209,38,210,211,212,213,214,85,86,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[215,216,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[218,219,220,221,222,223,224,225,226,174,227,215,228,229,230,231,202,232,233,234,178,235,216,236,237,238,13,175,239,217,240,241,242,176,243,244,245,246,47,247,20,90,248,14,249,48,250,91,92,251,252,109,253,254,255,256,21,257,22,23,258,259,260,198,261,262,199,105,106,185,186,187,263,264,197,265,266,125,126,15,129,131,132,133,134,267,268,269,270,271,272,273,274,275,276,277,278,279,53,1,203,2,3,4,5,6,7,204,8,10,11,280,12,97,281,282,54,205,206,207,208,209,55,56,57,58,59,60,61,35,93,283,62,94,95,284,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,285,286,287,288,289,37,38,290,39,40,291,292,293,294,295,296,297,298,299,210,211,212,83,300,301,165,166,41,42,302,303,304,84,305,306,213,214,85,86,307,43,308,309,87,310,311,312,88,89,313,314,315,316,317,318,319,320,321,322,323,324,44,45,46,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[175,361],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[157,158,162],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[111,114,362,363,364,365,366,367,368,369,370,371,372,373,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[161,0,375],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,203,2,3,4,5,6,7,204,8,10,11,280,12,376,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[220,109,110,111,112,377,113,114,253,254,21,22,23,116,179,180,181,183,185,186,187,189,378,265,125,126,379,127,15,128,129,132,133,134,97,281,145,146,147,205,206,207,208,209,38,39,40,293,294,295,296,298,299,210,211,165,191,380,381,382,383,213,313,328,329,330,331,332,333,336,337,339,340,341,343,344,345,346,347,348,350,352,353,355,171,360],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":228,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":14,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":371,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":176,"org.easymock.tests2.SerializationTest.testAllMockedMethod":107,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":145,"org.easymock.samples.SupportTest.voteForRemovals":360,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":29,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":164,"org.easymock.tests.MockClassControlTest.testToString":151,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":198,"org.easymock.tests.UsageExpectAndThrowTest.object":73,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.samples.ExampleTest.answerVsDelegate":351,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":365,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":82,"org.easymock.tests.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":115,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":17,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":322,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":122,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":205,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":98,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":209,"org.easymock.tests.UsageExpectAndThrowTest.longType":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":161,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":108,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests2.SerializationTest.testClass":105,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":347,"org.easymock.tests2.AnswerTest.answer":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":234,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":370,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":131,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":117,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":67,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":141,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":42,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":114,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.MockingTest.testTwoMocks":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":41,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":244,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":19,"org.easymock.tests.UsageThrowableTest.throwError":308,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":159,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":197,"org.easymock.tests2.ConstraintsToStringTest.andToString":28,"org.easymock.tests2.MockBuilderTest.testCreateMockString":190,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests.UsageExpectAndThrowTest.floatType":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":118,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.PartialClassMockTest.testGetArea":171,"org.easymock.tests2.CompareToTest.testLessOrEqual":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":206,"org.easymock.samples.ExampleTest.voteAgainstRemoval":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":89,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":185,"org.easymock.tests2.UsageTest.defaultResetToNice":250,"org.easymock.tests2.MockBuilderTest.testCreateMock":188,"org.easymock.samples.ExampleTest.voteAgainstRemovals":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":343,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":72,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":237,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":339,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":18,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.MockClassControlTest.testEquals":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":166,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":32,"org.easymock.tests.MockingTest.testStrictClassMocking":142,"org.easymock.tests2.CaptureTest.testCaptureAll":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":377,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":355,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":266,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests.UsageVarargTest.allKinds":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":44,"org.easymock.samples.BasicClassMockTest.testPrintContent":173,"org.easymock.samples.ExampleTest.addDocument":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":123,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":88,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.UsageConstraintsTest.greaterThan":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":381,"org.easymock.tests.UsageVarargTest.varargLongAccepted":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.samples.ExampleTest.voteForRemoval":352,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":346,"org.easymock.tests.UsageExpectAndReturnTest.floatType":330,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests2.ConstraintsToStringTest.orToString":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":168,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":106,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":269,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":329,"org.easymock.tests2.UsageConstraintsTest.testSame":231,"org.easymock.samples.SupportTest.addDocument":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":270,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":119,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":280,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":265,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":189,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":323,"org.easymock.tests.GenericTest.testBridgedEquals":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":367,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageExpectAndReturnTest.longType":331,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":340,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":81,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":242,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":79,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":383,"org.easymock.tests2.MockedExceptionTest.testRealException":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":336,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testNiceClassMocking":148,"org.easymock.tests.MockingTest.testClassMocking":143,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":194,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":15,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":226,"org.easymock.tests.UsageExpectAndReturnTest.object":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":217,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":368,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":268,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":16,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests.UsageRangeTest.combination":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":344,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":304,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests2.MockBuilderTest.testWithConstructor":369,"org.easymock.tests.MockClassControlTest.testHashCode":154,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":235,"org.easymock.tests.UsageVarargTest.varargCharAccepted":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":278,"org.easymock.tests.DefaultClassInstantiatorTest.object":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":184,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":342,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests2.UsageConstraintsTest.constraints":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":153,"org.easymock.samples.ExampleTest.addAndChangeDocument":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.tests2.ConstraintsToStringTest.notToString":26,"org.easymock.tests.CapturesMatcherTest.test":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":345,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":358,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":27,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests2.CompareToTest.testGreateThan":361,"org.easymock.tests2.UsageTest.resumeIfFailure":251,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":334,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":192,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":208,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":273}}]
