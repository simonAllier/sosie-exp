[{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:98","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()))","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[47,48,49,50,51,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[73,74,75,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[84],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,52,117,118,53,119,120,121,122,123],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[124,125,126,58,59,127,128,129,130,131,132,62,63,133,65,66,134,135,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[136,137,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,138,139,112,140,141,113,115,142,143,144,145,146,147,8,148,149,150,9,151,152,153,154,155,156,157,158,159,160,116,52,16,161,162,163,164,165,17,18,19,119,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,122,122,123,123,205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[124,125,126,169,58,59,127,128,129,130,131,132,62,63,133,65,66,71,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[68,71],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[115,209,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[211,73,212,74,213,90,93,103,109,1,214,2,215,216,217,218,219,220,221,222,223,224,225,226,227,84,3,228,229,55,230,231,4,232,233,234,235,236,56,124,6,237,238,239,125,126,240,35,241,36,37,38,39,40,41,242,42,44,243,46,244,245,246,247,248,249,250,251,138,139,112,140,252,141,113,115,209,142,143,144,253,145,146,147,148,152,75,254,255,256,160,10,257,258,11,259,12,13,260,15,261,262,263,264,265,266,116,165,18,19,267,57,268,58,59,269,20,270,271,272,273,274,275,276,174,175,176,277,60,130,278,279,131,132,280,281,282,283,180,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,182,61,62,63,311,312,313,314,315,316,317,318,319,320,321,322,323,133,64,324,65,66,325,326,327,328,329,330,331,332,333,191,192,71,76,77,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,82,83,360,361,205,206,362,363,364,365,366,367,368,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[115,209,142,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[151,155,162,167],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[115,209,142,369],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[190],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[370,371,144,155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[56,124,125,126,57,58,59,372,373,374,375,376,377,378,60,130,131,132,61,62,63,379,380,64,65,66,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[381,223,148],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":215,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":277,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":81,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":237,"org.easymock.tests2.StubTest.stubWithReturnValue":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":344,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":4,"org.easymock.tests2.SerializationTest.testAllMockedMethod":142,"org.easymock.tests2.DelegateToTest.testReturnException":73,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":376,"org.easymock.samples.SupportTest.voteForRemovals":361,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":190,"org.easymock.tests.MockClassControlTest.testToString":197,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":67,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":355,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":32,"org.easymock.samples.ExampleTest.answerVsDelegate":363,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":138,"org.easymock.tests2.UsageConstraintsTest.testNull":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":261,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":18,"org.easymock.tests2.CaptureTest.testPrimitive":37,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":31,"org.easymock.tests2.CaptureTest.testCaptureNone":242,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":127,"org.easymock.tests.UsageVerifyTest.twoReturns":63,"org.easymock.tests.UsageVarargTest.varargByteAccepted":320,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageVarargTest.varargIntAccepted":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":205,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":272,"org.easymock.tests2.CaptureTest.testCapture_2617107":36,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":358,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":276,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":187,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests2.SerializationTest.testClass":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":354,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":193,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":24,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":12,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":382,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":19,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":181,"org.easymock.tests2.CompareToTest.testCompareEqual":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":78,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":113,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":29,"org.easymock.tests.MockingTest.testTwoMocks":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":38,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":335,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":22,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.tests.UsageThrowableTest.throwError":326,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":185,"org.easymock.tests2.ConstraintsToStringTest.andToString":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":128,"org.easymock.tests2.MockBuilderTest.testCreateMockString":169,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":62,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.PartialClassMockTest.testGetArea":207,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":365,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":98,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":170,"org.easymock.tests.LimitationsTest.privateConstructor":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":333,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":158,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":165,"org.easymock.tests2.UsageTest.defaultResetToNice":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":106,"org.easymock.tests2.CallbackTest.callback":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":30,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":334,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":346,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":225,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":330,"org.easymock.tests.MockClassControlTest.testEquals":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests.MockingTest.testStrictClassMocking":171,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.testMatches":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.samples.ExampleTest.voteForRemovals":367,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":50,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests.UsageVarargTest.allKinds":322,"org.easymock.tests2.DependencyTest.testInterfaceMocking":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":49,"org.easymock.samples.BasicClassMockTest.testPrintContent":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":28,"org.easymock.samples.ExampleTest.addDocument":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":105,"org.easymock.tests2.DelegateToTest.testStubDelegate":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":332,"org.easymock.tests2.AnswerTest.stubAnswer":255,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageVarargTest.varargLongAccepted":319,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":153,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":325,"org.easymock.samples.ExampleTest.voteForRemoval":364,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":189,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":353,"org.easymock.tests.UsageExpectAndReturnTest.floatType":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.tests2.ConstraintsToStringTest.orToString":372,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests.UsageThrowableTest.noUpperLimit":327,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":228,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":214,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":136,"org.easymock.tests2.SerializationTest.test":209,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":336,"org.easymock.tests2.UsageConstraintsTest.testSame":218,"org.easymock.samples.SupportTest.addDocument":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":88,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":167,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":321,"org.easymock.tests.GenericTest.testBridgedEquals":194,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":72,"org.easymock.tests.UsageExpectAndReturnTest.longType":338,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":347,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":168,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":121,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":331,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":139,"org.easymock.tests.MockingTest.testNiceClassMocking":177,"org.easymock.tests.MockingTest.testClassMocking":172,"org.easymock.tests2.UsageConstraintsTest.testContains":224,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":160,"org.easymock.tests2.UsageConstraintsTest.testFind":216,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":283,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageExpectAndReturnTest.object":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":137,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":148,"org.easymock.tests.ErrorMessageTest.testGetters":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":162,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":48,"org.easymock.tests.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":284,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":258,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":99,"org.easymock.tests2.UsageConstraintsTest.testOr":219,"org.easymock.tests.UsageRangeTest.combination":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":351,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":77,"org.easymock.tests.UsageTest.wrongArguments":130,"org.easymock.tests2.MockBuilderTest.testWithConstructor":117,"org.easymock.tests.MockClassControlTest.testHashCode":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":96,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":100,"org.easymock.tests.UsageVarargTest.varargShortAccepted":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":76,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":21,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":134,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":316,"org.easymock.tests2.CaptureTest.testCaptureMultiple":34,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":263,"org.easymock.tests.DefaultClassInstantiatorTest.object":183,"org.easymock.tests2.CaptureTest.testCaptureFromStub":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":163,"org.easymock.tests.UsageTest.unexpectedCallWithArray":129,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":349,"org.easymock.tests2.CaptureTest.testCapture":43,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":324,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":199,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests2.ConstraintsToStringTest.notToString":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":352,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":83,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":26,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":274,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":341,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":203,"org.easymock.tests.LimitationsTest.abstractClass":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":275,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":70}}]
