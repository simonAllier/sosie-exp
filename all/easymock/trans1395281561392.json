[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,5,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[39,40,41,21,42,43,44,45,46,47,48,5,25,49,50,51,52,53,54,55,56,57,58,59,60,61,1,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,13,81,14,82,83,10,15,16,84,85,86,36,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[103,104,105,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[107,108,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[110,111,112,113,114,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[110,115,116,117,118,119,17,2,18,120,121,19,20,122,123,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,39,154,155,156,157,158,159,160,161,40,41,162,163,164,165,166,167,8,9,168,169,170,171,172,21,42,43,44,45,46,22,23,24,173,174,111,175,112,176,177,178,179,180,181,182,183,184,185,186,187,188,113,114,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,47,48,208,209,210,211,212,213,214,5,25,215,26,27,216,49,50,51,52,53,54,55,56,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,28,29,234,235,236,237,238,30,31,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,57,58,259,260,261,59,60,61,1,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,13,81,14,82,83,10,262,263,264,265,266,267,268,269,270,271,272,15,16,84,273,274,85,275,86,276,11,277,12,278,104,105,106,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,36,87,37,38,300,301,302,303,304,305,306,307,308,309,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[119,2,18,19,20,122,310,311,149,159,160,161,165,21,23,24,213,5,215,26,27,312,313,232,29,234,235,30,31,239,240,242,247,248,249,253,259,261,61,75,86,281,285,286,289,298,87,37,38],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[314,315,316,317,318],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[319,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[277],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[63,68,78,14],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[119,2,18,19,20,122,310,311,149,159,160,161,165,21,23,24,213,5,215,26,27,312,313,232,29,234,235,30,31,239,240,242,247,248,249,253,259,261,61,75,86,281,285,286,289,298,87,37,38],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[123,321,90,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,18,19,20,311,21,23,24,5,26,29,30,31,37],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[243,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[75,13,90,91,93,94,95,96,97,102],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[110,115,116,117,118,40,42,43,46,25,49,50,51,52,53,54,55,226,226,227,227,59,60,62,63,64,65,71,73,74,76,77,78,14,82,83,36,100],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests2.DelegateToTest.testReturnException":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":315,"org.easymock.tests.MockingTest.testPartialClassMocking":162,"org.easymock.samples.SupportTest.voteForRemovals":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":136,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":103,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.object":134,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":226,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":303,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":245,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":143,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":116,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":312,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":206,"org.easymock.tests.UsageExpectAndThrowTest.longType":127,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests2.AnswerTest.answer":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":268,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":128,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":246,"org.easymock.tests.MockingTest.testNicePartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":316,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":132,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":274,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":118,"org.easymock.tests.UsageExpectAndThrowTest.floatType":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.PartialClassMockTest.testGetArea":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":52,"org.easymock.samples.ExampleTest.voteAgainstRemoval":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":260,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":125,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":107,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.UsageVarargTest.differentLength":149,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":133,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":305,"org.easymock.tests2.UsageConstraintsTest.testMatches":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":307,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":117,"org.easymock.samples.ExampleTest.voteForRemovals":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":275,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests.UsageVarargTest.allKinds":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.samples.ExampleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.AnswerTest.stubAnswer":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":48,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":151,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.samples.ExampleTest.voteForRemoval":221,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":273,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":258,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":204,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":85,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":153,"org.easymock.tests.GenericTest.testBridgedEquals":320,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":160,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":314,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":304,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":16,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":40,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":9,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":8,"org.easymock.tests.UsageVarargTest.varargShortAccepted":150,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":88,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.CaptureTest.testCaptureMultiple":321,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":100,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":130,"org.easymock.tests.CapturesMatcherTest.test":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145}}]
