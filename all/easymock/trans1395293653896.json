[{"position":"org.easymock.internal.LastControl:85","failures":[0,1,2,3],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,7,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[81,63,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[83,84,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[100,101,102,103,104],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.Range:36","failures":[105,106,107,108,109,110,111,112,22,23,24,113,114,115,25,26,116,80,117,118,119,120,121,27,122,28,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,4,147,148,149,150,151,152,153,154,155,156,157,85,158,159,160,161,162,86,163,164,165,166,167,87,88,76,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,83,186,187,0,188,84,189,190,1,191,192,193,194,195,196,197,198,199,2,200,201,202,203,3,204,205,206,207,208,30,209,210,31,211,212,213,214,215,216,217,218,219,32,220,221,222,223,224,33,225,226,227,34,228,36,37,229,230,38,39,40,231,41,232,233,42,43,234,45,235,236,237,238,239,240,241,242,243,244,245,246,5,6,7,8,247,248,81,249,250,46,47,48,49,251,252,50,51,253,254,255,256,257,258,259,52,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,53,54,281,55,56,57,58,282,59,283,284,60,61,62,63,285,82,286,287,288,289,290,291,89,9,10,11,292,293,12,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,64,13,14,15,16,17,18,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,65,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,66,67,68,377,378,379,91,380,381,92,382,383,384,385,386,387,388,389,390,391,392,393,394,19,395,396,69,397,398,399,400,70,401,402,403,404,93,94,405,406,95,96,407,408,409,410,411,412,413,414,415,416,97,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,20,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,77,78,79,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,71,478,479,98,99,480,481,482,483,484,485,21,486,487,72,73,74,488,75,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[27,497,498,499,500,231,233,52,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[85,158,60,92,382],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[169,171,179,185,83,84,189,1,2],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[66,68,377],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[501,502,503,504,91,93],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[156,85,158,162,505,501,506,507,508,509,510,502,511,311,312,503,512,504,513,90,91,380,92,382,404,93,97,479,98,99],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[27,122,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[376],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[147,149,156,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,83,187,0,188,84,189,190,1,191,192,193,194,195,196,197,198,199,2,200,201,202,203,3,204,205,266,59,292,293,12,294,295,17,354,91,380,97,471,472,473,474,475,485,21,492,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[154,157,85,158,160,86,163,164,87,88,76,168,185,197,36,42,43,45,262,265,269,273,274,277,54,61,63,349,378,91,381,92,382,403,93,94,95,96,407,414,415,416,97,449,98,99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[169,171,179,185,83,0,84,189,1,2,3],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[514],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[258,259],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[258,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[128,129,130,131,134,135,136,137,138,236,237,238,239,242,243,244,245,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[258,259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":403,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":435,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":116,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":247,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":323,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":190,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":490,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.moreThanOneArgument":404,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":342,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":345,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":475,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.DependencyTest.testClassMocking":123,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":153,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":398,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":338,"org.easymock.tests.LimitationsTest.mockFinalMethod":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":484,"org.easymock.tests2.DependencyTest.testClassMockingSupport":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":151,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":400,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":450,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":226,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":488,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":135,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":332,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":195,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":462,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":194,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":346,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":482,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":152,"org.easymock.tests.MockNameTest.defaultName":322,"org.easymock.tests2.UsageConstraintsTest.testMatches":196,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":483,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":198,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.samples.ExampleTest.voteForRemoval":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":375,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":458,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":480,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":341,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":396,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":512,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests.MockingTest.testNiceClassMocking":491,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":35,"org.easymock.tests2.UsageConstraintsTest.testContains":193,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":425,"org.easymock.tests.MockTypeTest.fromEasyMockClass":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":467,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":236,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":217,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":227,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":367,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests2.UsageTest.resumeIfFailure":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":441,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":496,"org.easymock.tests.UsageExpectAndThrowTest.object":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":492,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":493,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":144,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":334,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":99,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":220,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":470,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":210,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":406,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":327,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":72,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":331,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":204,"org.easymock.samples.ExampleTest.removeNonExistingDocument":111,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":134,"org.easymock.tests.UsageStrictMockTest.differentMethods":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":237,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ConstraintsToStringTest.andToString":510,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":45,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":261,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests.LimitationsTest.privateConstructor":477,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":128,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":262,"org.easymock.tests2.UsageConstraintsTest.equals":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":283,"org.easymock.tests.UsageTest.openCallCountByLastCall":405,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":101,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":225,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":380,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":232,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.tests2.ConstraintsToStringTest.orToString":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":452,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":251,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":212,"org.easymock.tests.GenericTest.testPackageScope":66,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":489,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":337,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":79,"org.easymock.tests2.MockedExceptionTest.testRealException":8,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":145,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":513,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":81,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":143,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":216,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":213,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":192,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":465,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":381,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests2.ConstraintsToStringTest.notToString":506,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":481,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":473,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":29,"org.easymock.tests.LimitationsTest.abstractClass":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":474,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":344}}]
