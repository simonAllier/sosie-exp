[{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[21,23,25,26,27,30,32,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[41,42,0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,36,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[101,102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[103,104,105,6,106,107,108,109,110,111,9,10,112,113,114,115,116,12,13,117,118,119,120,121,122,123,69,75,76,77,124,125,126,127,128,129,130,131,80,87,89,132,133,134,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[135,59,60,61,63,136,137,64,138,139,140,141,65,142,119,143,144,145,146,147,68,70,73,74,76,77,80,86,89,90,92,93,95,96,148,149,150,151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[78,152,153,154,155,156,157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[55,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[163,164,165,166,167,168,169,170,171,172,173,9,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.MockClassControlTest.testToString":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":2,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":153,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests2.CaptureTest.testCaptureNone":29,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageTest.argumentsOrdered":110,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":141,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":161,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":37,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CaptureTest.testCaptureLast":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests.UsageThrowableTest.throwError":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":137,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":77,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":57,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":65,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":30,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests.MockNameTest.defaultName":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":156,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":78,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":19,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.CaptureTest.testCapture2_2446744":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":104,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.UsageCallCountTest.tooManyCalls":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":159,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests.MockTypeTest.fromEasyMockClass":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests.ErrorMessageTest.testGetters":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":154,"org.easymock.tests.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests.UsageRangeTest.combination":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests.MockClassControlTest.testHashCode":62,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":166,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":103,"org.easymock.tests2.CaptureTest.testCaptureMultiple":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":27,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":119}}]
