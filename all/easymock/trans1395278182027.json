[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:338","sourceCode":"if (java.lang.reflect.Type != null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","resolvedType":"actualTypeArgument","variable":"variable"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[79,80,81,82,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[104,105,106,107,108,109,110,111,112,98,99,113,114,115],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[116,117,118,119,109,114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,130,116,131,132,133,134,92,107,93,119,135,108,136,137,96,97,98,99,138,139,100,140,113,101,115,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:217","failures":[141,120,142,143,144,145,146,0,1,147,148,2,149,150,121,151,152,3,8,10,18,24,153,154,155,156,157,158,159,160,161,162,163,164,165,166,124,126,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,104,185,186,105,106,187,188,189,190,191,192,193,194,195,196,197,198,199,29,31,32,36,37,200,38,39,40,42,46,50,51,201,52,202,53,203,204,205,206,207,208,56,209,92,210,107,93,94,67,68,69,211,212,213,214,215,136,137,216,80,81,217,218,219,220,221,222,223,224,225,226,84,227,228,229,230,110,111,112,231,232,233,234,235,236,237,238,98,99,239,240,241,242,243,244,245,246,89,128,247,248,100,113,249,114,101,250,115,102,103,251,252,253,254,255],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"position":"org.easymock.internal.RecordState:280","failures":[120,257,180,258,181,259,182,247],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[104,105,106,107,108,109,110,111,112,98,99,140,113,114,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[260,260,261,261,141,120,142,143,144,145,146,0,1,147,148,2,149,150,121,151,152,3,8,10,18,24,122,123,262,263,264,153,265,154,266,267,155,156,256,157,158,268,159,269,270,160,271,272,161,162,163,164,165,166,273,274,124,275,125,126,276,127,277,278,279,280,167,168,169,170,281,171,172,173,174,175,176,282,283,177,284,285,286,178,179,257,180,258,181,259,182,183,184,91,104,185,186,287,288,289,105,106,290,187,188,189,190,191,192,193,194,291,195,196,197,198,199,25,26,29,30,31,32,33,34,35,36,37,200,38,39,40,41,42,44,45,46,47,50,51,201,52,202,53,203,204,205,206,292,293,294,295,207,208,54,55,56,296,297,209,92,210,107,93,94,298,299,300,301,302,303,304,305,57,66,67,68,69,306,307,211,212,308,213,309,310,311,312,214,313,314,315,316,215,317,318,319,320,136,137,216,321,322,323,80,81,82,324,217,218,219,220,221,325,222,223,224,225,226,326,327,328,84,329,227,228,229,230,330,331,96,109,110,332,333,111,112,231,334,335,232,233,336,234,337,338,339,340,235,341,342,343,344,236,345,346,347,348,237,238,349,97,98,99,350,351,352,353,354,355,239,240,241,242,243,244,245,246,89,128,138,247,248,139,100,140,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,113,371,249,114,101,250,115,102,103,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,251,252,253,392,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[260,261,141,120,142,143,144,145,146,0,1,147,148,2,149,150,121,151,152,3,8,10,18,24,122,123,262,263,264,153,265,154,266,267,155,156,157,158,268,159,269,270,160,271,272,161,162,163,164,165,166,273,274,124,126,276,127,277,278,279,280,167,168,169,170,281,171,172,173,174,175,176,282,283,177,284,285,286,178,179,180,258,181,182,183,184,91,104,185,186,287,288,289,105,106,290,187,188,189,190,191,192,193,194,291,195,196,197,198,199,25,26,29,30,31,32,33,34,35,36,37,200,38,39,40,41,42,44,45,46,47,50,51,201,52,202,53,203,204,205,206,207,208,54,55,56,296,297,209,92,210,107,93,94,298,299,300,301,302,303,304,305,67,68,69,306,307,211,212,308,213,309,310,311,312,214,313,314,315,316,215,317,318,319,320,216,322,323,80,81,217,218,219,220,221,325,222,223,224,225,226,326,327,84,227,228,229,230,330,331,96,109,110,332,333,111,112,231,334,335,232,233,336,234,337,338,339,340,235,341,342,343,344,236,345,346,347,348,237,238,349,97,98,99,239,240,241,242,243,244,245,246,89,128,247,248,140,356,357,358,359,360,363,364,365,366,367,113,371,249,114,101,250,115,102,103,373,374,375,376,377,378,384,385,386,387,388,391,251,252,253,392,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[260,260,261,261,0,1,2,151,3,5,8,10,18,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,201,52,53,203,207,54,55,56,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,85,86,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[151,152,3,393],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[151,152,3,393],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[394,167,169,170,281,171,172,173,175,395,176,282,177],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[394,167,168,169,170,281,171,172,173,174,175,395,176,282,283,177,284,396],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[116,117,118,119,109,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,104,105,106,116,397,117,398,118,119,399,96,109,110,111,112,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[161,162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[151,152,3,393],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.RecordState:108","failures":[183,288,299,230,331,333,334,335,232,233,336,234,337,338,339,340,235,341,342,343,344,236,345,346,347,348,349,98,239,241,242,243,244,245,246,248,377],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55,56,296,299,305,400,229,353,354,355,401,373,374,375,376,377,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[151,402,403,404,405,406],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[407,408,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":153,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":374,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.tests.MockClassControlTest.testToString":73,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":86,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageTest.moreThanOneArgument":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":386,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":360,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests2.AnswerTest.answer":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":280,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":278,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":388,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":357,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":21,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":340,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":248,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":313,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.MockClassControlTest.testEquals":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":346,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.samples.ExampleTest.voteForRemovals":145,"org.easymock.tests.UsageVarargTest.allKinds":226,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":142,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":48,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":373,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":225,"org.easymock.tests.GenericTest.testBridgedEquals":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":164,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":70,"org.easymock.tests.MockingTest.testClassMocking":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":390,"org.easymock.tests2.UsageConstraintsTest.testContains":268,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":265,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":123,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":221,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":406,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":247,"org.easymock.tests.MockClassControlTest.testHashCode":76,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":16,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":277,"org.easymock.tests.UsageVarargTest.varargCharAccepted":220,"org.easymock.tests2.CaptureTest.testCaptureMultiple":394,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":408,"org.easymock.tests.DefaultClassInstantiatorTest.object":57,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":337,"org.easymock.tests.CapturesMatcherTest.test":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":74,"org.easymock.tests2.UsageTest.resumeIfFailure":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":376,"org.easymock.tests2.StubTest.stubWithReturnValue":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":402,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.samples.SupportTest.voteForRemovals":150,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":342,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":275,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":162,"org.easymock.tests2.DelegateToTest.testWrongClass":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":327,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":341,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":118,"org.easymock.tests2.CaptureTest.testCaptureNone":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":99,"org.easymock.tests.UsageVarargTest.varargByteAccepted":224,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":19,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":61,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.tests2.SerializationTest.testClass":151,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests2.NameTest.nameForMocksControl":295,"org.easymock.tests2.MockedExceptionTest.testMockedException":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":404,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":163,"org.easymock.tests.MockingTest.testTwoMocks":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":339,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":273,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":59,"org.easymock.tests2.ConstraintsToStringTest.andToString":133,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":11,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.UsageTest.defaultResetToNice":289,"org.easymock.samples.ExampleTest.voteAgainstRemovals":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":215,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":229,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":119,"org.easymock.tests.MockingTest.testStrictClassMocking":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":405,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.NameTest.nameForNiceMock":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.samples.ExampleTest.addDocument":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":20,"org.easymock.tests2.DelegateToTest.testStubDelegate":258,"org.easymock.tests2.AnswerTest.stubAnswer":276,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests.UsageVarargTest.varargLongAccepted":223,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":207,"org.easymock.tests2.ConstraintsToStringTest.orToString":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":58,"org.easymock.tests2.UsageConstraintsTest.testSame":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":307,"org.easymock.samples.SupportTest.addDocument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":12,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests2.NameTest.nameForMock":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":314,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":296,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":129,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests2.NameTest.nameForStrictMock":293,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":5,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":15,"org.easymock.tests2.UsageConstraintsTest.testOr":267,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.UsageTest.wrongArguments":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":13,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":315,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":222,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":392,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":282,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":27,"org.easymock.tests.UsageTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":316,"org.easymock.tests2.CaptureTest.testCapture":395,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.UsageConstraintsTest.constraints":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":146,"org.easymock.tests2.ConstraintsToStringTest.notToString":131,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":147,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":358,"org.easymock.tests.LimitationsTest.abstractClass":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":194,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218}}]
