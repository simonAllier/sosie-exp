[{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[14,14,15,15,272,335,474,389,472,473],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[45,49],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[125,126,127,135,154,159,162,163,399,412,415,416],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[14,15,475,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,77,112,114,115,116,117,118,119,122,123,126,134,139,143,144,145,146,147,148,152,210,325,326,327,328,397,404,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[185,375,377],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1483","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73,75,192,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.LastControl:95","failures":[280,282,290,441,442,445,447,448,450,460,465],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[49],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[280,282,290,441,442,447,448,450,460],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[85,86,87,88,90,91],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[476,449,455,467],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,477,85,86,87,88,89,90,478,91,479,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,480,481,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,482,367,368,369,483,370,371,372,373,374,375,376,377,378,379,380,381,484,382,383,485,384,385,386,387,486,388,474,389,390,391,487,392,393,488,489,490,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[271,452],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[450],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[442],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[280,282,290,441,442,445,447,448,450,460,465],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[267,402,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,335,492,493,494,495,496,1,389,497,498],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[45,46,47,48,49],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[281,282,284,285,286,287,288,293,457,463],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[77,101,102,103,122,143,144,145,146,147,148,182,232,325,326,327,328,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[335,499,500,501,502,503,486,389,472,473],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:67","sourceCode":"if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (this.int);\n} else {\n    return ((\"between \" + (this.int)) + \" and \") + (this.int);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[51,126,127,135,137,140,141,158,159,161,162,371,372,373,374,399,400,406,407,412,414,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum","maximum":"minimum","this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,77,112,115,116,117,118,119,126,143,144,145,146,147,148,152,210,325,326,327,328,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[445,450,460,465],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":442,"org.easymock.tests2.UsageTest.argumentsOrdered":407,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":402,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testReturnException":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":144,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":106,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":305,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":449,"org.easymock.tests2.UsageTest.wrongArguments":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":94,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":131,"org.easymock.tests2.UsageConstraintsTest.testNull":445,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":266,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":347,"org.easymock.tests2.CaptureTest.testPrimitive":283,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":124,"org.easymock.tests.UsageTest.moreThanOneArgument":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":213,"org.easymock.tests.UsageTest.argumentsOrdered":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":79,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests.ReplayStateInvalidUsageTest.times":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":356,"org.easymock.tests2.DependencyTest.testClassMocking":421,"org.easymock.tests2.AnswerTest.answer":329,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":420,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":342,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":83,"org.easymock.tests2.DelegateToTest.testDelegate":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests.LimitationsTest.mockFinalMethod":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":100,"org.easymock.tests2.DependencyTest.testClassMockingSupport":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":260,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":418,"org.easymock.tests.UsageThrowableTest.throwError":112,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":224,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":130,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":215,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":323,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":170,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":40,"org.easymock.tests2.UsageTest.niceToStrict":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":385,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":92,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":494,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":455,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":454,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":245,"org.easymock.tests.MockClassControlTest.testEquals":110,"org.easymock.tests2.EasyMockSupportClassTest.testAll":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests.MockNameTest.defaultName":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":222,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":118,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":478,"org.easymock.tests2.UsageConstraintsTest.greaterThan":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":277,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":278,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":340,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":143,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":341,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":409,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":399,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":193,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":495,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":206,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":96,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":338,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":463,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":207,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":117,"org.easymock.tests.MockingTest.testNiceClassMocking":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":364,"org.easymock.tests.MockingTest.testClassMocking":166,"org.easymock.tests2.UsageConstraintsTest.testContains":453,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":200,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":327,"org.easymock.tests2.UsageConstraintsTest.testFind":444,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":471,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests.UsageExpectAndReturnTest.object":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":496,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":109,"org.easymock.tests2.EasyMockSupportTest.testVerify":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":417,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":477,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":198,"org.easymock.tests2.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":497,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":321,"org.easymock.tests2.UsageTest.resumeIfFailure":408,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":146,"org.easymock.tests2.StubTest.stubWithReturnValue":426,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":486,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":61,"org.easymock.tests2.SerializationTest.testAllMockedMethod":337,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":191,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":197,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":330,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":44,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":461,"org.easymock.tests2.DelegateToTest.testWrongClass":378,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":255,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":395,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":363,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":41,"org.easymock.tests2.CaptureTest.testCaptureNone":288,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":127,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":316,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":204,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":220,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":195,"org.easymock.tests2.UsageConstraintsTest.any":451,"org.easymock.tests2.StubTest.stub":425,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":432,"org.easymock.tests2.SerializationTest.testClass":335,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":304,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":470,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":388,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":268,"org.easymock.tests2.CaptureTest.testCaptureLast":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":369,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":462,"org.easymock.tests.MockingTest.testTwoMocks":167,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":406,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":466,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":296,"org.easymock.tests2.MockBuilderTest.testCreateMockString":392,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":104,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":315,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":276,"org.easymock.tests.LimitationsTest.privateConstructor":257,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":465,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":325,"org.easymock.tests2.UsageTest.defaultResetToNice":405,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.CallbackTest.callback":324,"org.easymock.tests2.UsageConstraintsTest.equals":443,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":272,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":122,"org.easymock.tests.UsageCallCountTest.tooFewCalls":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":95,"org.easymock.tests.UsageThrowableTest.throwCheckedException":116,"org.easymock.tests.MockingTest.testStrictClassMocking":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":367,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":334,"org.easymock.tests2.CompareToTest.testGreateOrEqual":476,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":298,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":377,"org.easymock.tests2.AnswerTest.stubAnswer":333,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":474,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":472,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":113,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":440,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":393,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests2.SerializationTest.test":336,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testSame":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":172,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":415,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":75,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":233,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":498,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":469,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":460,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":382,"org.easymock.tests2.UsageStrictMockTest.range":414,"org.easymock.tests2.UsageConstraintsTest.lessThan":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.UsageConstraintsTest.testOr":447,"org.easymock.tests.UsageRangeTest.combination":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":264,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":65,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":205,"org.easymock.tests2.UsageConstraintsTest.cmpTo":452,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":178,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":223,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.constraints":441,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":164,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":97,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":58,"org.easymock.tests.LimitationsTest.abstractClass":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":237,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":344}}]
