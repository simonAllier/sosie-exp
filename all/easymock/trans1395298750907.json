[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,5,7,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[56,57,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[73,74,75,76,77,12,14,15,16,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,17,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,21,122,123,124,125,126,127,128,129,130,131,22,23,132,24,25,26,28,31,33,34,35,36,133,37,38,134,135,62,63,136,64,137,65,66,0,138,139,140,141,1,142,143,144,145,68,146,147,148,69,149,2,40,150,151,152,153,154,155,156,157,158,159,160,5,6,70,161,162,163,164,61,165,72,166,167,45,47,48,168,169,170,171,172,173,174,175,176,177,178,179,180,52,53,54,55,181,182,183,184,185,186,187,188,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[28,139,192],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[193,194,73,74,195,75,76,196,77,197,198,8,8,9,9,10,11,199,12,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,14,15,16,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,221,222,223,224,225,226,227,228,229,230,231,98,99,232,233,100,17,18,101,234,102,103,104,105,106,235,236,237,238,107,108,109,239,240,241,242,243,244,110,245,111,112,113,114,115,116,20,246,247,248,249,250,251,252,253,254,255,256,117,257,118,119,258,259,120,260,121,261,262,263,264,265,266,267,268,269,21,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,122,123,124,125,126,127,128,297,298,129,130,299,300,131,301,302,303,304,305,22,23,132,24,25,26,27,28,29,30,31,32,33,34,35,36,133,37,38,134,135,62,63,136,64,137,65,66,0,138,139,140,141,1,142,143,144,145,68,146,147,306,148,69,149,2,40,150,151,152,153,154,155,156,307,157,158,159,160,308,309,310,41,311,312,313,314,5,6,7,70,161,71,162,163,315,316,164,61,165,72,317,166,167,42,43,45,46,47,48,49,50,51,168,318,169,319,320,321,322,323,170,171,172,173,174,175,324,325,176,326,177,178,327,328,179,329,180,330,331,52,53,54,55,332,333,334,335,181,182,183,184,185,186,336,187,337,188,189,338,339,340,190,191],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[2,341],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[342,343,169,319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[301,302,168,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[342,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[134,144,148,344],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[193,194,73,74,195,75,76,196,77,197,198,8,8,9,9,10,11,199,12,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,14,15,16,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,221,222,223,224,225,226,227,228,229,230,231,98,99,232,233,100,17,18,101,234,102,103,104,105,106,235,236,237,238,107,108,109,239,240,241,242,243,244,110,245,111,112,113,114,115,116,20,246,247,248,249,250,251,252,253,254,255,256,117,257,118,119,258,259,120,260,121,261,262,263,264,265,266,267,268,269,21,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,122,123,124,125,126,127,128,297,298,129,130,299,300,131,301,302,303,304,305,22,23,132,24,25,26,27,28,29,30,31,32,33,34,35,36,133,37,38,134,135,62,63,136,64,137,65,66,0,138,139,140,141,1,142,143,144,145,68,146,147,306,148,69,149,2,40,150,151,152,153,154,155,156,307,157,158,159,160,308,309,310,41,311,312,313,314,5,6,7,70,161,71,162,163,315,316,164,61,165,72,317,166,167,42,43,45,46,47,48,49,50,51,168,318,169,319,320,321,322,323,170,171,172,173,174,175,324,325,176,326,177,178,327,345,328,179,329,180,330,331,52,53,54,55,332,333,334,335,181,182,183,184,185,186,336,187,337,188,189,338,339,340,190,191],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[349,17,18,19,350],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[351,352,353,354,355,356,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[5,358],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[306,69,312,313],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[312],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[70,71,162,163,315,316,164,165,359,72,317,167],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[360,361,256,297,362,363],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[349,350],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[195,302,329,330,331],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[195,302,329,330,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[56,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests2.UsageTest.argumentsOrdered":340,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":267,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":337,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.DelegateToTest.testReturnException":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":265,"org.easymock.tests.MockingTest.testPartialClassMocking":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":363,"org.easymock.samples.SupportTest.voteForRemovals":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests.MockClassControlTest.testToString":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":343,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.DelegateToTest.testWrongClass":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests2.UsageTest.wrongArguments":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":33,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":158,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":219,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":223,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":233,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests2.StubTest.stub":328,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":266,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests.LimitationsTest.mockNativeMethod":21,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":97,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.DelegateToTest.testDelegate":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":26,"org.easymock.tests2.CompareToTest.testCompareEqual":192,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":13,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":149,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.UsageThrowableTest.throwError":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":57,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":172,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":143,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests2.CompareToTest.testLessOrEqual":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.UsageTest.defaultResetToNice":338,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":93,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":232,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":105,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":36,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":113,"org.easymock.tests.MockClassControlTest.testEquals":252,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":217,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":35,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.UsageConstraintsTest.testMatches":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ObjectMethodsTest.testHashCode":262,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":354,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":120,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":115,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.AnswerTest.stubAnswer":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":269,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":117,"org.easymock.tests2.UsageConstraintsTest.greaterThan":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":60,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":96,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":145,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":20,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":315,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":79,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.samples.SupportTest.addDocument":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":85,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests2.CaptureTest.testCapture2_2446744":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":350,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":295,"org.easymock.tests.UsageExpectAndReturnTest.longType":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":90,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":82,"org.easymock.tests.UsageCallCountTest.tooManyCalls":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":34,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":289,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":25,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndReturnTest.object":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":364,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":225,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":263,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":356,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":302,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests.MockClassControlTest.testHashCode":251,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":247,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":224,"org.easymock.tests2.CompareToTest.testLessThan":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests.DefaultClassInstantiatorTest.object":220,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":160,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":44,"org.easymock.tests.UsageTest.unexpectedCallWithArray":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":92,"org.easymock.tests2.CaptureTest.testCapture":359,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":250,"org.easymock.tests2.UsageConstraintsTest.constraints":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":198,"org.easymock.tests2.ConstraintsToStringTest.notToString":347,"org.easymock.tests.UsageStrictMockTest.testVerify":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":95,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":316,"org.easymock.tests2.UsageTest.resumeIfFailure":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":84,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156}}]
