[{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[30,31,32,33],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[3,34,35,36,37,38,39,40,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,0,199,200,201,202,203,204,8,9,205,10,30,31,206,207,208,209,210,211,11,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,12,13,14,15,17,18,20,21,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,27,283,284,285,286,287,32,288,33,289,290,291,22,23,24,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[126,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[293,295,296,297,298,299,300,302,316,303,304,306],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[66,214,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[27,32,294,295,297,298,299,300,301,306],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[71,118,317,25,28,29],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[318,275,281,290],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[293,295,296,297,298,299,300,302,316,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[3,34,35,36,37,38,39,40,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,4,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,319,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,320,145,146,147,148,149,150,151,152,153,154,155,156,321,157,158,159,322,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,323,176,177,324,178,325,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,326,198,0,199,200,201,202,7,203,204,8,9,205,10,30,31,206,207,208,209,210,211,11,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,12,13,14,15,16,17,18,19,20,21,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,27,283,284,285,286,287,32,288,33,289,290,291,22,23,24,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[69,141,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[328,3,329,34,35,36,37,330,38,39,331,332,333,40,41,42,334,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,335,72,75,76,336,81,82,83,84,85,86,87,88,337,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,117,125,126,127,128,129,130,131,132,134,135,136,137,140,142,143,144,320,145,146,147,148,149,338,339,340,341,342,343,344,345,346,150,153,154,155,156,347,161,162,348,349,169,350,351,352,170,171,172,173,174,178,188,189,195,196,197,326,198,199,200,201,202,203,204,9,30,31,353,207,210,211,11,212,354,213,215,218,219,220,221,222,224,225,227,228,231,234,236,237,240,12,15,16,17,18,241,242,243,244,245,246,247,248,249,250,251,252,253,355,254,256,257,258,259,261,262,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,27,283,284,285,286,287,288,33,289,290,291,22,23,24,292,293,294,295,296,298,299,300,301,302,303,306,307,308,309,310,311,312,313,314,315,356,357,358,359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[328,3,329,34,35,36,37,330,38,39,331,332,333,40,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,335,71,72,73,74,75,76,336,81,82,83,84,85,86,87,88,337,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,319,125,126,127,133,134,135,136,137,138,139,140,141,142,145,146,147,148,149,338,339,340,341,342,361,343,344,345,346,150,151,152,153,154,155,156,321,161,162,163,164,165,166,167,168,348,169,350,351,352,362,363,170,171,172,173,174,175,323,176,177,324,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,198,0,199,200,201,202,203,204,8,9,205,30,31,206,353,207,208,209,210,211,11,212,354,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,12,13,15,17,18,20,241,242,243,244,245,246,247,248,249,250,251,252,253,355,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,27,283,284,285,286,287,32,288,33,289,290,291,22,23,24,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,356,357,358,359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[41,42,364,11,365,366,367,368,369,370,371,372,373,241,374],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[375,376,377,378,379,367,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,375,376,377,380,381,367,368,241,374],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[3,331,332,41,41,42,42,87,88,337,6,109,319,125,126,127,198,0,200,201,202,7,203,204,8,9,205,11,354,383,12,13,14,15,16,17,18,19,20,21,241,258,291,22,23,24,307,308,309,310,312,313],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:329","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[43,44,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[3,34,35,36,37,38,39,40,41,41,42,42,44,384,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,385,69,386,72,74,75,81,82,83,84,85,86,87,88,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,151,152,153,154,155,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,198,0,199,200,201,202,203,8,9,205,30,31,207,209,210,11,212,213,215,216,217,218,219,220,221,222,223,224,225,227,229,230,231,234,235,236,237,238,239,240,12,13,15,17,18,20,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,27,283,284,285,286,287,288,33,289,290,291,22,23,24,292,293,294,296,297,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[11,375,376,377,380,381,367,368,241,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[43,44,4,65,66,5,67,68,70,71,72,73,74,75,76,77,79,80,110,111,112,113,116,117,118,119,122,123,124,361,153,157,158,159,160,348,169,350,387,362,363,323,324,178,325,0,204,205,10,388,206,207,208,209,210,211,213,214,223,225,226,227,228,232,233,234,235,12,13,14,17,18,19,20,21,243,245,247,248,250,251,254,255,268,27,292,308,309,312,313,356,357,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":269,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":82,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":136,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":5,"org.easymock.tests2.UsageConstraintsTest.testNull":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":251,"org.easymock.tests2.CaptureTest.testPrimitive":296,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":140,"org.easymock.tests.UsageTest.moreThanOneArgument":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":108,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":182,"org.easymock.tests.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests2.AnswerTest.answer":215,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests2.CaptureTest.testAnd":293,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":186,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":43,"org.easymock.tests2.CaptureTest.testCapture1_2446744":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":196,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":174,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":371,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":164,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":98,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":177,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":280,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":302,"org.easymock.tests2.EasyMockSupportClassTest.testAll":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":106,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":197,"org.easymock.tests2.CaptureTest.testCaptureAll":294,"org.easymock.tests.MockNameTest.defaultName":160,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":173,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":131,"org.easymock.samples.BasicClassMockTest.testPrintContent":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":193,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":86,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":264,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":205,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":7,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":81,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":260,"org.easymock.tests2.CaptureTest.testCaptureFirst":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":245,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":239,"org.easymock.tests2.CaptureTest.testCapture2_2446744":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":20,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":362,"org.easymock.tests.UsageExpectAndReturnTest.longType":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":128,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":170,"org.easymock.tests.UsageCallCountTest.tooManyCalls":363,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":258,"org.easymock.tests2.UsageConstraintsTest.testFind":270,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests.UsageExpectAndReturnTest.object":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":376,"org.easymock.tests.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":114,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":176,"org.easymock.tests.MockClassControlTest.testHashCode":322,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":166,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":179,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":84,"org.easymock.tests2.StubTest.stubWithReturnValue":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":354,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":373,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":216,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests.UsageExpectAndThrowTest.object":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests2.CaptureTest.testCaptureNone":301,"org.easymock.tests.UsageUnorderedTest.message":110,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":352,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":79,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":139,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":83,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":211,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.MockedExceptionTest.testMockedException":257,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests2.CaptureTest.testCaptureLast":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":44,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":238,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":218,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":9,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":256,"org.easymock.tests2.UsageTest.defaultResetToNice":231,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":138,"org.easymock.tests.UsageCallCountTest.tooFewCalls":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":255,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.tests.ObjectMethodsTest.testHashCode":78,"org.easymock.tests2.CompareToTest.testGreateOrEqual":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":378,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":240,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":377,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":382,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests.UsageExpectAndReturnTest.floatType":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":241,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests2.SerializationTest.test":212,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":46,"org.easymock.tests2.UsageConstraintsTest.testSame":272,"org.easymock.samples.SupportTest.addDocument":333,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":185,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests2.UsageStrictMockTest.differentMethods":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":372,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":2,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":209,"org.easymock.tests2.UsageConstraintsTest.lessThan":290,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":303,"org.easymock.tests2.UsageConstraintsTest.testOr":273,"org.easymock.tests.UsageRangeTest.combination":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":387,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests2.CaptureTest.testCaptureFromStub":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":1,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":351,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":59,"org.easymock.tests2.CaptureTest.testCapture":316,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.UsageConstraintsTest.constraints":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":329,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":129,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339}}]
