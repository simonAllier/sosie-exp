[{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[110,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[2,39,41,42,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[115,116,117,118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,120,121,122,123,124,125,126,127,0,1,128,2,3,4,129,130,131,132,133,134,135,5,136,137,116,138,7,139,8,140,9,10,11,12,141,13,14,142,143,144,145,146,147,148,149,150,151,152,16,153,18,19,20,22,25,27,154,155,31,32,33,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,110,183,184,185,111,186,187,188,189,190,191,192,114,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,34,39,40,41,42,211,212,213,214,215,216,53,56,66,72,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,118,234,235,236,237,238,239,240,241,242,243,244,245,246,247,86,87,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,92,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,97,98,99,102,109,317,318,319,320,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[79,322,323],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[142,144,151,182,110,184,111,186,112,196,200],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[229],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[184,196,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[142,144,151,182,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324,325,326,327,328,329,330,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[119,120,121,122,123,124,125,126,333,127,0,1,128,2,3,4,129,130,131,334,335,132,336,337,338,339,340,133,341,342,343,344,345,346,347,348,134,135,5,6,349,136,137,350,115,116,138,7,139,8,140,9,10,11,12,351,141,13,14,352,142,143,144,145,353,146,147,148,149,150,151,354,355,152,16,17,153,18,19,20,21,356,22,23,24,25,26,27,28,29,30,154,357,155,31,32,33,156,358,359,360,361,362,157,363,364,365,366,367,368,369,158,159,160,161,370,162,163,371,372,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,110,373,183,184,185,111,186,187,112,188,189,190,191,192,114,193,194,195,196,197,198,374,199,200,201,202,375,203,204,205,206,207,376,377,208,209,210,34,36,37,38,39,40,41,42,378,43,44,45,47,48,49,379,380,381,211,212,382,213,214,383,384,215,385,386,216,387,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,388,324,325,326,217,218,219,220,221,222,223,224,225,226,227,228,389,327,390,391,392,229,393,230,231,394,395,396,397,398,399,232,400,233,401,117,118,234,235,402,403,404,75,76,77,78,79,80,81,405,406,407,408,409,82,236,237,238,239,240,241,83,410,411,412,413,84,414,415,242,243,244,245,246,247,416,417,418,85,86,87,88,89,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,268,436,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,437,90,91,92,93,438,439,440,441,442,289,443,444,290,291,292,293,294,295,296,445,446,297,447,298,299,300,301,302,448,303,304,449,305,306,307,308,309,310,311,312,313,314,315,316,94,95,96,97,98,450,99,451,452,100,101,102,103,104,105,106,107,108,109,453,454,455,456,457,458,459,460,461,462,463,464,328,465,329,466,467,468,469,470,471,472,473,330,331,474,332,317,318,319,320,475,321,476,477,478,479,480,481,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[483,142,144,145,353,146,147,148,150,113,151,354,152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[140],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[441],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[31,32,33,156,179,381,384,222,393,231,394,395,396,397,398,236,237,238,239,240,241,434,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,443,445,446,299,475,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[119,120,121,122,123,124,125,126,127,0,1,128,2,3,4,129,130,131,334,335,132,133,134,135,5,349,136,137,350,115,116,138,7,139,8,140,9,10,11,12,141,13,14,142,143,144,145,353,146,147,148,149,150,151,354,355,152,16,17,153,18,19,20,21,22,25,26,27,28,154,155,31,32,33,156,157,158,159,160,161,162,163,371,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,110,183,184,185,111,186,187,188,189,190,191,192,114,193,194,195,196,197,198,374,199,200,201,202,207,208,209,210,34,36,39,40,41,42,44,45,47,381,211,212,382,213,214,383,384,215,385,386,216,387,53,56,66,72,217,218,219,220,221,222,223,224,225,226,227,228,393,230,231,394,395,396,397,398,399,232,400,233,401,117,118,234,236,237,238,239,240,241,244,245,246,247,416,417,418,86,87,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,431,433,434,436,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,437,92,289,443,290,291,292,293,294,295,296,445,446,297,447,298,299,300,301,302,303,304,449,305,306,307,308,309,310,311,312,313,314,315,316,97,98,99,484,484,109,317,319,320,475,321,476,477,478,479,480,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":475,"org.easymock.tests2.UsageTest.argumentsOrdered":386,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":465,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":375,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageTest.wrongArguments":382,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":108,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests.UsageTest.moreThanOneArgument":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":481,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":438,"org.easymock.tests.UsageVarargTest.varargIntAccepted":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests.ReplayStateInvalidUsageTest.times":427,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":347,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":161,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":411,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":319,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":442,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests.LimitationsTest.mockFinalMethod":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":294,"org.easymock.tests2.DependencyTest.testClassMockingSupport":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":391,"org.easymock.tests2.CaptureTest.testCapture1_2446744":353,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":159,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":421,"org.easymock.tests.UsageThrowableTest.throwError":393,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":413,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":82,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":410,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":322,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":448,"org.easymock.tests.MockClassControlTest.testEquals":107,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":160,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":292,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":397,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":364,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.samples.ExampleTest.voteForRemoval":123,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":131,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":381,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":152,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":387,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":335,"org.easymock.tests2.CaptureTest.testCapture2_2446744":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":308,"org.easymock.tests.GenericTest.testBridgedEquals":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":417,"org.easymock.tests.UsageExpectAndReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":290,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":388,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":418,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":396,"org.easymock.tests.MockingTest.testNiceClassMocking":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":10,"org.easymock.tests.MockingTest.testClassMocking":95,"org.easymock.tests2.UsageConstraintsTest.testContains":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":243,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":412,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageExpectAndReturnTest.object":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":482,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":264,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":433,"org.easymock.tests.MockClassControlTest.testHashCode":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":158,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":303,"org.easymock.tests2.CaptureTest.testCaptureMultiple":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":453,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":358,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.CapturesMatcherTest.test":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":402,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":474,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":197,"org.easymock.tests2.DelegateToTest.testWrongClass":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":379,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests.UsageUnorderedTest.message":437,"org.easymock.tests.UsageVerifyTest.twoReturns":223,"org.easymock.tests.UsageVarargTest.varargByteAccepted":307,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":247,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":426,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":425,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":350,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":479,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":198,"org.easymock.tests.MockingTest.testTwoMocks":96,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":385,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":201,"org.easymock.samples.ExampleTest.removeNonExistingDocument":333,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests.UsageStrictMockTest.differentMethods":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":334,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":208,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":31,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":263,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":337,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":23,"org.easymock.tests.UsageTest.openCallCountByLastCall":478,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":445,"org.easymock.tests.UsageCallCountTest.tooFewCalls":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":220,"org.easymock.tests.UsageThrowableTest.throwCheckedException":395,"org.easymock.tests.MockingTest.testStrictClassMocking":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":443,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":210,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests2.NameTest.nameForNiceMock":205,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.samples.ExampleTest.addDocument":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.AnswerTest.stubAnswer":209,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":378,"org.easymock.tests.UsageVarargTest.varargLongAccepted":306,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":195,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":146,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":249,"org.easymock.samples.SupportTest.addDocument":119,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":351,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":365,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":320,"org.easymock.tests2.MockedExceptionTest.testRealException":156,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests2.NameTest.nameForStrictMock":204,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":196,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":115,"org.easymock.tests2.UsageConstraintsTest.lessThan":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.UsageConstraintsTest.testOr":111,"org.easymock.tests.UsageRangeTest.combination":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests.UsageVarargTest.varargShortAccepted":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":189,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":384,"org.easymock.tests2.CaptureTest.testCaptureFromStub":354,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":420,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":476,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":262,"org.easymock.tests2.CaptureTest.testCapture":113,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":401,"org.easymock.tests2.UsageConstraintsTest.constraints":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":127,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.LimitationsTest.abstractClass":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":301}}]
