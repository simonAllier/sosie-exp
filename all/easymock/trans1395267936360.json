[{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,1,2,42,43,44,45,3,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,4,80,81,5,82,6,7,83,84,12,85,86,87,88,89,90,91,13,14,15,92,93,94,95,96],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[98,99,100,101,81,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[102,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[106,107,108,109,110],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[111,112,113,114],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,56,57,58,59,122,123,124,106,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[128,129],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,1,2,42,43,44,45,3,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,4,80,81,5,82,6,7,83,84,12,85,86,87,88,89,90,91,13,14,15,92,93,94,95,96],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[130,20,131,21,132,22,23,133,24,25,134,135,111,136,26,137,138,139,140,141,142,143,144,145,146,147,148,149,150,27,112,151,105,152,153,154,113,155,156,128,28,29,157,158,31,32,33,34,35,102,103,159,36,160,161,162,163,118,164,37,119,120,38,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,121,198,199,200,201,40,0,41,1,2,42,202,203,204,205,43,45,206,3,46,47,48,207,208,209,49,50,51,52,210,211,212,213,214,215,53,216,217,55,218,56,57,219,220,58,59,122,122,123,123,124,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,107,109,61,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,69,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,4,293,294,295,296,297,80,81,5,82,6,7,83,298,84,12,85,86,299,300,87,88,89,115,116,117,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,90,91,13,14,15,331,332,333,334,335,336,125,126,127,337,93,338,339,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[340,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[343,344],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,46,49,50,345,4,81,6,85,86,87,88,14,15],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[175,177,179,223,338],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[346,347,348,122,123],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[4,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[211,214,215,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[16,17,18,19,0,2,42,3,68,69,70,5,7,83,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[4,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[1,4,6,9,11,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[102,103,104,350],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[130,20,131,21,132,22,23,133,24,25,134,135,111,136,26,137,138,139,140,141,142,143,145,146,147,148,149,150,27,112,151,105,152,153,113,155,156,128,29,157,31,32,34,102,103,159,36,160,161,162,163,164,119,120,38,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,190,191,192,193,194,195,196,197,121,198,199,200,201,0,1,2,202,203,204,205,43,45,206,3,47,207,208,209,51,52,210,211,212,213,214,215,53,216,217,55,218,56,57,219,220,58,59,122,122,123,123,124,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,351,241,352,242,243,244,245,107,109,61,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,69,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,4,5,6,7,298,84,12,299,300,89,115,116,117,301,302,303,304,305,306,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,91,13,14,15,331,332,333,334,335,125,126,127,337,338,339,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[20,22,25,26,27,29,31,33,36,38,40,0,41,1,2,42,43,45,3,46,47,48,49,50,51,52,53,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,77,79,4,80,81,5,82,6,7,83,84,12,85,86,87,88,89,90,91,13,14,15,92,93,94,95,96],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[98,99,100,101,81,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,46,49,50,345,4,81,6,85,86,87,88,14,15],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[102,103,104,350],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests2.DelegateToTest.testReturnException":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":288,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":99,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":106,"org.easymock.tests.MockClassControlTest.testToString":65,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":257,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":211,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":352,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":309,"org.easymock.samples.ExampleTest.answerVsDelegate":223,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.CaptureTest.testPrimitive":183,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests2.CaptureTest.testCaptureNone":188,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":279,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests2.StubTest.stub":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":330,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":168,"org.easymock.tests2.CaptureTest.testAnd":180,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":42,"org.easymock.tests2.NameTest.nameForMocksControl":19,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":283,"org.easymock.tests2.DelegateToTest.testDelegate":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.CaptureTest.testCaptureLast":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests.UsageThrowableTest.throwError":228,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":171,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":213,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":204,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests2.CompareToTest.testLessOrEqual":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":258,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":64,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":326,"org.easymock.tests.UsageVarargTest.differentLength":60,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":348,"org.easymock.tests.UsageTest.openCallCountByLastCall":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":266,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":98,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":70,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":322,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":310,"org.easymock.tests.UsageThrowableTest.throwCheckedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":167,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests.MockNameTest.defaultName":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.samples.ExampleTest.voteForRemovals":226,"org.easymock.tests2.NameTest.nameForNiceMock":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":173,"org.easymock.tests.UsageVarargTest.allKinds":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests2.DelegateToTest.testStubDelegate":176,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.AnswerTest.stubAnswer":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":178,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.samples.ExampleTest.voteForRemoval":224,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":329,"org.easymock.tests.UsageExpectAndReturnTest.floatType":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":298,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":185,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":312,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":193,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":318,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.GenericTest.testBridgedEquals":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":72,"org.easymock.tests2.NameTest.nameForMock":16,"org.easymock.tests.UsageExpectAndReturnTest.longType":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":69,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":319,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests.UsageExpectAndReturnTest.object":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":9,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests.ErrorMessageTest.testGetters":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":20,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":280,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":338,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests.MockClassControlTest.testHashCode":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":324,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":281,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":165,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":212,"org.easymock.tests2.CompareToTest.testLessThan":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":191,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":62,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":325,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":67,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests.CapturesMatcherTest.test":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":205,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.UsageTest.resumeIfFailure":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":317,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":11}}]
