[{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,1,190,2,191,192,193,194,3,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,5,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,0,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,6,363,8,9,364,365,10,11,12,366,13,367,368,14,15,369,17,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,18,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,19,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[382,457],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[97,312,315,317,318,330,334,403,409,410,415],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[402,404,405,406,407,408,409,411,491,412,413,415],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[21,22,114,492,304],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[80,321],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[69,416],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[420,462],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[187],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[60,287,375,377,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,58,67,68,70,82,83,84,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[129,132],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[495,5,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,72,104,105,106,117,171,179,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,228,229,230,231,232,233,234,235,245,271,293,337,344,349,359,360,361,362,6,11,14,17,370,371,375,386,18,458,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:41","sourceCode":"return org.easymock.internal.Results","type":"CtReturnImpl"},"failures":[20,21,22,26,27,29,34,35,38,39,40,41,80,85,86,87,88,90,91,92,93,94,95,96,97,99,100,101,109,110,111,112,113,114,115,116,118,119,120,121,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,180,181,182,183,185,186,188,189,213,214,217,223,239,241,242,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,271,279,280,281,283,284,287,293,300,301,302,303,304,305,306,5,307,308,309,310,311,312,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,0,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,355,356,357,8,10,12,13,15,372,375,377,378,379,380,381,382,383,384,385,387,388,389,390,391,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,414,415,416,417,418,419,420,421,422,426,429,439,445,448,449,450,451,452,453,455,459,460,461,466,467,475,476,477,478,479,19,482,483,484,485,486,487,489,490],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[187,190],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[495,5,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[26,27,29,38,39,40,41,83,84,99,102,112,114,115,118,119,120,121,122,123,124,125,126,137,188,1,213,214,217,237,246,247,248,249,250,251,254,255,257,258,259,261,262,263,264,265,280,284,302,304,305,350,351,352,353,355,356,357,8,10,12,13,15,421,426,429,439,445,448,449,450,451,452,453,455,459,460,461,466,467,476,19,482,484,485,487],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[59,85,101,149,155,161,165,167,170,246,252,258,262,264,283,287,309,325,328,336,380,403,409,410,415,418,419,420],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[496,497,498,499,500,501,502,284],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[503,309,328,0],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[8,15,429,459,463],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[21,22,114,492,304],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[504,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[80,81,85,112,118,119,120,121,122,137,138,139,140,141,213,214,223,302,317,321,403,409,410,415],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[506,319,325,336],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[507,508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":312,"org.easymock.tests2.UsageTest.argumentsOrdered":388,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":57,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":383,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":479,"org.easymock.tests2.DelegateToTest.testReturnException":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.UsageTest.wrongArguments":381,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":483,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":3,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":31,"org.easymock.tests2.UsageConstraintsTest.testNull":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":451,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":346,"org.easymock.tests2.CaptureTest.testPrimitive":405,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests.UsageTest.moreThanOneArgument":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":125,"org.easymock.tests.UsageTest.argumentsOrdered":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.ReplayStateInvalidUsageTest.times":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests2.DependencyTest.testClassMocking":464,"org.easymock.tests2.AnswerTest.answer":391,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":402,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":192,"org.easymock.tests2.UsageTest.strictResetToDefault":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":458,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":341,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":37,"org.easymock.tests2.DelegateToTest.testDelegate":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests.LimitationsTest.mockFinalMethod":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":46,"org.easymock.tests2.DependencyTest.testClassMockingSupport":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":146,"org.easymock.tests2.CaptureTest.testCapture1_2446744":406,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":203,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":98,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":447,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.MockingTest.testInterfaceMocking":28,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":108,"org.easymock.tests2.UsageTest.niceToStrict":382,"org.easymock.tests2.ThreadingTest.testChangeDefault":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":325,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":324,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":411,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":426,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests2.CaptureTest.testCaptureAll":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":142,"org.easymock.tests2.UsageConstraintsTest.testMatches":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":201,"org.easymock.samples.ExampleTest.voteForRemovals":487,"org.easymock.tests.UsageVarargTest.allKinds":97,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.samples.BasicClassMockTest.testPrintContent":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":78,"org.easymock.tests2.UsageConstraintsTest.greaterThan":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":461,"org.easymock.samples.ExampleTest.voteForRemoval":484,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":462,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":378,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":339,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":415,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":340,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":421,"org.easymock.tests2.CaptureTest.testCapture2_2446744":414,"org.easymock.tests2.UsageTest.moreThanOneArgument":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":96,"org.easymock.tests.GenericTest.testBridgedEquals":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":185,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":42,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":16,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":102,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":123,"org.easymock.tests.UsageCallCountTest.tooManyCalls":186,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests.MockingTest.testNiceClassMocking":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":351,"org.easymock.tests.MockingTest.testClassMocking":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":179,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.UsageConstraintsTest.testContains":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":314,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":377,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":52,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":34,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":436,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":71,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":70,"org.easymock.tests2.UsageTest.openCallCountByLastCall":384,"org.easymock.tests.DefaultClassInstantiatorTest.object":72,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":225,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":437,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":445,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.UsageTest.resumeIfFailure":389,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":417,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":333,"org.easymock.tests2.SerializationTest.testAllMockedMethod":308,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":63,"org.easymock.samples.SupportTest.voteForRemovals":476,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":69,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.DelegateToTest.testWrongClass":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.samples.ConstructorCalledMockTest.testTax":480,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests2.CaptureTest.testCaptureNone":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":84,"org.easymock.tests.UsageUnorderedTest.message":85,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":95,"org.easymock.tests2.ThreadingTest.testThreadSafe":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":440,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":183,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":477,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":107,"org.easymock.tests2.CaptureTest.testCapture_2617107":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":67,"org.easymock.tests2.UsageConstraintsTest.any":321,"org.easymock.tests2.StubTest.stub":416,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":207,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":290,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests2.NameTest.nameForMocksControl":401,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":428,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":448,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.CaptureTest.testCaptureLast":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":147,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":331,"org.easymock.tests.MockingTest.testTwoMocks":25,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":335,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":493,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":74,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":420,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":394,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":286,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":439,"org.easymock.samples.ExampleTest.voteAgainstRemoval":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":82,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":460,"org.easymock.tests.LimitationsTest.privateConstructor":216,"org.easymock.tests2.UsageConstraintsTest.testNotNull":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":370,"org.easymock.tests2.UsageTest.defaultResetToNice":386,"org.easymock.samples.ExampleTest.voteAgainstRemovals":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests.UsageVarargTest.differentLength":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":289,"org.easymock.tests2.CallbackTest.callback":287,"org.easymock.tests2.UsageConstraintsTest.equals":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":456,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":139,"org.easymock.tests.UsageCallCountTest.tooFewCalls":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.MockingTest.testStrictClassMocking":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":294,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":355,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":396,"org.easymock.tests2.CompareToTest.testGreateOrEqual":506,"org.easymock.tests.ObjectMethodsTest.testHashCode":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":422,"org.easymock.tests2.NameTest.nameForNiceMock":400,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.DelegateToTest.testStubDelegate":280,"org.easymock.tests2.AnswerTest.stubAnswer":395,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":367,"org.easymock.tests.UsageVarargTest.varargLongAccepted":94,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":284,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":481,"org.easymock.tests.UsageThrowableTest.noUpperLimit":130,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":329,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":310,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":468,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":407,"org.easymock.tests2.SerializationTest.test":307,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.tests2.UsageConstraintsTest.testSame":316,"org.easymock.samples.SupportTest.addDocument":475,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":354,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":431,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":30,"org.easymock.tests2.NameTest.nameForMock":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":41,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":60,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":212,"org.easymock.tests2.NameTest.nameForStrictMock":399,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":75,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":330,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":304,"org.easymock.tests2.UsageConstraintsTest.lessThan":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":435,"org.easymock.tests2.CaptureTest.testCaptureRightOne":412,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":317,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":449,"org.easymock.tests.UsageTest.wrongArguments":172,"org.easymock.tests2.MockBuilderTest.testWithConstructor":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":432,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":77,"org.easymock.tests.UsageVarargTest.varargShortAccepted":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":184,"org.easymock.tests2.UsageConstraintsTest.cmpTo":322,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":50,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":385,"org.easymock.tests2.CaptureTest.testCaptureFromStub":413,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":202,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests.UsageTest.unexpectedCallWithArray":171,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":311,"org.easymock.samples.ExampleTest.addAndChangeDocument":489,"org.easymock.tests.UsageStrictMockTest.testVerify":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":490,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":110,"org.easymock.tests2.CompareToTest.testGreateThan":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":43,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":4,"org.easymock.tests.LimitationsTest.abstractClass":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":492,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":343}}]
