[{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[12,15,16,17,22,25,29,30,34,35,37,40,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1013","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[80,81,82,83,84,85],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,81,95,96,97,98,99,100,101,102,103,104,105,106,29,44,55,58,65,107,68,74,108,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[109,110,111,104,105,29,112,113,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[116,103,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[118,119,120,121,122,123,124,125,126,127,128,1,129,2,3,130,4,5,6,7,8,110,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,88,156,157,158,159,160,161,89,9,162,163,10,11,164,90,165,166,167,168,169,91,170,171,172,173,174,92,175,176,177,93,178,94,179,180,13,14,181,15,16,182,183,80,184,185,81,82,186,187,188,189,95,190,83,191,192,193,96,194,195,84,97,196,98,197,17,198,199,200,201,202,203,204,205,18,206,19,207,208,20,209,210,211,212,85,213,214,21,99,215,111,216,217,218,219,100,220,221,222,101,102,103,223,224,225,226,227,228,104,105,229,23,230,231,232,106,24,25,26,233,234,235,27,28,236,237,238,239,240,241,242,243,244,245,246,247,29,248,41,249,42,43,250,44,45,46,47,48,251,49,50,0,51,52,252,53,54,55,56,57,58,59,60,61,62,253,63,254,64,65,255,112,114,66,115,256,257,258,259,260,261,262,263,264,265,266,267,268,269,107,67,68,69,70,71,72,73,74,108,75,76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[134,135,136,137,14,15,16,183,80,81,82,186,187,188,189,83,191,193,96,194,84,97,196,98,197,17,270,198,199,200,201,202,203,204,19,210,211,212,85,215,216,217,219,271,272,273,221,274,275,22,223,276,277,278,279,230,280,238,239,240,241,242,243,245,281,247,282,41,42,43,255,283,263,264,284,285,265,266,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[260,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[286,13,287,288,289,290],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[102,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[68,70,74,108,75,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[291,26,242,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[291,26,242,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[87,292,118,128,1,129,2,3,130,4,5,6,7,8,110,131,132,133,134,135,136,137,138,139,140,141,142,143,154,293,88,294,295,296,161,89,162,163,164,297,298,299,90,165,166,167,168,169,91,170,171,172,173,174,92,175,176,177,93,178,94,179,300,14,15,16,183,80,184,301,302,303,304,305,306,307,308,81,82,186,187,188,189,95,190,83,191,192,193,96,194,195,84,97,196,98,197,17,270,198,199,200,201,202,203,204,205,18,206,309,19,207,208,20,209,210,211,212,85,213,214,21,99,215,111,216,217,219,100,271,310,310,311,311,272,273,221,274,275,22,101,102,103,223,224,276,277,278,279,104,105,229,23,230,280,231,232,106,25,233,234,235,236,237,238,239,240,241,242,243,245,281,247,282,29,312,30,31,32,33,34,35,313,36,37,38,39,41,42,43,44,45,46,47,48,251,49,50,0,51,52,252,53,54,55,56,57,58,59,60,61,62,63,254,64,65,255,314,112,315,113,114,66,115,256,257,258,259,316,260,261,283,263,264,284,285,265,266,317,267,268,269,318,107,67,68,70,71,74,108,75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[319,320,67,68,69,70,71,72,73,74,108,75,321,76,77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[161,162,163,164,14,205,206,231,233,234,237,41,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[322],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[323,245,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.tests2.StubTest.stubWithReturnValue":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":262,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":290,"org.easymock.samples.SupportTest.voteForRemovals":271,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":92,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":90,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":315,"org.easymock.tests.UsageExpectAndThrowTest.object":173,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":61,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.samples.ConstructorCalledMockTest.testTax":310,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.samples.ExampleTest.answerVsDelegate":111,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":283,"org.easymock.tests2.UsageConstraintsTest.testNull":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":274,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":37,"org.easymock.tests2.CaptureTest.testPrimitive":70,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":209,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":296,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.UsageUnorderedTest.message":88,"org.easymock.tests.UsageVerifyTest.twoReturns":206,"org.easymock.tests.UsageVarargTest.varargByteAccepted":151,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":304,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.CaptureTest.testCapture_2617107":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":222,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.StubTest.stub":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":291,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests2.SerializationTest.testClass":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":137,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":197,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":67,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests2.MockedExceptionTest.testMockedException":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":33,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":308,"org.easymock.tests2.DelegateToTest.testDelegate":107,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":168,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":275,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":243,"org.easymock.tests2.CompareToTest.testCompareEqual":323,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":266,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":160,"org.easymock.tests2.CaptureTest.testCapture1_2446744":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":171,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests.UsageThrowableTest.throwError":2,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":185,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":166,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":57,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":278,"org.easymock.samples.PartialClassMockTest.testGetArea":272,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.samples.ExampleTest.voteAgainstRemoval":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":247,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":254,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":8,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":221,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":172,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests.UsageOverloadedMethodTest.overloading":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":284,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":54,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests.UsageThrowableTest.throwCheckedException":5,"org.easymock.tests2.EasyMockSupportClassTest.testAll":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":265,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":85,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":159,"org.easymock.samples.ExampleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":7,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":143,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":282,"org.easymock.tests.UsageVarargTest.varargLongAccepted":150,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.samples.ExampleTest.voteForRemoval":216,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":244,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":311,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":3,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.SerializationTest.test":261,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":31,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":32,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests.GenericTest.testPackageScope":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":22,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":152,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":188,"org.easymock.tests.UsageCallCountTest.tooManyCalls":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":263,"org.easymock.tests2.UsageConstraintsTest.testContains":53,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":258,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":242,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":273,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":36,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":305,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests.UsageRangeTest.combination":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":110,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.CaptureTest.testCaptureMultiple":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":39,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.UsageTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":170,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.CaptureTest.testCapture":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":281,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.CapturesMatcherTest.test":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":157,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":35,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145}}]
