[{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[259,260,261],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[262,263,264],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,265,199,201,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[150,151,153,155,156,266,167,171,181,183,191],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[1,2,5,14,15,16,17,18,20,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,135,137,138,139,140,141,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,199,200,201,202,208,210,211,212,213,214,215,216,217,218,219,221,222,224,225,226,227,228,229,230,231,232,234,235,237,241,242,243,244,246,247,252,254,255,256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[156,157,181,182,183,184,191,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[48,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[156,181,183,191],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[269,270,271,272,273,274,275,276,277,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,38,46,49,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,278,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,138,141,142,143,279,280,281,282,283,284,285,286,287,288,289,290,291,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,180,292,181,182,183,184,186,187,188,189,190,191,194,195,293,196,197,198,199,200,202,203,204,205,206,207,208,209,294,295,213,214,216,217,220,223,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,296,241,242,297,298,243,244,245,246,247,248,249,250,251,253,254,257,258,299,300,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[21,23,24,38,84,85,86,138,141,142,214,248,249,250,251,254,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[27,37,39,40,43,44,45,85,86,135,137,139,140,141,150,210,211,212,215,217,221,222,224,252,255,256,257],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[213,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[27,304,39,40,43,44,85,86,137,140,215,221,222,256],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[305,196,197,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[150,156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[269,277,0,2,3,5,12,14,306,35,36,307,37,38,41,42,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,98,99,100,101,102,103,106,128,129,130,138,140,141,308,309,310,311,279,280,281,282,283,284,285,286,287,288,289,290,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,292,181,182,184,185,188,189,190,191,193,194,195,293,196,197,200,312,208,294,295,210,212,213,214,216,218,219,220,223,224,225,226,228,232,233,234,235,236,237,238,313,240,314,296,241,242,297,298,243,244,246,254,256,257,299,300,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[315,316,317,27,38,40,43,44,84,85,86,137,138,140,141,214,215,221,222,248,249,250,251,254,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests2.UsageTest.argumentsOrdered":222,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.samples.SupportTest.voteForRemovals":277,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":305,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":315,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":293,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":157,"org.easymock.tests2.UsageTest.wrongArguments":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests.UsageStrictMockTest.range":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":133,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":296,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":86,"org.easymock.tests.UsageVarargTest.varargByteAccepted":94,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":26,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.StubTest.stub":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":264,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":14,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":295,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":244,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":34,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":301,"org.easymock.samples.PartialClassMockTest.testGetArea":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":240,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.UsageTest.defaultResetToNice":220,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.CallbackTest.callback":247,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":284,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageCallCountTest.tooFewCalls":24,"org.easymock.tests.UsageOverloadedMethodTest.overloading":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":134,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":9,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":298,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":96,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.samples.BasicClassMockTest.testPrintContent":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":10,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.tests.UsageVarargTest.varargLongAccepted":93,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":29,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":154,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":282,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":95,"org.easymock.tests.GenericTest.testBridgedEquals":268,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":22,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":316,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":312,"org.easymock.tests2.UsageStrictMockTest.range":256,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":191,"org.easymock.tests2.UsageConstraintsTest.testOr":155,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":265,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":263,"org.easymock.tests.UsageVarargTest.varargShortAccepted":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests2.CaptureTest.testCaptureMultiple":267,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.UsageStrictMockTest.testVerify":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":8,"org.easymock.tests2.UsageTest.resumeIfFailure":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":285,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88}}]
