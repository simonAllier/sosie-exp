[{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[31,31,32,32,33,11,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,19,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[73,74,75,76],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[77,78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[80,31,31,32,32,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,33,3,4,5,111,6,112,7,113,114,8,9,115,116,28,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,10,11,156,12,13,157,158,159,160,161,162,163,164,34,165,35,36,166,167,37,38,168,169,170,29,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,39,40,41,42,43,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,44,45,14,245,246,247,248,249,250,251,252,46,253,254,255,47,48,256,257,258,259,77,260,261,262,49,263,264,265,266,50,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,51,52,53,54,55,297,298,299,300,301,302,303,304,56,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,15,16,325,326,327,328,329,17,18,330,331,332,333,19,334,20,21,335,336,337,338,22,23,24,25,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,76,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,26,397,398,57,58,399,400,401,59,60,61,62,402,403,404,405,406,63,407,64,65,408,66,67,68,409,410,411,412,69,70,71,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,27,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,72,456,457,458,459,460,461,462,463,464,465,466,467,468,469,78,470,79,471,472,473,474,475,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[80,31,32,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,33,3,4,5,111,6,112,7,113,114,8,9,115,116,28,117,118,478,479,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,10,11,156,12,13,157,158,159,160,161,162,163,164,34,165,35,36,166,167,37,38,168,169,170,29,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,39,40,41,42,43,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,44,45,14,245,246,247,248,249,250,251,252,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,46,253,254,255,47,48,256,257,258,259,77,260,261,262,49,263,264,265,266,50,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,51,52,53,54,55,297,298,299,300,301,302,303,304,56,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,15,16,325,326,327,328,329,17,18,330,331,332,333,19,334,20,21,335,336,337,338,22,23,24,25,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,76,377,378,379,380,381,382,383,502,384,385,386,387,503,388,389,390,391,504,392,393,394,505,395,506,396,26,397,398,57,58,399,400,401,59,60,61,62,402,403,404,405,406,63,407,64,65,408,66,67,68,409,410,411,412,69,70,71,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,27,428,429,430,431,432,433,434,435,436,437,438,439,440,441,507,508,442,443,444,445,446,447,448,449,450,451,452,453,454,455,72,456,457,458,459,460,461,462,463,464,465,466,467,468,469,78,470,79,471,472,473,509,510,511,512,513,514,474,475,476,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[515,516,517,518],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:167","sourceCode":"final org.easymock.internal.ClassProxyFactory.MockMethodInterceptor org.easymock.internal.ClassProxyFactory.MockMethodInterceptor = new org.easymock.internal.ClassProxyFactory.MockMethodInterceptor(java.lang.reflect.InvocationHandler)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:158","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl()","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[402],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[82,83,85,87,88,90,127,128,130,134,135,136,137,138,139,142,143,145,146,147,149,150,151,152,153,11,12,13,35,39,40,41,42,43,243,44,45,51,52,53,54,297,298,299,300,320,321,19,20,21,336,355,358,368,374,377,380,382,383,386,388,389,390,391,392,393,394,397,413,414,415,416,417,418,421,425,426,427,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[519,399],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[127,128,130,361,364,365,393,505,414,424,427],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[399,400,60,62,402,404,68,69,445,447,455],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[95,96,97,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,31,31,32,32,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,33,3,4,5,111,6,112,7,113,114,8,9,115,116,28,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,10,11,156,12,13,157,158,159,160,161,162,163,164,34,165,35,36,166,167,37,38,168,169,170,29,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,39,40,41,42,43,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,44,45,14,245,246,247,248,249,250,251,252,46,253,254,255,47,48,256,257,258,259,77,260,261,262,49,263,264,265,266,50,267,268,269,270,521,271,272,273,274,275,276,522,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,51,52,53,54,55,297,298,299,300,301,302,303,304,56,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,15,16,325,326,327,328,329,17,18,330,331,332,333,19,334,20,21,335,336,337,523,338,22,23,24,25,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,76,524,377,378,525,379,380,381,382,526,383,384,385,386,527,387,503,388,389,390,391,392,393,394,395,396,26,397,398,57,58,399,400,401,59,60,61,62,402,403,404,405,406,63,407,64,65,408,66,67,68,409,410,411,412,69,70,71,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,27,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,72,456,457,458,459,460,461,462,463,464,465,466,467,468,469,78,470,79,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":400,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":77,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":326,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":84,"org.easymock.tests2.DelegateToTest.testReturnException":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":247,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":338,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":358,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":321,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":35,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":121,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":132,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":416,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":252,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":314,"org.easymock.tests2.CaptureTest.testPrimitive":448,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":37,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":53,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":292,"org.easymock.tests.UsageVarargTest.varargIntAccepted":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":485,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":75,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":463,"org.easymock.tests.ReplayStateInvalidUsageTest.times":174,"org.easymock.tests2.DependencyTest.testClassMocking":318,"org.easymock.tests2.AnswerTest.answer":339,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":348,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":445,"org.easymock.tests2.UsageTest.strictResetToDefault":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":309,"org.easymock.tests2.DelegateToTest.testDelegate":473,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":296,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":484,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":200,"org.easymock.tests2.DependencyTest.testClassMockingSupport":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":116,"org.easymock.tests2.CaptureTest.testCapture1_2446744":449,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":346,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":169,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":120,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":488,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":170,"org.easymock.tests.MockingTest.testInterfaceMocking":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":283,"org.easymock.tests2.UsageTest.niceToStrict":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":516,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":373,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":407,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":454,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":101,"org.easymock.tests.MockClassControlTest.testEquals":251,"org.easymock.tests2.EasyMockSupportClassTest.testAll":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests2.CaptureTest.testCaptureAll":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":347,"org.easymock.tests.MockNameTest.defaultName":110,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":54,"org.easymock.samples.ExampleTest.voteForRemovals":90,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":3,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":199,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":522,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":427,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":489,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":419,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":481,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":189,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":323,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":307,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":457,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":308,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":141,"org.easymock.tests2.CaptureTest.testCapture2_2446744":456,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":397,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":266,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":517,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":196,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":73,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":389,"org.easymock.tests.MockingTest.testNiceClassMocking":133,"org.easymock.tests.MockingTest.testClassMocking":125,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":476,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":220,"org.easymock.tests.MockTypeTest.fromEasyMockClass":119,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":313,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":103,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":518,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":162,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":150,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.MockClassControlTest.testHashCode":250,"org.easymock.tests2.EasyMockSupportTest.testVerify":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":74,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":345,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":102,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":521,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.object":271,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":95,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":487,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":425,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.ReplayStateInvalidCallsTest.times":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":151,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":201,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":494,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":374,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":118,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":526,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":264,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":340,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":164,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":409,"org.easymock.tests2.DelegateToTest.testWrongClass":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":491,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":443,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":382,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":483,"org.easymock.tests2.CaptureTest.testCaptureNone":453,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":161,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":510,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":369,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageConstraintsTest.any":405,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":173,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":172,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":434,"org.easymock.tests2.SerializationTest.testClass":349,"org.easymock.tests.LimitationsTest.mockNativeMethod":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":499,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":511,"org.easymock.tests2.NameTest.nameForMocksControl":25,"org.easymock.tests2.MockedExceptionTest.testMockedException":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":302,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":413,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":383,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests2.CaptureTest.testCaptureLast":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":498,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":402,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":394,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":410,"org.easymock.tests.MockingTest.testTwoMocks":126,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":495,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":273,"org.easymock.tests2.ConstraintsToStringTest.andToString":519,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":26,"org.easymock.tests2.MockBuilderTest.testCreateMockString":387,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":523,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":368,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":426,"org.easymock.tests.LimitationsTest.privateConstructor":242,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":474,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.samples.ExampleTest.voteAgainstRemovals":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.UsageVarargTest.differentLength":104,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":512,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.MockingTest.testStrictClassMocking":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":392,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":344,"org.easymock.tests.ObjectMethodsTest.testHashCode":280,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":398,"org.easymock.tests2.NameTest.nameForNiceMock":24,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":492,"org.easymock.tests2.DependencyTest.testInterfaceMocking":320,"org.easymock.samples.ExampleTest.addDocument":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.stubAnswer":343,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":502,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":336,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":441,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":450,"org.easymock.tests2.SerializationTest.test":350,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.samples.SupportTest.addDocument":81,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":480,"org.easymock.tests2.NameTest.nameForMock":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":527,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":477,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":36,"org.easymock.tests2.NameTest.nameForStrictMock":23,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":515,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":442,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":274,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":377,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":486,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":306,"org.easymock.tests2.CaptureTest.testCaptureRightOne":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":509,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":414,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.MockBuilderTest.testWithConstructor":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":500,"org.easymock.tests2.UsageConstraintsTest.cmpTo":406,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":341,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":490,"org.easymock.tests2.CompareToTest.testLessThan":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":328,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":168,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":496,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests2.UsageConstraintsTest.constraints":399,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.samples.ExampleTest.addAndChangeDocument":92,"org.easymock.tests.UsageStrictMockTest.testVerify":158,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":197,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":140,"org.easymock.tests.LimitationsTest.abstractClass":241,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":311}}]
