[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,21,22,23,24,25,26,27,28,29,30,31,32,33,2,34,35,36,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[179,180,181,182,183],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[184,185,186,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[188,189,8,9,11,69,76,77,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[190,191,192],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[13,112,193,140,194],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,195,5,6,196,7,197,198,188,188,189,189,199,8,200,201,9,202,203,204,205,10,11,206,207,208,209,210,211,212,213,214,12,215,13,14,216,217,218,219,220,221,222,223,224,225,15,226,227,228,229,230,231,16,17,18,19,232,20,0,21,22,23,24,1,25,26,27,28,29,30,31,32,33,2,34,35,233,36,3,37,38,39,40,234,41,42,235,236,43,44,45,46,237,47,48,238,239,240,241,49,242,243,50,51,52,53,54,55,244,245,56,246,247,248,57,58,59,249,250,60,251,252,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,253,254,255,78,256,257,258,79,259,80,260,81,261,262,82,263,264,83,84,85,265,86,266,87,88,89,267,268,90,91,269,270,92,271,272,273,274,275,276,93,277,278,279,280,281,282,94,95,96,97,98,99,100,101,102,283,284,285,286,103,287,288,104,289,290,291,292,293,294,295,296,297,105,298,299,300,301,302,106,303,304,305,306,307,308,309,310,311,107,312,313,314,315,179,108,316,317,318,319,320,109,321,110,322,323,324,325,326,327,328,329,330,331,332,190,333,334,335,336,337,338,111,339,112,113,340,341,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,342,343,344,345,346,347,134,135,136,137,348,138,349,139,193,140,141,350,351,352,353,354,355,356,357,358,359,360,361,362,142,363,143,364,365,366,180,367,368,369,370,144,145,181,146,371,372,373,147,148,374,149,375,376,377,378,150,151,152,153,154,379,380,381,382,383,384,385,386,387,388,389,390,391,392,155,393,394,395,396,397,398,399,400,401,402,403,404,182,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,156,157,425,426,158,159,427,428,160,429,430,431,432,433,434,435,436,437,438,439,440,161,162,163,164,165,441,442,443,166,167,444,183,168,169,170,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,171,471,172,173,174,175,176,177,472,473,474,475,476,477,478,479,480,481,482,483,484,178,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[13,14,265,267,268,338,112,113,193,140,486,487,488,489,425,426,427,428,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[221,222,223,224,225,15,226,227,228,229,230,231,272,273,274,275,276,93,277,278,279,280,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[4,195,5,6,7,8,9,10,11,12,13,14,15,19,20,0,21,23,24,25,26,28,29,31,32,2,34,35,233,36,3,39,40,234,41,42,43,44,45,46,48,238,241,242,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,311,312,314,109,111,112,113,116,117,119,124,129,346,134,193,140,141,350,351,352,147,148,149,152,153,155,160,161,162,163,164,165,166,167,168,169,170,445,452,453,455,460,465,171,172,173,174,175,176,177,480,481,482,483,484,178],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,195,5,6,196,7,198,188,189,199,8,200,201,9,202,203,10,11,210,212,213,214,12,215,13,14,216,217,218,219,220,15,16,17,18,19,20,0,21,22,23,24,25,26,27,28,29,30,31,32,33,2,34,35,233,36,3,37,38,39,40,234,41,42,235,236,43,44,45,46,237,47,48,238,241,49,242,50,51,52,53,54,55,244,56,248,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,253,254,78,79,259,80,81,262,82,264,83,84,85,265,86,266,87,88,89,267,268,90,91,269,270,92,271,93,94,95,96,97,98,99,100,101,102,283,103,104,105,106,311,107,312,314,315,179,108,316,317,318,319,109,321,323,324,325,326,327,336,337,338,111,339,112,113,340,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,342,343,344,345,346,347,134,136,137,139,193,140,141,350,147,148,149,490,490,152,153,154,155,396,397,398,399,400,401,402,156,157,425,426,158,159,427,428,160,429,430,431,433,434,435,436,437,438,439,440,161,162,163,164,165,443,166,167,444,183,168,169,170,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,171,471,172,173,174,175,176,177,480,482,483,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[210,212,12,16,17,18,19,20,0,21,22,23,24,1,25,26,27,28,29,30,31,32,33,2,34,35,233,36,3,37,38,39,40,234,41,42,235,236,43,44,45,46,237,47,48,56,64,338,111,346,141,350,440,161,162,163,164,165,166,167,444,183,168,169,170,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,283,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[239,49,242,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.UsageTest.argumentsOrdered":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":363,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":266,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":343,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.tests.MockClassControlTest.testToString":416,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":305,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":450,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":388,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":53,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":469,"org.easymock.tests.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":472,"org.easymock.tests.UsageTest.argumentsOrdered":428,"org.easymock.tests.UsageVarargTest.varargIntAccepted":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests2.DependencyTest.testClassMocking":204,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":70,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":476,"org.easymock.tests2.DelegateToTest.testDelegate":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":465,"org.easymock.tests.LimitationsTest.mockFinalMethod":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":449,"org.easymock.tests2.DependencyTest.testClassMockingSupport":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":182,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":387,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":304,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":405,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":451,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":459,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":71,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":302,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":28,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests.MockNameTest.defaultName":442,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":440,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":347,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":335,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":244,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":443,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":342,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":439,"org.easymock.tests.GenericTest.testBridgedEquals":322,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":401,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":468,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":441,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":402,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":395,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests.MockTypeTest.fromEasyMockClass":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":212,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":74,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":434,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":187,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":482,"org.easymock.tests.MockClassControlTest.testHashCode":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":273,"org.easymock.tests2.EasyMockSupportTest.testVerify":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":295,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":474,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":478,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":146,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":477,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":272,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":456,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":345,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":283,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":462,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":181,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":239,"org.easymock.tests.UsageExpectAndThrowTest.object":460,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":461,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":427,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":151,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":470,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":486,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests.UsageVarargTest.varargByteAccepted":438,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":353,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":144,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":409,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageExpectAndThrowTest.longType":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":408,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":288,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":454,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":458,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":274,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":331,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":264,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":289,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":392,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.CallbackTest.callback":315,"org.easymock.tests2.UsageConstraintsTest.equals":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":246,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":444,"org.easymock.tests.UsageCallCountTest.tooFewCalls":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":242,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests2.NameTest.nameForNiceMock":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":10,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":299,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.stubAnswer":49,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":493,"org.easymock.tests.UsageVarargTest.varargLongAccepted":437,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageThrowableTest.noUpperLimit":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":206,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":192,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.samples.SupportTest.addDocument":201,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":290,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":464,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":365,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests2.NameTest.nameForStrictMock":307,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":207,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":332,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":276,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":362,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":294,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.UsageTest.wrongArguments":426,"org.easymock.tests2.MockBuilderTest.testWithConstructor":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":291,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":400,"org.easymock.tests2.UsageConstraintsTest.cmpTo":26,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CaptureTest.testCaptureFromStub":237,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":404,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":256,"org.easymock.tests.UsageTest.unexpectedCallWithArray":425,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":198,"org.easymock.tests.UsageStrictMockTest.testVerify":341,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":199,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.LimitationsTest.abstractClass":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":72,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":194}}]
