[{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,1,82,83,2,3,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,4,5,107,6,7,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,8,9,10,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,16,17,199,200,201,202,203,18,19,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,20,234,21,22,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[162,163,303,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1976","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[238,239,241,243,244,304,255,260,288,290,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[162,162,163,163,305,306,307,263,308,274],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[309,310,311,312,313,314,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[26,27,28,30,31,36,40,61,62,63,64,65,67,68,69,70,71,73,74,1,2,3,106,4,107,6,7,108,315,316,141,152,154,155,156,157,158,159,160,161,164,166,167,170,17,200,18,19,222,228,229,230,231,233,234,21,22,235,258,276,289,290,293,294,295,296,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[319,320,25,36,37,38,39,40,41,42,43,44,45,46,47,48,49,321,51,52,53,54,55,56,57,58,59,60,72,322,74,323,324,325,80,0,82,83,84,326,327,328,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,329,5,6,7,109,110,316,330,331,332,333,334,335,336,337,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,338,132,133,134,135,136,137,138,8,9,10,339,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,161,162,162,163,163,165,169,170,172,173,175,177,178,179,180,181,186,187,188,189,190,192,193,194,195,196,197,198,16,199,201,202,203,204,205,206,207,208,209,210,211,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,20,21,22,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,24,340,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,341,284,285,286,342,287,288,289,291,292,295,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[343,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[327,328,331,332],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[346,236,238,253,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:119","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:71","sourceCode":"return org.easymock.MockType","type":"CtReturnImpl"},"failures":[347,348,349,350,351,352,353,354,355,356,51,52,357,53,358,359,360,361],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[362,320,363,142,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[74,0,5,6,7,8,9,10,11,364,365,366,16,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":239,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.tests2.StubTest.stubWithReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests2.DelegateToTest.testReturnException":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":24,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":11,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":256,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":310,"org.easymock.tests2.DelegateToTest.testWrongClass":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":34,"org.easymock.samples.ExampleTest.answerVsDelegate":153,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":277,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":359,"org.easymock.tests2.UsageConstraintsTest.testNull":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.CaptureTest.testPrimitive":291,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":104,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":325,"org.easymock.tests2.CaptureTest.testCaptureNone":296,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":23,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":69,"org.easymock.tests2.ThreadingTest.testThreadSafe":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":333,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageVarargTest.varargIntAccepted":63,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":28,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":362,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":138,"org.easymock.tests.UsageExpectAndThrowTest.longType":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":322,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":349,"org.easymock.tests2.CaptureTest.testAnd":288,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":214,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":337,"org.easymock.tests2.DelegateToTest.testDelegate":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":191,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CaptureTest.testCaptureLast":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":283,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":244,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":351,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":179,"org.easymock.tests2.MockBuilderTest.testCreateMockString":176,"org.easymock.tests.UsageExpectAndThrowTest.floatType":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":188,"org.easymock.samples.PartialClassMockTest.testGetArea":165,"org.easymock.tests.MockingTest.testInterfaceMocking":357,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":302,"org.easymock.tests2.CompareToTest.testLessOrEqual":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":216,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.tests2.MockBuilderTest.testCreateMock":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":66,"org.easymock.tests2.CallbackTest.callback":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":307,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":141,"org.easymock.tests.UsageCallCountTest.tooFewCalls":26,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":35,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests2.EasyMockSupportClassTest.testAll":186,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":73,"org.easymock.tests.MockingTest.testStrictClassMocking":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":102,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":281,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":147,"org.easymock.samples.ExampleTest.voteForRemovals":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":313,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests.UsageVarargTest.allKinds":71,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":167,"org.easymock.samples.ExampleTest.addDocument":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":217,"org.easymock.tests.UsageVarargTest.varargLongAccepted":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.samples.ExampleTest.voteForRemoval":154,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":178,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":163,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":237,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":341,"org.easymock.tests2.CaptureTest.testCaptureFirst":301,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":222,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests.GenericTest.testPackageScope":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":175,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":70,"org.easymock.tests.GenericTest.testBridgedEquals":344,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":30,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageCallCountTest.tooManyCalls":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":25,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":278,"org.easymock.tests.MockingTest.testClassMocking":356,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":240,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests.MockTypeTest.fromEasyMockClass":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":105,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":364,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":213,"org.easymock.tests.ErrorMessageTest.testGetters":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":311,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":220,"org.easymock.tests2.CaptureTest.testCaptureRightOne":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests2.UsageConstraintsTest.testOr":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":48,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockSupportTest.testVerify":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":340,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.UsageTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.constraints":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":215,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":159,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":137,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":62}}]
