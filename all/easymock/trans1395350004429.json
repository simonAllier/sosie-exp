[{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[293,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,7,8,27,28,29,30,32,33,34,35,37,38,40,42,44,45,47,49,50,53,54,56,57,59,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,101,103,104,106,107,108,109,110,112,113,114,115,116,117,120,121,122,123,124,127,128,131,132,133,134,135,136,137,138,294,295,296,297,146,147,148,149,150,151,152,298,299,155,156,157,158,162,164,165,166,167,168,300,301,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,209,210,211,213,215,218,219,302,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,250,303,251,252,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[304,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[5,8,36,308,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[50,52,53,57,58,64,65,294,295,296,297,309,214,215,217,218,241,243,246,247,277,278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[70,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[310,311,312,5,313,6,314,7,8,9,10,11,12,315,13,27,29,30,31,33,34,35,36,37,38,39,40,41,42,97,98,99,100,126,127,128,129,131,132,135,139,139,140,140,142,153,154,300,178,179,180,316,317,209,210,211,258,318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,37,38,40,42,43,44,45,47,49,50,53,54,56,57,59,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,294,295,296,297,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,298,299,155,156,157,158,162,164,165,166,167,168,300,301,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,209,210,211,320,213,215,218,219,302,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,250,303,251,252,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[321],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[50,52,53,57,58,64,65,294,295,296,297,309,214,215,217,218,241,243,246,247,277,278,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[326,327,328,329,330,27,331,42,332,333,139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":141,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.DelegateToTest.testWrongClass":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.tests.UsageStrictMockTest.range":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests.UsageUnorderedTest.message":249,"org.easymock.tests.UsageVerifyTest.twoReturns":279,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":8,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":312,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":18,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":35,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":263,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":306,"org.easymock.tests.UsageThrowableTest.throwError":201,"org.easymock.tests.UsageStrictMockTest.differentMethods":218,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":333,"org.easymock.tests.UsageVerifyTest.twoThrows":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.PartialClassMockTest.testGetArea":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":208,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":133,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.UsageTest.defaultResetToNice":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":11,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":235,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":205,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":321,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":207,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":48,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":215,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":219,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.floatType":222,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":140,"org.easymock.tests.UsageThrowableTest.noUpperLimit":202,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":178,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":16,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":221,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.samples.SupportTest.addDocument":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":227,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":160,"org.easymock.tests.UsageExpectAndReturnTest.longType":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":14,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":224,"org.easymock.tests.UsageCallCountTest.tooManyCalls":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.MockedExceptionTest.testRealException":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":228,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":135,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageExpectAndReturnTest.object":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":293,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":52,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":15,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":159,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":49,"org.easymock.tests2.UsageTest.openCallCountByLastCall":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":226,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20}}]
