[{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:538","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[43,44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,37,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,38,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,41,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,43,199,200,201,202,203,204,205,206,207,208,209,210,211,45,212,213,214,46,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,7,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,13,16,26,32,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[284,285,83,286,287,288,91,92,93,289,290,132,133,291,292,293,294,140,295,296,297,298,299,300,301,302,303,152,304,305,306,307,308,309,159,170,171,179,310,311,312,180,181,182,183,313,314,315,186,316,188,189,190,317,191,42,192,318,193,319,320,321,225,226,227,240,322,323,10,11,13,15,16,17,18,19,21,22,23,24,26,27,28,29,30,31,32,266,267,269,271],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[35,52,324,325,36,326,327,328,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,329,78,79,80,81,82,83,84,86,87,88,89,330,331,90,332,91,92,93,94,95,96,97,333,334,335,98,336,99,100,337,101,102,338,339,103,104,37,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,340,126,38,341,342,343,344,345,132,133,138,140,346,145,347,146,348,349,147,148,149,150,151,350,351,352,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,39,174,175,353,176,177,354,40,41,355,356,178,357,310,180,182,183,314,184,185,186,316,187,188,189,190,191,318,193,319,194,195,196,197,198,43,199,200,201,202,44,203,204,205,206,207,208,209,210,211,45,212,213,358,214,46,215,216,217,218,219,220,227,229,230,231,232,359,360,233,234,235,236,237,361,238,7,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,13,16,26,32,259,362,260,261,363,364,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,365,277,278,279,280,281,282,366,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[369,324,326,327,370,371,337,37,105,347,349,353,355,356,364],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[372,373,374,375,376,377,2,3,4,5,378,9,268,272,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[380,273,274,275,276,365,277,278,279,280,281,282,381,366,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[374,382,383,384,385,386,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[159,168,169,193,16,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,35,52,369,324,325,36,326,327,328,380,380,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,329,78,79,80,81,82,83,86,87,88,89,387,330,331,90,332,91,92,93,94,96,97,333,334,335,371,336,99,100,337,101,102,338,339,103,104,37,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,340,126,38,341,342,343,344,345,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,346,145,347,146,348,349,147,148,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,39,174,175,353,176,177,354,40,41,355,356,178,357,179,310,180,181,182,183,313,314,315,184,185,186,316,187,188,189,190,317,191,192,318,193,319,194,195,196,197,198,43,199,200,201,202,203,204,205,206,207,208,209,210,211,45,212,213,358,214,46,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,359,360,233,234,235,236,237,361,238,7,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,13,16,26,32,259,362,260,261,363,364,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,365,277,278,279,280,281,282,381,366,283],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[388,389,390],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[197,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[197,43,201,44,46,273,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[333,162,217,218,220,229,230,234],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[369,391,392,347,393,394],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[47,48,49,50,51,35,52,325,36,326,328,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,330,331,90,332,94,96,97,333,334,335,336,99,100,337,101,102,338,339,103,104,37,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,340,126,38,341,342,343,344,345,132,133,292,134,135,136,137,138,139,140,395,396,145,146,348,349,147,148,150,151,351,352,308,309,153,154,155,156,157,158,160,161,162,163,164,165,166,167,170,171,172,173,39,174,175,176,177,354,40,355,178,357,184,185,186,316,187,188,189,190,191,194,195,196,197,198,43,199,200,201,202,203,204,205,206,207,208,209,210,211,45,212,213,358,214,46,215,216,217,218,219,220,225,226,227,228,229,230,231,232,359,360,233,234,235,236,237,361,238,239,240,242,243,244,245,246,247,248,250,251,252,253,254,13,259,260,261,363,364,262,263,264,265,266,269,270,273,274,275,276,365,277,278,279,280,281,282,381,366,283],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[358,46,229,230],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[35,52,325,36,328,90,91,92,93,94,95,96,97,98,336,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,340,38,341,342,343,344,345,132,291,140,146,349,147,150,151,153,154,155,156,157,159,161,163,164,166,173,39,174,175,176,354,40,41,178,357,310,180,182,183,314,184,185,186,316,187,188,189,190,191,318,193,319,194,195,196,197,198,43,199,200,201,202,203,204,205,206,207,208,209,210,211,45,212,213,214,46,215,216,217,219,227,231,232,359,360,233,235,237,7,239,241,242,243,244,245,246,247,248,249,250,251,252,253,13,16,26,32,259,261,364,262,265,266,267,268,269,270,271,272,273,274,276,365,279,280,281,282,366,283],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[191],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[397,7,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[296,297,301],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[369,391,392,347,393,394],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[369,324,326,327,370,371,337,37,105,347,349,353,355,356,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[168,169,372,373,374,0,398,375,376,377,7,241,378,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,268,272,379],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":160,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageTest.wrongArguments":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":143,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":251,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":103,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":72,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":49,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests2.AnswerTest.answer":217,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":273,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":246,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":68,"org.easymock.tests.LimitationsTest.mockFinalMethod":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.CaptureTest.testCapture1_2446744":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.UsageThrowableTest.throwError":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":6,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":62,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":3,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":117,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":281,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests2.CaptureTest.testCaptureAll":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":50,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":82,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":344,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":319,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":302,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":317,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":245,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":357,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":360,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":81,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":71,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":47,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests.MockingTest.testNiceClassMocking":289,"org.easymock.tests.MockingTest.testClassMocking":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":85,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":227,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests.UsageExpectAndReturnTest.object":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":396,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":5,"org.easymock.tests.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":122,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":334,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageVarargTest.varargCharAccepted":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":253,"org.easymock.tests.DefaultClassInstantiatorTest.object":296,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":341,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":59,"org.easymock.tests.CapturesMatcherTest.test":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests2.UsageTest.resumeIfFailure":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.StubTest.stubWithReturnValue":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":173,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":65,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":397,"org.easymock.tests.UsageExpectAndThrowTest.object":63,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":212,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.samples.ConstructorCalledMockTest.testTax":168,"org.easymock.tests.UsageStrictMockTest.range":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":142,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":391,"org.easymock.tests2.CaptureTest.testCaptureNone":280,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":389,"org.easymock.tests.UsageUnorderedTest.message":337,"org.easymock.tests.UsageVerifyTest.twoReturns":105,"org.easymock.tests.UsageVarargTest.varargByteAccepted":80,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":89,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":170,"org.easymock.tests2.CaptureTest.testCapture_2617107":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":56,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":363,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":57,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.CaptureTest.testCaptureLast":279,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":213,"org.easymock.tests.MockingTest.testTwoMocks":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":215,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":298,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":359,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":218,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":193,"org.easymock.tests.LimitationsTest.privateConstructor":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":377,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":345,"org.easymock.tests2.UsageTest.defaultResetToNice":41,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":121,"org.easymock.tests.UsageVarargTest.differentLength":329,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":144,"org.easymock.tests.UsageThrowableTest.throwCheckedException":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":392,"org.easymock.tests.MockingTest.testStrictClassMocking":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":270,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":233,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":384,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":146,"org.easymock.tests.UsageVarargTest.varargLongAccepted":79,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.floatType":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":241,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":126,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":322,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":277,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":107,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.samples.SupportTest.addDocument":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":67,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":97,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":310,"org.easymock.tests2.UsageStrictMockTest.range":364,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.CaptureTest.testCaptureRightOne":282,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":388,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":316,"org.easymock.tests.UsageTest.wrongArguments":324,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":119,"org.easymock.tests.UsageVarargTest.varargShortAccepted":78,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":387,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":381,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":369,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":88,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests.UsageStrictMockTest.testVerify":149,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":112,"org.easymock.tests.LimitationsTest.abstractClass":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248}}]
