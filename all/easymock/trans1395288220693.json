[{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[15,16,17,18,19],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[20],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[21,22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[15,30,31,16,32,17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[51,52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[54,54,55,55,56,57,58,59,60,20,61,62,63,64,65,66,67,68,69,70,44,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[89,90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[93,54,55,94,95,21,96,97,98,99,100,101,102,103,104,105,106,107,108,109,27,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[126,127,128,129,130],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[131,132,7,9,133,134],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[135,136,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[122],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[100,138,139,140],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[141,142,93,54,54,55,55,143,95,144,145,146,147,148,149,150,97,98,99,100,139,151,152,153,101,154,103,104,107,108,109,110,113,114,155,116,156,157,158,159,160,117,161,162,119,120,163,164,165,123,124,125,166,167,168,169,170,171,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[100,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[95,21,100,22,23,24,173,174,27,112],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[175,176,15,177,178,179,180,181,182,183,141,142,184,185,93,54,55,94,186,143,187,95,21,96,188,189,190,191,192,193,51,194,195,196,197,198,199,200,201,202,144,145,146,147,203,204,148,149,205,206,207,208,209,210,211,52,212,213,214,215,216,217,218,56,219,0,220,221,222,223,224,225,226,227,228,229,230,1,231,232,233,234,235,2,3,236,237,238,239,240,241,242,243,244,245,246,247,248,249,150,250,251,97,252,253,254,255,256,257,258,259,260,98,261,262,263,264,265,99,266,267,268,269,270,271,272,57,58,273,274,275,59,60,20,61,276,277,278,279,280,62,281,63,64,282,65,66,67,283,284,285,286,68,69,70,287,288,289,290,291,30,292,31,293,16,32,17,294,18,33,34,35,36,37,38,39,40,41,42,43,44,45,46,295,296,297,298,299,300,301,302,303,304,305,306,307,100,138,139,47,308,28,48,49,309,101,102,103,104,105,106,107,108,109,27,110,111,112,113,114,115,116,156,157,310,158,159,160,117,311,161,118,312,162,119,120,163,313,121,314,315,316,317,318,319,320,321,322,323,324,325,326,327,122,164,165,123,328,124,329,330,331,53,125,332,333,334,335,336,337,338,71,72,4,339,5,6,340,341,342,343,344,345,346,347,348,349,350,351,352,29,353,88,354,355,356,357,358,359,360,361,362,363,7,73,364,8,365,366,367,368,369,9,10,370,371,11,12,372,373,374,166,375,376,377,378,379,380,381,167,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,19,402,403,404,14,74,75,405,406,76,77,78,79,80,81,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,82,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,168,169,170,480,171,481,482,483,484,485,486,487,488,489,490,491,492,493,172,494,495,496,497,498,499,500,501,502,83,84,85,86,87,503,504,505,506,507,126,127,128,508,129,509,130,510,511,512,513],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[131,132,7,9,133,134],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[95,21,100,22,23,24,173,174,27,112],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[514,65],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[141,142,93,54,54,55,55,143,95,144,145,146,147,148,149,150,97,98,99,100,139,101,103,104,107,108,109,110,113,114,116,156,157,158,159,160,117,161,162,119,120,163,121,164,165,123,124,125,166,167,387,168,169,170,171,172,494,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":274,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":368,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":350,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":175,"org.easymock.tests2.DelegateToTest.testReturnException":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":377,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":494,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":287,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":455,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":277,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":125,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":304,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":474,"org.easymock.tests.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests.ReplayStateInvalidUsageTest.times":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests2.DependencyTest.testClassMocking":199,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":330,"org.easymock.tests2.UsageTest.strictResetToDefault":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":299,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":431,"org.easymock.tests2.DelegateToTest.testDelegate":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":470,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests2.DependencyTest.testClassMockingSupport":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":511,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.UsageThrowableTest.throwError":446,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":390,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":53,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":510,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.samples.PartialClassMockTest.testGetArea":93,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":387,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":464,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":484,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":265,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":418,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":281,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":436,"org.easymock.tests.MockClassControlTest.testEquals":498,"org.easymock.tests2.EasyMockSupportClassTest.testAll":150,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":472,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":151,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":86,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":444,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":339,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":452,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":381,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":174,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":130,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":228,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":297,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":376,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":298,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":414,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":443,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":491,"org.easymock.tests.UsageExpectAndReturnTest.longType":410,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":473,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":454,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":471,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":504,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":83,"org.easymock.tests.UsageCallCountTest.tooManyCalls":492,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":460,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":451,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testClassMocking":479,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":485,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":154,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":143,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests.UsageExpectAndReturnTest.object":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":303,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":23,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":385,"org.easymock.tests.UsageTest.exactCallCountByLastCall":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":19,"org.easymock.tests.MockClassControlTest.testHashCode":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":222,"org.easymock.tests.UsageVarargTest.varargCharAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":506,"org.easymock.tests2.CaptureTest.testCaptureMultiple":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":507,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":383,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":461,"org.easymock.tests.CapturesMatcherTest.test":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":424,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":503,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":379,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":416,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":286,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":354,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":132,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":467,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":360,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":308,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":502,"org.easymock.tests.UsageExpectAndThrowTest.object":465,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":283,"org.easymock.tests2.DelegateToTest.testWrongClass":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":72,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":245,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":466,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":477,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":90,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":442,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":489,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":386,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":513,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageConstraintsTest.any":279,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":395,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":505,"org.easymock.tests.UsageExpectAndThrowTest.longType":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":508,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":394,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.SerializationTest.testClass":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":426,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":153,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests2.NameTest.nameForMocksControl":291,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":371,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":188,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":512,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":276,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":284,"org.easymock.tests.MockingTest.testTwoMocks":168,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":463,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":92,"org.easymock.samples.ExampleTest.removeNonExistingDocument":181,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":194,"org.easymock.tests.UsageStrictMockTest.differentMethods":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":127,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":116,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":493,"org.easymock.tests.UsageExpectAndThrowTest.floatType":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":96,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":453,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.differentLength":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":189,"org.easymock.tests2.CallbackTest.callback":227,"org.easymock.tests2.UsageConstraintsTest.equals":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":118,"org.easymock.tests.UsageTest.openCallCountByLastCall":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":405,"org.easymock.tests.UsageCallCountTest.tooFewCalls":487,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":91,"org.easymock.tests.UsageThrowableTest.throwCheckedException":450,"org.easymock.tests.MockingTest.testStrictClassMocking":478,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":432,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":309,"org.easymock.tests.ObjectMethodsTest.testHashCode":384,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.NameTest.nameForNiceMock":290,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":24,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.stubAnswer":49,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":441,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":447,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":240,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":408,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.samples.SupportTest.addDocument":184,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":203,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":419,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":115,"org.easymock.tests2.UsageStrictMockTest.differentMethods":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":411,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":469,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":29,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests2.NameTest.nameForStrictMock":289,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":128,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":89,"org.easymock.tests2.UsageConstraintsTest.testOr":61,"org.easymock.tests.UsageRangeTest.combination":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargShortAccepted":440,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":490,"org.easymock.tests2.UsageConstraintsTest.cmpTo":280,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":389,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":104,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.constraints":273,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":364,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests.UsageStrictMockTest.testVerify":367,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":183,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":363,"org.easymock.tests2.CompareToTest.testGreateThan":514,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":413,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":301}}]
