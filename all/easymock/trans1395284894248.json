[{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[4,5,6,7,8,9],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,8,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[15,67,68,69,70,71,22,72,73,74,75,30,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,58,104,105,106,107,108,35,36,37,109,56,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,143,144,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[146],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[90,181,91,182],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[76,77,78,79,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,58,183,108,184,37,109,113,116,126,132,135,136,137,138,139,140,141,142,143,143,144,144,145,147,148,149,153,160,161,164,166,176,177,178,179],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[186,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[76,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,58,104,105,106,188,107,35,36,37,109,56,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,143,144,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38,67,69,189,190,191,192,39,40,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,72,74,41,42,43,44,45,46,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[78,102,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[139,215,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":44,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":50,"org.easymock.tests2.SerializationTest.testAllMockedMethod":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":42,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":146,"org.easymock.tests.MockClassControlTest.testToString":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":51,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":110,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":6,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":127,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":82,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":65,"org.easymock.tests2.StubTest.stub":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":43,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":171,"org.easymock.tests2.SerializationTest.testClass":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.MockedExceptionTest.testMockedException":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":96,"org.easymock.tests.LimitationsTest.mockFinalMethod":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":140,"org.easymock.tests.MockingTest.testTwoMocks":176,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":89,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests2.CompareToTest.testLessOrEqual":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.UsageTest.niceToStrict":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":121,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":151,"org.easymock.tests.LimitationsTest.privateConstructor":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":47,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":99,"org.easymock.tests.UsageTest.openCallCountByLastCall":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":131,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.MockClassControlTest.testEquals":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":7,"org.easymock.tests.MockingTest.testStrictClassMocking":174,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":183,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":54,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":53,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":109,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":144,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":59,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":166,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":106,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":41,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":118,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.GenericTest.testBridgedEquals":150,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":64,"org.easymock.tests2.MockedExceptionTest.testRealException":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testNiceClassMocking":180,"org.easymock.tests.MockingTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":77,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":52,"org.easymock.tests.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":187,"org.easymock.tests.MockClassControlTest.testHashCode":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":119,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":123,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests2.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":79,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":124,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":132,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":155,"org.easymock.tests2.UsageTest.resumeIfFailure":61,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":160,"org.easymock.tests.LimitationsTest.abstractClass":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":188}}]
