[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[10,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[12,13,14,15,16],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[25,26,27,28],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,22,47,48,49,50,51,52,53,54,55,56,57,58,59,11,60,61,3,62,9,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[81,82],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[83,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[84,84,85,85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,17,119,47,49,50,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,18,152,63,153,154,155,156,157,68,70,71,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[19,31,34,35,165,166,167,39,43,44,22,49,53,56,57,70],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[43,169,170],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[25,26,27,28],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[172,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.Capture:82","failures":[174,175,74,176,75,76,77,78,177,178,179,180,80],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[81,82],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[181,182],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[183,184],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[181,182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[89,91,93,94,95,102,103,105,108,109,113,114,115,119,121,125,126,127,129,130,131,132,133,134,84,84,85,85,135,136,137,138,139,140,143,145,146,148,62,152,63,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:136","failures":[88,89,90,91,185,83,101,40,41,47,120,121,125,126,127,128,129,84,84,85,85,12,186,184,59,187,188,189,190,191,14,192,61,193,194,68,180],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[195,196,197,198,199,200,93,94,95,201,81,118,202,17,82,203,204,119,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,130,84,84,85,85,222,223,224,225,136,226,227,137,228,138,139,229,230,140,231,232,143,144,146,147,148,233,149,87,173,171,150,151,18,234,235,236,237,238,239,26,28,153,240,241,242,243,244,245,154,246,247,155,248,249,250,251,252,253,254,255,256,156,257,258,259,260,261,157,262,263,158,159,160,161,163,164],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[19,31,34,35,36,264,265,266,267,268,269,270,271,272,273,274,275,276,277,37,197,278,279,280,281,282,283,93,94,95,0,284,285,286,167,100,287,288,289,43,44,104,105,107,290,113,291,292,45,293,169,170,294,295,296,297,298,299,300,118,202,119,301,302,303,304,305,306,307,308,309,310,311,312,206,313,314,315,316,317,318,319,320,22,48,321,322,214,215,216,217,218,219,220,221,323,130,324,131,2,132,133,325,134,326,222,223,327,135,51,328,53,172,329,330,56,57,58,224,137,228,138,139,230,232,141,142,143,144,145,146,147,148,233,149,171,151,183,331,332,11,333,334,60,181,182,335,336,15,3,5,337,338,339,340,236,237,238,152,341,342,343,344,26,27,28,153,345,346,347,348,349,350,351,352,353,354,355,356,357,154,155,156,157,358,359,69,360,158,159,160,161,162,163,164,175,73,74,176,76,77,78,79,177,179,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[183,188,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests2.UsageTest.argumentsOrdered":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":355,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests2.DelegateToTest.testReturnException":343,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":81,"org.easymock.tests.MockClassControlTest.testToString":216,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":251,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":332,"org.easymock.tests2.UsageTest.wrongArguments":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":84,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":354,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.CaptureTest.testPrimitive":176,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":243,"org.easymock.tests.UsageTest.moreThanOneArgument":30,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":90,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":20,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":123,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":257,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":280,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":125,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":210,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":358,"org.easymock.tests.ReplayStateInvalidUsageTest.times":309,"org.easymock.tests.LimitationsTest.mockNativeMethod":119,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests2.CaptureTest.testAnd":175,"org.easymock.tests2.UsageTest.strictResetToDefault":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":171,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.MockedExceptionTest.testMockedException":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":268,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests.LimitationsTest.mockFinalMethod":205,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":331,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests.MockingTest.testTwoMocks":200,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":303,"org.easymock.tests.UsageThrowableTest.throwError":291,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":305,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":214,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.PartialClassMockTest.testGetArea":130,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":304,"org.easymock.tests2.CompareToTest.testLessOrEqual":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":252,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":213,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests.LimitationsTest.privateConstructor":204,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.UsageTest.defaultResetToNice":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":259,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":256,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":334,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests.MockClassControlTest.testEquals":220,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.MockingTest.testStrictClassMocking":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":310,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.samples.ExampleTest.voteForRemovals":134,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":341,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.samples.ExampleTest.addDocument":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":212,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":153,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":85,"org.easymock.tests.UsageThrowableTest.noUpperLimit":292,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":186,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":241,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":347,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":103,"org.easymock.tests2.UsageConstraintsTest.testSame":187,"org.easymock.samples.SupportTest.addDocument":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":244,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":306,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":249,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.longType":105,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":336,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":106,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests.MockingTest.testNiceClassMocking":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.MockingTest.testClassMocking":199,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":278,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":225,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":238,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":353,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":253,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":240,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests.MockClassControlTest.testHashCode":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":250,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":215,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":165,"org.easymock.tests2.UsageConstraintsTest.cmpTo":333,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.CaptureTest.testCaptureMultiple":174,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":356,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":302,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":293,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":279,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":86,"org.easymock.tests2.CaptureTest.testCapture":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":127,"org.easymock.tests.LimitationsTest.abstractClass":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":195,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":351,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270}}]
