[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[97,174,111,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[175,176,135,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[178,179,61,63,172],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[65,120,121,122,123,124,180],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[175,176],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[181,182],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[183,184,185,186,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[94,95,97,99,100,174,111,115,161,189,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[190,161,189,163,164,191,192,165,167,193,168,194,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[14,15,16,17,18,19,20,27,30,31,32,33,34,35,38,39,41,42,43,45,46,47,48,49,50,51,52,53,56,57,58,59,195,196,197,198,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,120,121,122,123,124,150,155,158,159,160,171,172,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[201,202,203,204,205,206,207,208,209,210,151,211,157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,28,53,54,55,62,92,93,96,97,98,99,104,106,107,109,110,115,116,117,157,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[101,106,117,212],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[213,214,185,215,216,217,218,179,61,186,63,219,220,221,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[183,184,185,186,187,188],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[118,222,223,150,224,225,226,227,228,229],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[230,231,232,233,234,81,235,236,82,237,238,239,240,241,242,243,244,245,83,246,247,248,249,250,84,251,252,87,91,253,118,254,255,222,223,256,257,258,259,150,224],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[184,260,108,187,188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[65,230,231,82,83],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[238,137,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[118,119,222,123,223,261,180,125,150,224,225,226,227,228,229,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,0,1,2,3,4,5,285,286,287,288,289,290,291,6,292,7,8,9,10,11,12,293,294,295,296,201,202,203,204,205,206,297,298,299,300,301,13,213,14,15,302,16,17,18,19,20,303,304,305,306,307,21,22,185,215,23,24,216,217,25,308,309,310,311,312,313,314,315,316,317,318,319,320,26,321,322,323,27,324,28,207,325,29,326,327,328,329,330,331,332,333,334,175,335,336,337,338,339,340,341,342,343,344,345,199,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,371,372,373,50,51,374,52,375,376,377,218,53,54,208,378,55,379,380,181,381,382,383,182,384,385,386,387,388,389,390,391,392,393,394,395,396,397,56,57,58,59,195,196,197,198,398,399,400,401,402,403,404,405,406,407,408,409,410,411,60,179,61,412,413,200,414,415,416,417,186,62,418,63,64,419,420,65,66,421,67,68,422,69,423,424,230,231,425,426,427,70,428,429,71,72,73,74,75,76,430,431,77,432,433,434,78,79,80,435,436,232,233,234,81,235,236,82,237,238,239,240,241,242,243,244,245,83,246,247,248,249,250,84,251,252,85,86,87,88,437,89,90,91,253,438,439,440,92,93,94,95,441,96,97,98,99,100,101,174,102,103,104,105,106,107,108,109,110,111,112,113,442,114,115,116,117,118,119,443,444,254,120,445,255,446,121,447,122,222,123,448,223,261,124,257,180,125,126,127,219,128,449,129,130,131,220,221,132,133,450,451,452,453,454,455,456,134,176,457,458,135,177,459,460,461,462,463,464,465,466,467,136,468,469,470,471,472,473,137,138,139,140,141,142,143,144,145,146,147,148,474,475,476,477,478,479,480,481,482,483,484,149,485,486,487,488,489,490,150,224,491,209,210,151,211,492,152,153,154,155,156,493,157,494,495,158,159,496,497,160,498,499,500,161,162,189,163,164,191,192,165,166,167,168,194,169,170,501,502,503,171,504,172,173,505],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[506,118,119,443],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[230,231,432,254,256,507,257],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[213,214,185,215,216,217,218,179,61,186,63,219,220,221,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[78,79,508,121,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[109,511],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,327,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":338,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":449,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":425,"org.easymock.tests2.DelegateToTest.testReturnException":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests.MockClassControlTest.testToString":405,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":475,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":53,"org.easymock.tests2.UsageTest.wrongArguments":219,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":490,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":421,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":282,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":462,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":279,"org.easymock.tests2.UsageTest.strictResetToDefault":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":58,"org.easymock.tests2.DelegateToTest.testDelegate":500,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":366,"org.easymock.tests.LimitationsTest.mockFinalMethod":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":400,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":460,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":388,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":281,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":252,"org.easymock.samples.PartialClassMockTest.testGetArea":65,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":1,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":241,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":487,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageOverloadedMethodTest.overloading":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":3,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":311,"org.easymock.tests.MockClassControlTest.testEquals":409,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":509,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":507,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":461,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests.MockNameTest.defaultName":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":198,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests.UsageVarargTest.allKinds":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":60,"org.easymock.samples.BasicClassMockTest.testPrintContent":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":11,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":502,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":384,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":385,"org.easymock.samples.ExampleTest.voteForRemoval":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":435,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":430,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":411,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":125,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":496,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":155,"org.easymock.tests2.UsageTest.moreThanOneArgument":127,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":199,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":318,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":272,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":369,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":442,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":266,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests.MockTypeTest.fromEasyMockClass":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":440,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests.UsageExpectAndReturnTest.object":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":226,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":313,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.MockClassControlTest.testHashCode":408,"org.easymock.tests2.EasyMockSupportTest.testVerify":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":243,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":459,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":501,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":379,"org.easymock.tests2.CaptureTest.testCaptureMultiple":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":262,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":286,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.SerializationTest.testAllMockedMethod":443,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":188,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":363,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":321,"org.easymock.tests.UsageExpectAndThrowTest.object":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":498,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":455,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":362,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":183,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":2,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":317,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":246,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":428,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":378,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests2.StubTest.stub":493,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndThrowTest.longType":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":392,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":504,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.SerializationTest.testClass":118,"org.easymock.tests.LimitationsTest.mockNativeMethod":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":482,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":505,"org.easymock.tests2.NameTest.nameForMocksControl":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":484,"org.easymock.tests2.MockedExceptionTest.testMockedException":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":236,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":439,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":123,"org.easymock.tests.MockingTest.testNicePartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":480,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":401,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":359,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":486,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":154,"org.easymock.tests2.MockBuilderTest.testCreateMockString":180,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":237,"org.easymock.tests.UsageExpectAndThrowTest.floatType":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests.LimitationsTest.privateConstructor":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":209,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":481,"org.easymock.tests.UsageVarargTest.differentLength":314,"org.easymock.tests2.CallbackTest.callback":492,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":260,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":184,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":485,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":177,"org.easymock.tests2.CompareToTest.testGreateOrEqual":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":287,"org.easymock.tests2.NameTest.nameForNiceMock":478,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":227,"org.easymock.samples.ExampleTest.addDocument":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":247,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":448,"org.easymock.tests.UsageVarargTest.varargLongAccepted":316,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":292,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":191,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":181,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.samples.SupportTest.addDocument":427,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":437,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":238,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":365,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":59,"org.easymock.tests2.MockedExceptionTest.testRealException":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":341,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":54,"org.easymock.tests2.NameTest.nameForStrictMock":477,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":120,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":242,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CaptureTest.testCaptureFromStub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":387,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":445,"org.easymock.tests.UsageTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":44,"org.easymock.tests2.CaptureTest.testCapture":193,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":418,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":424,"org.easymock.tests.UsageStrictMockTest.testVerify":420,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":426,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":417,"org.easymock.tests2.CompareToTest.testGreateThan":511,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":36,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
