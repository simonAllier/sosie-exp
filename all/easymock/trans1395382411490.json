[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:879","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[1,1,2,2,16,17,18,19,20,21,22,23,24,25,26,27,3,28,12,29,30,31,32,33,4,5,34,35,36,37,38,39,40,41,7,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,8,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,13,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[113,114,115,116,117,118,119,1,2,120,16,121,122,123,17,18,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,21,22,184,23,24,25,26,27,12,29,30,31,4,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,34,35,38,39,40,41,42,43,44,203,204,205,206,207,208,209,210,211,212,213,214,215,45,46,47,216,217,48,49,50,51,218,52,53,54,219,55,59,62,72,78,220,221,222,223,224,225,226,227,228,229,230,81,82,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,95,13,96,278,279,280,102,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,11,311,112,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[357],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,358],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[359,221,360],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[54,219,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[1,2,4,5,361,362,363,364,365,366,367,368,369,370,371,372,373,50,53,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[89,375,376],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[226,268,274,377,315,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,348,349,350,351,352,378,379,380,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,46,47,216,226,264,265,266,267,268,269,277,381,382,383,384,385,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":143,"org.easymock.tests2.UsageTest.argumentsOrdered":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":360,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":121,"org.easymock.tests2.DelegateToTest.testReturnException":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":265,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.tests.MockClassControlTest.testToString":106,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":149,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":229,"org.easymock.samples.ExampleTest.answerVsDelegate":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":99,"org.easymock.tests2.UsageConstraintsTest.testNull":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.CaptureTest.testPrimitive":169,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":316,"org.easymock.tests.UsageTest.moreThanOneArgument":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.UsageTest.argumentsOrdered":295,"org.easymock.tests.UsageVarargTest.varargIntAccepted":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":311,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":138,"org.easymock.tests2.CaptureTest.testAnd":166,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":339,"org.easymock.tests.LimitationsTest.mockFinalMethod":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":323,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":136,"org.easymock.tests.UsageThrowableTest.throwError":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":80,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":67,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":370,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":375,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.MockClassControlTest.testEquals":110,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":118,"org.easymock.tests.UsageVarargTest.allKinds":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":322,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":351,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":269,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.samples.ExampleTest.voteForRemoval":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":91,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":192,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":193,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":188,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":84,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":368,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageCallCountTest.tooManyCalls":287,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":350,"org.easymock.tests.MockingTest.testNiceClassMocking":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":93,"org.easymock.tests2.UsageConstraintsTest.testContains":152,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":127,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":236,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests.MockClassControlTest.testHashCode":109,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":135,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":348,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.tests.CapturesMatcherTest.test":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":267,"org.easymock.tests2.StubTest.stubWithReturnValue":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":364,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":9,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":336,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":241,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":228,"org.easymock.tests2.CaptureTest.testCaptureNone":174,"org.easymock.tests.UsageUnorderedTest.message":344,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":73,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":284,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":315,"org.easymock.tests2.UsageConstraintsTest.any":150,"org.easymock.tests2.StubTest.stub":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":266,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":61,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":14,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":94,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":242,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":187,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":352,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":230,"org.easymock.tests.UsageThrowableTest.throwCheckedException":349,"org.easymock.tests.MockingTest.testStrictClassMocking":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.ExampleTest.addDocument":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":221,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":239,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests2.SerializationTest.test":219,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.samples.SupportTest.addDocument":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":64,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":20,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":68,"org.easymock.tests2.UsageConstraintsTest.testOr":147,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":291,"org.easymock.tests2.MockBuilderTest.testWithConstructor":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":377,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":177,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":36,"org.easymock.tests.UsageTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":142,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.samples.ExampleTest.addAndChangeDocument":119,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":120,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":320,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":310,"org.easymock.tests.LimitationsTest.abstractClass":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":196,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":298}}]
