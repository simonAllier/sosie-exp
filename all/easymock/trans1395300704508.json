[{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[0,1],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[2,3],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[56,2,3,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,4,5,72,73,6,7,74,75,76,77,78,79,80,81,82,9,83,84,85,86,87,10,88,11,89,90,91,92,93,94,12,95,96,97,98,99,100,101,102,103,104,105,106,107,2,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[8,75],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[131,132,133,13,13,14,14,134,15,135,136,17,137,138,18,25,28,38,44,47,139,140,141,142,143,144,145,146,147,148,149,150,108,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,176,6,7,8,9,177,10,11,12],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[179,180,181,182,183,184,185,186,187,188,131,132,189,190,133,13,14,191,192,134,193,15,16,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,135,136,17,137,211,212,138,18,19,213,214,215,216,217,218,219,220,221,222,223,224,59,225,60,226,61,62,227,228,229,230,231,232,63,233,234,235,64,65,66,236,237,238,67,68,239,240,241,69,242,243,244,245,246,247,248,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,249,250,251,252,253,70,71,4,5,254,72,176,73,6,7,74,8,75,255,76,77,78,79,80,81,82,9,83,84,256,85,177,86,87,257,258,259,260,261,262,263,264,265,266,267,268,269,270,10,88,11,89,90,91,92,93,271,94,12,95,96,97,272,98,99,100,101,102,103,273,104,105,106,107,274,47,275,139,276,56,277,278,2,3,142,48,144,145,49,279,146,147,148,50,149,280,51,150,108,53,152,153,154,281,155,156,157,158,282,159,283,284,160,161,162,163,285,286,287,109,288,289,290,291,292,110,293,294,295,296,297,298,58,164,165,166,299,167,300,301,302,303,168,304,305,306,307,308,309,310,311,312,313,314,111,315,316,317,318,319,320,321,57,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,112,339,113,114,340,115,116,341,342,343,344,345,117,346,347,118,119,348,349,350,169,351,352,353,354,355,356,357,170,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,178,373,374,375,376,377,378,379,380,381,120,382,383,121,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,122,415,416,417,418,419,420,421,422,423,424,425,426,427,428,123,124,429,125,126,127,128,129,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,171,172,173,456,174,457,458,459,460,461,462,463,464,465,466,467,468,469,175,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,54,489,490,491,55,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[297,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[47,275,139,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[16,499,17,18,19,20,21,500,501,502,503,48,49,50,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[15,16,47,504,505,506,507,508,509,510,511,50,51,512,513],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[179,180,181,182,183,184,185,187,188,131,132,189,190,133,13,14,191,192,134,193,15,200,209,210,135,136,17,137,212,138,18,218,59,225,60,226,61,62,227,229,230,231,232,63,233,234,235,64,65,66,236,237,238,67,68,239,240,241,69,25,28,38,44,249,250,251,252,253,70,71,4,5,72,176,73,6,7,74,75,255,76,77,78,79,80,81,82,9,83,84,256,85,177,86,87,262,264,266,267,268,270,10,88,11,89,90,91,92,93,271,94,12,95,96,97,272,98,99,100,101,102,103,273,104,105,106,107,274,47,275,139,276,278,2,3,142,144,146,147,148,149,150,108,152,153,154,281,155,156,157,158,159,160,161,162,163,287,109,288,289,290,291,292,110,294,295,164,165,306,307,308,309,310,311,312,313,314,111,315,112,339,113,114,340,115,116,341,514,514,343,344,345,117,346,347,118,119,348,169,352,353,354,355,356,357,170,375,377,378,381,120,382,383,121,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,122,415,416,417,418,420,421,422,423,424,425,426,427,123,124,429,125,126,127,128,129,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,172,173,174,462,463,464,465,466,467,468,479,480,481,482,483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[4,5,72,176,73,6,7,74,8,75,9,83,177,86,10,88,11,89,12,95],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[4,5,72,176,73,6,7,74,8,75,9,83,177,86,10,88,11,89,12,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[131,132,133,13,13,14,14,134,15,135,136,17,137,138,18,25,28,38,44,47,139,140,141,515,142,143,144,145,146,147,148,149,150,108,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[516,78,84,87],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[179,180,181,182,183,184,185,186,187,188,131,132,189,190,133,13,14,191,192,134,193,15,16,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,135,136,17,137,211,212,138,18,19,213,214,215,216,217,218,219,220,221,222,223,224,59,225,60,226,61,62,227,228,229,230,231,232,63,233,234,235,64,65,66,236,237,238,67,68,239,240,517,241,69,242,243,244,246,247,248,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,249,518,250,251,252,253,70,71,4,5,254,72,176,73,6,7,74,8,75,255,76,77,78,79,80,81,82,9,83,84,256,85,177,86,87,257,258,259,260,261,262,263,264,265,266,267,268,269,270,10,88,11,89,90,91,92,93,271,94,12,95,96,97,272,98,99,100,101,102,103,273,104,105,106,107,274,47,275,139,276,56,277,278,2,3,142,144,145,279,146,147,148,149,280,51,150,108,152,153,154,281,155,156,157,158,282,159,283,284,160,161,162,163,285,286,287,109,288,289,290,291,292,110,293,294,295,296,297,298,58,164,165,166,299,167,300,301,302,303,168,304,305,306,307,308,309,310,311,312,313,314,111,315,316,317,318,319,320,321,57,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,112,339,113,114,340,115,116,341,342,343,344,345,117,346,347,118,119,348,349,350,169,351,352,353,354,355,356,357,170,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,178,373,374,375,376,377,378,379,380,381,120,382,383,121,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,122,415,416,417,418,419,420,421,422,423,424,425,426,427,428,123,124,429,125,126,127,128,129,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,171,172,173,456,174,457,458,459,460,461,462,463,464,465,466,467,468,469,175,470,471,472,473,474,475,476,477,478,479,480,481,482,483,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,484,485,486,488,54,489,490,491,55,493,495,496,497],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[233,69,288,297,298,111,319,343,356,378,121,123,429,125,126,127,128,129,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[180,181,182,183,184,185,186,190,133,134,15,200,209,210,135,136,17,137,212,138,18,218,59,60,226,61,62,227,233,234,235,65,66,236,237,238,67,239,240,241,69,25,28,38,44,249,250,251,252,253,70,71,4,5,72,176,73,6,7,74,8,75,255,76,77,78,79,80,81,82,9,83,84,85,177,86,87,267,10,88,89,90,93,271,94,12,96,97,272,98,99,100,101,102,103,273,104,105,106,107,274,47,275,139,276,2,144,146,148,149,150,108,152,153,154,281,155,156,157,159,160,161,162,163,287,109,288,289,110,293,294,295,164,165,306,311,312,314,111,315,331,114,340,115,116,341,343,344,345,346,347,348,169,380,381,120,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,122,415,123,124,429,125,126,127,128,129,172,173,174,460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[131,132,133,13,13,14,14,191,192,134,15,16,135,136,17,137,138,18,242,246,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,139,141,142,143,144,145,279,146,147,148,149,51,150,108,151,152,153,154,155,156,157,158,159,283,284,160,161,162,163,285,286,58,164,165,166,299,167,168,349,350,169,351,170,363,454,455,171,172,173,174,459,469,175,470,471,472,473,474,475,488,54,489,490,491,55,493],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[179,188,195,196,197,198,199,200,201,202,203,204,205,206,213,214,215,216,217,218,219,220,221,222,223,224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","fieldName":"qualifier","this":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,80,156],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":343,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testReturnException":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":353,"org.easymock.tests.MockingTest.testPartialClassMocking":172,"org.easymock.tests.MockClassControlTest.testToString":470,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":257,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":431,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":540,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageTest.wrongArguments":64,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":168,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":176,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.CaptureTest.testPrimitive":89,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":450,"org.easymock.tests.UsageTest.moreThanOneArgument":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":481,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":410,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageVarargTest.varargIntAccepted":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":389,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":524,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":207,"org.easymock.tests2.AnswerTest.answer":276,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":232,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":301,"org.easymock.tests2.UsageTest.strictResetToDefault":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":523,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":446,"org.easymock.tests.LimitationsTest.mockFinalMethod":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests2.DependencyTest.testClassMockingSupport":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":495,"org.easymock.tests2.CaptureTest.testCapture1_2446744":90,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":303,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":483,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":527,"org.easymock.samples.PartialClassMockTest.testGetArea":133,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":386,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":452,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":33,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":440,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":501,"org.easymock.tests.UsageOverloadedMethodTest.overloading":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":401,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests.MockClassControlTest.testEquals":474,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":448,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":140,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests.MockNameTest.defaultName":428,"org.easymock.tests2.UsageConstraintsTest.testMatches":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":427,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":314,"org.easymock.samples.BasicClassMockTest.testPrintContent":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":220,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":511,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":528,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":493,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":158,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":520,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":352,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":397,"org.easymock.tests2.CaptureTest.testCapture2_2446744":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":235,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":426,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":502,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":467,"org.easymock.tests.UsageExpectAndReturnTest.longType":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":449,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":151,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":430,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":447,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":485,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":479,"org.easymock.tests.UsageCallCountTest.tooManyCalls":468,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":436,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests.MockingTest.testNiceClassMocking":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":455,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":461,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":143,"org.easymock.tests2.UsageConstraintsTest.testContains":76,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":288,"org.easymock.tests.MockTypeTest.fromEasyMockClass":302,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageExpectAndReturnTest.object":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":421,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":411,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":416,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":377,"org.easymock.tests.MockClassControlTest.testHashCode":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":214,"org.easymock.tests2.EasyMockSupportTest.testVerify":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":35,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":420,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":488,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":296,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":213,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":526,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":437,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.ReplayStateInvalidCallsTest.times":532,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":407,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":484,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":533,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":355,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":513,"org.easymock.samples.SupportTest.voteForRemovals":190,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":443,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":337,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":56,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":478,"org.easymock.tests.UsageExpectAndThrowTest.object":441,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":530,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":247,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":442,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":522,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":453,"org.easymock.tests2.CaptureTest.testCaptureNone":271,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":315,"org.easymock.tests.UsageVarargTest.varargByteAccepted":425,"org.easymock.tests2.ThreadingTest.testThreadSafe":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":39,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":131,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":362,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":497,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":486,"org.easymock.tests.UsageExpectAndThrowTest.longType":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":491,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":409,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":538,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.NameTest.nameForMocksControl":261,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":435,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":174,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":504,"org.easymock.tests2.CaptureTest.testCaptureLast":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":537,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":171,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":534,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":439,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":86,"org.easymock.samples.ExampleTest.removeNonExistingDocument":186,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":215,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":517,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":489,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":251,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":469,"org.easymock.tests.UsageExpectAndThrowTest.floatType":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":29,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":278,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":194,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.differentLength":422,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests2.UsageConstraintsTest.equals":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":283,"org.easymock.tests.UsageTest.openCallCountByLastCall":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":383,"org.easymock.tests.UsageCallCountTest.tooFewCalls":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.MockingTest.testStrictClassMocking":454,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":212,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":536,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":253,"org.easymock.tests2.NameTest.nameForNiceMock":260,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":531,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.DelegateToTest.testStubDelegate":267,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":280,"org.easymock.tests.UsageVarargTest.varargLongAccepted":424,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":222,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":242,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":91,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":391,"org.easymock.tests2.UsageConstraintsTest.testSame":73,"org.easymock.samples.SupportTest.addDocument":189,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":211,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":521,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":30,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":221,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":519,"org.easymock.tests2.NameTest.nameForMock":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":53,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":445,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":512,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":382,"org.easymock.tests2.NameTest.nameForStrictMock":259,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":246,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":144,"org.easymock.tests2.UsageStrictMockTest.range":61,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":525,"org.easymock.tests2.UsageConstraintsTest.lessThan":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":34,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":130,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":117,"org.easymock.tests2.MockBuilderTest.testWithConstructor":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":31,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":55,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":466,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":539,"org.easymock.tests2.UsageConstraintsTest.cmpTo":255,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":277,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":529,"org.easymock.tests2.CompareToTest.testLessThan":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":145,"org.easymock.tests.UsageTest.unexpectedCallWithArray":345,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":535,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":464,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":404,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":340,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":188,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":387,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":396,"org.easymock.tests.LimitationsTest.abstractClass":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":388,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103}}]
