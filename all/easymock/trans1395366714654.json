[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:56","sourceCode":"if ((java.lang.Object[][((java.lang.Object[].int) - 1)]) == null) {\n    return java.lang.Object[];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[11,11,12,12,14,21,23,26,31,32,36,38,39,40,41,42,43,44,45,46,47,49,50,51,54,55,56,57,58,59,61,62,64,66,67,71,72,73,74,75,76,91,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,140,141,142,143,144,147,148,149,161,163,164,165,166,168,196,199,200,210,212,213,214,215,216,217,218,219,220,222,271,272,273,274,275,276,277,278,279,285,288,302,310,311,312,313,314,320,321,322,323],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[26,336,34,337,69,338,143,339,340,147,149,1,222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[20,27,30,31,32,37,60,68,70,89,93,94,97,105,120,142,147,148,149,150,153,154,155,159,160,161,162,176,177,194,196,198,199,200,217,218,219,270,297,320,324,326,327,330,331,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[3,4,6,7,9,14,21,24,25,26,29,31,32,38,39,40,41,42,43,44,59,60,61,62,63,64,66,68,69,70,84,142,143,145,146,148,163,164,165,166,178,179,180,181,182,197,199,200,223,224,225,226,227,228,231,232,234,235,236,238,239,240,241,242,271,284,303,304,305,306,307,308,311,312,313,320,321,322,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[29,135,150,156,157,162,175,177,197,324,328,329,332],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[333,112,118,130],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[336,342,40,44,343,344,345,346,347,348,349,350,351,352,353,334,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,14,23,355,25,27,30,31,32,38,39,41,42,60,67,70,338,77,356,88,89,90,91,92,93,94,96,97,98,99,105,357,131,132,133,134,141,358,359,145,146,148,149,150,153,155,159,160,162,164,165,166,176,177,194,196,198,199,200,360,361,362,363,364,365,366,367,270,368,369,370,371,320,324,326,327,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[272],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[11,11,12,12,14,15,16,372,373,26,336,374,34,36,38,39,40,41,43,44,59,60,62,63,64,65,66,337,375,67,68,69,70,376,338,73,74,75,141,351,142,358,352,359,143,144,145,353,146,340,147,148,354,149,377,378,379,380,381,382,383,163,384,385,164,386,387,388,389,390,391,392,393,394,165,395,396,397,398,399,166,400,401,402,403,404,405,406,407,408,409,410,360,363,1,220,221,222,411,412,413,271,414,368,369,310,311,312,313,415,416,417,418,419,420,421,422,423,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[27,30,31,32,37,60,68,70,89,93,94,97,105,120,142,147,148,149,150,153,154,155,159,160,161,162,176,177,194,196,198,199,200,217,218,219,270,297,320,324,326,327,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[102,150,157,176,186,188,189,190,191,192,193,210,246,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,287,291,324,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[407,424,425],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[45,47,55,105,106,108,110,111,113,123,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":106,"org.easymock.tests2.UsageTest.argumentsOrdered":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":311,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":112,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":173,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.UsageConstraintsTest.testNull":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests2.CaptureTest.testPrimitive":48,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests.UsageTest.moreThanOneArgument":325,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageTest.argumentsOrdered":331,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":182,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests2.DependencyTest.testClassMocking":372,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests2.CaptureTest.testAnd":45,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.DelegateToTest.testDelegate":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests2.DependencyTest.testClassMockingSupport":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":184,"org.easymock.tests2.CaptureTest.testCapture1_2446744":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":424,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":163,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.CaptureTest.testCaptureAll":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.UsageConstraintsTest.testMatches":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":302,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":192,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":27,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":409,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":410,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":90,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":91,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":301,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":191,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests.MockingTest.testClassMocking":369,"org.easymock.tests2.UsageConstraintsTest.testContains":116,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":75,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":291,"org.easymock.tests.MockTypeTest.fromEasyMockClass":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":96,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":277,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests.MockClassControlTest.testHashCode":421,"org.easymock.tests2.EasyMockSupportTest.testVerify":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests.UsageVarargTest.varargCharAccepted":295,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":402,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":28,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":403,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":203,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.StubTest.stubWithReturnValue":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":318,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":319,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":136,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":0,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":304,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":170,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.UsageUnorderedTest.message":270,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":300,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":287,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests2.StubTest.stub":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":30,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":271,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":33,"org.easymock.tests2.NameTest.nameForMocksControl":134,"org.easymock.tests2.MockedExceptionTest.testMockedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CompareToTest.testNotComparable":341,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":310,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":200,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":374,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.LimitationsTest.privateConstructor":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":345,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":193,"org.easymock.tests2.UsageTest.defaultResetToNice":158,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":337,"org.easymock.tests.UsageTest.openCallCountByLastCall":328,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":286,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":174,"org.easymock.tests.UsageThrowableTest.throwCheckedException":190,"org.easymock.tests.MockingTest.testStrictClassMocking":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":42,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests2.CompareToTest.testGreateOrEqual":333,"org.easymock.tests2.NameTest.nameForNiceMock":133,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":22,"org.easymock.tests2.DependencyTest.testInterfaceMocking":24,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":339,"org.easymock.tests.UsageVarargTest.varargLongAccepted":299,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":187,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":377,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":50,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.samples.SupportTest.addDocument":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":275,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":371,"org.easymock.tests2.NameTest.nameForMock":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests2.NameTest.nameForStrictMock":132,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":327,"org.easymock.tests2.MockBuilderTest.testWithConstructor":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":408,"org.easymock.tests.UsageVarargTest.varargShortAccepted":298,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":137,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":358,"org.easymock.tests.UsageTest.unexpectedCallWithArray":326,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests2.ConstraintsToStringTest.notToString":335,"org.easymock.tests.UsageStrictMockTest.testVerify":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":180,"org.easymock.tests.LimitationsTest.abstractClass":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293}}]
