[{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[172,160,161,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,174,175,2,3,176,177,4,178,179,180,181,182,183,184,185,186,187,188,5,6,189,190,7,8,9,10,11,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,12,208,209,210,211,212,213,214,215,216,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,217,218,219,220,221,222,223,224,225,33,34,226,35,227,36,37,228,229,230,231,232,38,39,40,41,42,43,233,234,235,236,237,238,239,240,241,242,243,244,44,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,45,273,46,47,274,275,276,48,277,49,50,51,52,53,54,55,56,57,58,59,60,278,62,279,63,280,280,281,281,64,282,65,66,283,67,284,285,286,287,68,288,289,69,70,71,290,72,291,73,74,75,292,293,76,77,294,78,79,295,80,81,296,82,297,83,84,85,86,87,88,89,90,91,92,93,94,95,298,96,299,97,98,99,100,101,102,103,104,105,300,301,302,303,106,304,107,305,108,109,110,111,112,113,306,307,114,308,115,116,117,118,119,120,121,122,123,124,125,126,309,310,311,312,313,314,315,127,316,317,318,128,319,320,129,321,130,131,322,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,323,154,155,156,157,158,159,160,161,173,162,163,324,164,165,325,326,166,167,168,169,327,170,171,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0,1,175,2,3,176,177,4,178,179,180,181,182,183,184,185,186,187,188,5,6,189,190,7,8,9,10,11,195,205,206,207,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,217,219,220,221,222,224,225,330,33,34,226,35,227,36,37,38,39,40,41,42,43,44,331,332,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,45,273,46,47,274,275,48,277,49,50,51,52,53,54,55,56,57,58,59,60,278,62,279,63,64,282,65,66,283,67,285,286,287,68,288,289,69,70,71,290,72,291,73,74,75,292,293,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,304,107,305,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,309,310,311,312,313,314,315,127,316,317,318,128,319,320,129,321,130,131,322,132,133,134,135,136,137,138,139,140,141,333,142,143,144,145,146,147,148,149,150,151,152,153,323,154,155,156,157,158,159,160,161,173,162,163,324,164,165,325,326,166,167,168,169,170,171,328,329],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[48,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[335,336,337,338,339,340,341,342,343,344,345,346,108,347,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[137,333,151,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,1,175,2,3,176,177,4,178,179,180,181,182,184,185,186,187,188,5,6,189,190,7,8,195,205,206,207,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,219,220,221,222,224,225,33,34,226,35,227,36,37,38,39,40,41,42,43,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,45,273,46,47,274,48,277,49,50,51,52,53,54,55,56,57,58,59,60,278,62,279,63,64,282,65,66,283,67,285,286,287,68,288,289,69,70,71,290,72,291,73,74,292,293,77,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,100,101,102,103,104,105,106,304,107,305,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,309,310,315,127,316,317,128,320,129,321,130,131,322,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,323,154,155,156,157,158,159,160,161,173,162,163,324,164,165,325,326,166,167,168,169,170,171,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[348,349,350],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[351,352,197,198,199,200,201,202,203,204,353,33,354,355,356,41,42,43,357,276,358,359,360,361,362,363,364,60,278,365,366,62,286,287,68,367,368,294,78,369,370,79,295,80,81,296,82,297,83,84,86,88,90,91,93,94,95,298,96,371,299,97,98,99,372,373,100,374,375,101,376,102,377,378,379,380,381,382,383,103,384,385,386,387,388,104,306,307,114,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[291,94,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[226,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[137,333,151,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[135,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[351,352,198,33,356,41,42,43,60,278,365,62,280,280,281,281,286,287,68,294,389,78,369,79,295,80,81,296,82,390,297,83,84,85,86,88,89,90,91,93,94,95,298,96,299,97,98,99,391,392,393,101,102,103,104,108,114,160,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[291,94,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[323,155,328,329],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0,3,189,190,191,192,193,194,195,196,207,226,40,245,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,48,49,50,51,52,53,54,69,74,306,307,114,308,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[335,336,340,341,342,346,108,347,160],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":135,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageTest.argumentsOrdered":293,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":291,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests.MockClassControlTest.testToString":199,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":248,"org.easymock.samples.ExampleTest.answerVsDelegate":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":204,"org.easymock.tests2.CaptureTest.testPrimitive":164,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":7,"org.easymock.tests.UsageTest.moreThanOneArgument":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":230,"org.easymock.tests.UsageTest.argumentsOrdered":177,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":59,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests.ReplayStateInvalidUsageTest.times":241,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":10,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":213,"org.easymock.tests2.CaptureTest.testCapture1_2446744":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":232,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":350,"org.easymock.tests2.UsageTest.niceToStrict":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":168,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.MockClassControlTest.testEquals":203,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":391,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":233,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":188,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":53,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":62,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":16,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":209,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":390,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":228,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":355,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":389,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":218,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":329,"org.easymock.tests.UsageExpectAndReturnTest.object":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":216,"org.easymock.tests.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":44,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":29,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.MockClassControlTest.testHashCode":202,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":276,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":200,"org.easymock.tests2.UsageTest.resumeIfFailure":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":22,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":338,"org.easymock.samples.SupportTest.voteForRemovals":63,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":172,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":280,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":247,"org.easymock.tests2.CaptureTest.testCaptureNone":167,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":222,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":240,"org.easymock.tests2.StubTest.stub":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.LimitationsTest.mockNativeMethod":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":365,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":393,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":42,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.CaptureTest.testCaptureLast":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.samples.ExampleTest.removeNonExistingDocument":284,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":237,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":359,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":297,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":197,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":304,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests2.UsageTest.defaultResetToNice":75,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":28,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.CallbackTest.callback":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":189,"org.easymock.tests.UsageCallCountTest.tooFewCalls":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":249,"org.easymock.tests.UsageThrowableTest.throwCheckedException":51,"org.easymock.tests.MockingTest.testStrictClassMocking":354,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":305,"org.easymock.tests.ObjectMethodsTest.testHashCode":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":342,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":31,"org.easymock.tests.UsageExpectAndReturnTest.floatType":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":133,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":358,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":14,"org.easymock.samples.SupportTest.addDocument":279,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":11,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":244,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests.UsageRangeTest.combination":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":91,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":223,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":234,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":369,"org.easymock.tests.UsageTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":27,"org.easymock.tests2.UsageConstraintsTest.constraints":134,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageStrictMockTest.testVerify":275,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":19,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":58,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121}}]
