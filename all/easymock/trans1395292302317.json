[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[86,124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[107,108,297,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[297,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[32,41,301,302,303,304,305,306,307,308],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,20,28,44,45,47,49,50,309,61,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[310,311,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[68,313],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[2,32,104,147,297,148,315,149,150,151,152,153,154,316,300,155,317,318,319],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[41,320,302,303,304,321,322,306],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[18,20,21,22,23,24,25,27,323,28,29,31],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[44,58,71,74,80,85,87,88,89,90,94,95,96,97,99,109,115,117,118,119,120,121,125,129,133,137,142,148,151,153,186,324,318,325,193,326,327,328,210,211,212,213,216,217,218,227,241,243,244,245,246,247,248,329,255,256,259,260,261,262,263,264,330,331,332,268,333,334,335,336,337,338],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[339,36,340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[16,16,17,17,29,42,43,46,47,48,49,54,56,57,59,60,66,67,68,117,205,206,207,208,209,234,235,236,237,238,239,244,269,270,273,294,295],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[341,78,79,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[343],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[3,15,344,345,346,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"toAssign"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[343,249,250,319,348],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[42,59,65,349],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[76,85,97,117,180,218,244,263,264],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[2,3,4,5,6,7,8,9,350,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,339,35,36,37,351,38,39,40,41,301,352,42,43,44,45,353,46,47,48,49,50,51,309,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,354,355,356,357,358,359,360,69,70,71,72,361,73,74,75,362,76,341,363,77,78,79,344,364,365,366,367,80,345,368,369,370,371,372,373,374,375,81,376,377,82,378,379,380,381,382,383,384,385,386,83,387,388,389,390,391,84,392,393,85,86,87,88,89,90,91,92,93,94,95,96,97,394,98,99,100,101,102,103,104,395,105,396,397,106,107,108,109,398,399,110,111,112,113,114,115,116,117,118,119,120,121,400,401,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,402,403,404,405,406,137,138,139,140,141,346,407,408,409,410,142,347,411,412,413,414,415,143,144,145,146,147,416,148,315,417,418,149,150,151,307,152,419,308,153,154,420,155,156,421,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,317,422,423,324,424,318,425,325,426,427,0,428,429,430,1,431,432,433,434,187,435,188,189,190,436,191,192,193,194,195,196,197,198,199,200,201,202,203,204,437,438,326,327,328,439,440,441,205,206,207,208,209,442,443,444,445,446,447,342,448,449,450,340,451,452,453,454,455,299,456,457,458,459,460,461,462,210,211,212,213,214,215,216,217,218,219,220,221,222,223,463,464,465,224,225,466,226,467,468,469,227,470,228,229,230,231,232,233,234,235,236,237,238,471,472,473,474,475,476,477,239,240,241,242,243,244,245,246,247,248,478,343,249,250,319,348,251,252,253,254,479,480,481,482,483,329,484,255,256,257,258,259,260,261,262,263,264,265,330,266,267,331,332,268,485,486,487,488,489,490,333,334,491,492,493,494,495,496,497,498,499,500,501,502,503,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,504,335,505,506,336,337,338],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[343,249,250,319,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[507,18,20,21,22,23,24,25,27,323,28,29,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[445,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[10,19,25,26,31,38,42,56,59,68,87,110,111,137,156,157,158,164,170,174,176,186,452,299,211,254,274,280,286,290,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[351,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":45,"org.easymock.tests2.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":340,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":90,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":224,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests2.UsageTest.wrongArguments":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":468,"org.easymock.tests2.UsageConstraintsTest.testNull":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":479,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageVarargTest.varargIntAccepted":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":311,"org.easymock.tests.ReplayStateInvalidUsageTest.times":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":141,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":423,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":483,"org.easymock.tests2.DelegateToTest.testDelegate":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":289,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":223,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":333,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":494,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":424,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":495,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests2.CompareToTest.testLessOrEqual":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":486,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":275,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":436,"org.easymock.tests.MockClassControlTest.testEquals":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":140,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":221,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":492,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":208,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":198,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":262,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":222,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":431,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":109,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":432,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":398,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":104,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":154,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":197,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":300,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":205,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.MockingTest.testNiceClassMocking":469,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":70,"org.easymock.tests.MockingTest.testClassMocking":464,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":484,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":324,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":157,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":506,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":480,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":310,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":489,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":426,"org.easymock.tests2.CaptureTest.testCaptureMultiple":507,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastCall":91,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":488,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":107,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.tests.CapturesMatcherTest.test":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":299,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":286,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":461,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":341,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":284,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":359,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":502,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":487,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.UsageUnorderedTest.message":186,"org.easymock.tests.UsageVerifyTest.twoReturns":264,"org.easymock.tests.UsageVarargTest.varargByteAccepted":196,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":499,"org.easymock.tests2.StubTest.stub":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":430,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":498,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.NameTest.nameForMocksControl":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":225,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":465,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":350,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":496,"org.easymock.tests.UsageStrictMockTest.differentMethods":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":77,"org.easymock.tests.UsageVerifyTest.twoThrows":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":352,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":108,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.UsageTest.defaultResetToNice":93,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.CallbackTest.callback":137,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":396,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.MockingTest.testStrictClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":501,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":73,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":79,"org.easymock.tests.ObjectMethodsTest.testHashCode":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":321,"org.easymock.tests2.NameTest.nameForNiceMock":405,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests2.DependencyTest.testInterfaceMocking":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.AnswerTest.stubAnswer":78,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":419,"org.easymock.tests.UsageVarargTest.varargLongAccepted":195,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":354,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":48,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":361,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":467,"org.easymock.tests2.NameTest.nameForMock":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":420,"org.easymock.tests2.UsageStrictMockTest.differentMethods":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":288,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":504,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":360,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":503,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests2.NameTest.nameForStrictMock":404,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":418,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":119,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":305,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":49,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":213,"org.easymock.tests2.MockBuilderTest.testWithConstructor":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":259,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests2.CompareToTest.testLessThan":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":92,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":493,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.CaptureTest.testCapture":323,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":478,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":236,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":237,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130}}]
