[{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[6],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,0,1,2,3,201,4,5,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,6,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[394,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[405],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[279,280,508,509,412],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[494,496,497,498,499,500,503,511,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[512,513,514,515,516,517,518,519,520,413],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[240,241,479,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[334,335,338,340,341,343,353,358,494,496,504],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14,15,18,19,521,522,523,237,524,525,526,527,287,288,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[12,13,15,18,19,20,64,98,101,102,107,108,110,116,117,118,235,238,239,240,241,242,528,529,530,531,526,532,527,285,287,288,289,290,294,295,297,327,329,390,415,419,420,423,475,477,478,479,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[334,335,338,339,340,343,353,358,359,494,496,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[334,335,338,340,341,343,353,358,494,496,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[175,177,178],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,0,1,2,3,201,4,5,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,6,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,279,280,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,301,302,303,304,307,308,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,421,423,424,425,426,427,432,435,436,437,438,441,443,444,446,447,450,451,452,453,454,456,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,487,488,490,491,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[335,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[366,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[231,255,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,13,15,16,17,18,19,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,65,66,67,68,69,70,73,74,75,76,78,79,81,86,87,89,93,94,95,96,97,99,100,102,104,105,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,161,162,163,164,165,166,167,168,175,176,183,187,236,237,238,239,240,241,242,244,245,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,302,304,305,313,314,315,316,317,318,319,320,323,328,332,333,334,335,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,367,370,371,379,381,383,384,386,387,388,389,390,396,404,405,406,408,409,410,411,412,414,415,416,417,418,419,420,422,423,424,425,426,441,444,454,460,468,476,477,478,479,480,481,482,483,485,486,487,488,490,491,492,494,495,496,497,498,499,500,501,502,503,504,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[362,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[533],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[268,270,391,392,393,399,402,463,464,465,471,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[174,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[12,14,15,18,19,20,110,117,118,169,170,171,172,173,225,226,227,228,235,237,239,240,241,285,288,289,290,293,294,295,297,298,303,304,305,309,310,321,326,334,373,374,375,376,396,416,418,419,421,422,468,475,478,479,480],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[82,113,179,180,181,182,183,184,377,378,379,380],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[510,534,494,495,496,497,498,499,500,501,503,511,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[14,521,522,237,524,526],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[268,270,391,392,393,394,395,396,397,398,399,400,401,402,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":335,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.UsageTest.argumentsOrdered":295,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":290,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":270,"org.easymock.tests2.DelegateToTest.testReturnException":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":180,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":257,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":314,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":514,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageTest.wrongArguments":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":227,"org.easymock.samples.ExampleTest.answerVsDelegate":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":29,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":91,"org.easymock.tests2.UsageConstraintsTest.testNull":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":497,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":115,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":519,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":267,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":144,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":530,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":468,"org.easymock.tests.ReplayStateInvalidUsageTest.times":197,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests2.AnswerTest.answer":367,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests2.CaptureTest.testAnd":494,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":26,"org.easymock.tests2.UsageTest.strictResetToDefault":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.DelegateToTest.testDelegate":408,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":254,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":173,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":498,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":191,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":28,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":147,"org.easymock.samples.PartialClassMockTest.testGetArea":269,"org.easymock.tests.MockingTest.testInterfaceMocking":88,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":39,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":234,"org.easymock.tests2.UsageTest.niceToStrict":289,"org.easymock.tests2.ThreadingTest.testChangeDefault":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":302,"org.easymock.tests2.MockBuilderTest.testCreateMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":471,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":47,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":25,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":225,"org.easymock.tests.UsageOverloadedMethodTest.overloading":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":347,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":503,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":441,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":525,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":533,"org.easymock.tests2.CaptureTest.testCaptureAll":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":80,"org.easymock.tests2.UsageConstraintsTest.testMatches":349,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":276,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":172,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":475,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":520,"org.easymock.tests2.UsageConstraintsTest.greaterThan":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.samples.ExampleTest.voteForRemoval":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":321,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":140,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":507,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":417,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":506,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":388,"org.easymock.tests2.UsageTest.moreThanOneArgument":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":219,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":309,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":68,"org.easymock.tests.GenericTest.testBridgedEquals":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":486,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests.MockingTest.testClassMocking":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":72,"org.easymock.tests2.UsageConstraintsTest.testContains":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":379,"org.easymock.tests2.UsageConstraintsTest.testFind":337,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockClass":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":515,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":63,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":21,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":523,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":58,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":392,"org.easymock.tests.MockClassControlTest.testHashCode":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":97,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":484,"org.easymock.tests.UsageVarargTest.varargCharAccepted":62,"org.easymock.tests2.CaptureTest.testCaptureMultiple":534,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":425,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":35,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":391,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":146,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.ReplayStateInvalidCallsTest.times":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":460,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":258,"org.easymock.tests2.UsageTest.resumeIfFailure":296,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":182,"org.easymock.tests2.StubTest.stubWithReturnValue":483,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":357,"org.easymock.tests2.SerializationTest.testAllMockedMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":6,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":526,"org.easymock.samples.SupportTest.voteForRemovals":284,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":223,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":23,"org.easymock.tests.UsageExpectAndThrowTest.object":48,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":354,"org.easymock.tests2.DelegateToTest.testWrongClass":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.tests.UsageStrictMockTest.range":240,"org.easymock.samples.ConstructorCalledMockTest.testTax":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":436,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":438,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":521,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":142,"org.easymock.tests2.CaptureTest.testCaptureNone":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":248,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":362,"org.easymock.tests.UsageUnorderedTest.message":110,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":67,"org.easymock.tests2.ThreadingTest.testThreadSafe":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":455,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":233,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":527,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageConstraintsTest.any":344,"org.easymock.tests2.StubTest.stub":482,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":181,"org.easymock.tests.UsageExpectAndThrowTest.longType":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":195,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":478,"org.easymock.tests2.SerializationTest.testClass":409,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":396,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":158,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":481,"org.easymock.tests2.NameTest.nameForMocksControl":431,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":443,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":42,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":305,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":320,"org.easymock.tests2.CaptureTest.testCaptureLast":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":341,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":355,"org.easymock.tests.MockingTest.testTwoMocks":85,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":154,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":359,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":366,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":470,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":393,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":365,"org.easymock.tests2.ConstraintsToStringTest.andToString":531,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":387,"org.easymock.tests2.MockBuilderTest.testCreateMockString":310,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":40,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":370,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":454,"org.easymock.samples.ExampleTest.voteAgainstRemoval":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":246,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":328,"org.easymock.tests.LimitationsTest.privateConstructor":186,"org.easymock.tests2.UsageConstraintsTest.testNotNull":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":377,"org.easymock.tests2.UsageTest.defaultResetToNice":293,"org.easymock.samples.ExampleTest.voteAgainstRemovals":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":64,"org.easymock.tests2.CallbackTest.callback":390,"org.easymock.tests2.UsageConstraintsTest.equals":336,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":113,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":228,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":364,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":522,"org.easymock.tests.MockingTest.testStrictClassMocking":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":491,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":487,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":469,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":490,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":372,"org.easymock.tests.ObjectMethodsTest.testHashCode":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":518,"org.easymock.tests2.NameTest.nameForNiceMock":430,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":389,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":156,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":151,"org.easymock.tests2.DependencyTest.testInterfaceMocking":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":516,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.DelegateToTest.testStubDelegate":405,"org.easymock.tests2.AnswerTest.stubAnswer":371,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":306,"org.easymock.tests.UsageVarargTest.varargLongAccepted":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":412,"org.easymock.tests2.ConstraintsToStringTest.orToString":528,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":333,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":432,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":499,"org.easymock.tests2.SerializationTest.test":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.tests2.UsageConstraintsTest.testSame":339,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":141,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":446,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":90,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":139,"org.easymock.tests2.NameTest.nameForMock":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.UsageStrictMockTest.differentMethods":480,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":513,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":200,"org.easymock.tests2.NameTest.nameForStrictMock":429,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":435,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":299,"org.easymock.tests2.UsageStrictMockTest.range":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":517,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":210,"org.easymock.tests2.CaptureTest.testCaptureRightOne":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":361,"org.easymock.tests2.UsageConstraintsTest.testOr":340,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":316,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":447,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":203,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageVarargTest.varargShortAccepted":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":77,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":159,"org.easymock.tests2.UsageConstraintsTest.cmpTo":345,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":505,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":300,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":155,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests2.CaptureTest.testCapture":511,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.tests2.UsageConstraintsTest.constraints":334,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests2.ConstraintsToStringTest.notToString":529,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":265,"org.easymock.tests.LimitationsTest.abstractClass":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":59}}]
