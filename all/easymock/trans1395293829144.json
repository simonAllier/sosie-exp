[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[25,26,27,11,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,4,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,10,72,73,74,75,76,77,78,79,80,81,81,82,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[84,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[6,90,91,92,22,93,94,95],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[96,97,98,99,100,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[102,103,104,81,82],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[96,97,98,99,100,101],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[9],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,25,26,127,27,11,28,29,15,30,102,128,31,32,33,34,129,35,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,89,145,146,147,148,149,105,5,150,151,152,36,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,37,103,38,39,172,173,40,41,42,174,43,14,3,44,45,104,46,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,12,194,195,196,197,198,199,200,201,23,202,20,203,204,6,90,205,21,206,91,92,207,208,209,210,211,13,212,213,22,93,214,7,215,94,95,216,217,47,48,49,50,218,219,51,52,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,53,241,242,54,243,244,245,246,247,248,249,250,251,55,252,253,254,255,256,56,257,258,4,259,57,58,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,24,294,59,60,61,62,63,64,65,66,295,296,297,298,299,67,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,68,323,9,69,70,71,10,324,325,326,327,328,72,329,330,331,332,73,333,334,335,336,337,338,339,340,341,342,84,85,86,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,8,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,100,446,447,448,449,450,451,452,453,74,75,76,454,77,455,456,457,78,458,459,101,460,461,462,463,464,465,466,87,88,467,468,469,470,471,472,473,474,475,476,477,478,479,0,480,481,482,483,484,485,486,487,488,489,490,491,492,493,79,80,81,82,83,494,495,496,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:87","sourceCode":"return java.util.List<org.easymock.internal.Injection>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[111,112,113,114,25,26,127,27,11,28,29,30,31,33,143,145,146,147,148,149,105,5,150,151,152,36,153,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,37,40,41,187,188,189,190,191,192,193,12,194,195,196,197,198,199,200,201,23,202,20,204,6,90,205,21,206,92,207,208,209,210,211,13,212,213,22,93,214,7,215,94,95,216,48,49,51,52,222,223,224,225,226,227,228,230,4,259,57,58,262,264,265,266,268,270,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,68,69,70,324,325,326,327,328,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,370,371,372,373,8,374,375,376,377,378,379,380,386,387,388,389,390,391,392,393,398,406,407,408,409,410,411,412,413,415,417,418,420,422,423,425,427,428,429,430,431,432,433,434,437,438,439,440,442,443,444,445,446,447,448,449,450,451,75,76,77,78,459,101,460,461,462,463,464,470,471,472,473,474,483,484,485,486,487,488,489,490,491,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[263,267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[25,26,27,11,28,29,30,31,32,33,34,36,37,498,38,39,40,41,42,43,44,45,499,46,47,48,49,50,51,52,500,501,502,53,54,55,56,4,57,58,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,81,82,82,83],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[4,259,57,503],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,25,26,127,27,11,28,29,15,30,102,128,31,32,33,34,129,35,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,89,145,146,147,148,16,149,105,5,150,151,152,36,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,37,38,39,173,40,41,42,43,14,3,44,45,46,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,12,194,195,196,197,198,199,200,201,23,202,20,203,204,6,90,205,21,206,91,92,207,208,209,210,211,13,212,213,22,93,214,7,215,94,95,216,217,47,48,49,50,218,219,51,52,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,53,241,242,54,243,244,245,246,247,248,249,250,251,55,252,253,254,255,256,56,257,258,504,17,505,506,18,19,4,259,57,58,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,24,294,59,60,61,62,63,64,65,66,295,296,297,298,299,67,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,68,323,9,69,70,71,10,324,325,326,327,328,72,329,330,331,332,73,333,334,335,336,337,338,339,340,341,342,84,85,86,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,8,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,100,446,447,448,449,450,451,452,453,74,75,76,454,77,455,456,457,78,458,459,101,460,461,462,463,464,465,466,87,88,467,468,469,470,471,472,473,474,476,477,478,479,0,480,482,483,484,485,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,486,487,488,489,490,491,492,493,79,80,81,82,83,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[107,108,109,110,120,121,26,31,34,35,131,133,135,136,138,139,37,38,39,42,43,44,45,46,180,181,189,191,192,193,12,197,198,199,200,202,13,48,49,51,52,221,223,224,225,226,227,262,269,270,61,62,63,296,299,67,320,72,331,332,73,333,334,338,369,386,387,388,415,421,424,425,426,435,437,438,441,442,443,444,445,100,446,449,450,451,458,101,460,461,462,463,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[166,529,168,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[530,531,532],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[20,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":444,"org.easymock.tests2.UsageTest.argumentsOrdered":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":282,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":497,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":428,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":61,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":106,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":246,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":343,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":528,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":470,"org.easymock.tests2.UsageTest.wrongArguments":192,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":487,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":73,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":456,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":66,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":474,"org.easymock.tests.UsageTest.moreThanOneArgument":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.UsageTest.argumentsOrdered":450,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":233,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":512,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.DependencyTest.testClassMocking":154,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":114,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":330,"org.easymock.tests2.UsageTest.strictResetToDefault":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":358,"org.easymock.tests.LimitationsTest.mockFinalMethod":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":393,"org.easymock.tests2.DependencyTest.testClassMockingSupport":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":269,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":112,"org.easymock.tests.UsageThrowableTest.throwError":406,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":515,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.MockingTest.testInterfaceMocking":454,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":336,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":67,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":344,"org.easymock.tests2.ThreadingTest.testChangeDefault":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":183,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":352,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageOverloadedMethodTest.overloading":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":256,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":483,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":65,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":360,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":113,"org.easymock.tests.MockNameTest.defaultName":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":491,"org.easymock.tests.UsageVarargTest.allKinds":8,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":392,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":412,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":122,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":267,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":34,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":516,"org.easymock.samples.ExampleTest.voteForRemoval":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":29,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":508,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":427,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":307,"org.easymock.tests2.UsageTest.moreThanOneArgument":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":442,"org.easymock.tests.UsageExpectAndReturnTest.longType":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":389,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":361,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":443,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":411,"org.easymock.tests.MockingTest.testNiceClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests.MockingTest.testClassMocking":453,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":36,"org.easymock.tests2.UsageConstraintsTest.testFind":204,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":485,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":458,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":451,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests.MockClassControlTest.testHashCode":64,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":249,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":217,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":531,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":84,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":115,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":514,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":349,"org.easymock.tests.ReplayStateInvalidCallsTest.times":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":62,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":430,"org.easymock.tests2.StubTest.stubWithReturnValue":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":309,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":288,"org.easymock.samples.SupportTest.voteForRemovals":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":97,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":24,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DelegateToTest.testWrongClass":266,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":518,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":433,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":434,"org.easymock.tests.UsageStrictMockTest.range":462,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":98,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":510,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":337,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":17,"org.easymock.tests.UsageUnorderedTest.message":338,"org.easymock.tests.UsageVerifyTest.twoReturns":388,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":252,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndThrowTest.longType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":177,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":526,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":505,"org.easymock.tests2.NameTest.nameForMocksControl":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":242,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":448,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":43,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":28,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":175,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":270,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":525,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":522,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":351,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":463,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":243,"org.easymock.tests.UsageExpectAndThrowTest.floatType":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":145,"org.easymock.tests.UsageVerifyTest.twoThrows":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":261,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":33,"org.easymock.tests.LimitationsTest.privateConstructor":322,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":413,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":176,"org.easymock.tests.UsageVarargTest.differentLength":369,"org.easymock.tests2.CallbackTest.callback":262,"org.easymock.tests2.UsageConstraintsTest.equals":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":102,"org.easymock.tests.UsageTest.openCallCountByLastCall":447,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":472,"org.easymock.tests.UsageCallCountTest.tooFewCalls":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":506,"org.easymock.tests.UsageThrowableTest.throwCheckedException":410,"org.easymock.tests.MockingTest.testStrictClassMocking":452,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":219,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":147,"org.easymock.tests.ObjectMethodsTest.testHashCode":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":524,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":109,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":519,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.samples.ExampleTest.addDocument":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.DelegateToTest.testStubDelegate":265,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":460,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":213,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":231,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":259,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":301,"org.easymock.samples.SupportTest.addDocument":495,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":218,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":244,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":123,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":507,"org.easymock.tests2.NameTest.nameForMock":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":104,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":357,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":471,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests2.NameTest.nameForStrictMock":108,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":532,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":38,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":513,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":248,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":205,"org.easymock.tests.UsageRangeTest.combination":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":446,"org.easymock.tests2.MockBuilderTest.testWithConstructor":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":245,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":313,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":441,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":527,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":89,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":39,"org.easymock.tests.UsageTest.unexpectedCallWithArray":100,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":523,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":314,"org.easymock.tests2.CaptureTest.testCapture":529,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":461,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":493,"org.easymock.tests.UsageStrictMockTest.testVerify":465,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":494,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":459,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":390,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":306,"org.easymock.tests.LimitationsTest.abstractClass":321,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
