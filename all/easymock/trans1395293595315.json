[{"position":"org.easymock.internal.matchers.Null:35","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,0,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,1,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,3,243,10,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,11,15,16,20,22,265,266,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[46,273,274,275,276,116,117,118,121,122,225,277,278,279,280,248,249,255,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[281,282,46,47,49,50,283,64,284,285,116,117,118,121,122,286,142,148,149,150,198,200,201,209,287,248,249,255,256,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,98,99,102,103,104,105,106,108,109,110,111,112,113,114,289,149,191,265,266,267,268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[290,185,225,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[10,244,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[222],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[46,273,274,117,277,279],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[210,226,231,291],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[292,293,23,294,295,296,297,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,281,5,282,44,45,46,47,48,49,50,51,52,298,299,300,301,302,53,54,55,56,57,58,303,304,305,59,60,61,62,63,283,64,306,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,307,308,309,310,90,91,6,311,92,93,94,95,312,284,313,314,285,315,316,96,317,318,319,320,321,322,323,97,98,99,100,101,102,103,104,105,106,107,108,324,109,110,111,112,113,114,325,326,327,115,116,117,118,119,120,121,122,123,328,329,330,124,125,331,126,332,333,334,127,128,129,130,335,336,337,338,339,340,341,131,132,133,342,134,135,343,136,137,138,139,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,140,372,290,373,374,375,376,377,286,378,379,380,289,381,141,382,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,383,384,385,7,386,387,388,388,389,389,390,391,392,393,159,160,161,162,163,164,394,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,8,187,395,396,188,397,189,398,399,190,191,400,196,197,198,199,200,201,202,203,401,204,205,206,207,208,402,403,404,405,406,209,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,210,211,212,213,429,214,1,215,216,217,218,430,219,220,221,222,223,224,225,226,227,228,229,230,2,231,232,233,234,431,235,236,237,432,238,239,433,240,241,242,3,243,434,435,436,437,438,287,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,10,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,455,260,456,457,288,458,262,459,460,263,13,461,15,16,17,462,19,265,266,267,268,269,463,464,270,271,272],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[401,466,467,468,469,470,471],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[10,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[472,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MocksControl:190","failures":[44,49,50,92,97,99,100,102,103,104,105,106,122,142,149,166,177,182,189,196,200,201,213,217,218,219,222,228,229,230,231,446,474,449,475,451,452,453,250,251,256,20],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:50","failures":[388,389,203,401,413,476,477,414,478,415,416,479,417,418,480,481,419,420,421,422,423,482,424,483,484,425,426,427,428,10,262,264,485,486,487,471,462,488,489,490,491,492],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[23,295,296,297,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,49,50,298,299,300,301,302,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,307,308,309,90,6,92,93,94,95,323,97,98,99,100,101,102,103,104,105,106,107,108,324,109,110,111,112,113,114,325,326,327,115,116,119,120,123,124,125,126,360,366,372,378,380,289,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,383,384,385,7,388,388,389,389,393,159,160,161,162,164,165,166,167,168,170,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,397,189,398,190,191,198,200,201,203,209,414,416,423,426,210,211,212,213,214,1,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,431,235,236,237,432,238,239,433,240,241,242,3,243,287,445,446,447,474,448,449,475,450,493,451,452,453,10,244,246,247,248,250,252,253,254,257,258,259,260,494,261,262,459,460,263,264,13,15,17,18,20,265,266,267,268,269,463,464,270,271,272],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[68,190],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[388,389,395,203,401,10,486,487,471,462,488,489,495,496,497],"status":-1,"binaryOperator":"(this.java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[103,104,149],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[46,273,274,117,277,279],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:583","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[107,219],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":354,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":251,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":391,"org.easymock.tests2.DelegateToTest.testReturnException":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageTest.wrongArguments":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":5,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":451,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":69,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":298,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":470,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":158,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.ReplayStateInvalidUsageTest.times":374,"org.easymock.tests2.AnswerTest.answer":269,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests.LimitationsTest.mockFinalMethod":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":283,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":495,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":428,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.MockingTest.testInterfaceMocking":331,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests2.CompareToTest.testLessOrEqual":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests2.UsageTest.niceToStrict":250,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":315,"org.easymock.tests2.ThreadingTest.testChangeDefault":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":342,"org.easymock.tests2.EasyMockSupportClassTest.testAll":414,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":278,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests.MockNameTest.defaultName":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":164,"org.easymock.tests.UsageVarargTest.allKinds":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":148,"org.easymock.samples.BasicClassMockTest.testPrintContent":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":398,"org.easymock.samples.ExampleTest.voteForRemoval":161,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":399,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":8,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":447,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":431,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":474,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":3,"org.easymock.tests2.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":304,"org.easymock.tests.UsageExpectAndReturnTest.longType":27,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":59,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":2,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.UsageCallCountTest.tooManyCalls":305,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":261,"org.easymock.tests.MockingTest.testNiceClassMocking":334,"org.easymock.tests.MockingTest.testClassMocking":329,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":12,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":54,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":267,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":281,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageExpectAndReturnTest.object":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":467,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":492,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":401,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":420,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":208,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":453,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":426,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":245,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":360,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":497,"org.easymock.samples.SupportTest.voteForRemovals":393,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":366,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":463,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":388,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":288,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":273,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":309,"org.easymock.tests.UsageUnorderedTest.message":142,"org.easymock.tests.UsageVerifyTest.twoReturns":150,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":482,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":58,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":386,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":290,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":43,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.NameTest.nameForMocksControl":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":415,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":455,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":264,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":330,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":473,"org.easymock.samples.ExampleTest.removeNonExistingDocument":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":140,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":479,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests.UsageVerifyTest.twoThrows":149,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":423,"org.easymock.samples.ExampleTest.voteAgainstRemoval":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":189,"org.easymock.tests.LimitationsTest.privateConstructor":293,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":491,"org.easymock.tests2.UsageConstraintsTest.testNotNull":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":265,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.samples.ExampleTest.voteAgainstRemovals":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":429,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":67,"org.easymock.tests.UsageCallCountTest.tooFewCalls":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":274,"org.easymock.tests.MockingTest.testStrictClassMocking":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":460,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":272,"org.easymock.tests2.CompareToTest.testGreateOrEqual":465,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":469,"org.easymock.tests2.NameTest.nameForNiceMock":194,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":468,"org.easymock.samples.ExampleTest.addDocument":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.DelegateToTest.testStubDelegate":236,"org.easymock.tests2.AnswerTest.stubAnswer":271,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.floatType":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":203,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":456,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":172,"org.easymock.tests2.SerializationTest.test":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":25,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.samples.SupportTest.addDocument":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":332,"org.easymock.tests2.NameTest.nameForMock":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":489,"org.easymock.tests2.UsageStrictMockTest.differentMethods":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":193,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":461,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":200,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":419,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":182,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":418,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":303,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":347,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.CaptureTest.testCaptureFromStub":178,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":57,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":212,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageStrictMockTest.testVerify":52,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":390,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":60,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":30,"org.easymock.tests.LimitationsTest.abstractClass":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":157,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":475,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132}}]
