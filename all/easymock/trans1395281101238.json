[{"position":"org.easymock.internal.matchers.NotNull:36","failures":[0],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[7],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,18,47,48,49,50,51,52,53,54,55,56,57,58,59,3,60,61,62,63,4,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[76,41,77,78,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[58,79,80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[81,82,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[85],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[9,11,12,13,86,87,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[88,89,90,91,92,93,94,95,8,19,96,97,98,21,22,99,100,23,24,25,27,28,29,101,102,103,30,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,84,133,134,135,136,137,138,139,140,141,142,0,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,38,163,164,39,165,40,166,167,168,10,169,170,171,172,173,174,43,44,45,175,18,176,177,178,179,180,181,182,48,183,184,185,186,187,188,189,190,191,192,56,57,58,59,193,60,61,62,194,63,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,79,80,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,74,75],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,18,47,48,49,50,51,52,53,54,55,56,57,58,59,3,60,61,62,63,4,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"failMessage":"this"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[268,88,89,90,91,269,92,270,271,272,273,274,93,94,275,275,276,276,76,277,95,278,8,19,96,97,98,21,22,99,100,23,24,25,279,280,27,281,28,29,282,101,102,103,30,31,104,283,105,106,107,32,33,108,109,284,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,285,130,131,132,84,133,134,135,136,137,138,139,140,141,142,0,143,144,34,35,36,37,286,287,288,145,146,147,289,148,149,150,151,152,153,290,291,154,155,156,157,292,158,159,160,161,162,38,163,164,39,165,40,166,167,168,293,10,169,294,170,265,295,296,171,172,41,173,174,43,44,45,175,18,176,177,178,179,180,47,181,182,48,183,184,185,186,187,188,189,297,298,299,190,300,301,191,192,56,57,58,59,193,302,303,304,3,60,305,61,62,306,307,194,63,4,64,195,196,65,66,197,198,308,309,310,311,199,312,313,200,314,201,202,315,203,204,205,316,317,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,318,319,320,321,322,232,233,323,324,325,326,327,328,329,330,331,332,333,234,334,235,236,79,80,237,238,335,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,336,337,338,339,259,260,261,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[10,169,357],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[272,273,94,275,275,276,276,95,8,98,21,22,99,23,24,111,112,113,114,10,294,41,173,42,174,77,43,44,358,45,46,175,18,177,178,179,78,180,47,181,182,48,49,190,300,301,359,50,53,198,313,69,339,259,260,261,360,361,71,72,73,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[268,88,89,90,91,269,92,270,271,272,273,274,93,94,95,8,19,96,97,98,21,22,99,100,23,24,25,280,27,281,28,29,282,101,102,103,30,31,104,283,105,106,32,33,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,84,133,134,135,136,137,138,139,140,141,142,0,143,144,286,287,145,146,147,148,149,150,151,152,153,290,291,154,155,156,157,158,159,160,161,162,38,163,164,39,40,166,167,168,293,10,169,294,170,296,171,172,174,43,44,175,18,176,177,178,179,180,182,183,184,185,186,190,300,191,192,56,57,58,59,304,3,60,305,61,62,306,194,63,64,195,196,65,66,197,198,199,313,200,201,202,204,205,316,317,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,323,324,325,326,327,329,330,331,332,333,234,334,235,236,79,80,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,342,343,344,345,346,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[297,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[268,88,89,90,91,269,92,270,271,272,273,274,93,94,95,8,19,96,97,98,21,22,99,100,23,24,25,279,280,27,281,28,29,282,101,102,103,30,31,104,283,105,106,107,32,33,108,109,284,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,285,130,131,132,84,133,134,135,136,137,138,139,140,141,142,0,143,144,34,35,36,37,286,287,145,146,147,148,149,150,151,152,153,290,291,154,155,156,157,158,159,160,161,162,38,163,164,39,165,40,166,167,168,293,10,169,294,170,296,171,172,173,174,43,44,45,175,18,176,177,178,179,180,181,182,48,183,184,185,186,187,188,189,190,300,191,192,56,57,58,59,303,304,3,60,305,61,62,306,307,194,63,64,195,196,65,66,197,198,199,313,200,201,202,203,204,205,316,317,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,319,320,232,233,323,324,325,326,327,328,329,330,331,332,333,234,334,235,236,79,80,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,340,342,343,344,345,346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[366,309,211,215,221,228,229,242,248,255,256,338,350],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[76,277,95,278,110,367,308,309,310,311,199,312,368,316,233,354,355,356],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[369,120,136,142],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[28,31,32,33,56,58,59,3,61,4,64,65,66,370],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[285,130],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":283,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":142,"org.easymock.tests2.SerializationTest.testAllMockedMethod":294,"org.easymock.tests2.DelegateToTest.testReturnException":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":309,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":193,"org.easymock.tests.MockingTest.testPartialClassMocking":259,"org.easymock.samples.SupportTest.voteForRemovals":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":85,"org.easymock.tests.MockClassControlTest.testToString":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":357,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":97,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":275,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ExampleTest.answerVsDelegate":89,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests2.UsageConstraintsTest.testNull":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":166,"org.easymock.tests2.CaptureTest.testPrimitive":152,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":368,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":331,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":318,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":325,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":207,"org.easymock.tests2.CaptureTest.testCapture_2617107":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":310,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":81,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":281,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":285,"org.easymock.tests2.CaptureTest.testAnd":149,"org.easymock.tests2.UsageTest.strictResetToDefault":103,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.MockedExceptionTest.testMockedException":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":322,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":366,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":140,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":143,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":52,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":353,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":296,"org.easymock.tests.ResultTest.createReturnResultToString":263,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests2.CompareToTest.testLessOrEqual":369,"org.easymock.tests.ResultTest.createDelegateResultToString":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":208,"org.easymock.samples.ExampleTest.voteAgainstRemoval":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":69,"org.easymock.tests2.UsageTest.niceToStrict":104,"org.easymock.tests2.UsageConstraintsTest.testNotNull":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":238,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":174,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests.UsageVarargTest.differentLength":328,"org.easymock.tests2.CallbackTest.callback":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":316,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":82,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":79,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests.MockNameTest.defaultName":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":352,"org.easymock.samples.ExampleTest.voteForRemovals":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":86,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests.UsageVarargTest.allKinds":333,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":57,"org.easymock.tests2.DependencyTest.testInterfaceMocking":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testStubDelegate":146,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":237,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":312,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests.UsageVarargTest.varargLongAccepted":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.samples.ExampleTest.voteForRemoval":90,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":276,"org.easymock.tests.UsageThrowableTest.noUpperLimit":334,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":313,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":126,"org.easymock.samples.SupportTest.addDocument":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":308,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":38,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":332,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":124,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":286,"org.easymock.tests.MockTypeTest.fromEasyMockClass":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":287,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":173,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":40,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.CaptureTest.testCaptureRightOne":157,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":319,"org.easymock.tests2.UsageConstraintsTest.testOr":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.ResultTest.createThrowResultToString":264,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests.UsageVarargTest.varargCharAccepted":326,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests2.CompareToTest.testLessThan":365,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":67,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":236,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":73,"org.easymock.tests2.UsageConstraintsTest.constraints":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":181,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39}}]
