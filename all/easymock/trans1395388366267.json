[{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[30,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,17,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,19,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,20,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,2,3,182,4,5,183,6,184,185,186,187,188,189,190,191,192,193,194,195,196,27,197,198,199,200,201,202,203,204,205,206,207,0,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,34,246,247,248,249,250,251,36,38,40,41,43,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,7,275,8,276,46,47,1,277,278,279,280,281,282,283,284,29,285,286,287,288,289,290,291,9,292,10,11,293,294,49,50,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[18,296,105,106,113,120,154,155,162,169,175,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[30,60,61,63,64,66,72,299,300,301,296,102,103,104,105,106,107,108,109,110,113,114,116,117,118,120,121,122,123,124,125,126,127,128,129,145,146,147,148,149,174,175,3,4,5,228,244,245,249,36,38,40,41,43,265,272,273,274,7,275,8,276,46,47,1,277,278,279,280,281,282,283,9,10,11,294,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[30,55,56,57,303,303,304,304,58,59,60,61,62,63,64,65,66,305,67,306,68,69,307,308,309,310,311,312,313,70,71,31,72,13,14,15,16,17,18,73,314,74,75,76,77,315,78,79,80,316,317,318,319,320,321,322,323,324,325,326,327,81,299,300,301,296,328,82,83,84,329,85,86,330,87,88,89,90,91,92,93,19,331,332,333,94,95,96,97,98,99,100,101,334,335,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,336,337,338,339,340,341,342,145,146,147,148,149,150,20,151,152,153,343,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,344,174,175,176,345,177,178,346,179,347,21,22,23,348,349,297,350,180,181,2,3,182,4,5,183,6,351,352,353,354,355,356,357,358,184,185,186,187,188,189,190,191,192,193,194,195,196,25,26,27,28,197,198,199,200,201,202,203,204,205,206,207,0,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,359,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,360,242,243,244,245,34,246,247,361,248,249,250,362,251,363,364,298,365,35,36,38,39,40,41,42,43,44,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,366,367,267,268,269,270,271,272,273,274,7,275,8,45,276,12,46,47,1,277,278,279,280,281,282,283,284,29,285,286,287,288,289,290,291,9,292,10,11,293,294,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[368],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[369,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:73","sourceCode":"return java.lang.reflect.Field","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:131","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[34,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[373,374,375,376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":200,"org.easymock.tests2.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":257,"org.easymock.tests2.StubTest.stubWithReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":220,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":114,"org.easymock.tests2.SerializationTest.testAllMockedMethod":247,"org.easymock.tests2.DelegateToTest.testReturnException":248,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests.MockingTest.testPartialClassMocking":102,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests.MockClassControlTest.testToString":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":166,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":154,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":366,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":303,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":295,"org.easymock.tests2.UsageConstraintsTest.testNull":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":342,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests2.CaptureTest.testPrimitive":234,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests2.CaptureTest.testCaptureNone":239,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":141,"org.easymock.tests2.ThreadingTest.testThreadSafe":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":306,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":135,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":125,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":323,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":157,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests.ReplayStateInvalidUsageTest.times":324,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests2.AnswerTest.answer":266,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":365,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":12,"org.easymock.tests2.NameTest.nameForMocksControl":289,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":308,"org.easymock.tests2.DelegateToTest.testDelegate":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":8,"org.easymock.tests2.CaptureTest.testCaptureLast":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":283,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":153,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":162,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":222,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":318,"org.easymock.tests.UsageThrowableTest.throwError":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":305,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":320,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests.UsageExpectAndThrowTest.floatType":156,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":213,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":131,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":50,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":352,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests2.UsageTest.niceToStrict":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testNotNull":221,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":54,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.UsageTest.defaultResetToNice":260,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":120,"org.easymock.tests.UsageVarargTest.differentLength":138,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests.UsageTest.openCallCountByLastCall":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":163,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":20,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":211,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":210,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":350,"org.easymock.tests.UsageThrowableTest.throwCheckedException":98,"org.easymock.tests.MockClassControlTest.testEquals":341,"org.easymock.tests2.EasyMockSupportClassTest.testAll":294,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":298,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":279,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":281,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.tests.ObjectMethodsTest.testHashCode":355,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests2.NameTest.nameForNiceMock":288,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests.UsageVarargTest.allKinds":143,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.samples.ExampleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":100,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":3,"org.easymock.tests2.UsageConstraintsTest.greaterThan":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":1,"org.easymock.tests.UsageVarargTest.varargLongAccepted":140,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.samples.ExampleTest.voteForRemoval":63,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":226,"org.easymock.tests.UsageExpectAndReturnTest.floatType":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":304,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests.UsageThrowableTest.noUpperLimit":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":198,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.SerializationTest.test":246,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.testSame":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":106,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":112,"org.easymock.tests.GenericTest.testPackageScope":70,"org.easymock.tests2.UsageTest.moreThanOneArgument":254,"org.easymock.tests2.CaptureTest.testCapture2_2446744":242,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":142,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests2.NameTest.nameForMock":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests.UsageExpectAndReturnTest.longType":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":219,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":109,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":148,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.MockedExceptionTest.testRealException":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":302,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":314,"org.easymock.tests2.NameTest.nameForStrictMock":287,"org.easymock.tests2.UsageConstraintsTest.testContains":209,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":201,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.object":115,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":137,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":356,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":241,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":68,"org.easymock.tests2.UsageConstraintsTest.testOr":204,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":133,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":177,"org.easymock.tests2.MockBuilderTest.testWithConstructor":371,"org.easymock.tests.MockClassControlTest.testHashCode":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":118,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":315,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":359,"org.easymock.tests2.UsageConstraintsTest.cmpTo":208,"org.easymock.tests.UsageVarargTest.varargCharAccepted":136,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":367,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests.DefaultClassInstantiatorTest.object":334,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":331,"org.easymock.tests2.CaptureTest.testCaptureFromStub":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":317,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":330,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":161,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":119,"org.easymock.tests2.CaptureTest.testCapture":379,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":339,"org.easymock.tests2.UsageConstraintsTest.constraints":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":160,"org.easymock.tests.CapturesMatcherTest.test":378,"org.easymock.tests.UsageStrictMockTest.testVerify":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":21,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":51,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.UsageTest.resumeIfFailure":263,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190}}]
