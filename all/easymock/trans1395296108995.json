[{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"o"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[50,51,52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,5,6,7,69,70,8,9,10,11,71,72,73,12,74,13,14,75,15,16,17,76,77,78,18,19,20,79,80,81,82,83,84,85,86,87,88,89,90,21,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,32,33,34,35,36,37,38,134,135,136,137,138,139,40,41,42,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,43,44],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[57,155,156,58,157,158,159,160,161,162,163,164,165,166,2,2,3,3,167,59,168,60,61,169,170,62,63,64,65,4,171,66,172,173,174,175,176,67,177,178,68,179,5,180,6,7,69,70,8,9,10,11,71,72,181,73,182,12,74,13,14,75,15,16,17,76,77,183,78,18,19,20,184,185,186,187,188,189,190,191,192,193,194,79,80,195,196,197,198,199,200,81,82,201,83,202,84,85,203,48,204,86,205,206,207,208,209,87,210,211,212,88,213,89,90,214,215,216,217,218,21,219,91,92,220,221,222,93,94,95,223,224,96,97,225,226,98,227,99,228,229,230,231,232,100,233,234,235,236,237,238,101,239,240,241,102,103,104,105,242,243,106,244,107,108,109,110,245,111,112,113,114,246,115,116,117,118,119,247,248,120,121,122,123,124,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,125,266,22,23,24,25,26,267,268,126,127,269,128,129,49,270,271,272,273,274,130,131,132,133,32,33,34,35,36,275,276,277,278,37,279,280,281,282,38,283,134,135,284,285,286,287,288,289,290,136,137,291,292,293,294,295,296,297,298,299,138,139,300,301,302,303,304,305,306,307,308,309,310,40,41,311,312,42,140,141,313,314,142,315,143,144,145,146,316,147,148,149,150,317,151,152,153,154,43,44,45],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[6,15,78,318],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[82,201,48,204,21,91,92,229,230,231,232,249,319,320,321,127,269,49,270,282,38,134,135,138,139,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[164,165,2,2,3,3,172,174,180,322,323,324,325,184,185,186,187,189,190,326,327,328,196,329,330,197,331,332,333,334,335,336,337,338,339,198,340,341,342,343,344,199,345,346,206,207,209,87,210,347,211,348,349,350,212,88,213,351,352,234,235,236,353,238,354,355,101,356,239,240,357,358,241,359,360,361,362,0,363,364,365,1,366,367,368,250,369,370,371,372,373,374,375,376,377,378,379,380,272,273,274,381,382,286,287,288,383,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[249,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[239,361],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[308,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[20,384],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[57,156,157,158,160,163,67,180,184,185,186,187,188,189,190,196,197,198,199,206,207,208,209,87,210,211,212,88,213,215,21,91,92,221,222,238,101,239,240,241,104,105,242,243,106,244,109,110,111,112,113,246,115,116,117,118,250,22,23,24,25,272,273,274,130,131,132,133,32,33,34,35,36,38,134,135,40,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[386,387],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[57,155,156,58,157,158,159,160,388,161,162,163,164,165,166,2,2,3,3,167,59,168,60,61,169,170,62,63,64,65,4,171,66,172,173,174,176,67,177,68,179,5,180,6,7,69,70,8,9,10,11,71,72,73,182,12,74,13,14,75,15,16,17,76,77,183,78,18,19,20,184,185,186,187,188,189,190,191,194,79,80,195,196,197,198,199,200,81,82,201,83,202,84,85,203,48,204,86,205,206,207,208,209,87,210,347,211,350,212,88,213,89,90,214,215,216,217,218,21,219,91,92,220,221,222,93,94,95,223,224,96,97,225,226,98,227,99,228,229,230,231,232,100,389,390,391,392,233,234,235,236,237,353,238,101,356,239,240,358,241,359,102,103,104,105,242,243,106,244,107,108,109,110,245,111,112,113,114,246,115,116,117,118,119,247,248,120,121,122,123,124,249,362,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,125,266,370,371,372,373,374,375,376,377,22,23,24,25,26,126,127,393,269,128,129,49,270,271,394,395,396,397,398,272,273,274,130,131,132,133,399,400,401,402,32,33,34,35,36,37,279,280,281,282,38,283,134,135,284,285,286,287,289,290,136,137,293,403,294,295,296,297,404,298,299,138,139,300,301,302,303,304,405,39,406,407,408,409,410,411,412,413,414,415,416,40,41,311,312,42,140,141,313,314,142,315,143,144,145,146,316,147,148,149,150,317,151,152,153,154,43,44,417,418,419],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[57,155,156,58,157,158,159,160,388,161,162,163,164,165,166,2,2,3,3,167,59,168,60,61,169,170,62,63,64,65,4,171,66,172,173,174,176,67,177,68,179,5,180,6,7,69,70,8,9,10,11,71,72,73,182,12,74,13,14,75,15,16,17,76,77,183,78,18,19,20,184,185,186,187,188,189,190,191,194,79,80,195,196,197,198,199,200,81,82,201,83,202,84,85,203,48,204,86,205,420,206,207,208,209,87,210,347,211,350,212,88,213,89,90,214,215,216,217,218,21,219,91,92,220,221,222,93,94,95,223,224,96,97,225,226,98,227,99,228,229,230,231,232,100,389,390,391,392,233,234,235,236,237,353,238,101,356,239,240,358,241,359,102,103,104,105,242,243,106,244,107,108,109,110,245,111,112,113,114,246,115,116,117,118,119,247,248,120,121,122,123,124,249,362,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,125,266,370,371,372,373,374,375,376,377,22,23,24,25,26,126,127,393,269,128,129,49,270,271,394,395,396,397,398,272,273,274,130,131,132,133,399,400,401,402,32,33,34,35,36,37,279,280,281,282,38,283,134,135,284,285,286,287,289,290,136,137,293,403,294,295,296,297,404,298,299,138,139,300,301,302,303,304,405,39,406,407,408,409,410,411,412,413,414,415,416,40,41,311,312,42,140,141,313,314,142,315,143,144,145,146,316,147,148,149,150,317,151,152,153,154,43,44,417,418,419],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[79,80],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[75],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[155,156,58,157,158,159,160,161,162,163,164,165,166,167,59,168,60,61,169,170,62,63,64,65,4,171,66,173,174,176,67,177,68,179,5,6,7,69,70,8,9,10,11,71,72,73,182,12,74,13,14,75,15,16,17,76,77,183,78,18,19,20,184,187,188,191,194,79,80,195,196,200,81,82,201,83,202,84,85,48,204,86,205,206,207,208,209,87,210,211,213,89,90,214,215,216,217,218,21,219,91,92,220,221,222,93,94,95,223,224,96,97,226,98,227,99,228,100,233,234,235,236,237,102,103,104,105,242,243,106,244,107,108,109,110,245,111,112,113,114,246,115,116,117,118,119,247,248,120,121,122,123,124,249,362,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,125,266,376,377,22,23,24,25,26,126,127,269,128,129,49,270,271,130,132,133,32,33,34,35,36,37,279,280,281,282,38,283,134,135,284,285,286,287,383,289,290,136,137,291,292,294,295,296,297,298,299,138,139,300,301,302,303,40,41,311,312,42,140,141,313,314,142,315,143,144,145,146,316,147,148,149,150,317,151,152,153,154,43,44,422,419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,3,172,180,322,186,190,423,326,327,328,196,329,330,197,331,332,333,334,335,336,337,338,339,198,340,341,342,343,344,199,345,346,424,425,426,427,428,357,429,430],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.UsageTest.argumentsOrdered":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":202,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":155,"org.easymock.tests2.DelegateToTest.testReturnException":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":272,"org.easymock.tests.MockClassControlTest.testToString":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":222,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":40,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":401,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":154,"org.easymock.tests.UsageTest.moreThanOneArgument":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":24,"org.easymock.tests.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":353,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests.ReplayStateInvalidUsageTest.times":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":392,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":52,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":390,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":407,"org.easymock.tests.UsageThrowableTest.throwError":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":346,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests2.CompareToTest.testLessOrEqual":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":56,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":399,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":74,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":391,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests2.UsageConstraintsTest.testMatches":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":25,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":165,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":213,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":347,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":175,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":241,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":260,"org.easymock.tests.GenericTest.testBridgedEquals":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":298,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":153,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":183,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":22,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":403,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":236,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":226,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":255,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":419,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":115,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":302,"org.easymock.tests.MockClassControlTest.testHashCode":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":389,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":420,"org.easymock.tests.UsageVarargTest.varargCharAccepted":254,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests2.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":54,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":417,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":116,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":373,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":174,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":267,"org.easymock.samples.SupportTest.voteForRemovals":163,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.UsageExpectAndThrowTest.object":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":400,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":249,"org.easymock.tests.UsageVerifyTest.twoReturns":300,"org.easymock.tests.UsageVarargTest.varargByteAccepted":259,"org.easymock.tests2.ThreadingTest.testThreadSafe":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":297,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":412,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.UsageExpectAndThrowTest.longType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":411,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.SerializationTest.testClass":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":118,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":330,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":142,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":273,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":210,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":388,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.MockBuilderTest.testCreateMockString":359,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.floatType":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":246,"org.easymock.tests.UsageVarargTest.differentLength":256,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.UsageConstraintsTest.equals":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":348,"org.easymock.tests.UsageTest.openCallCountByLastCall":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.UsageCallCountTest.tooFewCalls":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":402,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":80,"org.easymock.tests.ObjectMethodsTest.testHashCode":418,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":341,"org.easymock.tests2.DelegateToTest.testStubDelegate":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":258,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":117,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests.UsageThrowableTest.noUpperLimit":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":323,"org.easymock.tests2.SerializationTest.test":173,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":105,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.samples.SupportTest.addDocument":162,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":332,"org.easymock.tests.GenericTest.testPackageScope":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests2.MockedExceptionTest.testRealException":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":41,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":355,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":238,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":20,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":336,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":207,"org.easymock.tests.UsageTest.wrongArguments":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":333,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":404,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests2.CompareToTest.testLessThan":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CaptureTest.testCaptureFromStub":4,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":354,"org.easymock.tests.UsageTest.unexpectedCallWithArray":393,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":296,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests.UsageStrictMockTest.testVerify":285,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":166,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":34,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":107,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321}}]
