[{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,5,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,6,217,218,219,220,221,222,223,224,225,226,227,228,7,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,8,9,245,246,247,248,249,250,10,251,252,253,254,255,256,11,257,258,259,260,261,12,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,309,310,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[13,14,17,18,19,20,26,28,29,31,32,38,39,40,54,60,125,164,181,199,200,203,226,227,228,7,229,239,240,241,242,243,261,12,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[59,313,202,314,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[315,263],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[105,106,107,108,109,110,170,303],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[316,317,111,113,318,319,320,321,322,323],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[324,325],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[327],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,51,54,56,57,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,89,90,92,93,94,96,98,99,100,103,104,107,111,112,113,114,115,117,118,121,122,123,124,126,127,129,131,132,133,134,135,136,137,143,144,145,146,147,148,149,151,152,153,162,164,166,167,168,172,181,183,184,186,188,190,191,195,196,197,198,199,200,203,204,205,206,207,328,329,330,331,332,215,216,218,219,222,239,240,241,242,243,8,9,245,246,247,248,249,250,10,251,252,253,254,255,256,11,257,258,259,260,261,12,292,294,295,296,297,298,299,300,301,302,304,305,306,308,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.Injector:210","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[53,334,54,55,56,57,58,59,60,93,119,120,128,141,142,143,146,147,148,153,180,335,5,181,182,183,184,185,336,337,338,204,205,206,207,339,340,341,342,343,344,345,346,347,348,238,239],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,334,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,350,79,80,81,82,83,84,85,87,351,88,89,352,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,110,111,112,353,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,354,141,142,143,144,145,146,147,148,355,149,150,151,152,153,162,356,356,164,165,166,167,168,169,170,171,357,173,174,175,176,177,178,179,180,335,5,181,182,183,184,185,186,187,188,195,196,197,199,200,201,202,203,204,206,207,210,211,212,213,214,215,216,6,217,218,219,220,221,222,223,224,225,358,226,227,228,7,229,230,359,360,361,362,363,364,339,340,341,342,343,344,345,346,347,348,238,239,240,241,242,243,244,8,9,245,246,247,248,249,250,10,251,252,253,254,255,256,11,257,258,259,260,261,12,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,365,366,302,303,304,305,367,306,307,368,308,369,370,371,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,54,55,82,84,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,372,141,142,149,150,164,165,166,177,178,5,181,199,200,201,202,203,238,239,240,241,242,243,244,373,261,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[316,318,319,320,321,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[111,112,353,374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":97,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.tests2.SerializationTest.testAllMockedMethod":353,"org.easymock.tests2.DelegateToTest.testReturnException":106,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":174,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":326,"org.easymock.tests.MockingTest.testPartialClassMocking":195,"org.easymock.samples.SupportTest.voteForRemovals":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests.MockClassControlTest.testToString":159,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":48,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":319,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":309,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":225,"org.easymock.samples.ExampleTest.answerVsDelegate":303,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":76,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests.UsageTest.moreThanOneArgument":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":191,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":267,"org.easymock.tests.UsageTest.argumentsOrdered":221,"org.easymock.tests.UsageVarargTest.varargIntAccepted":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":369,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":351,"org.easymock.tests2.UsageConstraintsTest.any":24,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":260,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":354,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":150,"org.easymock.tests2.MockedExceptionTest.testMockedException":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":71,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":219,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":271,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.CompareToTest.testCompareEqual":349,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":262,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":313,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":315,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":234,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":50,"org.easymock.tests.UsageVerifyTest.twoThrows":187,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.PartialClassMockTest.testGetArea":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.samples.ExampleTest.voteAgainstRemoval":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":190,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":63,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.tests2.UsageTest.defaultResetToNice":100,"org.easymock.samples.ExampleTest.voteAgainstRemovals":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":11,"org.easymock.tests.UsageVarargTest.differentLength":344,"org.easymock.tests2.CallbackTest.callback":128,"org.easymock.tests.UsageTest.openCallCountByLastCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":201,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":365,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests.MockNameTest.defaultName":163,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":7,"org.easymock.tests.ObjectMethodsTest.testHashCode":156,"org.easymock.samples.ExampleTest.voteForRemovals":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":321,"org.easymock.samples.BasicClassMockTest.testPrintContent":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.samples.ExampleTest.addDocument":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests2.AnswerTest.stubAnswer":51,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":178,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":323,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":153,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.samples.ExampleTest.voteForRemoval":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":310,"org.easymock.tests.UsageThrowableTest.noUpperLimit":293,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":32,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":69,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":9,"org.easymock.samples.SupportTest.addDocument":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":173,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":105,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":70,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests.GenericTest.testPackageScope":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":270,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests.GenericTest.testBridgedEquals":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":254,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":207,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.MockedExceptionTest.testRealException":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":65,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":142,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.object":252,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":75,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":322,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.UsageTest.wrongArguments":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests2.EasyMockSupportTest.testVerify":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":255,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":25,"org.easymock.tests.UsageVarargTest.varargCharAccepted":342,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":49,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":373,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":151,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":161,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.CapturesMatcherTest.test":356,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":73}}]
