[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[1,2,3],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[21,22,23,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[25,26,27,28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"transplant":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1121","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,21,130,22,5,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,12,13,14,147,148,149,150,151,23,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,3,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,227,228,228,229,230,231,232,233,25,234,235,236,237,238,26,239,240,241,242,24,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,11,276,277,278,279,280,281,282,27,283,284,285,286,287,288,289,290,291,20,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,4,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,16,334,335,17,18,336,337,338,339,340,30,31,32,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1397","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,99,134,137,138,368,192,3,193,264,300,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[369,370,371,372,373,54,63,98,99,102,103,106,134,136,137,163,164,167,169,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,192,193,196,199,215,26,240,241,242,255,262,264,268,269,273,274,300,302,303,305,306,307,309,310,311,312,315,317,318,319,320,321,322,328,329,330,333,17,350,355,358,361,362,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[100,133,374,375,376,377],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":308,"org.easymock.tests2.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.tests2.StubTest.stubWithReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":327,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":172,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests2.DelegateToTest.testReturnException":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":34,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":377,"org.easymock.samples.SupportTest.voteForRemovals":226,"org.easymock.tests.MockClassControlTest.testToString":202,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":122,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":249,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":110,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":16,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":22,"org.easymock.tests.UsageExpectAndThrowTest.object":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":261,"org.easymock.tests2.DelegateToTest.testWrongClass":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":314,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":47,"org.easymock.samples.ExampleTest.answerVsDelegate":217,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":341,"org.easymock.tests2.UsageConstraintsTest.testNull":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.CaptureTest.testPrimitive":357,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":156,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests2.CaptureTest.testCaptureNone":362,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":97,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":193,"org.easymock.tests.UsageVarargTest.varargByteAccepted":84,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests.UsageTest.argumentsOrdered":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":158,"org.easymock.tests.UsageVarargTest.varargIntAccepted":78,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.UsageExpectAndThrowTest.longType":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests.ReplayStateInvalidUsageTest.times":154,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests2.CaptureTest.testAnd":354,"org.easymock.tests2.UsageTest.strictResetToDefault":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests2.NameTest.nameForMocksControl":259,"org.easymock.tests2.MockedExceptionTest.testMockedException":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":185,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.DelegateToTest.testDelegate":353,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":114,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":237,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":279,"org.easymock.tests2.CaptureTest.testCaptureLast":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":347,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":94,"org.easymock.tests.MockingTest.testTwoMocks":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":145,"org.easymock.tests2.CaptureTest.testCapture1_2446744":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":118,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":329,"org.easymock.tests.UsageThrowableTest.throwError":52,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":149,"org.easymock.samples.ExampleTest.removeNonExistingDocument":222,"org.easymock.tests.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":239,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":112,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":320,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":335,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.PartialClassMockTest.testGetArea":230,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":96,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests2.UsageTest.niceToStrict":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests2.UsageConstraintsTest.testNotNull":328,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":234,"org.easymock.tests2.UsageTest.defaultResetToNice":270,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests.UsageVarargTest.differentLength":81,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":119,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":45,"org.easymock.tests.UsageCallCountTest.tooFewCalls":39,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":318,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":344,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":48,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":127,"org.easymock.tests2.CaptureTest.testCaptureAll":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":147,"org.easymock.tests.ObjectMethodsTest.testHashCode":143,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests2.NameTest.nameForNiceMock":258,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests.UsageVarargTest.allKinds":86,"org.easymock.tests2.DependencyTest.testInterfaceMocking":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":93,"org.easymock.samples.ExampleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.UsageConstraintsTest.greaterThan":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.UsageVarargTest.varargLongAccepted":83,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":369,"org.easymock.samples.ExampleTest.voteForRemoval":218,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests.UsageExpectAndReturnTest.floatType":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":322,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":53,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":306,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":262,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":359,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":288,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":54,"org.easymock.tests2.UsageConstraintsTest.testSame":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":164,"org.easymock.samples.SupportTest.addDocument":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":367,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":289,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":170,"org.easymock.tests.GenericTest.testPackageScope":87,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests2.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":161,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":85,"org.easymock.tests2.NameTest.nameForMock":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":166,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":326,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":167,"org.easymock.tests.UsageCallCountTest.tooManyCalls":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":186,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":38,"org.easymock.tests2.MockedExceptionTest.testRealException":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":171,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":342,"org.easymock.tests2.UsageConstraintsTest.testContains":317,"org.easymock.tests2.NameTest.nameForStrictMock":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":338,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests.UsageExpectAndReturnTest.object":173,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":8,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":281,"org.easymock.tests.ErrorMessageTest.testGetters":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":293,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":80,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":144,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":364,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":21,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":159,"org.easymock.tests2.UsageConstraintsTest.testOr":312,"org.easymock.tests.UsageRangeTest.combination":183,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":60,"org.easymock.tests.UsageTest.wrongArguments":101,"org.easymock.tests.MockClassControlTest.testHashCode":205,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":176,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":160,"org.easymock.tests.UsageVarargTest.varargShortAccepted":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastCall":268,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":296,"org.easymock.tests.DefaultClassInstantiatorTest.object":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":107,"org.easymock.tests2.CaptureTest.testCaptureFromStub":365,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":148,"org.easymock.tests.UsageTest.unexpectedCallWithArray":100,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.constraints":307,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":204,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.samples.ExampleTest.addAndChangeDocument":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":116,"org.easymock.tests.UsageStrictMockTest.testVerify":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":251,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":203,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":91,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":360,"org.easymock.tests2.UsageTest.resumeIfFailure":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":169,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20}}]
