[{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[8,9,10,11,12,13],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,12,43,44,45,46,13,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[59,16,17,60,19,22,23,61,62,63,64,65,66,67,12,68,44,45,69,47,48,49,54,70,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[71,72,73],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,7,3,4,5,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,2,122,123,124,125,126,14,127,59,15,16,17,128,18,129,60,19,20,21,130,131,132,22,23,24,25,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,151,152,153,154,155,156,157,158,72,159,160,161,162,27,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,58,196,197,198,199,28,200,201,202,203,204,205,206,207,208,209,29,30,210,31,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,61,62,63,64,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,32,246,247,33,248,249,250,34,251,252,253,35,36,254,255,37,256,257,258,259,38,260,261,262,263,264,265,73,266,267,268,39,269,40,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,41,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,42,379,12,68,43,44,45,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,46,69,13,47,403,404,48,49,50,405,406,407,408,409,410,51,52,53,54,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,55,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,70,56,57,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,7,3,4,5,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,2,122,499,123,124,125,126,14,127,59,15,16,17,128,18,129,60,19,20,21,130,131,132,22,23,24,25,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,151,152,153,154,155,156,157,158,72,159,160,161,162,27,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,58,196,197,198,28,200,202,203,204,205,207,208,209,29,30,31,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,61,62,63,64,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,32,246,500,247,33,248,249,250,34,251,252,253,35,36,254,255,37,256,257,258,259,38,260,261,262,263,264,265,73,266,267,268,39,269,40,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,41,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,373,374,375,376,377,378,42,379,12,68,43,44,45,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,46,69,13,47,403,404,48,49,50,405,406,407,408,409,410,51,52,53,54,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,55,444,445,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,70,56,57,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[120,18,131,275,285,291,293,294,295,296,297,298,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,46,404,419,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Null:35","failures":[152,168,248,351],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[119,285],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[133,135,143,26,149,152,154,155,157,165,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[291,294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[133,135,143,26,149,152,154,155,157,165,170],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[238,241,242,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[3,4,5,6],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[523],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[120,18,131,275,285,291,293,294,295,296,297,298,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,46,404,419,56],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[93,120,59,15,16,17,18,60,19,130,131,22,23,25,134,135,137,138,139,140,141,146,152,158,27,170,61,62,63,64,237,241,32,283,286,293,318,351,12,68,43,44,45,46,69,47,403,404,48,49,50,54,419,70,56,57],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[74,76,77,79,84,86,93,98,99,59,16,17,176,179,189,195,28,203,205,207,30,228,229,230,231,233,234,235,243,248,259,38,260,261,262,263,73,39,269,40,282,306,308,309,310,311,68,44,45,394,55,444,445,446,448,449,450,451,452,453,456,457,459,460,461,463,464,465,466,467,468,469,470,471,472,475,487,488,490,494,495,497],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[87,90,100,101,102,108,111,211,212,213,219,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[291,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[247,33],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[223,224,225,226,284,314,315,316,317,318,319,483],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":430,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":21,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":90,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":315,"org.easymock.tests.MockingTest.testPartialClassMocking":487,"org.easymock.tests.MockClassControlTest.testToString":359,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":227,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":65,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":522,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageTest.moreThanOneArgument":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":468,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":472,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":506,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.DependencyTest.testClassMocking":96,"org.easymock.tests2.AnswerTest.answer":237,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":397,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":336,"org.easymock.tests.LimitationsTest.mockFinalMethod":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":481,"org.easymock.tests2.DependencyTest.testClassMockingSupport":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":291,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":509,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":469,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests2.UsageTest.niceToStrict":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":322,"org.easymock.tests2.ThreadingTest.testChangeDefault":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":203,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":108,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":330,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":459,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":417,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":344,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests.MockNameTest.defaultName":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":79,"org.easymock.tests.UsageVarargTest.allKinds":351,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":83,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":297,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":163,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":510,"org.easymock.samples.ExampleTest.voteForRemoval":76,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":264,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":502,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":314,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":455,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":350,"org.easymock.tests.GenericTest.testBridgedEquals":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":477,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":339,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":296,"org.easymock.tests.MockingTest.testNiceClassMocking":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":229,"org.easymock.tests.MockingTest.testClassMocking":485,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":406,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":225,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":419,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests.UsageExpectAndReturnTest.object":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":346,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":414,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":244,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":464,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":212,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":197,"org.easymock.tests.UsageVarargTest.varargCharAccepted":345,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":365,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.DefaultClassInstantiatorTest.object":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":211,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":508,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":327,"org.easymock.tests.ReplayStateInvalidCallsTest.times":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":360,"org.easymock.tests2.UsageTest.resumeIfFailure":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":317,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.samples.SupportTest.voteForRemovals":86,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":333,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":238,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":498,"org.easymock.tests.UsageExpectAndThrowTest.object":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":512,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":494,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":495,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":117,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":332,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":10,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":504,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":349,"org.easymock.tests2.ThreadingTest.testThreadSafe":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":410,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":82,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":316,"org.easymock.tests.UsageExpectAndThrowTest.longType":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":467,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":520,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests2.NameTest.nameForMocksControl":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":490,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":325,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":207,"org.easymock.tests.MockingTest.testNicePartialClassMocking":488,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":263,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":100,"org.easymock.tests2.CompareToTest.testCompareEqual":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":519,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":235,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":486,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":516,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":329,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.samples.ExampleTest.removeNonExistingDocument":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":107,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":213,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":368,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests.UsageExpectAndThrowTest.floatType":323,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":240,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":245,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":269,"org.easymock.tests.LimitationsTest.privateConstructor":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":298,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":101,"org.easymock.tests.UsageVarargTest.differentLength":41,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests2.UsageConstraintsTest.equals":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":295,"org.easymock.tests.MockingTest.testStrictClassMocking":484,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":230,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":242,"org.easymock.tests.ObjectMethodsTest.testHashCode":413,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":523,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":518,"org.easymock.tests2.NameTest.nameForNiceMock":63,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":249,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":513,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.samples.ExampleTest.addDocument":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.AnswerTest.stubAnswer":241,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":208,"org.easymock.tests.UsageVarargTest.varargLongAccepted":348,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":466,"org.easymock.tests.UsageExpectAndReturnTest.floatType":450,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":243,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageThrowableTest.noUpperLimit":292,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":449,"org.easymock.tests2.UsageConstraintsTest.testSame":153,"org.easymock.samples.SupportTest.addDocument":85,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":232,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":375,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":219,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":501,"org.easymock.tests2.NameTest.nameForMock":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":460,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":335,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":446,"org.easymock.tests2.MockedExceptionTest.testRealException":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":433,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests2.NameTest.nameForStrictMock":62,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":66,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":507,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":421,"org.easymock.tests.UsageVarargTest.varargShortAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":51,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":521,"org.easymock.tests2.UsageConstraintsTest.cmpTo":72,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":239,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":200,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":517,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":462,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":81,"org.easymock.tests.UsageStrictMockTest.testVerify":381,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":478,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":470,"org.easymock.tests.LimitationsTest.abstractClass":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":471,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":36,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":342}}]
