[{"position":"org.easymock.internal.RecordState:243","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[38,86,87,88,80,89,90],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[91,92,93,94,95,96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[98,99,100,101,102,103,104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[106,107,0,108,1,2,3,4,5,109,110,111,7,8,9,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,10,153,154,11,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,13,14,15,17,19,20,22,27,28,29,30,31,32,33,34,35,172,36,173,174,175,176,177,37,38,39,178,179,180,181,182,183,40,41,42,43,44,45,46,47,48,184,185,49,50,186,51,52,53,187,54,55,56,57,58,59,61,62,66,67,69,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,86,87,220,221,222,223,224,225,226,73,74,75,76,77,78,227,228,229,230,231,79,80,81,232,233,234,235,236,82,83,84,85,237],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[238],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4,7,8,9,239,12,240,241,13,242,14,15,243,16,244,245,24,25,246,174,238,64,247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[106,106,107,107,4,110,7,8,9,239,12,240,241,13,14,15,250,251,16,244,245,252,24,25,246,36,97,174,238,64,247,248],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[116,117,121,122,254,133,147,255,150],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[106,107,256,257,258,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[259,260],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[116,117,119,121,122,254,133,137,147,255,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[238,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[263,264,265,266,267,12,243,16,244,38,39,268,269,59,270,271,272,273,274,275,86,87,276,88,277,80,81,278,279,280],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[110,111,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[282,259,260],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[91,92,93,94,95,96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[137],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[110,111,281,284],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[159,263,264,265,285,286,287,288,37,38,39,193,273,274,275,219,86,87,88,277,79,80,81],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[289,13,24,25,290,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[106,106,107,107,0,108,1,2,3,292,4,5,109,110,111,6,7,8,9,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,293,294,141,142,143,147,295,148,296,297,298,149,150,299,300,301,151,302,152,10,153,303,154,11,155,304,156,157,158,159,160,161,162,305,266,163,164,306,165,166,167,168,307,308,169,267,170,171,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,172,36,173,174,175,176,177,37,38,39,309,178,182,183,40,41,42,43,44,45,46,47,48,184,185,49,50,186,51,52,53,187,54,55,56,57,58,310,59,60,61,62,63,64,65,66,67,68,311,69,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,70,217,218,219,86,87,312,71,72,313,314,315,220,316,221,222,223,224,225,226,73,317,318,319,320,74,75,76,77,78,321,322,323,324,325,88,79,80,81,232,233,234,235,326,236,262,327,328,283,329,82,83,84,85,237,330],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[122,147,255,150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,108,1,2,332,3,292,109,110,111,281,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,333,147,295,255,148,334,335,297,298,149,150,301,151,302,153,154,11,156,158,159,160,336,305,266,239,13,242,17,19,20,21,22,23,337,25,28,29,32,33,34,285,286,287,288,36,174,175,176,177,338,37,39,339,309,178,179,180,181,340,182,40,41,42,43,44,45,46,47,48,184,185,49,50,186,51,52,53,187,54,55,56,57,58,341,59,60,61,62,342,63,343,344,345,346,347,348,349,350,351,352,353,66,67,311,69,188,191,193,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,86,87,316,221,73,320,74,75,76,77,78,227,228,229,230,231,354,79,81,355,356,232,233,234,235,326,236,82,83,84,85,237,357,358,330,359,360,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":336,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests2.SerializationTest.testAllMockedMethod":281,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":40,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":238,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":284,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":7,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":293,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":92,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":66,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":67,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.samples.ConstructorCalledMockTest.testTax":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":181,"org.easymock.samples.ExampleTest.answerVsDelegate":108,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests2.CaptureTest.testPrimitive":148,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":84,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":72,"org.easymock.tests.UsageUnorderedTest.message":88,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":270,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":351,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests.UsageTest.argumentsOrdered":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.tests2.CaptureTest.testCapture_2617107":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":291,"org.easymock.tests2.CaptureTest.testAnd":147,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":337,"org.easymock.tests2.NameTest.nameForMocksControl":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":42,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":310,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests2.CaptureTest.testCapture1_2446744":296,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests.UsageThrowableTest.throwError":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":99,"org.easymock.tests2.ConstraintsToStringTest.andToString":331,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":141,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":8,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":226,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.UsageTest.defaultResetToNice":305,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":252,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":189,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":319,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests.UsageThrowableTest.throwCheckedException":223,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":290,"org.easymock.tests2.CaptureTest.testCaptureAll":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":85,"org.easymock.samples.ExampleTest.voteForRemovals":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":95,"org.easymock.tests2.NameTest.nameForNiceMock":287,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":153,"org.easymock.tests.UsageVarargTest.allKinds":353,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":230,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":225,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":355,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.floatType":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":104,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":334,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":165,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":44,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":303,"org.easymock.tests2.CaptureTest.testCaptureFirst":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":166,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":185,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":300,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":10,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":352,"org.easymock.tests.GenericTest.testBridgedEquals":261,"org.easymock.tests2.NameTest.nameForMock":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":227,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":47,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":330,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":358,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":289,"org.easymock.tests2.NameTest.nameForStrictMock":286,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":113,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":89,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":102,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":306,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests.UsageTest.wrongArguments":273,"org.easymock.tests2.MockBuilderTest.testWithConstructor":256,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":323,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":222,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.tests.UsageStrictMockTest.testVerify":356,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":335,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":90}}]
