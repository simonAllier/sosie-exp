[{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[7,8,9,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[97,26,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[99,100,101,102,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[104,105,106,107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[99,109,110,111,112,113,13,114,14,15,115,116,117,118,119,120,121,122,16,123,17,18,19,20,1,2,124,125,126,127,128,129,130,131,132,133,7,134,135,136,137,138,139,140,141,142,143,144,145,146,9,147,148,3,149,4,150,151,152,21,22,153,23,24,154,25,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,100,26,101,188,189,190,191,192,193,194,195,196,6,197,198,199,200,201,202,203,204,27,28,29,30,31,32,33,34,205,206,35,36,37,38,39,40,207,41,208,42,43,44,45,46,47,209,210,211,212,48,213,49,214,50,51,215,52,216,217,218,219,53,54,55,56,57,220,221,222,223,224,225,226,227,228,229,230,231,58,232,59,60,233,234,235,236,237,238,239,62,63,64,65,240,241,242,243,244,245,246,247,248,249,250,251,252,66,102,103,253,254,255,69,256,257,258,259,260,261,262,70,71,72,73,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,74,75,76,77,78,79,285,286,80,81,287,82,83,84,288,85,86,87,88,89,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,90,91,319,320,321,322,323,324,325,326,327,328,92,93,94,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[157,159,163,164,165,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[99,346,347,109,110,111,13,14,15,116,117,119,120,121,122,16,123,17,18,19,20,1,2,124,129,130,131,132,133,7,134,135,136,137,138,139,140,141,142,143,144,145,146,9,147,148,149,4,150,151,21,22,23,24,25,156,157,159,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,97,100,26,101,348,188,193,194,195,6,198,199,200,203,204,27,28,29,30,31,32,33,34,205,206,35,36,37,38,39,40,41,42,43,44,45,46,47,210,210,211,211,48,49,214,50,51,52,217,53,54,55,56,57,220,221,222,223,224,225,226,227,228,349,350,58,59,60,239,61,62,63,64,65,351,352,353,246,354,355,356,66,102,103,253,254,357,67,358,359,68,360,69,256,257,258,259,260,261,262,70,71,72,73,263,269,361,74,75,76,77,78,79,285,286,80,81,287,82,83,84,288,85,86,87,88,89,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,315,318,362,363,364,365,366,367,90,91,319,320,321,322,323,324,325,326,327,328,92,93,94,331],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[195,196,201,202,368,369,370,371,231,372,373,374,311,312,313,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,15,115,195,58,60,233,254,260,261,262,311,375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[14,376,59,261,262,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[14,15,105,59,60,78,80,81,82,288,294,298,299,301,304,362,365,366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[157,168,169,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.UsageTest.argumentsOrdered":202,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":118,"org.easymock.tests2.DelegateToTest.testReturnException":100,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":92,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":370,"org.easymock.samples.SupportTest.voteForRemovals":48,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":302,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":290,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":346,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":358,"org.easymock.tests.UsageExpectAndThrowTest.object":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":90,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":210,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":214,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":28,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":180,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":259,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests.UsageTest.moreThanOneArgument":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":37,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.UsageUnorderedTest.message":289,"org.easymock.tests.UsageVerifyTest.twoReturns":262,"org.easymock.tests.UsageVarargTest.varargByteAccepted":279,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageTest.argumentsOrdered":317,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":153,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":248,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":247,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.SerializationTest.testClass":116,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":249,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":192,"org.easymock.tests2.CaptureTest.testAnd":156,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests2.NameTest.nameForMocksControl":128,"org.easymock.tests2.MockedExceptionTest.testMockedException":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":315,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":366,"org.easymock.tests2.DelegateToTest.testDelegate":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":294,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":305,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":367,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":268,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":150,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":243,"org.easymock.samples.ExampleTest.removeNonExistingDocument":216,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.floatType":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":359,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":291,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":154,"org.easymock.samples.ExampleTest.voteAgainstRemovals":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":106,"org.easymock.tests.UsageVarargTest.differentLength":276,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests.UsageTest.openCallCountByLastCall":314,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":253,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":11,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":373,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":266,"org.easymock.tests2.CaptureTest.testCaptureAll":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":250,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":32,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":73,"org.easymock.tests.ObjectMethodsTest.testHashCode":283,"org.easymock.samples.ExampleTest.voteForRemovals":52,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests2.NameTest.nameForNiceMock":127,"org.easymock.tests.UsageVarargTest.allKinds":281,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":267,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.samples.ExampleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":5,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":63,"org.easymock.tests.UsageVarargTest.varargLongAccepted":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":233,"org.easymock.samples.ExampleTest.voteForRemoval":50,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.SerializationTest.test":117,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":173,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":75,"org.easymock.tests2.UsageConstraintsTest.testSame":134,"org.easymock.samples.SupportTest.addDocument":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":97,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":174,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":204,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":286,"org.easymock.tests.GenericTest.testPackageScope":269,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":16,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":108,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests2.NameTest.nameForMock":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":61,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":78,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":65,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":256,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.NameTest.nameForStrictMock":126,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":133,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageExpectAndReturnTest.object":287,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests.ErrorMessageTest.testGetters":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":179,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":284,"org.easymock.tests.UsageTest.exactCallCountByLastCall":318,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":172,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":357,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":374,"org.easymock.tests2.UsageConstraintsTest.testOr":135,"org.easymock.tests.UsageRangeTest.combination":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":103,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":79,"org.easymock.tests2.EasyMockSupportTest.testVerify":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":104,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageVarargTest.varargShortAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":347,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests.DefaultClassInstantiatorTest.object":240,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":312,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.CaptureTest.testCapture":95,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests2.UsageConstraintsTest.constraints":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.CapturesMatcherTest.test":377,"org.easymock.tests.UsageStrictMockTest.testVerify":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":265,"org.easymock.tests2.UsageTest.resumeIfFailure":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":56,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":177}}]
