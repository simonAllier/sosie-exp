[{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[17,19,20,22,23,24,83,84,25,26,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,27,28,29,30,31,124,125,126,127,128,129,34,35,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,4,163,164,165,166,167,36,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,5,7,196,197,198,11,12,199,200,201,202,203,204,205,206,207,38,39,208,209,210,211,40,41,42,43,44,45,46,49,50,212,213,214,215,216,217,218,219,220,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,16,221,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[2,2,3,3,224,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[225,226,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[89,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[228,16,221,229],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.RecordState:117","failures":[231,159,204,205,207,38,39,222],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[234,235,236,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[18,21,22,89,90,91,92,93,94,95,116,120,238,239,240,241,242,33,243,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,156,172,180,187,244,245,191,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[18,21,239,240,241,242,33,243,244,245,191,246],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[17,18,247,234,235,248,249,250,251,252,253,254,255,256,0,257,258,1,259,19,20,21,22,23,24,260,261,262,263,264,265,266,267,268,269,270,271,272,273,83,274,84,275,25,26,85,86,87,88,276,89,277,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,278,279,280,281,282,283,116,117,284,118,119,120,121,122,123,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,236,237,310,27,28,29,30,31,311,312,313,314,315,231,316,317,238,318,124,319,320,321,322,323,324,325,326,327,328,329,330,32,331,332,333,334,335,336,337,338,339,340,341,342,343,125,126,344,127,345,346,347,239,240,241,242,33,243,348,128,129,349,350,351,352,353,354,355,356,34,35,357,358,359,360,361,362,363,364,365,366,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,367,153,154,155,156,157,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,158,159,160,161,384,162,385,386,2,2,3,3,4,387,388,389,390,391,163,392,393,394,395,396,164,397,398,399,400,401,402,403,404,165,166,167,405,36,168,169,170,171,406,172,407,408,409,410,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,411,188,189,412,190,244,245,191,246,192,413,193,194,195,5,6,414,415,416,417,418,419,420,421,422,7,423,196,197,8,9,198,10,424,425,426,427,428,429,11,430,431,432,433,434,435,436,437,438,12,439,440,441,442,443,199,233,444,200,445,201,202,446,203,447,448,37,13,449,450,451,14,223,452,15,204,453,454,205,206,207,38,455,39,456,208,209,210,457,211,40,41,42,43,44,45,46,47,48,49,50,51,52,53,212,458,213,214,215,216,459,460,217,461,218,219,462,54,463,464,465,466,467,220,468,469,470,471,472,473,474,475,476,477,55,56,57,58,478,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,16,221,229,222],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Same:37","failures":[61],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[175,179,479,6,480,481,482,483,224,484,485,230,486,487,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,247,234,235,248,249,250,251,252,253,254,255,256,0,257,258,1,259,19,20,21,22,23,24,260,261,262,263,264,265,266,267,268,269,270,271,272,273,83,274,84,275,25,26,85,86,87,88,276,89,277,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,278,279,280,281,282,283,116,117,284,118,119,120,121,122,123,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,236,237,310,27,28,29,30,31,311,312,313,314,315,231,316,317,238,318,124,319,320,321,322,323,324,325,326,327,328,329,330,32,331,332,333,334,335,336,337,338,339,340,341,342,343,125,126,344,127,345,346,347,239,240,241,242,33,243,348,128,129,349,350,351,352,353,354,355,356,34,35,357,358,359,360,361,362,363,364,365,366,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,367,153,154,155,156,157,368,369,370,371,490,372,373,374,375,376,377,491,378,379,380,381,382,383,158,159,160,161,384,162,385,386,2,2,3,3,4,387,388,389,390,391,163,392,393,394,395,396,164,397,398,399,400,401,402,403,404,165,166,167,405,36,168,169,170,171,406,172,407,408,409,410,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,411,188,189,412,190,244,245,191,246,192,413,193,194,195,5,6,492,414,415,416,417,418,419,481,420,421,482,422,7,423,196,483,197,8,9,198,484,10,424,425,426,427,428,429,11,430,431,432,433,434,435,436,437,438,12,439,440,441,442,443,199,233,444,200,445,201,202,446,203,447,448,37,13,449,450,451,14,223,452,15,204,453,454,205,206,207,38,455,39,456,208,209,210,457,211,40,41,42,43,44,45,46,47,48,49,50,51,52,53,212,458,213,214,215,216,459,460,217,461,218,219,462,54,463,464,465,466,467,220,468,469,470,471,472,473,474,475,476,477,55,56,57,58,478,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,16,221,229,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[493,494],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[250,24,86,87,277,96,97,100,102,103,104,105,107,108,109,110,112,113,114,115,116,117,119,120,131,132,133,136,138,139,140,141,143,144,145,146,148,149,150,151,152,367,153,154,155,386,169,170,406,182,185,186,187,412,192,413,193,38,39,211,41,42,44,45,47,48,52,53,55,56,57,59,60,61,62,68,69,70,71,73,74,81,82,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[24,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,73],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[40,41,42,43,50,51,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,73],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[493],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[376,493,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[420,198,451,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,257,258,1,259,272,273,83,274,310,339,341,342,343,125,126,127,347,351,354,358,359,360,361,362,363,364,365,372,373,374,375,376,377,378,2,2,3,3,4,389,390,498,499,500,501,502,407,408,173,174,175,176,178,179,244,245,191,5,6,419,503,420,421,422,7,423,196,197,8,9,198,504,10,424,425,426,427,428,429,11,430,431,432,433,434,435,436,437,438,12,439,440,441,442,443,199,233,444,200,445,202,446,203,447,37,13,449,450,451,14,223,452,15,16,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[505,64,70,82],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[2,3,5,6,481,482,483,8,224,484,506,507,508,13,16],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[225,226,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[509],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":189,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":295,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":387,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":414,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests2.UsageTest.wrongArguments":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":370,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":461,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":381,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":268,"org.easymock.tests2.DependencyTest.testClassMocking":403,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":477,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":215,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.DependencyTest.testClassMockingSupport":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":278,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":475,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":353,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":383,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":506,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":263,"org.easymock.tests.MockingTest.testInterfaceMocking":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":434,"org.easymock.tests2.UsageTest.niceToStrict":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":487,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":427,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":476,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":382,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":223,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":413,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":447,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":213,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":456,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":214,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":103,"org.easymock.tests2.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":303,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests.GenericTest.testBridgedEquals":259,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":255,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":379,"org.easymock.tests.UsageCallCountTest.tooManyCalls":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":225,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests.MockingTest.testNiceClassMocking":347,"org.easymock.tests.MockingTest.testClassMocking":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":249,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.MockTypeTest.fromEasyMockClass":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests.UsageExpectAndReturnTest.object":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":325,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":128,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":112,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":436,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":226,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":474,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":324,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":219,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":247,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":437,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":502,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":412,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":508,"org.easymock.samples.SupportTest.voteForRemovals":163,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":228,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":307,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":453,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":369,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":333,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":232,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":439,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":389,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":338,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":305,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests2.StubTest.stub":406,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":237,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":306,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":266,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests2.NameTest.nameForMocksControl":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":429,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":197,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":279,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":179,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ConstraintsToStringTest.andToString":509,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":193,"org.easymock.tests2.MockBuilderTest.testCreateMockString":10,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":12,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests.LimitationsTest.privateConstructor":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":230,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":244,"org.easymock.tests2.UsageTest.defaultResetToNice":411,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":326,"org.easymock.tests2.CallbackTest.callback":222,"org.easymock.tests2.UsageConstraintsTest.equals":478,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.MockingTest.testStrictClassMocking":341,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":175,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":207,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.NameTest.nameForNiceMock":417,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.samples.ExampleTest.addDocument":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":440,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":233,"org.easymock.tests2.AnswerTest.stubAnswer":206,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":407,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.SerializationTest.test":221,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.samples.SupportTest.addDocument":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":431,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":345,"org.easymock.tests2.NameTest.nameForMock":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":484,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":246,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":507,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":271,"org.easymock.tests2.NameTest.nameForStrictMock":416,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":408,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":495,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":420,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":435,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":445,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":432,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":286,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":254,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":288,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":421,"org.easymock.tests.UsageTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":386,"org.easymock.tests.UsageStrictMockTest.testVerify":276,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":388,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":102,"org.easymock.tests.LimitationsTest.abstractClass":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":459,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321}}]
