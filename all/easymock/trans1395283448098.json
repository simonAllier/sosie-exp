[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,3,4,5,1,6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[4,6,7,8],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,5,1,6,7,9,10,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,3,4,5,1,6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,2,3,98,4,99,5,1,100,26,101,102,103,104,105,106,13,107,7,108,109,110,111,8,112,113,114,115,116,117,118,119,120,121,122,123,9,124,10,125,126,127,128,129,130,131,11,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,27,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[31,32,33,34,36,38,43,44,45,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,67,68,71,72,73,74,76,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,2,3,98,4,99,5,1,100,26,101,102,103,104,105,106,13,107,7,108,109,111,8,112,113,118,119,342,120,121,122,343,123,9,124,125,126,129,130,131,11,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,344,345,152,153,154,156,157,159,160,162,164,165,166,167,168,169,171,173,174,175,176,177,178,183,184,185,186,346,347,348,187,349,194,195,196,197,198,199,350,351,203,205,206,209,210,213,214,217,218,219,220,221,222,223,224,225,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,352,353,354,355,356,27,276,288,289,290,291,292,293,294,295,357,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,358,359,360,316,317,318,321,361,336,337,338,339,340,362,363,364,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[366,100,104,113],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[9,10,125,126,127,128,129,131,367,11,132,134],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60,368,316,317,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[369,370,371,372,373,374],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[106,110,124,10,126,127,128,129,130,134],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[32,71,151,154,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[83,184,185,186,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[32,120,122,123,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[255,259,265,272,273,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,377,378,379,14,15,380,16,52,381,17,18,382,383,19,384,385,53,54,55,56,57,58,386,59,60,61,368,387,20,21,388,22,62,389,23,24,390,391,25,63,64,65,66,67,68,69,70,392,393,394,395,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,396,397,398,399,400,401,402,403,404,405,87,406,407,88,408,409,410,411,412,413,414,415,416,89,417,418,419,420,421,90,422,423,91,92,93,94,95,96,97,2,3,424,98,4,99,5,1,100,6,26,101,102,103,104,105,106,13,107,7,108,109,110,111,8,112,113,425,114,115,116,117,118,426,119,342,120,121,122,343,123,9,124,10,125,126,127,128,129,130,131,11,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,344,345,152,153,154,155,427,156,428,429,430,157,158,159,431,160,432,433,161,162,434,163,164,165,166,167,168,169,170,435,171,436,437,172,173,174,175,438,439,176,177,178,179,180,181,182,183,184,185,186,346,347,348,440,187,188,349,441,442,443,444,445,446,447,448,449,189,190,191,192,193,194,195,196,197,198,199,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,350,376,466,467,468,469,351,470,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,471,472,218,473,219,220,221,222,223,224,225,474,226,227,228,475,476,229,230,231,232,233,234,235,236,237,238,239,240,241,477,242,243,478,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,352,353,354,355,356,27,276,277,278,279,479,280,281,282,283,284,285,286,287,480,288,289,290,291,292,293,294,295,357,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,358,359,360,481,482,483,316,317,484,318,485,486,487,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,488,361,489,336,337,338,339,340,362,363,364,490,341,28,491,492,493,29,494,495,496,497,365,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[367,499],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[32,44,65,67,68,71,73,74,76,78,79,83,86,91,92,96,97,2,3,98,4,99,5,1,100,26,102,103,104,105,106,13,107,7,108,109,111,8,112,113,118,119,121,123,124,125,126,129,130,131,11,134,135,136,137,140,141,144,146,153,154,157,168,174,177,178,183,184,185,186,194,195,197,198,203,205,206,209,210,213,214,223,246,247,250,251,252,253,254,255,256,257,260,262,263,264,265,267,268,269,270,272,273,274,275,27,288,291,292,293,294,295,296,297,300,302,303,304,305,307,308,309,310,312,313,314,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[47,48,49,50,86,219,220,221,222,223,224,248,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,377,378,379,14,15,380,16,52,381,17,18,382,383,19,384,385,53,54,55,56,57,58,386,59,60,61,368,387,20,21,388,22,62,389,23,24,390,391,25,63,64,65,66,67,68,69,70,392,393,394,395,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,396,397,398,399,400,401,402,403,404,405,87,406,407,88,408,409,410,411,412,413,414,415,416,89,417,418,419,420,421,90,422,423,91,92,93,94,95,96,97,2,3,424,98,4,99,5,1,100,6,26,101,102,103,104,105,106,13,107,7,108,109,110,111,8,112,113,425,114,115,116,117,118,426,119,342,120,121,122,343,123,9,124,10,125,126,127,128,129,130,131,11,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,344,345,152,153,154,155,427,156,428,429,430,157,158,159,431,160,432,433,161,162,434,163,164,165,166,167,168,169,170,435,171,436,437,172,173,174,175,438,439,176,177,178,179,180,181,182,183,184,185,186,346,347,348,440,187,188,349,441,442,443,444,445,446,447,448,449,189,190,191,192,193,194,195,196,197,198,199,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,350,376,466,467,468,469,351,470,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,471,472,218,473,219,220,221,222,223,224,225,474,226,227,228,475,476,229,230,231,232,233,234,235,236,237,238,239,240,241,477,242,243,478,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,352,353,354,355,356,27,276,277,278,279,479,280,281,282,283,284,285,286,287,480,288,289,290,291,292,293,294,295,357,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,358,359,360,481,482,483,316,317,484,318,485,486,487,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,488,361,489,336,337,338,339,340,362,363,364,490,341,28,491,492,493,29,494,495,496,497,365,498],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[500,101,171],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[45,46,427,501,434,436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57,368,165,172,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[6],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[65,66,67,68,71,72,74,75,78,79,81,82,84,86,4,26,106,8,114,115,116,117,121,124,10,126,127,128,129,130,134,151,153,178,196,197,198,199,202,203,204,205,206,209,210,212,213,214,215,216,217,223,247,250,287,290],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[121],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[63,66,67,68,71,72,75,76,77,81,82,83,84,2,106,136,140,141,144,156,161,162,163,165,173,175,183,196,198,199,200,202,204,205,206,209,211,212,215,216,217,502,503,282,325,326,327,504,496],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[57,60,396,159,447,476,330,331,332,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[493,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":316,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":246,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":181,"org.easymock.samples.ExampleTest.answerVsDelegate":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":447,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":486,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":125,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageTest.moreThanOneArgument":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":338,"org.easymock.tests.UsageTest.argumentsOrdered":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":237,"org.easymock.tests2.DependencyTest.testClassMocking":384,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":395,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":444,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":193,"org.easymock.tests2.DependencyTest.testClassMockingSupport":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":497,"org.easymock.tests2.CaptureTest.testCapture1_2446744":126,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":393,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":231,"org.easymock.tests.UsageThrowableTest.throwError":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.MockingTest.testInterfaceMocking":484,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":359,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageOverloadedMethodTest.overloading":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":505,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":191,"org.easymock.tests2.CaptureTest.testCaptureAll":124,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":339,"org.easymock.samples.ExampleTest.voteForRemovals":36,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":197,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":192,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":495,"org.easymock.samples.ExampleTest.voteForRemoval":33,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":438,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":263,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":162,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":189,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests.MockingTest.testNiceClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testClassMocking":482,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":119,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":228,"org.easymock.tests.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":488,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":272,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":392,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":70,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":226,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":173,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":431,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":265,"org.easymock.tests2.SerializationTest.testAllMockedMethod":150,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":350,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":489,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests.UsageStrictMockTest.range":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":401,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":180,"org.easymock.tests2.CaptureTest.testCaptureNone":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":370,"org.easymock.tests.UsageUnorderedTest.message":196,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":504,"org.easymock.tests.UsageVerifyTest.twoReturns":199,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":475,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":26,"org.easymock.tests2.StubTest.stub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":493,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":235,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":15,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.NameTest.nameForMocksControl":117,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":426,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CompareToTest.testCompareEqual":500,"org.easymock.tests2.CaptureTest.testCaptureLast":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":483,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":374,"org.easymock.samples.ExampleTest.removeNonExistingDocument":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":491,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":163,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":152,"org.easymock.tests.UsageVerifyTest.twoThrows":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":378,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":14,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":182,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":372,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests.MockingTest.testStrictClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":154,"org.easymock.tests.ObjectMethodsTest.testHashCode":227,"org.easymock.tests2.CompareToTest.testGreateOrEqual":366,"org.easymock.tests2.NameTest.nameForNiceMock":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":53,"org.easymock.samples.ExampleTest.addDocument":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":203,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":432,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":396,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":28,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":257,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":386,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":485,"org.easymock.tests2.NameTest.nameForMock":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":434,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":186,"org.easymock.tests2.MockedExceptionTest.testRealException":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":247,"org.easymock.tests2.NameTest.nameForStrictMock":115,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":400,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":156,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":369,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":212,"org.easymock.tests2.MockBuilderTest.testWithConstructor":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":269,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":29,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":230,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":428,"org.easymock.tests.UsageTest.unexpectedCallWithArray":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.CaptureTest.testCapture":367,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":208,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":190,"org.easymock.tests2.CompareToTest.testGreateThan":12,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":262,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
