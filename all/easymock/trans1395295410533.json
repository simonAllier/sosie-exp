[{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[1,2,47,48,48,49,49,50,3,5,51,52,53,6,7,8,54,55,9,10,11,12,13,14,15,16,17,18,19,20,56,21,22,23,24,25,57,26,27,58,59,28,29,30,60,61,31,32,33,62,36,37,63,38,39,40,41,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[50,68,69,70,71,72,73,74,75,76,77,78,56,79],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[1,2,47,48,48,49,49,50,3,81,82,83,5,51,52,53,6,84,7,8,54,55,9,10,11,12,85,13,14,15,16,17,18,19,20,56,21,22,23,24,25,57,26,27,58,59,28,30,61,36,37,63,38,39,41,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[86,87],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[50,88,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[105,7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[50,88,3,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[107,108,109,110,111,112,113,46,114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1249","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[117,118,119,120,121,47,122,48,49,123,44,124,125,50,88,126,127,128,129,130,131,132,133,134,135,89,90,91,136,137,92,138,139,140,80,141,142,107,143,144,145,146,147,148,109,149,150,151,152,153,110,111,154,112,155,113,46,156,157,158,159,160,161,42,162,87,163,115,164,165,166,116,167,168,51,52,53,54,9,10,169,14,15,16,17,18,170,19,20,171,172,173,174,56,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,21,22,193,23,24,25,57,26,27,59,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,36,97,98,99,244,100,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,41,102,103,104,279,280,281,282,283,284,65,66,67,285,286],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[43,287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[107,108,109,110,111,112,113,46,114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[43,123,44,124,287,125,288,289,14,290,170,179,193,291,292,275,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[117,119,120,121,47,122,44,126,127,89,90,91,5,51,52,53,7,54,9,10,12,15,16,17,18,170,19,20,56,179,21,22,193,23,24,25,26,58,59,28,197,213,214,215,216,97,98,99,251,294,252,253,254,255,256,257,258,259,262,263,265,266,267,269,270,271,272,273,274,275,276,277,278,41,65,66,67,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[63],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[47,50,6,84,7,8,54,55,9,10,11,12,85,13,57,63,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[48,49,50,295,296,297,298,299,5,300,301,51,302,303,304,305,306,307,308,309,310,52,311,312,313,314,315,53,316,317,318,319,75,76,320,321,17,20,322,56,79],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[323,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":45,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":78,"org.easymock.tests.MockingTest.testPartialClassMocking":65,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.MockClassControlTest.testToString":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":224,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests.UsageExpectAndThrowTest.object":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":69,"org.easymock.tests2.DelegateToTest.testWrongClass":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":243,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":311,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.UsageExpectAndThrowTest.longType":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.LimitationsTest.mockNativeMethod":41,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":83,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":319,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests2.MockedExceptionTest.testMockedException":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":228,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":67,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":4,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":68,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":64,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":167,"org.easymock.tests.UsageThrowableTest.throwError":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":302,"org.easymock.tests.UsageExpectAndThrowTest.floatType":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":172,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":40,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":296,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":11,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":313,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":233,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.MockClassControlTest.testEquals":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":134,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":284,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":174,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":216,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":72,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":44,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.AnswerTest.stubAnswer":173,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":272,"org.easymock.tests.UsageExpectAndReturnTest.floatType":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":153,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":255,"org.easymock.tests2.UsageConstraintsTest.testSame":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":43,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":303,"org.easymock.tests.GenericTest.testPackageScope":36,"org.easymock.tests2.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageExpectAndReturnTest.longType":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":242,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":240,"org.easymock.tests2.UsageStrictMockTest.differentMethods":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":314,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":229,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":84,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":154,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":94,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":26,"org.easymock.tests.ErrorMessageTest.testGetters":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":7,"org.easymock.tests2.UsageStrictMockTest.range":90,"org.easymock.tests2.UsageConstraintsTest.lessThan":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":70,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":307,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.UsageConstraintsTest.testOr":113,"org.easymock.tests.UsageRangeTest.combination":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.MockBuilderTest.testWithConstructor":318,"org.easymock.tests.MockClassControlTest.testHashCode":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":304,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":308,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":33,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CompareToTest.testGreateThan":86,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187}}]
