[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,1,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[261,262,281,284,289,292,488,295,489,490,491,310,387,390,391],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[289,492,493,494,495,496,391],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,66,68,69,111,112,113,219,222,223,269,407,408,409,410,457,460,461],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[92,254,346,349,351,360,362,368],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,81,82,84,88,89,90,91,106,114,115,116,117,118,119,122,123,125,126,127,129,130,131,132,133,159,219,221,222,225,226,245,246,247,248,249,251,253,255,256,258,266,282,286,288,290,294,299,300,301,302,303,304,305,306,309,313,314,315,366,383,390,421,424,434,440,457,459,460,465,466,467,468,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[289,490,492,493,494,501,495,496,391],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[9,10,13,14,502,98,105,112,113,218,221,270,276,277,459],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:491","sourceCode":"return new org.easymock.internal.MocksControl(org.easymock.MockType)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,1,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,285,286,287,288,290,291,292,293,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[321,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[235],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[503],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[188,347,350,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[112,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[504],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[7,9,10,13,14,15,505,502,59,72,73,74,88,105,112,113,216,218,220,221,222,506,236,267,270,271,272,276,277,278,279,282,293,294,296,302,313,315,320,336,368,394,398,399,402,455,458,459,460],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[261,262,281,488,295,310],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:326","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[76,77,105,106,107,108,109,110,155,219,225,226,245,246,247,248,249,326,330,457,475,481,482,487],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":321,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":239,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":406,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":33,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":208,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":86,"org.easymock.tests2.UsageConstraintsTest.testNull":324,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":402,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.CaptureTest.testPrimitive":477,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":4,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":448,"org.easymock.tests.ReplayStateInvalidUsageTest.times":169,"org.easymock.tests2.DependencyTest.testClassMocking":297,"org.easymock.tests2.AnswerTest.answer":346,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":474,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":21,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.DelegateToTest.testDelegate":386,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":48,"org.easymock.tests.LimitationsTest.mockFinalMethod":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":478,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":163,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":23,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":236,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":164,"org.easymock.tests.MockingTest.testInterfaceMocking":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":34,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":215,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":286,"org.easymock.tests2.MockBuilderTest.testCreateMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":42,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":398,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":483,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":421,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":50,"org.easymock.tests2.CaptureTest.testCaptureAll":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":335,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":5,"org.easymock.samples.ExampleTest.voteForRemovals":258,"org.easymock.tests.UsageVarargTest.allKinds":64,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":180,"org.easymock.tests2.UsageConstraintsTest.greaterThan":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":181,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":395,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.CaptureTest.testCaptureFirst":487,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":396,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":486,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":294,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":63,"org.easymock.tests.GenericTest.testBridgedEquals":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":51,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":2,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":466,"org.easymock.tests.MockingTest.testNiceClassMocking":87,"org.easymock.tests.MockingTest.testClassMocking":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":67,"org.easymock.tests2.UsageConstraintsTest.testContains":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":358,"org.easymock.tests2.UsageConstraintsTest.testFind":323,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":362,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":58,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":213,"org.easymock.tests.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":16,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.MockClassControlTest.testHashCode":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":464,"org.easymock.tests.UsageVarargTest.varargCharAccepted":57,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":404,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":30,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":211,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":39,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":240,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":342,"org.easymock.tests2.SerializationTest.testAllMockedMethod":389,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":491,"org.easymock.samples.SupportTest.voteForRemovals":266,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":45,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":204,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":347,"org.easymock.tests.UsageExpectAndThrowTest.object":43,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":18,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":339,"org.easymock.tests2.DelegateToTest.testWrongClass":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":226,"org.easymock.tests.UsageStrictMockTest.range":221,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":416,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":418,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":207,"org.easymock.tests2.CaptureTest.testCaptureNone":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":229,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":506,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":62,"org.easymock.tests2.ThreadingTest.testThreadSafe":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":71,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":263,"org.easymock.tests2.CaptureTest.testCapture_2617107":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageConstraintsTest.any":330,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":167,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":458,"org.easymock.tests2.SerializationTest.testClass":387,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":374,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":461,"org.easymock.tests2.NameTest.nameForMocksControl":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":37,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":290,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.CaptureTest.testCaptureLast":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":340,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":41,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":344,"org.easymock.samples.ExampleTest.removeNonExistingDocument":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":222,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":365,"org.easymock.tests2.MockBuilderTest.testCreateMockString":296,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":35,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":392,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":434,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":314,"org.easymock.tests.LimitationsTest.privateConstructor":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":356,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":59,"org.easymock.tests2.CallbackTest.callback":368,"org.easymock.tests2.UsageConstraintsTest.equals":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageCallCountTest.tooFewCalls":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":209,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.MockingTest.testStrictClassMocking":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":470,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":351,"org.easymock.tests.ObjectMethodsTest.testHashCode":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.NameTest.nameForNiceMock":409,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":367,"org.easymock.tests2.DependencyTest.testInterfaceMocking":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":383,"org.easymock.tests2.AnswerTest.stubAnswer":350,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":219,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":291,"org.easymock.tests.UsageVarargTest.varargLongAccepted":61,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":390,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":319,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":411,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":479,"org.easymock.tests2.SerializationTest.test":388,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":325,"org.easymock.samples.SupportTest.addDocument":265,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":85,"org.easymock.tests2.NameTest.nameForMock":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":460,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":295,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":47,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":490,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":195,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.NameTest.nameForStrictMock":408,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.ErrorMessageTest.testGetters":498,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":282,"org.easymock.tests2.UsageStrictMockTest.range":459,"org.easymock.tests2.UsageConstraintsTest.lessThan":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":190,"org.easymock.tests2.CaptureTest.testCaptureRightOne":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.UsageConstraintsTest.testOr":326,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":302,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":179,"org.easymock.tests.UsageVarargTest.varargShortAccepted":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":72,"org.easymock.tests2.UsageConstraintsTest.cmpTo":331,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":485,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":162,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":283,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":70,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.UsageConstraintsTest.constraints":320,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests2.ConstraintsToStringTest.containsToString":504,"org.easymock.tests.UsageStrictMockTest.testVerify":224,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.LimitationsTest.abstractClass":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":399,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":54}}]
