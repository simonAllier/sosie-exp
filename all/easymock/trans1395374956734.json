[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.RecordState:136","failures":[9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[47],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[58,59,60,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:94","failures":[61,62,63,64,65,12,66,67,15,16,17,18,68,69,70,71,72,73,24,25],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[10,10,74,75,76,77,78,5,7,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,48,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[152,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[178,179,180,51,181,182,183,184,185,9,9,10,10,186,74,75,76,187,188,189,190,191,192,193,194,195,77,196,197,11,198,199,200,201,5,6,7,202,79,80,81,82,203,83,84,61,62,63,64,204,205,206,207,208,209,65,12,210,211,85,86,212,87,88,89,90,91,94,95,96,97,213,214,100,101,102,215,216,217,52,218,53,54,55,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,13,14,66,67,15,16,17,18,68,69,70,71,234,19,235,20,21,47,22,23,72,73,236,237,238,24,25,26,239,240,241,242,243,244,245,246,247,248,103,104,107,109,110,113,249,250,251,252,253,254,255,256,257,258,259,260,261,122,125,135,141,262,263,264,265,266,267,268,27,28,29,30,31,269,270,271,272,273,274,275,276,277,278,279,280,281,282,32,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,153,154,155,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,56,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,159,58,350,351,59,60,33,352,353,34,35,354,355,36,356,357,358,359,360,361,362,363,364,365,366,367,368,369,37,38,39,40,41,42,43,163,164,165,166,168,176,370,371,372,373,46,374,375,376,377,378,379,380,381,382,383,384,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[78,5,386,387,388,389,390,391,392,393],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[61,63,65,66,67,16,18,68,70,72,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[245,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[74,5,396,90,103,397,104,105,107,108,109,110,112,113,398,114,150,151,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[11,199,200,399,400,401,402,403,404,405,406,407,408,409,47,251,252,258,259,266,267,268,410,411,412,413,414,415,416,270,271,282,32,284,285,349,379,417,380,383,384],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[418,419],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[196,198,199,200,202,86,95,97,220,224,225,228,66,47,104,112,113,114,249,252,253,254,258,259,260,261,267,268,420,416,280,282,283,284,285,421,422,423,302,303,349,364,374,378,417,380,383,384,385],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[74,107,109,110,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[48,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[199,424,267,268,284],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:89","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[100,101,102,215,52,53,233,243,249,256,267,272,274,275,276,277,278,279,291,292,293,294,295,296,324,56,326,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,354,355,358,378,382],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":259,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":378,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":177,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":186,"org.easymock.tests2.DelegateToTest.testReturnException":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.tests.MockClassControlTest.testToString":170,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":129,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":387,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":34,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":151,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":228,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":348,"org.easymock.tests.UsageTest.moreThanOneArgument":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":41,"org.easymock.tests.UsageTest.argumentsOrdered":384,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":361,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests2.AnswerTest.answer":243,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":3,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":344,"org.easymock.tests.LimitationsTest.mockFinalMethod":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":270,"org.easymock.tests2.CaptureTest.testCapture1_2446744":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":342,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":44,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":143,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":130,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":315,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":49,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":209,"org.easymock.tests.MockClassControlTest.testEquals":174,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":154,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":346,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.UsageConstraintsTest.testMatches":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":42,"org.easymock.samples.ExampleTest.voteForRemovals":184,"org.easymock.tests.UsageVarargTest.allKinds":369,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":392,"org.easymock.tests2.UsageConstraintsTest.greaterThan":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.samples.ExampleTest.voteForRemoval":181,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":222,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":368,"org.easymock.tests.GenericTest.testBridgedEquals":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":302,"org.easymock.tests.UsageExpectAndReturnTest.longType":307,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":398,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":237,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":289,"org.easymock.tests.UsageCallCountTest.tooManyCalls":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":411,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests.MockingTest.testNiceClassMocking":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":397,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":15,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":388,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":363,"org.easymock.tests.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":320,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":56,"org.easymock.tests.MockClassControlTest.testHashCode":173,"org.easymock.tests2.EasyMockSupportTest.testVerify":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":132,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":402,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":420,"org.easymock.tests.UsageVarargTest.varargCharAccepted":362,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":172,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":335,"org.easymock.tests.CapturesMatcherTest.test":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":404,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests2.UsageTest.resumeIfFailure":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":393,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":373,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":407,"org.easymock.samples.SupportTest.voteForRemovals":179,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":341,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":46,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":244,"org.easymock.tests.UsageExpectAndThrowTest.object":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":73,"org.easymock.tests2.DelegateToTest.testWrongClass":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":410,"org.easymock.tests2.CaptureTest.testCaptureNone":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":265,"org.easymock.tests.UsageUnorderedTest.message":349,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":421,"org.easymock.tests.UsageVerifyTest.twoReturns":268,"org.easymock.tests.UsageVarargTest.varargByteAccepted":367,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":136,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":75,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":355,"org.easymock.tests2.UsageConstraintsTest.any":71,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.UsageExpectAndThrowTest.longType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":48,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":323,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":242,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":124,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":382,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":386,"org.easymock.tests2.CaptureTest.testCaptureLast":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":271,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests.MockingTest.testTwoMocks":163,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":337,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":25,"org.easymock.tests.UsageStrictMockTest.differentMethods":285,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":146,"org.easymock.tests2.ConstraintsToStringTest.andToString":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":126,"org.easymock.tests.UsageExpectAndThrowTest.floatType":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":246,"org.easymock.tests.UsageVerifyTest.twoThrows":267,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests.LimitationsTest.privateConstructor":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":319,"org.easymock.tests.UsageVarargTest.differentLength":364,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":92,"org.easymock.tests.UsageTest.openCallCountByLastCall":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":354,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":412,"org.easymock.tests.MockingTest.testStrictClassMocking":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":352,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests2.NameTest.nameForNiceMock":241,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":389,"org.easymock.samples.ExampleTest.addDocument":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests2.AnswerTest.stubAnswer":247,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests.UsageVarargTest.varargLongAccepted":366,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.UsageExpectAndReturnTest.floatType":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.tests2.ConstraintsToStringTest.orToString":399,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":23,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":205,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testSame":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":305,"org.easymock.samples.SupportTest.addDocument":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":127,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":59,"org.easymock.tests2.NameTest.nameForMock":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":316,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":215,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":35,"org.easymock.tests2.NameTest.nameForStrictMock":240,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":131,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageTest.wrongArguments":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":128,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":317,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":148,"org.easymock.tests.UsageVarargTest.varargShortAccepted":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":423,"org.easymock.tests2.UsageConstraintsTest.cmpTo":234,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":245,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":105,"org.easymock.tests.UsageTest.unexpectedCallWithArray":417,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":318,"org.easymock.tests2.CaptureTest.testCapture":418,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.samples.ExampleTest.addAndChangeDocument":185,"org.easymock.tests2.ConstraintsToStringTest.notToString":401,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":187,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":206,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.LimitationsTest.abstractClass":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":30,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":360}}]
