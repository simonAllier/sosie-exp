[{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:170","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[14,15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[17,18,19,20,7,8,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,14,78,79,80,15,81,82,83,84,85,13,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,12,1,215,216,217,218,219,2,3,4,220,221,5,222,223,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[17,18,19,6,225,20,7,8,226,23,24,25,26,27,28,29,30,31,32,227,33,34,35,36,38,39,228,229,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,60,230,63,64,65,66,231,232,67,233,68,216,69,234,235,236,71,237,238,72,73,239,240,74,75,76,77,14,78,79,80,15,81,82,83,84,85,13,86,87,88,89,90,91,92,93,94,95,96,97,98,241,99,100,101,102,103,242,104,243,244,105,106,107,245,108,246,247,109,248,110,111,112,113,117,118,119,120,122,123,249,249,250,250,125,127,251,252,253,254,255,256,257,258,259,260,261,262,128,263,264,132,133,265,266,267,134,268,269,137,138,270,271,139,272,273,274,275,276,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,277,164,165,278,279,280,281,282,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,283,284,187,188,189,190,191,202,203,204,205,206,207,208,285,286,209,210,287,221,288,289,290,291,211,212,292,293,294,295,213,296,297,298,299,214,300],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.ConstructorArgs:54","failures":[41,301,45,302,303,52,56,304,305,306,307,308,309,310,311,312,313,110,314,315,111,316,317,318,319,320,321,322,323,324,112,325,326,327,328,329,113,330,331,249,250],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[301,332,333,334,335,336,307],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[57,59,60,230,61,62,63,65,337,66,231,67],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:57","sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[338,339,340],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[343,97],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[344,345,346],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[23,217,218,219,251,2,132,347,207,208,5,222,223,224],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[303,340],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[57,58,59,60,66,231,77,14,78,79,80,15,81,82,16,83,91,92,95,96],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.UsageTest.argumentsOrdered":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":70,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests2.DelegateToTest.testReturnException":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.UsageExpectAndThrowTest.object":150,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":332,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests.UsageStrictMockTest.range":132,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":106,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":223,"org.easymock.tests.UsageTest.moreThanOneArgument":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":159,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":267,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":208,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageTest.argumentsOrdered":224,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":325,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":136,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":115,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":271,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.StubTest.stub":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.UsageExpectAndThrowTest.longType":143,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.AnswerTest.answer":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":276,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":144,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":107,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":291,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.UsageThrowableTest.throwError":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":259,"org.easymock.tests.UsageExpectAndThrowTest.floatType":142,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":20,"org.easymock.tests.UsageVerifyTest.twoThrows":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.PartialClassMockTest.testGetArea":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":320,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":303,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":282,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":327,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":149,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":270,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":345,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":279,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":12,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":157,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":54,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":258,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":40,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":334,"org.easymock.samples.BasicClassMockTest.testPrintContent":116,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":281,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":264,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":39,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests.UsageThrowableTest.noUpperLimit":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":213,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":308,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":28,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":312,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests2.CaptureTest.testCaptureFirst":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":317,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":229,"org.easymock.tests2.UsageTest.moreThanOneArgument":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":245,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":310,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":328,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":44,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":244,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":333,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":348,"org.easymock.tests.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":220,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":293,"org.easymock.tests.UsageTest.wrongArguments":222,"org.easymock.tests2.MockBuilderTest.testWithConstructor":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":322,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":10,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests2.CompareToTest.testLessThan":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":338,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":252,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":278,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":135,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.CaptureTest.testCapture":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":242,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.samples.ExampleTest.addAndChangeDocument":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":114,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":130,"org.easymock.tests2.UsageTest.resumeIfFailure":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
