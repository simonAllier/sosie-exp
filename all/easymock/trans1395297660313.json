[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,3,58,4,59,60,61,62,63,64,65,5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,6,7,96,8,97,9,10,98,99,100,101,102,103,104,105,106,107,12,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[26,27,50,3,58,4,59,60,61,62,63,64,65,5,66,67,68,69,94,95,6,7,96,8,97,9,10,98,11,99,100,101,102,103,104,105,106,107,12,108,109,110,111,13,112,113,298,123,124,128,129,166,167,168,169,170,171,172,206,207,208,209,241,242,243,244,267,268,273,274,275,276,277],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[52,53,54,55,80,81,88,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,208,224,228,229,235,237,238,239,240,241,242,252,257,275,276,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[206,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[49,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[300,301,134,137,302,290,290,291,291],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[19,20,22,23,24,25,26,300,303,27,28,29,30,304,305,52,53,54,306,307,69,70,308,309,71,72,73,74,301,75,76,77,114,115,116,117,119,120,310,311,312,313,314,315,316,130,317,318,131,319,320,321,322,323,324,325,326,327,132,328,329,330,331,332,133,333,334,134,136,137,302,335,336,337,338,339,340,341,342,343,344,163,345,346,164,165,347,348,349,350,351,352,353,261,262,263,354,264,355,356,357,358,359,360,361,288,289,290,290,291,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[362,363,364,365,254,267],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[366,367,368,369,18,370,20,27,30,305,32,34,36,37,39,40,69,70,308,73,74,75,76,77,78,371,81,83,84,85,86,90,91,92,93,6,105,115,116,119,120,121,123,124,125,126,127,138,372,373,337,338,339,374,375,376,377,349,378,379,350,380,381,171,201,214,215,216,230,382,383,384,236,385,245,246,249,250,251,252,253,254,255,258,259,260,265,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[94,106,111,386],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[309,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[6,10,101,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[387,388,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[390],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[391,366,367,368,369,14,15,16,17,392,393,394,395,396,18,370,397,398,399,400,401,19,20,21,22,23,24,25,402,26,303,27,28,29,30,304,305,31,32,33,34,35,36,37,38,39,40,41,42,43,44,403,404,45,46,47,48,49,299,50,51,52,53,54,55,306,307,56,57,3,58,4,59,60,61,62,63,64,65,5,66,67,68,69,70,308,309,71,72,73,74,75,76,77,405,406,407,408,409,78,371,410,411,412,413,414,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,6,7,415,96,8,97,9,10,98,11,99,100,101,102,103,104,105,106,107,12,108,109,110,111,13,112,113,298,114,115,117,118,416,121,122,123,124,125,126,127,128,417,129,310,313,418,419,314,315,130,318,131,319,320,323,326,132,328,329,330,331,332,133,135,136,138,420,139,140,141,421,142,372,373,422,423,424,425,426,427,428,429,430,431,432,433,434,387,435,436,437,388,438,439,440,441,442,443,444,335,336,337,338,339,340,341,342,445,374,446,447,375,376,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,377,343,344,163,345,346,164,165,347,348,166,167,168,169,170,349,378,379,350,380,381,448,449,450,171,172,173,174,175,451,452,453,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,454,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,455,456,457,458,459,214,215,216,217,218,219,220,221,460,461,462,463,464,465,466,467,389,468,469,470,222,223,224,225,226,227,228,229,230,471,231,232,472,233,382,234,235,383,384,236,237,238,239,240,241,242,243,244,385,473,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,351,352,353,474,475,476,354,264,265,266,267,268,269,270,271,272,477,478,479,480,481,482,483,273,274,275,276,277,484,355,356,357,358,359,360,485,361,278,279,280,281,282,283,284,285,286,486,287,288,289,292,293,294,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,299,50,51,52,53,54,55,56,57,3,58,4,59,60,61,62,63,64,65,5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,6,7,96,8,97,9,10,98,99,100,101,102,103,104,105,106,107,12,108,109,110,111,13,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,417,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,26,28,29,30,50,56,57,70,71,73,74,76,114,115,116,117,118,119,120,123,125,126,130,131,132,133,137,140,143,144,145,146,147,148,151,152,154,155,156,158,159,160,161,162,163,166,167,168,169,170,209,210,211,212,230,471,231,232,243,244,261,262,263,268,270,271,273,281,283,284,286,292,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[20,23,28,29,30,31,32,33,34,36,37,40,41,42,44,58,4,59,60,61,62,63,64,65,5,67,68,69,70,71,76,80,81,82,85,86,87,88,90,91,93,7,96,8,97,10,98,99,100,102,103,105,106,107,12,108,109,110,111,13,121,122,123,124,125,126,127,138,142,171,172,196,197,198,199,200,202,203,204,205,206,207,208,456,457,214,215,216,222,223,224,225,226,227,228,229,230,246,248,251,252,256,257,258,259,260,265,266,267,268,269,270,271,272,477,274,275,279,280,281,282,283,284,286,287,292,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[458],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[415],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,403,404,45,46,47,48,49,299,50,51,52,53,54,55,56,57,3,58,59,60,63,64,65,5,66,67,68,70,71,73,74,76,78,79,80,81,82,83,85,87,88,89,92,93,94,95,6,7,96,8,97,9,10,98,99,100,101,102,103,104,105,106,107,12,108,109,111,13,112,113,114,115,116,117,118,119,120,123,125,126,128,129,130,131,132,133,134,135,137,138,420,139,140,141,421,142,373,388,443,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,347,166,167,168,169,170,448,449,450,171,451,452,453,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,207,208,209,210,211,212,213,455,456,457,458,459,214,215,216,222,223,224,225,226,227,228,229,230,471,231,232,472,233,234,235,384,237,238,239,240,241,242,243,244,245,252,253,256,257,260,261,262,263,264,268,270,271,478,479,480,482,273,274,275,276,277,278,279,280,281,282,283,284,286,287,290,290,291,291,292,295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[488],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[489,490],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[14,15,16,17,19,20,21,22,23,24,25,26,27,29,44,45,46,47,48,49,299,50,51,52,53,54,55,56,3,58,4,59,60,61,62,63,64,65,5,66,67,68,69,71,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,6,7,96,8,97,9,10,98,99,100,101,102,103,104,105,106,107,12,108,109,110,111,13,112,113,115,116,119,120,122,123,124,125,126,127,128,129,134,135,136,137,138,139,140,141,142,373,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,464,222,223,224,225,226,227,228,229,230,231,232,233,234,235,384,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[491,0,137,290,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[420,421],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":261,"org.easymock.tests.MockClassControlTest.testToString":337,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests2.UsageTest.wrongArguments":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":476,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":342,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":487,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":44,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":17,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":221,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":15,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":334,"org.easymock.samples.PartialClassMockTest.testGetArea":292,"org.easymock.tests.MockingTest.testInterfaceMocking":474,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests2.CompareToTest.testLessOrEqual":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":323,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":362,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":489,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.MockClassControlTest.testEquals":341,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":16,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":219,"org.easymock.tests.MockNameTest.defaultName":377,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.samples.ExampleTest.voteForRemovals":286,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":471,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.samples.ExampleTest.voteForRemoval":283,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":33,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":420,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":34,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":472,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":209,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":96,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests.MockTypeTest.fromEasyMockClass":378,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":39,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.MockClassControlTest.testHashCode":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":325,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":14,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":298,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":338,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":388,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":363,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":443,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":403,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.tests.UsageStrictMockTest.range":270,"org.easymock.samples.ConstructorCalledMockTest.testTax":290,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":450,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.UsageVerifyTest.twoReturns":216,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":328,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":375,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.SerializationTest.testClass":134,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.NameTest.nameForMocksControl":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":318,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":417,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":373,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":299,"org.easymock.tests2.MockBuilderTest.testCreateMockString":77,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":335,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":45,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":284,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.samples.ExampleTest.voteAgainstRemovals":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":138,"org.easymock.tests2.UsageConstraintsTest.equals":415,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":300,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":226,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":468,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":118,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":47,"org.easymock.tests.ObjectMethodsTest.testHashCode":446,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.NameTest.nameForNiceMock":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":56,"org.easymock.samples.ExampleTest.addDocument":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.stubAnswer":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":310,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":320,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":475,"org.easymock.tests2.NameTest.nameForMock":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests2.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.NameTest.nameForStrictMock":367,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":313,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":125,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":32,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":324,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":287,"org.easymock.tests2.ConstraintsToStringTest.notToString":297,"org.easymock.tests2.ConstraintsToStringTest.containsToString":488,"org.easymock.tests.UsageStrictMockTest.testVerify":477,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":218,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.LimitationsTest.abstractClass":343,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197}}]
