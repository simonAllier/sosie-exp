[{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[94],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[97,98,99,100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[103,104,105],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,126,127,128,8,9,10,20,129,21,22,23,24,25,26,130,131,132,133,134,31,32,33,135,136,35,36,137,37,138,139,140,141,46,50,142,143,144,54,56,57,58,61,145,62,63,64,65,66,67,68,69,70,146,72,147,77,148,149,150,151,152,153,154,155,156,157,158,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[159,160,146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[106,109,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[176,177,178,2,3,4,6,8,9,10,21,22,24,25,37,53,54,57,58,62,64,65,67,68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[179,140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[180,181,182,183,184,185],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[177,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[178,3,4,24,64],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[127,128,21,22,187,188,189,190,132,133,191,192,193,194,195,196,197,198,199,101,200,37,201,181,182,141,62,63,202,203,103,204,83,186,205,206,207,208,209,210,148,149,211,212,213,214,215,84,104,216,217,105,218,150,151,219,220,221,222,86,223,152,153,224,225,154,155,156,157,226,227,228,229,158,91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[230,231,152,157,228,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[16,90,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[206,148,217,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[232,159,160,146],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[233,234,7,21,235,236],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[159,160,146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[133,237,141],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":90,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":236,"org.easymock.samples.SupportTest.voteForRemovals":108,"org.easymock.tests.MockClassControlTest.testToString":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":88,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":176,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":174,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests2.CaptureTest.testPrimitive":224,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":233,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":125,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":120,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":136,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":42,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.CaptureTest.testCapture_2617107":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":133,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests2.AnswerTest.answer":183,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests2.CompareToTest.testNotComparable":94,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":225,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":172,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":201,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":184,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":131,"org.easymock.tests2.UsageTest.niceToStrict":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":43,"org.easymock.tests2.UsageConstraintsTest.testNotNull":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.samples.ExampleTest.voteAgainstRemovals":110,"org.easymock.tests.UsageVarargTest.differentLength":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":173,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":132,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":234,"org.easymock.tests2.CaptureTest.testCaptureAll":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests.MockNameTest.defaultName":1,"org.easymock.tests2.UsageConstraintsTest.testMatches":215,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests.UsageVarargTest.allKinds":127,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.samples.BasicClassMockTest.testPrintContent":117,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.AnswerTest.stubAnswer":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":87,"org.easymock.tests.UsageVarargTest.varargLongAccepted":124,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.UsageConstraintsTest.testSame":207,"org.easymock.samples.SupportTest.addDocument":107,"org.easymock.tests2.CaptureTest.testCaptureFirst":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":46,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":126,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageCallCountTest.tooManyCalls":36,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.MockedExceptionTest.testRealException":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":15,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":217,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":139,"org.easymock.tests2.UsageConstraintsTest.testOr":208,"org.easymock.tests.UsageRangeTest.combination":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":118,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":162,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":140,"org.easymock.tests.UsageVarargTest.varargShortAccepted":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":34,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":121,"org.easymock.tests2.CaptureTest.testCaptureMultiple":231,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":41,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":161,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":40,"org.easymock.samples.ExampleTest.addAndChangeDocument":115,"org.easymock.tests.CapturesMatcherTest.test":230,"org.easymock.tests.UsageStrictMockTest.testVerify":130,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":119,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":178}}]
