[{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,441,442,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[7,9,17,119,120,122,124,125,127,137,142],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[444,445],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[446,447,231,448,449,315],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[107,450,451],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[26,38,145,157,237,264,316,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[95,96,97,452],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[281,282,362],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,35,36,159,231,232,235,236,238,453,315,318,338,339,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[63],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[399,454],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[298,455,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[446,447,231,448,449,315],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[108,129,456],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[95,182,184,457,458,459,460,461,191,192],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,6,462,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,95,174,177,182,184,463,187,191,192,464,465,441,442],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[135,466],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[126,132,144,467],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[191,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":120,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":440,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":367,"org.easymock.tests.MockClassControlTest.testToString":324,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":168,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":457,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":419,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":227,"org.easymock.samples.ExampleTest.answerVsDelegate":427,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":334,"org.easymock.tests2.UsageConstraintsTest.testNull":122,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":49,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":329,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":423,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":358,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.DependencyTest.testClassMocking":53,"org.easymock.tests2.AnswerTest.answer":145,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":24,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":44,"org.easymock.tests2.DelegateToTest.testDelegate":167,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":418,"org.easymock.tests2.DependencyTest.testClassMockingSupport":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":11,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":22,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":81,"org.easymock.samples.PartialClassMockTest.testGetArea":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":243,"org.easymock.tests2.ThreadingTest.testChangeDefault":451,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":446,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":251,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":225,"org.easymock.tests.UsageOverloadedMethodTest.overloading":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":406,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":385,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":131,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":16,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.MockClassControlTest.testEquals":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":23,"org.easymock.tests.MockNameTest.defaultName":270,"org.easymock.tests2.UsageConstraintsTest.testMatches":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.samples.ExampleTest.voteForRemovals":431,"org.easymock.tests.UsageVarargTest.allKinds":218,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":337,"org.easymock.samples.BasicClassMockTest.testPrintContent":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":417,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":461,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":401,"org.easymock.tests2.UsageConstraintsTest.greaterThan":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.samples.ExampleTest.voteForRemoval":428,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":115,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":42,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":162,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":43,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":381,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":186,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":414,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":260,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":1,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests2.UsageConstraintsTest.testContains":130,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":307,"org.easymock.tests.MockTypeTest.fromEasyMockClass":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":458,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":390,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":208,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests.MockClassControlTest.testHashCode":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":70,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":39,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":394,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests2.UsageTest.openCallCountByLastCall":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":248,"org.easymock.tests.CapturesMatcherTest.test":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":391,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":325,"org.easymock.tests2.UsageTest.resumeIfFailure":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":383,"org.easymock.tests2.SerializationTest.testAllMockedMethod":97,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":362,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":447,"org.easymock.samples.SupportTest.voteForRemovals":435,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":146,"org.easymock.tests.UsageExpectAndThrowTest.object":252,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":138,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":424,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":425,"org.easymock.samples.ConstructorCalledMockTest.testTax":441,"org.easymock.tests.UsageStrictMockTest.range":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":84,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":448,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests.UsageUnorderedTest.message":238,"org.easymock.tests.UsageVerifyTest.twoReturns":339,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":437,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":422,"org.easymock.tests2.UsageConstraintsTest.any":128,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":393,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests2.NameTest.nameForMocksControl":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CompareToTest.testCompareEqual":456,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":139,"org.easymock.tests.MockingTest.testTwoMocks":366,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":250,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":143,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":450,"org.easymock.samples.ExampleTest.removeNonExistingDocument":432,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":92,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":64,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":193,"org.easymock.tests.UsageVerifyTest.twoThrows":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":34,"org.easymock.samples.ExampleTest.voteAgainstRemovals":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":87,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":109,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":421,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":228,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":449,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":4,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":150,"org.easymock.tests2.CompareToTest.testGreateOrEqual":467,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.tests2.NameTest.nameForNiceMock":171,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests2.DependencyTest.testInterfaceMocking":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":459,"org.easymock.samples.ExampleTest.addDocument":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":75,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.stubAnswer":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":316,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":392,"org.easymock.tests.UsageExpectAndReturnTest.floatType":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":191,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":442,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":136,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":82,"org.easymock.tests2.SerializationTest.test":96,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":12,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":454,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":375,"org.easymock.samples.SupportTest.addDocument":434,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":65,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":371,"org.easymock.tests2.NameTest.nameForMock":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":187,"org.easymock.tests2.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":256,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":413,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":85,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":420,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests2.NameTest.nameForStrictMock":170,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":175,"org.easymock.tests2.UsageStrictMockTest.range":159,"org.easymock.tests2.UsageConstraintsTest.lessThan":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":69,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests.UsageRangeTest.combination":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":387,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.UsageConstraintsTest.cmpTo":129,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":147,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":388,"org.easymock.tests2.CaptureTest.testCapture":444,"org.easymock.tests2.UsageConstraintsTest.constraints":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.samples.ExampleTest.addAndChangeDocument":433,"org.easymock.tests.UsageStrictMockTest.testVerify":321,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":436,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests2.CompareToTest.testGreateThan":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":415,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":356,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":380,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":209}}]
