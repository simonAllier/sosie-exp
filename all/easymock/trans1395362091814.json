[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[19,20,24,25,34,35,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[47,48,49,51,337,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[339,340,341,342,343,344,345,2,3,4,5,6,7,8,17,19,22,23,25,28,31,34,35,36,37,38,39,43,44,45,47,48,49,50,51,52,55,63,66,72,79,80,81,82,84,85,88,89,90,94,99,102,105,106,110,111,142,143,159,160,162,163,164,165,166,194,200,204,216,225,227,230,260,261,263,264,265,266,267,269,270,271,272,273,281,282,283,313,314,317,318,319,320,321],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:190","failures":[346,347,4,6,7,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,63,66,69,71,72,73,75,76,77,348,79,80,81,82,83,84,85,86,87,88,89,90,94,101,102,103,105,107,108,109,112,113,116,118,126,127,145,155,157,162,164,165,173,174,175,178,179,180,181,182,194,195,196,197,198,199,201,202,213,214,216,217,254,255,258,259,262,277,279,281,282,285,314,316,317,318,319,320,321,335],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[6,104,110,111,161,164,200,201,349,256,257,260,261,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:27","sourceCode":"-2689588759855326190L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[339,350,340,341,351,342,343,352,353,354,344,355,356,345,357,358,346,347,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,348,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,200,201,202,203,209,210,211,359,359,215,216,217,221,224,225,226,227,228,229,230,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,332,333,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[0,1,59,143,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[361],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[362,363,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[365,366,161,367,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[339,350,340,341,351,342,369,343,352,353,354,344,355,356,345,357,358,370,371,346,347,372,373,374,375,376,377,0,378,1,2,3,4,5,6,7,8,9,10,11,12,379,380,381,382,383,13,384,385,386,387,388,389,14,15,16,17,390,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,391,62,63,64,65,66,67,68,392,69,393,394,70,71,72,73,395,396,74,397,75,398,76,77,78,348,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,399,400,94,95,96,97,401,402,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,403,404,405,406,407,118,408,409,410,411,412,413,119,120,121,122,414,123,124,125,415,126,127,128,416,417,418,129,419,420,130,421,422,423,424,425,426,427,428,429,131,430,431,432,433,434,132,435,436,437,438,439,440,441,442,443,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,338,150,151,152,444,153,154,155,156,157,158,445,446,447,448,449,450,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,451,198,452,199,200,201,202,203,204,205,453,454,455,456,457,458,459,460,461,462,463,464,465,466,360,467,468,206,469,470,471,472,473,207,474,475,476,208,209,210,477,211,478,479,480,212,213,214,215,216,217,481,218,219,220,482,483,484,485,486,487,488,489,490,491,492,493,221,494,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,495,266,267,268,269,270,271,272,273,274,275,276,277,278,279,496,280,281,282,283,284,285,286,287,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[114,115,116,117,145,188,189,190,191,192,193,203,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[339,350,340,341,351,342,343,352,353,354,344,355,356,345,357,358,346,347,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,348,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,200,201,202,203,209,210,211,359,359,215,216,217,221,224,225,226,227,228,229,230,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,332,333,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[461,241,251,252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[352,352,353,353,4,14,15,18,19,20,21,27,29,30,32,33,39,40,41,53,145,153,154,155,156,157,162,202,454,458,459,467,471,274,275,276,277,278,279,281,282,285,286,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[365,366,161,367,368,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[339,340,341,342,352,352,353,353,344,345,60,62,64,65,67,74,78,93,94,96,97,99,119,120,121,122,123,124,125,129,130,131,132,139,153,154,170,171,172,177,184,185,186,187,209,210,211,221,274,275,276,278,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[126,127,128,519],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":106,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":355,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.tests.MockClassControlTest.testToString":245,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":443,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":347,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":518,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":281,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":350,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":489,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":88,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":250,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":285,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":312,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.UsageTest.argumentsOrdered":261,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":502,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.ReplayStateInvalidUsageTest.times":239,"org.easymock.tests2.DependencyTest.testClassMocking":370,"org.easymock.tests2.AnswerTest.answer":56,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":12,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":486,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":326,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":501,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":308,"org.easymock.tests.LimitationsTest.mockFinalMethod":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":46,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":10,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":233,"org.easymock.tests.UsageThrowableTest.throwError":314,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":505,"org.easymock.samples.PartialClassMockTest.testGetArea":344,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":213,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":425,"org.easymock.tests2.UsageTest.niceToStrict":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":294,"org.easymock.tests2.ThreadingTest.testChangeDefault":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":302,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":365,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":28,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":51,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests2.EasyMockSupportClassTest.testAll":129,"org.easymock.tests.MockClassControlTest.testEquals":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":310,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":364,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":496,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":231,"org.easymock.samples.ExampleTest.voteForRemovals":342,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.samples.BasicClassMockTest.testPrintContent":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":320,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":506,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":450,"org.easymock.samples.ExampleTest.voteForRemoval":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":395,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":498,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":137,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":82,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":54,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":311,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":37,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":319,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":476,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":487,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":220,"org.easymock.tests.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":427,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":9,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastCall":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":158,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":327,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":218,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":504,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":299,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.ReplayStateInvalidCallsTest.times":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":132,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":246,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":363,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.StubTest.stubWithReturnValue":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":38,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":206,"org.easymock.samples.SupportTest.voteForRemovals":345,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":366,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":305,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":207,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":57,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DelegateToTest.testWrongClass":140,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":508,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":352,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":376,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":304,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":241,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":500,"org.easymock.tests2.CaptureTest.testCaptureNone":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":214,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":438,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":201,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":430,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":357,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":284,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":296,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":448,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":237,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":5,"org.easymock.tests2.SerializationTest.testClass":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":516,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":8,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":439,"org.easymock.tests2.NameTest.nameForMocksControl":136,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":420,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":297,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":515,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":36,"org.easymock.tests.MockingTest.testTwoMocks":208,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":512,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":301,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":442,"org.easymock.samples.ExampleTest.removeNonExistingDocument":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":165,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":446,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":100,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.floatType":295,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":59,"org.easymock.tests.UsageVerifyTest.twoThrows":200,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":131,"org.easymock.samples.ExampleTest.voteAgainstRemoval":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":321,"org.easymock.tests2.UsageTest.defaultResetToNice":109,"org.easymock.samples.ExampleTest.voteAgainstRemovals":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.UsageVarargTest.differentLength":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests2.UsageConstraintsTest.equals":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":440,"org.easymock.tests.UsageThrowableTest.throwCheckedException":318,"org.easymock.tests.MockingTest.testStrictClassMocking":475,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":61,"org.easymock.tests.ObjectMethodsTest.testHashCode":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":514,"org.easymock.tests2.NameTest.nameForNiceMock":135,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":348,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":509,"org.easymock.tests2.DependencyTest.testInterfaceMocking":346,"org.easymock.samples.ExampleTest.addDocument":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":315,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":372,"org.easymock.tests2.SerializationTest.test":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":47,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.samples.SupportTest.addDocument":356,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":422,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":497,"org.easymock.tests2.NameTest.nameForMock":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":307,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests2.MockedExceptionTest.testRealException":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":377,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":282,"org.easymock.tests2.NameTest.nameForStrictMock":134,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":375,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":447,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":503,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":426,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":437,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":449,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":517,"org.easymock.tests2.UsageConstraintsTest.cmpTo":26,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":58,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":232,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":256,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":513,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.CaptureTest.testCapture":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":343,"org.easymock.tests.UsageStrictMockTest.testVerify":167,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264}}]
