[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[8],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[12,13,14,15,16,4,17,5,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,12,13,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[26,12,13,14,2,37,3,38,39,16,4,27,17,28,40,41,31,5,18,19,20,42,43,32,21,44,6,45,46,47,48,49,50,7,51,52,33,22,34,36,23,24,25],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[53,54,55,56],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[26,12,13,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,10,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,14,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,4,27,146,17,28,29,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,40,41,30,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,31,5,18,197,198,19,20,199,200,201,202,203,204,205,206,207,208,0,209,210,211,1,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,42,263,264,43,32,21,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,33,321,22,34,35,322,323,324,54,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,55,343,344,345,346,347,56,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,36,23,404,405,406,407,408,24,25,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[285,286,287,288,289,290,291,292,293,294,295,296,307,308,309,310,311,312,313,314,315,316,317,318,500,512],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[119,137,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[26,12,13,27,28,29,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[26,12,13,62,63,64,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,99,105,116,117,118,119,120,14,132,134,135,136,137,144,4,27,146,17,28,29,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,40,41,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,31,5,18,197,198,19,20,199,200,202,203,204,205,206,207,208,209,211,221,222,223,236,237,240,242,243,244,245,246,247,248,249,250,260,262,42,263,264,43,32,21,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,290,297,298,299,300,301,302,303,306,312,319,33,321,22,34,35,322,323,324,54,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,55,343,344,345,346,347,56,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,373,374,375,376,377,379,383,384,385,387,390,391,393,394,395,396,397,399,401,402,403,36,23,404,405,406,407,408,24,25,409,410,411,412,413,414,415,416,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,446,449,459,465,468,469,470,471,472,473,474,476,480,481,482,487,488,497,501,501,502,502,503,504,505,506,507,509,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[12,13,14,16,4,17,5,18,19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[388],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,211,212,217,303,304,305,322,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,449,459,465,474,477,480,481,484,501,502,503],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[297,299],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[14,121,122,123,125,126,128,129,130,131,132,145,4,146,17,28,29,158,160,169,40,41,18,19,20,203,204,205,207,208,210,320,321,22,34,35,324,347,354,360,361,362,363,383,23,405,24,25,423,424,427,428,429,430,435,496,497,498,499,500,504,506,507,508,509,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.Invocation:99","failures":[75,513,336,360,362,383,497,503,506,507,509,511],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[322,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[0,209,210,211,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[399,400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[12,13,17,514,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.RecordState:222","failures":[40,41,42,43],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[12,13,14,16,4,17,5,18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":327,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":93,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":405,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":500,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.MockingTest.testPartialClassMocking":63,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":417,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":449,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":222,"org.easymock.samples.ExampleTest.answerVsDelegate":505,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":217,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":68,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":471,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":360,"org.easymock.tests2.CaptureTest.testPrimitive":425,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":470,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":123,"org.easymock.tests.InvocationTest.testEquals":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":98,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":47,"org.easymock.tests.ReplayStateInvalidUsageTest.times":232,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":411,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests2.CaptureTest.testAnd":422,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":214,"org.easymock.tests2.UsageTest.strictResetToDefault":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":479,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":74,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":83,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":40,"org.easymock.tests2.CaptureTest.testCapture1_2446744":426,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":216,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":133,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":503,"org.easymock.tests.MockingTest.testInterfaceMocking":65,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":454,"org.easymock.tests2.UsageTest.niceToStrict":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":143,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":84,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":383,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":220,"org.easymock.tests.UsageOverloadedMethodTest.overloading":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":458,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":340,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":339,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":431,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":124,"org.easymock.tests2.EasyMockSupportClassTest.testAll":446,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":210,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.CaptureTest.testCaptureAll":423,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":172,"org.easymock.tests2.UsageConstraintsTest.testMatches":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":224,"org.easymock.samples.ExampleTest.voteForRemovals":509,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":82,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":301,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":482,"org.easymock.samples.ExampleTest.voteForRemoval":506,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":483,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":439,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":474,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":158,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":353,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":435,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":354,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":441,"org.easymock.tests2.CaptureTest.testCapture2_2446744":434,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":101,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":207,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":79,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.UsageCallCountTest.tooManyCalls":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":69,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":365,"org.easymock.tests.MockingTest.testClassMocking":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.UsageConstraintsTest.testContains":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":396,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":136,"org.easymock.tests.MockTypeTest.fromEasyMockClass":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":401,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":141,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":89,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":304,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":263,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":456,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":46,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":262,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":398,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":107,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastCall":406,"org.easymock.tests.DefaultClassInstantiatorTest.object":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":57,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":248,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":139,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":457,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":480,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.CapturesMatcherTest.test":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":465,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":48,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.UsageTest.resumeIfFailure":409,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":437,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.tests2.SerializationTest.testAllMockedMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":99,"org.easymock.samples.SupportTest.voteForRemovals":497,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":105,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":412,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":261,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":345,"org.easymock.tests2.DelegateToTest.testWrongClass":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":501,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":494,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":120,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":460,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":205,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":498,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":142,"org.easymock.tests2.CaptureTest.testCapture_2617107":424,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":103,"org.easymock.tests2.UsageConstraintsTest.any":336,"org.easymock.tests2.StubTest.stub":436,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":112,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":230,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.SerializationTest.testClass":322,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":35,"org.easymock.tests2.NameTest.nameForMocksControl":421,"org.easymock.tests2.MockedExceptionTest.testMockedException":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":448,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":468,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":387,"org.easymock.tests.MockingTest.testNicePartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":473,"org.easymock.tests2.CompareToTest.testNotComparable":8,"org.easymock.tests2.CaptureTest.testCaptureLast":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":333,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":346,"org.easymock.tests.MockingTest.testTwoMocks":62,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":349,"org.easymock.samples.ExampleTest.removeNonExistingDocument":510,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":110,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":440,"org.easymock.tests2.ConstraintsToStringTest.andToString":50,"org.easymock.tests2.MockBuilderTest.testCreateMockString":393,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":450,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":414,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":305,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":459,"org.easymock.samples.ExampleTest.voteAgainstRemoval":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":481,"org.easymock.tests.LimitationsTest.privateConstructor":239,"org.easymock.tests2.UsageConstraintsTest.testNotNull":348,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":394,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.UsageTest.defaultResetToNice":408,"org.easymock.samples.ExampleTest.voteAgainstRemovals":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.CallbackTest.callback":306,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":477,"org.easymock.tests.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":169,"org.easymock.tests.UsageCallCountTest.tooFewCalls":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":223,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":369,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":416,"org.easymock.tests.ObjectMethodsTest.testHashCode":140,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":442,"org.easymock.tests2.NameTest.nameForNiceMock":420,"org.easymock.tests2.DependencyTest.testInterfaceMocking":487,"org.easymock.samples.ExampleTest.addDocument":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests2.AnswerTest.stubAnswer":415,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":92,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":303,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":502,"org.easymock.tests2.ConstraintsToStringTest.orToString":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":489,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":427,"org.easymock.tests2.SerializationTest.test":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.tests2.UsageConstraintsTest.testSame":331,"org.easymock.samples.SupportTest.addDocument":496,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":368,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":451,"org.easymock.tests.GenericTest.testPackageScope":209,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":67,"org.easymock.tests2.NameTest.nameForMock":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":392,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":478,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests2.MockedExceptionTest.testRealException":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":97,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":96,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":235,"org.easymock.tests2.NameTest.nameForStrictMock":419,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":111,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":455,"org.easymock.tests2.CaptureTest.testCaptureRightOne":432,"org.easymock.tests2.UsageConstraintsTest.testOr":332,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":469,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":452,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":113,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":337,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":87,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests2.CaptureTest.testCaptureFromStub":433,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.constraints":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":511,"org.easymock.tests2.ConstraintsToStringTest.notToString":45,"org.easymock.tests.UsageStrictMockTest.testVerify":147,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":512,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":80,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":150,"org.easymock.tests.LimitationsTest.abstractClass":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":514,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
