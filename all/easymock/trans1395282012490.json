[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[15],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[30],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,20,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,1,93,94,95,96,97,98,99,2,100,101,102,103,16,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,28,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,3,190,191,192,193,194,4,195,196,197,198,199,5,200,201,202,6,203,7,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,8,236,237,238,239,240,241,242,243,244,9,245,246,247,248,249,10,250,251,252,253,254,11,255,256,257,12,258,13,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,14,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61,62,310,66,0,75,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[109,116,8,240,262,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[311,312,313,314,237,286],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[33,35,36,38,44,46,50,51,52,53,16,106,315,137,139,140,141,143,144,145,146,147,148,149,316,151,317,152,153,154,155,156,157,158,159,160,28,173,175,176,186,187,188,189,3,190,191,192,193,195,196,198,199,5,201,202,6,203,7,205,206,207,208,222,223,231,272,274,275,276,277,278,287,289,290,299,300,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[58,59,61,63,64,310,0,78,89,91,98],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[30],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[319,320,321,322,323,324],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[167,168,169,170,179,185,325,233,326,327,328,329,293,294,295,296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[61,310,0,78],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[20,48,49,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,45,46,47,20,48,59,61,63,64,0,78,81,82,83,89,90,95,96,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,137,139,140,144,147,316,151,317,159,160,161,166,171,172,173,174,175,176,177,178,179,184,189,3,190,191,192,193,194,4,195,196,197,198,199,5,200,201,202,6,203,7,211,212,213,214,215,216,217,218,219,220,221,222,223,231,232,233,234,235,8,236,238,239,240,241,242,243,244,9,245,246,247,248,249,10,250,251,252,253,254,11,255,256,257,12,258,13,331,259,260,261,262,263,264,265,266,267,268,269,270,271,332,333,334,274,275,276,277,278,14,284,285,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[34,47,81,336,84,332,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[62],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[31,32,40,41,44,49,339,340,341,50,342,343,344,345,346,347,348,349,143,144,146,147,148,350,149,351,150,316,151,317,352,353,152,153,154,155,157,158,167,168,169,319,320,321,322,354,323,324,355,356,357,186,187,188,358,359,209,360,361,362,363,364,365,318,210,211,30,224,366,367,272,368],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[369,370,371,372,373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[58,59,60,61,62,63,64,65,310,66,0,75,78,79,89,90,91,92,98,99],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[89,90,91,92,1,93,94,95,96,97,98,99,2,100,376],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":114,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":312,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":318,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests.UsageExpectAndThrowTest.object":252,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":18,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":23,"org.easymock.tests2.DelegateToTest.testWrongClass":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageTest.wrongArguments":112,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":182,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":253,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":341,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.UsageTest.moreThanOneArgument":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":13,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":301,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":263,"org.easymock.tests.UsageVarargTest.varargByteAccepted":219,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":347,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":234,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.LimitationsTest.mockNativeMethod":272,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests2.AnswerTest.answer":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":88,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":150,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":165,"org.easymock.tests2.MockedExceptionTest.testMockedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.DelegateToTest.testDelegate":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":86,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.tests.UsageThrowableTest.throwError":264,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":227,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests2.MockBuilderTest.testCreateMockString":142,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":303,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":9,"org.easymock.tests2.UsageTest.niceToStrict":113,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.UsageTest.defaultResetToNice":117,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":251,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":334,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":183,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":335,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests2.EasyMockSupportClassTest.testAll":50,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.MockingTest.testStrictClassMocking":355,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":302,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.NameTest.nameForNiceMock":164,"org.easymock.tests.UsageVarargTest.allKinds":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":348,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":218,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":339,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests2.SerializationTest.test":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":3,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":16,"org.easymock.tests2.CaptureTest.testCapture2_2446744":2,"org.easymock.tests2.UsageTest.moreThanOneArgument":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":220,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests2.NameTest.nameForMock":162,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":208,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.MockedExceptionTest.testRealException":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":230,"org.easymock.tests.MockingTest.testNiceClassMocking":358,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.NameTest.nameForStrictMock":163,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":169,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":55,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":315,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":24,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":17,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":29,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":333,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":135,"org.easymock.tests.UsageVarargTest.varargCharAccepted":215,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests.DefaultClassInstantiatorTest.object":319,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests.UsageTest.unexpectedCallWithArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.CapturesMatcherTest.test":376,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
