[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[68,69],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,60,61,70,71,72,73,74,75,62,76,77,78,79,80,81,63,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,4,134,135,136,137,138,139,140,141,7,8,9,10,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,12,13,14,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,64,210,211,212,213,15,214,65,215,216,217,218,219,16,17,18,19,19,20,20,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,22,247,23,24,25,26,27,28,29,30,31,248,249,250,251,252,253,254,255,256,257,258,259,260,33,261,262,263,264,265,266,34,35,36,37,267,268,269,270,271,272,67,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,38,317,39,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,40,41,42,43,333,44,45,46,47,49,50,51,52,53,54,55,334,335,56,336,337,338,339,340],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[156,276],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[331,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[198],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,60,61,70,71,72,73,74,75,62,76,77,78,79,80,81,63,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,4,134,136,137,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,12,13,14,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,201,202,203,205,206,207,208,209,64,210,211,212,213,15,346,346,214,65,215,216,217,218,219,16,17,18,19,20,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,22,247,23,24,25,26,27,28,29,30,31,248,249,254,255,256,257,258,259,260,33,261,262,263,264,266,34,35,36,37,267,268,269,270,271,272,67,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,38,317,39,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,40,41,42,43,333,44,45,46,47,49,50,51,52,53,54,55,334,335,56,336,337,338,339,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,147,150,154,155,157,158,159,160,161,162,163,164,169,203,249,318,325,334,335,56,336],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[347,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[0,60,61,70,71,72,73,74,75,62,76,77,78,79,80,81,63,82,83,84,85,87,89,90,91,92,93,342,348,97,98,99,100,102,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,4,349,134,136,137,350,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,172,178,179,180,181,182,184,185,186,187,188,201,202,203,206,207,208,209,64,210,211,212,213,15,214,65,215,216,217,218,219,17,18,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,22,247,23,24,25,27,248,249,255,256,257,258,259,260,266,34,267,268,269,270,271,272,67,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,68,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,39,318,319,320,322,323,324,325,327,329,330,331,332,40,43,333,334,335,56,336,337,338,339,340],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[88,89,109,110,111,112,113,156,157,162,188,206,214,65,215,216,217,218,219,233,234,235,236,237,238,239,240,241,242,243,244,245,246,27,256,265,267,268,269,270,271,272,67,273,274,275,351,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,68,331,332],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[352],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[19,20,353,354,57,355],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,1,2,3,4,5,7,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,33,356,357,358,359,34,35,36,37,38,39,40,41,42,43,44,45,46,360,47,48,49,50,51,52,53,54,361,55,56],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[362,38,317,39],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[110,111,112,188,233,234,235,240,241,243,246,269,270,272,273,274,290],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[363],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[364,347,365,88,89,91,92,165,167,170,171,206,211,212,213,250,251,252,253,256,258,259,320,321,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[346,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":270,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":345,"org.easymock.tests2.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.tests2.StubTest.stubWithReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":289,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":76,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":292,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":344,"org.easymock.tests.MockingTest.testPartialClassMocking":12,"org.easymock.samples.SupportTest.voteForRemovals":223,"org.easymock.tests.MockClassControlTest.testToString":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":126,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":362,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":364,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests2.UsageTest.wrongArguments":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests.UsageStrictMockTest.range":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":225,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests2.UsageConstraintsTest.testNull":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":144,"org.easymock.tests2.CaptureTest.testPrimitive":236,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":133,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":209,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":298,"org.easymock.tests.UsageTest.argumentsOrdered":171,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":100,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.UsageExpectAndThrowTest.longType":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":195,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.ReplayStateInvalidUsageTest.times":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":0,"org.easymock.tests2.AnswerTest.answer":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":358,"org.easymock.tests2.CaptureTest.testAnd":233,"org.easymock.tests2.UsageTest.strictResetToDefault":319,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":28,"org.easymock.tests2.NameTest.nameForMocksControl":253,"org.easymock.tests2.MockedExceptionTest.testMockedException":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.DelegateToTest.testDelegate":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":341,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":118,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CaptureTest.testCaptureLast":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":108,"org.easymock.tests.MockingTest.testTwoMocks":11,"org.easymock.tests2.CaptureTest.testCapture1_2446744":237,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":230,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":300,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":116,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":338,"org.easymock.tests.UsageVerifyTest.twoThrows":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests2.UsageTest.niceToStrict":322,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":155,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":63,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":123,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":98,"org.easymock.tests.UsageOverloadedMethodTest.overloading":146,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":279,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.MockClassControlTest.testEquals":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":263,"org.easymock.tests2.CaptureTest.testCaptureAll":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":189,"org.easymock.tests.ObjectMethodsTest.testHashCode":139,"org.easymock.samples.ExampleTest.voteForRemovals":229,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":302,"org.easymock.tests2.NameTest.nameForNiceMock":252,"org.easymock.tests.UsageVarargTest.allKinds":188,"org.easymock.tests2.DependencyTest.testInterfaceMocking":296,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":107,"org.easymock.samples.ExampleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testStubDelegate":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":154,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests2.AnswerTest.stubAnswer":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.samples.ExampleTest.voteForRemoval":226,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":84,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests.UsageThrowableTest.noUpperLimit":149,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":268,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.SerializationTest.test":317,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":58,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.samples.SupportTest.addDocument":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":307,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests2.UsageTest.moreThanOneArgument":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":301,"org.easymock.tests2.CaptureTest.testCapture2_2446744":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests2.NameTest.nameForMock":250,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":102,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":104,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":355,"org.easymock.tests2.UsageStrictMockTest.differentMethods":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageCallCountTest.tooManyCalls":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":128,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":97,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":360,"org.easymock.tests2.UsageConstraintsTest.testContains":278,"org.easymock.tests2.NameTest.nameForStrictMock":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":271,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests.UsageExpectAndReturnTest.object":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":258,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":312,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":140,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":305,"org.easymock.tests2.CaptureTest.testCaptureRightOne":243,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests2.UsageConstraintsTest.testOr":273,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests.UsageTest.wrongArguments":167,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests.MockClassControlTest.testHashCode":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":7,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":101,"org.easymock.tests2.UsageConstraintsTest.cmpTo":277,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":265,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests2.CompareToTest.testLessThan":69,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":315,"org.easymock.tests.DefaultClassInstantiatorTest.object":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":190,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":166,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":121,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":99,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":81,"org.easymock.tests2.CaptureTest.testCapture":366,"org.easymock.tests2.UsageConstraintsTest.constraints":269,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":120,"org.easymock.tests.CapturesMatcherTest.test":346,"org.easymock.tests.UsageStrictMockTest.testVerify":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":83,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":105,"org.easymock.tests2.UsageTest.resumeIfFailure":329,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":310,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179}}]
