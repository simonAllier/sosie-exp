[{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"o"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,20,16,21,22,23,24,25,26,18,27,28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[34,19,35,36,37,24,38,39,40,41,42,43,29,44,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[49,50,51],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:50","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[52,32,53,54,33,55],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1013","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,30,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[19,20,16,21,23,24,25,26,18,27,28,29,30,31],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[45,46,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[19,24,41,43,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[63,125,97,98,99,100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[126,1,3,4,5,6,7,8,10,127,11,12,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[128,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[131,132,133,134,135,136,137,138,130,139,140,141,142,143],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[144,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[90,92],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[145,146,23,25,147,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,20,16,21,22,23,24,25,26,18,27,28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[149,149,150,150,151,45,152,153,154,155,156,157,158,159,160,161,162,46,163,164,165,166,167,168,49,169,170,171,172,173,174,60,175,176,177,34,178,19,35,179,180,181,182,183,1,2,3,4,5,6,7,8,9,10,11,12,13,14,47,184,61,185,36,20,56,186,187,62,128,16,21,188,189,190,191,131,192,193,194,195,129,196,132,197,198,199,200,201,202,203,133,144,204,205,120,206,207,208,121,209,210,211,212,213,214,215,216,217,48,218,219,220,221,222,223,63,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,134,244,135,51,245,136,246,247,137,248,138,130,139,140,249,141,250,251,252,253,254,255,256,257,258,259,64,260,261,22,262,263,264,265,266,267,23,37,268,24,38,269,270,271,272,65,66,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,39,26,291,88,18,27,292,293,142,294,295,296,297,298,299,300,89,301,302,303,304,305,306,307,308,309,310,311,312,313,314,29,44,30,31,90,315,91,92,93,94,95,96,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,97,98,99,100,101,102,331,332,333,334,335,336,337,143,103,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[49,50,51],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":100,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":347,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":141,"org.easymock.tests2.SerializationTest.testAllMockedMethod":217,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":98,"org.easymock.tests.MockingTest.testPartialClassMocking":263,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":146,"org.easymock.samples.SupportTest.voteForRemovals":162,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":210,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":139,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":149,"org.easymock.samples.ExampleTest.answerVsDelegate":155,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":204,"org.easymock.tests2.UsageConstraintsTest.testNull":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":309,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":281,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":58,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":325,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":99,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.SerializationTest.testClass":215,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":331,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":357,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":329,"org.easymock.tests2.AnswerTest.answer":209,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":244,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":106,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":169,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":183,"org.easymock.tests2.MockedExceptionTest.testMockedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":193,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CompareToTest.testCompareEqual":50,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":243,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":140,"org.easymock.tests.MockingTest.testTwoMocks":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":111,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.PartialClassMockTest.testGetArea":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.samples.ExampleTest.voteAgainstRemoval":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests2.UsageTest.niceToStrict":56,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":173,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":353,"org.easymock.tests.UsageVarargTest.differentLength":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":105,"org.easymock.tests2.CallbackTest.callback":222,"org.easymock.tests2.UsageConstraintsTest.equals":17,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":349,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":148,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.samples.ExampleTest.voteForRemovals":159,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.NameTest.nameForNiceMock":182,"org.easymock.tests.UsageVarargTest.allKinds":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":44,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.samples.ExampleTest.addDocument":158,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":55,"org.easymock.samples.ExampleTest.voteForRemoval":156,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":144,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":315,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":326,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":339,"org.easymock.tests2.UsageConstraintsTest.testSame":241,"org.easymock.samples.SupportTest.addDocument":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":97,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":192,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":345,"org.easymock.tests.GenericTest.testPackageScope":327,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":0,"org.easymock.tests2.NameTest.nameForMock":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":278,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.NameTest.nameForStrictMock":181,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":239,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":41,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests.ErrorMessageTest.testGetters":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":305,"org.easymock.tests.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests2.UsageConstraintsTest.testOr":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":119,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":354,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":351,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageConstraintsTest.cmpTo":51,"org.easymock.tests.UsageVarargTest.varargCharAccepted":304,"org.easymock.tests2.CaptureTest.testCaptureMultiple":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":211,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.DefaultClassInstantiatorTest.object":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":312,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":280,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":352,"org.easymock.tests2.CaptureTest.testCapture":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":160,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":355,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":324,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":57}}]
