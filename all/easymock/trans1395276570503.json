[{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.RecordState:153","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[56,57,58,59,60,61,13,62,14,63,15,16,64,65,17,18,19,66,67,68,69,20,70,71,72,73,74,21,22,75,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,29,100,101,102,103,104,105,30,106,107,108,109,110,111,112,113,114,115,116,31,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,32,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,1,2,3,4,162,163,164,33,165,166,167,34,35,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,36,37,210,211,212,213,38,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,39,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,40,41,263,42,43,44,45,46,264,265,266,267,268,269,270,271,272,273,47,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,48,293,294,295,296,5,297,298,6,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,49,405,406,407,408,409,50,410,411,412,413,51,52,414,415,416,417,418,419,420,421,422,423,53,424,425,426,427,7,8,9,10,11,12,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,54,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[489],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[97,490,100,491,492,113,248,249],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[358],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[287],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:243","failures":[88,92,94,96,29,105,30,106,107,108,109,112,116,31,117,127,131,158,159,162,166,34,35,172,175,185,191,237,238,239,240,242,243,244,251,254,255,257,258,260,264,265,266,267,268,270,272,273,288,290,48,293,294,295,297,352,353,373,376,377,412,51,52,441,442,443,444,445,446,449,450,452,453,454,456,457,458,459,460,466,467,468,469,475,476,478],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[87,90,92,95,97,98,99,100,101,102,113,31,119,162,163,164,175,185,248,248,249,249,251,287,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[102,103,104,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[34,209,213,38,494,49,411,51,419,420,423,53,54,465,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[495,496,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[498,499,500,501,411,419],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,499,500,501,411,419],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[57,58,59,60,61,13,62,14,63,15,16,64,65,17,18,19,66,67,68,69,20,71,72,73,74,21,22,75,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,88,92,93,94,96,99,29,101,102,103,104,105,30,106,107,108,109,110,112,115,116,31,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,32,145,146,147,155,158,159,160,161,1,2,3,4,162,33,165,166,167,34,35,168,172,175,185,191,199,206,207,208,209,36,37,210,211,212,213,38,214,215,216,217,218,219,220,221,227,234,236,39,237,238,239,240,242,243,244,246,247,248,248,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,40,41,263,42,43,44,45,46,264,265,266,267,268,270,272,273,47,274,275,276,277,279,280,281,282,283,284,285,286,288,289,290,48,293,294,295,296,5,297,298,6,299,300,302,303,304,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,373,375,376,377,394,400,402,403,404,49,405,406,407,408,409,50,410,411,412,413,51,52,414,415,416,417,418,419,420,421,422,423,53,424,425,426,427,7,8,9,10,11,12,428,429,430,431,433,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,54,465,466,467,468,469,470,474,475,476,478,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[161,206,211,40,263,42,43,44,45,46,274,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,402,403,404,417,422,11,54,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[352,443,445,459,460,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[366,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[69,20,72,74,21,75,25,83,135,137,32],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[61,13,62,14,63,15,16,64,65,17,18,19,66,67,68,69,20,71,72,73,74,21,22,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,88,92,93,94,96,99,29,101,102,103,104,105,30,106,107,108,109,110,112,115,116,31,117,120,121,122,123,124,125,126,127,128,130,131,132,134,135,136,137,138,139,140,141,142,143,144,32,145,146,147,158,159,160,161,1,2,3,4,162,33,165,166,167,34,35,168,172,175,185,191,199,206,207,208,209,36,37,210,211,212,213,38,214,215,216,219,220,221,227,234,236,39,237,238,239,240,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,40,41,263,42,43,44,45,46,264,265,266,267,268,504,504,273,47,274,275,276,277,279,280,281,282,283,284,285,286,288,289,48,294,295,296,5,297,298,6,299,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,337,338,339,340,341,342,343,352,353,373,49,405,406,407,408,409,50,410,411,412,413,51,52,414,416,417,418,419,420,421,422,423,53,424,7,8,9,10,11,12,428,429,430,431,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,464,54,465,466,467,468,469,470,475,476,478,482,484,485,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,13,62,14,63,15,16,64,65,17,18,19,66,67,68,69,20,71,72,73,74,21,22,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,88,92,93,94,96,99,29,101,102,103,104,105,30,106,107,108,109,110,112,115,116,31,117,120,121,122,123,124,125,126,127,128,130,131,132,134,135,136,137,138,139,140,141,142,143,144,32,145,146,147,158,159,160,161,1,2,3,4,162,33,165,166,167,34,35,168,172,175,185,191,199,206,207,208,209,36,37,210,211,212,213,38,214,215,216,219,220,221,227,234,236,39,237,238,239,240,242,243,244,246,247,248,248,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,40,41,263,42,43,44,45,46,264,265,266,267,268,273,47,274,275,276,277,279,280,281,282,283,284,285,286,288,289,48,293,294,295,296,5,297,298,6,299,300,302,303,304,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,352,353,359,360,361,362,363,364,365,366,367,368,369,370,373,49,405,406,407,408,409,50,410,411,412,413,51,52,414,415,416,417,418,419,420,421,422,423,53,424,7,8,9,10,11,12,428,429,430,431,433,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,464,54,465,466,467,468,469,470,475,476,478,482,484,485,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,13,62,14,63,15,16,64,65,17,18,19,66,67,68,69,20,71,72,73,74,21,22,75,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,88,92,94,96,29,102,103,104,105,30,106,107,108,109,112,115,116,31,117,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,32,145,146,147,158,159,160,161,1,2,3,4,162,33,165,166,167,34,35,168,172,175,185,191,199,206,207,208,209,36,37,210,211,212,213,38,214,215,216,217,218,219,220,221,227,234,236,39,237,238,239,240,242,243,244,246,247,248,248,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,40,41,263,42,43,44,45,46,264,265,266,267,268,270,272,273,47,274,275,276,277,279,280,281,282,283,284,285,286,288,289,290,48,293,294,295,296,5,297,298,6,299,300,302,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,335,337,338,339,340,342,343,352,353,354,355,356,357,358,373,375,376,377,394,400,402,403,404,49,405,50,410,411,412,413,51,52,414,415,416,417,418,420,421,422,423,53,424,425,426,427,7,8,9,10,11,12,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,54,465,466,467,468,469,470,474,475,476,478,482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0,108,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,13,14,15,16,65,17,69,0,86,88,89,94,96,99,29,101,30,115,117,119,33,166,167,34,35,168,199,200,206,208,209,36,37,213,38,214,215,227,228,39,238,239,243,244,281,48,302,305,306,329,330,331,335,337,338,341,342,343,344,347,348,349,350,351,49,50,411,412,413,51,52,414,417,418,419,420,423,53,424,461,462,464,54,465,471,483,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[67,68,69,20,71,72,73,74,21,22,75,23,76,77,24,78,79,0,80,81,25,26,27,82,28,83,84,85,86,112,115,127,129,135,136,137,138,139,140,141,142,143,144,32,145,146,147,155,160,166,167,234,236,39,264,265,266,267,268,286,296,5,297,298,6,299,300,352,353,49,405,411,412,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[69,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[69,20,74,21,75,25,135,137,32],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[161,1,2,3,4,5,6,385,425,426,427,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":417,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":250,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":56,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":307,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests2.UsageTest.wrongArguments":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":430,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":72,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":17,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":300,"org.easymock.tests.UsageTest.moreThanOneArgument":418,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":326,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":468,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":492,"org.easymock.tests2.DependencyTest.testClassMocking":156,"org.easymock.tests2.AnswerTest.answer":216,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":346,"org.easymock.tests2.UsageTest.strictResetToDefault":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":322,"org.easymock.tests.LimitationsTest.mockFinalMethod":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":409,"org.easymock.tests2.DependencyTest.testClassMockingSupport":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":470,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":193,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":180,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":316,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":15,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":428,"org.easymock.tests.UsageOverloadedMethodTest.overloading":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":452,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":172,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":407,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":408,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":439,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":440,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":147,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":14,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":448,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":405,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":325,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.UsageCallCountTest.tooManyCalls":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":238,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":71,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":236,"org.easymock.tests.UsageExpectAndReturnTest.object":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":65,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":304,"org.easymock.tests.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":269,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":457,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":182,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":432,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":496,"org.easymock.tests.DefaultClassInstantiatorTest.object":433,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":402,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":302,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":313,"org.easymock.tests.CapturesMatcherTest.test":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.StubTest.stubWithReturnValue":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":28,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":319,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":400,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":217,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":271,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":26,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":352,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":353,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":153,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":377,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":186,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":340,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":305,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests2.StubTest.stub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.UsageExpectAndThrowTest.longType":310,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests.LimitationsTest.mockNativeMethod":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":460,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":196,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":55,"org.easymock.tests2.NameTest.nameForMocksControl":60,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":422,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":478,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":244,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":27,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":315,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":84,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":435,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":176,"org.easymock.tests.UsageExpectAndThrowTest.floatType":309,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":171,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":164,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":185,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":375,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.LimitationsTest.privateConstructor":372,"org.easymock.tests2.UsageConstraintsTest.testNotNull":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":195,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":113,"org.easymock.tests.UsageTest.openCallCountByLastCall":421,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":6,"org.easymock.tests.UsageCallCountTest.tooFewCalls":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":431,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":221,"org.easymock.tests.ObjectMethodsTest.testHashCode":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":187,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.AnswerTest.stubAnswer":220,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":412,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":162,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":249,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":41,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":68,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":442,"org.easymock.tests2.UsageConstraintsTest.testSame":73,"org.easymock.samples.SupportTest.addDocument":253,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":241,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":177,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":100,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":321,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":391,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":58,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":436,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":181,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.UsageConstraintsTest.testOr":74,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":420,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":178,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":438,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CaptureTest.testCaptureFromStub":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":89,"org.easymock.tests.UsageTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":339,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":455,"org.easymock.tests2.CaptureTest.testCapture":502,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":415,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":252,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":447,"org.easymock.tests.LimitationsTest.abstractClass":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":16,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
