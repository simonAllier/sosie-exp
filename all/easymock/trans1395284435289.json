[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[6],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[34,35,36,37,38],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,51,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[17,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,21,23,25,26,28,50,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,33,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[34,35,17,131,132,133,53,134,54,55,135,56,136,137,138,57,139,58,59,60,61,62,63,18,140,64,36,141,142,65,66,67,143,144,145,146,147,41,148,149,68,150,69,70,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,7,8,172,173,174,175,9,10,176,177,11,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,19,21,22,208,23,24,25,26,209,44,27,28,30,210,211,212,213,214,215,50,51,71,72,73,74,216,75,76,77,217,218,219,220,221,222,223,224,225,226,227,228,229,230,0,1,2,231,12,13,232,233,234,235,14,15,236,237,16,238,239,240,78,241,242,79,243,244,245,246,247,248,249,250,251,80,252,253,254,255,256,81,257,258,259,260,261,262,263,82,264,265,266,267,268,269,270,83,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,84,85,303,304,305,306,307,308,42,309,310,311,312,313,314,86,87,315,88,316,317,318,319,320,321,89,322,90,91,323,324,92,325,39,326,327,93,94,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,31,391,392,393,394,32,395,396,95,397,398,399,400,401,402,403,404,405,406,407,408,96,97,98,99,409,410,411,412,413,414,415,40,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,100,432,433,434,435,436,437,438,439,440,441,442,443,4,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,101,102,103,104,496,105,106,107,108,109,497,498,110,499,33,500,501,111,502,503,504,505,506,507,508,509,510,112,511,512,113,114,513,514,515,516,517,115,116,117,118,119,120,518,519,121,122,520,123,124,125,521,126,127,128,129,130],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[69,185,191,192,311,321,90,384,385,388,389,522,484,486,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[36,66,144,23,209,44,27,30,50,51,0,498,33],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[523],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[34,34,35,35,17,132,133,58,59,61,62,63,18,64,36,141,142,65,66,67,143,144,145,146,147,19,21,22,208,23,24,25,26,44,27,28,30,50,51,71,72,73,74,76,77,218,219,220,221,0,2,238,239,240,78,241,242,79,243,244,245,246,247,248,249,250,251,80,252,253,254,255,256,81,257,258,301,302,312,313,314,86,87,88,318,31,32,401,402,403,404,405,406,407,408,440,441,442,443,4,444,445,497,498,110,499,33,500,509,510,112,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[69,185,191,192,311,321,90,384,385,388,389,522,484,486,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[62,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[37,524,43,525,38,51,73,77,217,526,527],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[131,132,133,53,134,54,55,135,56,137,138,57,139,58,59,60,61,62,63,64,67,145,146,147,41,148,149,68,150,69,70,151,157,158,159,160,161,162,163,164,165,166,167,168,169,170,174,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,71,74,75,224,227,228,229,1,2,234,78,259,260,261,263,82,264,266,267,269,270,83,271,272,273,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,84,85,303,305,306,308,42,319,320,321,89,322,90,91,323,324,92,325,39,326,327,93,94,342,343,344,345,347,348,350,351,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,407,408,96,98,99,100,432,433,434,437,447,448,449,451,452,453,454,455,456,457,458,484,485,486,487,488,489,490,491,492,493,494,495,101,102,103,104,496,105,106,107,108,109,497,110,499,500,503,504,505,506,507,508,112,516,517,115,116,117,118,119,120,518,519,121,122,520,123,124,125,521,126,127,128,129,130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[110,33,500],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[44,0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[18,144,145,19,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[34,35,17,25,26,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[34,35,17,36,66,144,23,209,44,27,30,50,51,0,79,80,498,33],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[528,282,288,300],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[224,263,264,306,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[110,499,33,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[145,146,147,41,182,189,261,39,326,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,387,433,486,488,490,491,492,493,494,495,503,504,505,506,507,508,517],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[157,158,159,160,167,168,274,275,277,278,279,280,281,282,283,284,293,294,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":275,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":382,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":131,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":504,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":403,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":152,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":246,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":85,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":282,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":399,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":32,"org.easymock.tests2.UsageConstraintsTest.testNull":278,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":381,"org.easymock.tests.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":103,"org.easymock.tests.UsageTest.argumentsOrdered":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":109,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":464,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests.ReplayStateInvalidUsageTest.times":336,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":181,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":377,"org.easymock.tests.LimitationsTest.mockFinalMethod":511,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":179,"org.easymock.tests.UsageThrowableTest.throwError":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":330,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":467,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.MockingTest.testInterfaceMocking":315,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":113,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":371,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":483,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":397,"org.easymock.tests.UsageOverloadedMethodTest.overloading":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":256,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":287,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":450,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":180,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":328,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests.UsageVarargTest.allKinds":458,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":494,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":49,"org.easymock.tests2.UsageConstraintsTest.greaterThan":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":97,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":468,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":445,"org.easymock.samples.ExampleTest.voteForRemoval":54,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":143,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":460,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":497,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":503,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":519,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":457,"org.easymock.tests.GenericTest.testBridgedEquals":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":380,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":514,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":101,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests.MockingTest.testNiceClassMocking":318,"org.easymock.tests.MockingTest.testClassMocking":313,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":20,"org.easymock.tests2.UsageConstraintsTest.testContains":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":433,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":305,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":520,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":46,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":501,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":308,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests2.EasyMockSupportTest.testVerify":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":249,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":230,"org.easymock.tests.UsageVarargTest.varargCharAccepted":451,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests.DefaultClassInstantiatorTest.object":440,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":481,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":172,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":231,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":466,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":368,"org.easymock.tests.CapturesMatcherTest.test":523,"org.easymock.tests.ReplayStateInvalidCallsTest.times":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":513,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":473,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":506,"org.easymock.tests2.StubTest.stubWithReturnValue":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":297,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":424,"org.easymock.samples.SupportTest.voteForRemovals":57,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":374,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":430,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":225,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":502,"org.easymock.tests.UsageExpectAndThrowTest.object":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":294,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":470,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.tests.UsageStrictMockTest.range":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":222,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":373,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":238,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":398,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":462,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":114,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":211,"org.easymock.tests.UsageUnorderedTest.message":484,"org.easymock.tests.UsageVerifyTest.twoReturns":487,"org.easymock.tests.UsageVarargTest.varargByteAccepted":456,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":252,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":132,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":326,"org.easymock.tests2.UsageConstraintsTest.any":284,"org.easymock.tests2.StubTest.stub":260,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":515,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndThrowTest.longType":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":4,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":334,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":8,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":156,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":242,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":295,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":370,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":299,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":215,"org.easymock.samples.ExampleTest.removeNonExistingDocument":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":91,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":442,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":214,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":243,"org.easymock.tests.UsageExpectAndThrowTest.floatType":364,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":486,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":510,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":527,"org.easymock.tests2.UsageConstraintsTest.testNotNull":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":495,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":453,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":7,"org.easymock.tests2.CallbackTest.callback":259,"org.easymock.tests2.UsageConstraintsTest.equals":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":400,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":213,"org.easymock.tests.UsageThrowableTest.throwCheckedException":492,"org.easymock.tests.MockingTest.testStrictClassMocking":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":517,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":75,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests2.CompareToTest.testGreateOrEqual":528,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":52,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":476,"org.easymock.tests2.NameTest.nameForNiceMock":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":471,"org.easymock.tests2.DependencyTest.testInterfaceMocking":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":47,"org.easymock.samples.ExampleTest.addDocument":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":253,"org.easymock.tests2.DelegateToTest.testStubDelegate":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":209,"org.easymock.tests.UsageVarargTest.varargLongAccepted":455,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":292,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":218,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.tests2.UsageConstraintsTest.testSame":279,"org.easymock.samples.SupportTest.addDocument":138,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":216,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":461,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":244,"org.easymock.tests.GenericTest.testPackageScope":110,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":316,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":459,"org.easymock.tests2.NameTest.nameForMock":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":376,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests2.MockedExceptionTest.testRealException":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":421,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":339,"org.easymock.tests2.NameTest.nameForStrictMock":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":221,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":443,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":465,"org.easymock.tests2.UsageConstraintsTest.lessThan":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":248,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":210,"org.easymock.tests2.UsageConstraintsTest.testOr":280,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.UsageTest.wrongArguments":385,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":245,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.UsageVarargTest.varargShortAccepted":454,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":479,"org.easymock.tests2.UsageConstraintsTest.cmpTo":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":226,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":329,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":384,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":475,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":525,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":521,"org.easymock.tests2.UsageConstraintsTest.constraints":274,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":137,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":139,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":518,"org.easymock.tests.LimitationsTest.abstractClass":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201}}]
