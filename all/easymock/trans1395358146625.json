[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[10,64,11,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[72,73,74],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[80,81,82,36,37],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[84,85,86,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[90,91,92,93,94,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[6,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,1,3,5,6,8,107,108,109,110,111,112,113,114,115,116,117,118,119,10,64,11,12,13,120,14,15,16,18,20,21,22,24,121,122,123,124,125,126,127,128,129,130,131,132,133,134,84,135,136,137,138,139,140,85,141,142,143,66,144,145,146,147,148,149,75,150,151,152,153,154,155,156,157,158,159,160,161,162,77,163,164,165,78,166,167,168,169,25,26,27,28,170,171,172,173,174,175,176,177,178,179,180,181,90,91,92,182,93,183,184,185,95,186,29,30,31,32,187,33,34,188,189,35,190,67,191,192,193,194,195,36,36,37,37,196,38,197,198,199,200,201,202,203,204,205,206,39,40,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,48,49,50,51,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,86,259,260,261,262,263,53,54,55,56,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,87,298,299,300,88,301,302,303,304,305,69,70,71,306,307,308,63,309,57,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,89,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[79,49,50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[188,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[79],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"return java.lang.Class<?>.isPrimitive() ? org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>) : null","type":"CtReturnImpl"},"failures":[105,106,0,1,3,4,5,6,8,107,108,109,110,111,112,113,114,115,116,117,118,12,120,14,16,17,19,24,121,122,123,124,125,126,127,84,135,138,140,85,141,66,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,77,163,164,165,166,167,25,26,27,28,172,173,174,175,176,177,178,180,181,92,182,93,183,184,185,95,344,345,346,347,186,29,30,31,32,187,33,34,188,189,35,190,191,36,36,37,37,38,199,200,202,203,205,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,49,51,234,235,236,237,238,239,240,241,245,246,252,253,254,255,256,257,86,259,260,261,262,263,53,54,55,56,264,265,348,349,275,276,277,278,279,283,284,290,291,292,293,294,296,297,87,300,88,303,309,57,315,316,319,320,321,322,323,324,350,351,352,353,354,355,356,357,358,325,326,327,328,89,329,330,331,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":232,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":79,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":237,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":233,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":101,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":163,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":306,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":352,"org.easymock.samples.ExampleTest.answerVsDelegate":201,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":5,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests.UsageTest.moreThanOneArgument":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":297,"org.easymock.tests2.CaptureTest.testCaptureNone":182,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":73,"org.easymock.tests.UsageUnorderedTest.message":304,"org.easymock.tests.UsageVerifyTest.twoReturns":329,"org.easymock.tests.UsageVarargTest.varargByteAccepted":341,"org.easymock.tests2.ThreadingTest.testThreadSafe":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":310,"org.easymock.tests.UsageTest.argumentsOrdered":302,"org.easymock.tests.UsageVarargTest.varargIntAccepted":335,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":4,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests2.StubTest.stub":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":97,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":347,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.NameTest.nameForMocksControl":195,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":314,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":241,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":6,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":252,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":16,"org.easymock.tests2.CompareToTest.testCompareEqual":359,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":265,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":164,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":264,"org.easymock.tests2.CaptureTest.testCapture1_2446744":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":245,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":166,"org.easymock.tests.UsageThrowableTest.throwError":257,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":74,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":9,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":103,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.samples.ExampleTest.voteAgainstRemoval":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":238,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":58,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":7,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests.UsageVarargTest.differentLength":338,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":82,"org.easymock.tests.UsageTest.openCallCountByLastCall":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":326,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":32,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":353,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests2.EasyMockSupportClassTest.testAll":25,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":346,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.testMatches":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.samples.ExampleTest.voteForRemovals":205,"org.easymock.tests2.NameTest.nameForNiceMock":194,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests.UsageVarargTest.allKinds":343,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.samples.ExampleTest.addDocument":204,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests2.AnswerTest.stubAnswer":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":69,"org.easymock.tests.UsageVarargTest.varargLongAccepted":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.samples.ExampleTest.voteForRemoval":202,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":342,"org.easymock.tests.GenericTest.testBridgedEquals":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":212,"org.easymock.tests2.NameTest.nameForMock":192,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.MockedExceptionTest.testRealException":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests2.NameTest.nameForStrictMock":193,"org.easymock.tests2.UsageConstraintsTest.testContains":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":15,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":183,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":72,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests2.MockBuilderTest.testWithConstructor":80,"org.easymock.tests.MockClassControlTest.testHashCode":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":96,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.UsageVarargTest.varargShortAccepted":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":344,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":336,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":62,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":184,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":2,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.CaptureTest.testCapture":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.samples.ExampleTest.addAndChangeDocument":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.UsageStrictMockTest.testVerify":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":321,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":197,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
