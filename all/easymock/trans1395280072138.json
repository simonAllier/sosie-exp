[{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[43,44,45],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[53,54,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[46,59,47,48,49,60,50,61,51,62],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[63,64,65,66,55,67,56,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[46,47,48,49,75,76,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[88,89,90,91,92],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[93,94,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[96,97,0,98,99,100],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[77,78,101,102,103,104,79,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[43],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[53,54,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[107],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[52],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,96,43,131,132,133,134,135,136,137,138,97,0,1,2,3,139,140,141,142,63,143,144,145,146,147,148,149,77,150,78,151,101,102,103,152,153,104,79,105,106,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,64,173,174,175,5,176,65,66,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,98,192,193,194,195,196,197,99,198,46,199,200,59,201,202,203,204,61,51,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,62,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,100,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,6,269,270,271,272,273,274,275,276,277,278,279,280,281,80,81,282,283,82,284,83,84,285,85,286,287,288,289,290,291,292,293,294,86,295,296,297,298,87,299,300,301,302,303,304,305,306,307,308,309,310,7,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,55,326,327,67,328,329,330,331,332,8,9,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,370,56,68,371,31,69,70,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,32,424,425,426,427,428,429,430,431,88,89,90,432,91,433,92,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,72,451,73,74,452,453,33,454,455,456,34,35,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,36,37,38,39,40,41,476,477,478,479,480,481,482,483,484,485,486,42,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[77,78,79,80,81,82,83,84,85,86,87],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[133,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,96,43,131,132,133,134,135,136,137,138,97,0,1,2,3,139,140,141,142,63,143,144,145,146,147,148,149,77,150,78,151,101,102,103,152,153,104,79,105,106,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,64,173,174,175,5,176,65,66,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,98,192,193,194,195,196,197,99,198,46,199,200,59,201,202,203,204,61,51,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,62,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,100,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,6,269,270,271,272,273,274,275,276,277,278,279,280,281,80,81,282,283,82,284,83,84,285,85,286,287,288,289,290,291,292,293,294,86,295,296,297,298,87,299,300,301,302,303,304,305,306,307,308,309,310,7,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,55,326,327,67,328,329,330,331,332,8,9,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,370,56,68,371,31,69,70,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,32,424,425,426,427,428,429,430,431,88,89,90,432,91,433,92,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,72,451,73,74,452,453,33,454,455,456,34,35,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,36,37,38,39,40,41,476,477,478,479,480,481,482,483,484,485,486,42,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[197,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[364],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[108,108,109,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,96,131,132,133,134,135,136,137,138,97,0,1,2,3,139,140,141,142,63,143,144,146,147,148,149,77,150,78,151,101,102,103,152,153,104,79,105,106,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,4,171,172,64,173,174,175,5,176,65,66,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,98,193,194,196,197,99,198,199,59,201,202,204,61,51,206,207,208,209,211,212,213,215,219,220,221,222,223,224,225,226,227,228,62,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,100,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,6,269,270,271,272,273,274,275,276,277,278,279,280,281,80,81,282,283,82,284,83,84,285,85,286,287,288,289,290,291,292,293,294,86,295,296,297,298,87,299,300,303,304,305,306,307,308,309,310,7,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,55,326,327,67,328,329,330,331,332,8,9,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,370,56,68,371,31,69,70,372,373,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,32,424,425,426,427,428,429,431,88,89,90,432,91,92,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,72,451,73,74,452,453,33,454,455,456,34,35,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,36,37,38,39,40,41,476,477,478,479,480,481,482,483,484,485,486,42,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[63,64,65,66,313,55,67,56,68,69,70,71,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[309,311,362,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[468,469,470,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[138,277,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[509,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[93,94,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[159,162,164,165,235,238,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":408,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":174,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests.MockClassControlTest.testToString":388,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":145,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":285,"org.easymock.tests2.UsageTest.wrongArguments":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":331,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":378,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":128,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":151,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":29,"org.easymock.tests.UsageTest.moreThanOneArgument":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":459,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":466,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":170,"org.easymock.tests2.CaptureTest.testAnd":77,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":375,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":25,"org.easymock.tests.LimitationsTest.mockFinalMethod":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":168,"org.easymock.tests.UsageThrowableTest.throwError":452,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":377,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":450,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":266,"org.easymock.samples.PartialClassMockTest.testGetArea":110,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":481,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":429,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":253,"org.easymock.tests2.ThreadingTest.testChangeDefault":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":95,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":19,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":53,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests.UsageOverloadedMethodTest.overloading":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":498,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":422,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":289,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":169,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":367,"org.easymock.tests.MockNameTest.defaultName":434,"org.easymock.tests2.UsageConstraintsTest.testMatches":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests.UsageVarargTest.allKinds":446,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":451,"org.easymock.samples.BasicClassMockTest.testPrintContent":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":368,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":238,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":273,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":50,"org.easymock.tests2.UsageConstraintsTest.greaterThan":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":395,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":137,"org.easymock.samples.ExampleTest.voteForRemoval":116,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":276,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":467,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":494,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":106,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":445,"org.easymock.tests.GenericTest.testBridgedEquals":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":490,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":365,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":457,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":207,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests2.UsageConstraintsTest.testContains":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":283,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":376,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":307,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":48,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":427,"org.easymock.tests.UsageTest.exactCallCountByLastCall":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":503,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":310,"org.easymock.tests.MockClassControlTest.testHashCode":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":232,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":255,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":439,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":447,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":425,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":231,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":504,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":483,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":496,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":414,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":420,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":20,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":335,"org.easymock.samples.ConstructorCalledMockTest.testTax":108,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":220,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":482,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":444,"org.easymock.tests2.ThreadingTest.testThreadSafe":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":259,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":353,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":428,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":112,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":9,"org.easymock.tests2.UsageConstraintsTest.any":286,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.UsageExpectAndThrowTest.longType":13,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":478,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":506,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":157,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":248,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":306,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":199,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":130,"org.easymock.tests2.CompareToTest.testNotComparable":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":155,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":363,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":18,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":299,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":44,"org.easymock.samples.ExampleTest.removeNonExistingDocument":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":162,"org.easymock.tests.UsageStrictMockTest.differentMethods":328,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":233,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":277,"org.easymock.tests2.MockBuilderTest.testCreateMockString":204,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":205,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":258,"org.easymock.samples.ExampleTest.voteAgainstRemoval":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":136,"org.easymock.tests.LimitationsTest.privateConstructor":477,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageVarargTest.differentLength":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":156,"org.easymock.tests2.CallbackTest.callback":267,"org.easymock.tests2.UsageConstraintsTest.equals":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":371,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests.UsageThrowableTest.throwCheckedException":455,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":58,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":75,"org.easymock.tests2.NameTest.nameForNiceMock":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":49,"org.easymock.samples.ExampleTest.addDocument":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":326,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":443,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":505,"org.easymock.tests.UsageExpectAndReturnTest.floatType":489,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":215,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":488,"org.easymock.tests2.UsageConstraintsTest.testSame":284,"org.easymock.samples.SupportTest.addDocument":122,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":210,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":250,"org.easymock.tests.GenericTest.testPackageScope":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":239,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests2.NameTest.nameForMock":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":499,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":491,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":24,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":397,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":332,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests2.NameTest.nameForStrictMock":147,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":219,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":193,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":254,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":83,"org.easymock.tests.UsageRangeTest.combination":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests2.MockBuilderTest.testWithConstructor":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":251,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":492,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":399,"org.easymock.tests.UsageVarargTest.varargShortAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.UsageConstraintsTest.cmpTo":287,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests2.CompareToTest.testLessThan":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":194,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":501,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":121,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":124,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":366,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":493,"org.easymock.tests.LimitationsTest.abstractClass":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":465,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
