[{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,6,39,40,7,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[41,42,43,44],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[39,47,48,49],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[53,71,72,54,73,74,56],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[77,78,79,80,52,81,82,83,84,85,86,87,88,89,90,91,62,92,93,94,95,96,70,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[112,113,114,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,115,116,39,117,118,119,40,120,121,122,123,124,125],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[130,131,132,133,134,135,136,137],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[138,139],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[140,141,142,50,143,144,145,146,147,148,149],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[140,141,142,50,143,144,145,146,147,148,149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[139],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[147,53,148,71,150,72,151,54,55,73,149,74,152,56,153],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,79,80,81,154,155,88,89,90,91,92,156,70,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[52,81,82,157,158,91,62,92,93,159],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[160,161],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[39,47,48,49],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[41,140,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":108,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests2.NameTest.nameForNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":106,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":97,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":19,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":110,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":15,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":124,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":122,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":125,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":35,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.SerializationTest.test":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":9,"org.easymock.tests.UsageTest.moreThanOneArgument":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":105,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":129,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":17,"org.easymock.tests2.CaptureTest.testCapture2_2446744":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.UsageVerifyTest.twoReturns":99,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.GenericTest.testBridgedEquals":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":148,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.NameTest.nameForMock":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":121,"org.easymock.tests2.UsageConstraintsTest.any":51,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":107,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":75,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests2.MockedExceptionTest.testRealException":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":29,"org.easymock.tests2.CaptureTest.testAnd":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":118,"org.easymock.tests2.NameTest.nameForMocksControl":86,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":14,"org.easymock.tests2.NameTest.nameForStrictMock":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":8,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":95,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":123,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.MockBuilderTest.testWithConstructor":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":11,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":22,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":136,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.tests2.CompareToTest.testLessOrEqual":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":146,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":7,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":28,"org.easymock.tests2.CallbackTest.callback":130,"org.easymock.tests.UsageTest.unexpectedCallWithArray":155,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":36,"org.easymock.tests2.UsageConstraintsTest.constraints":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":24,"org.easymock.tests.CapturesMatcherTest.test":153,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":96,"org.easymock.tests2.CaptureTest.testCaptureAll":53}}]
