[{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[14,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18,19,20,21,22,23,24,25,10,11,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[34],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[8,21,22,9,23,25,10,11,35,36,12,37,30,31,13,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[38,39,18,19,20,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,8,87,88,89,90,91,92,93,94,95,21,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,22,130,9,23,24,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,25,10,11,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,3,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,26,27,28,29,214,215,216,217,30,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,31,246,13,32,33,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,16,290,291,4,292,5,6,7,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[8,21,22,9,23,25,10,11,35,36,12,37,30,31,13,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[307,308,309,310,22,9,23,132,133,147,148,149,150,151,152,155,156,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,184,185,186,191,192,193,195,199,311,312,313,314,315,316,204,317,318,319,320,214,215,228,321,229,322,323,324,325,326,327,328,31,13,32,275,329,330,331,332,290,333,334,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[18,19,20,40,41,43,44,335,53,55,56,57,58,59,60,61,62,63,2,65,67,307,308,309,310,73,75,76,77,78,79,80,81,82,83,84,85,86,336,8,95,21,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,22,130,9,23,24,131,132,133,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,25,10,11,177,178,179,180,181,188,189,190,191,3,192,193,194,195,196,197,198,199,200,311,337,338,312,313,314,315,316,201,202,203,204,205,317,318,319,320,210,211,212,213,26,27,28,29,214,215,216,217,30,218,219,220,221,222,223,224,225,226,227,228,321,229,322,323,324,325,326,327,328,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,31,246,13,32,33,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,281,282,283,286,288,15,16,17,329,330,331,332,290,333,334,4,292,5,7,293,294,295,296,297,298,299,300,301,302,303,305,306],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[307,308,309,310,172,311,312,313,314,315,316,204,317,318,319,320,228,229,322,324,275,329,330,331,332,290,333,334,292],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[339,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[132,149,151,165,166,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[55,58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:67","sourceCode":"private static class MockHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.reflect.InvocationHandler delegate;\n\n    private final java.util.Set<java.lang.reflect.Method> mockedMethods;\n\n    public MockHandler(java.lang.reflect.InvocationHandler delegate ,java.lang.reflect.Method... mockedMethods) {\n        this.java.lang.reflect.InvocationHandler = java.lang.reflect.InvocationHandler;\n        this.java.util.Set<java.lang.reflect.Method> = java.lang.reflect.Method[] != null ? new java.util.HashSet<java.lang.reflect.Method>(java.util.Arrays.java.util.Arrays.asList(java.lang.reflect.Method[])) : null;\n    }\n\n    public java.lang.Object invoke(java.lang.Object obj, java.lang.reflect.Method method, java.lang.Object[] args) throws java.lang.Throwable {\n        if (java.lang.reflect.Method.isBridge()) {\n            java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n        } \n        boolean boolean = ((java.lang.Object instanceof java.lang.Throwable) && (java.lang.reflect.Method.getName().equals(\"fillInStackTrace\"))) && org.easymock.internal.ClassProxyFactory.(org.easymock.internal.ClassProxyFactory.isCallerMockInvocationHandlerInvoke(new java.lang.Throwable()));\n        if (boolean || (org.easymock.internal.AndroidClassProxyFactory.MockHandler.(isMocked(java.lang.reflect.Method)) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isAbstract(java.lang.reflect.Method.getModifiers()))))) {\n            return com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.callSuper(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);\n        } \n        return java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);\n    }\n\n    private boolean isMocked(java.lang.reflect.Method method) {\n        return ((java.util.Set<java.lang.reflect.Method>) != null) && (!(java.util.Set<java.lang.reflect.Method>.contains(java.lang.reflect.Method)));\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[295,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[340,341,342,343,344,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[347,348,349,350,351,352,314,353,331,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[354,355,356,357,358,359,340,339,360,361,362,363,364,317,365,366,318,367,368,369,370,371,372,373,374,375,319,376,377,378,379,380,320,381,382,275,345,15,331,334,383],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[335,307,308,309,310,86,384,354,354,355,355,311,385,386,312,387,313,314,315,316,346,388,389,390,391,392,393,317,318,319,320,321,394,326,327,328,275,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[53,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[395,39,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[339,396,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":220,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":70,"org.easymock.tests.MockingTest.testPartialClassMocking":307,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":35,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":51,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":347,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":322,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":389,"org.easymock.tests2.CaptureTest.testPrimitive":296,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":142,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.AnswerTest.answer":278,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests2.CaptureTest.testAnd":293,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":146,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.UsageThrowableTest.throwError":55,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":46,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":382,"org.easymock.samples.PartialClassMockTest.testGetArea":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":49,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":302,"org.easymock.tests2.EasyMockSupportClassTest.testAll":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests2.CaptureTest.testCaptureAll":294,"org.easymock.tests.MockNameTest.defaultName":141,"org.easymock.tests2.UsageConstraintsTest.testMatches":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests.UsageVarargTest.allKinds":85,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":90,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":74,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":328,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":394,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":335,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":69,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.CaptureTest.testCapture2_2446744":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":316,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":176,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":139,"org.easymock.tests.UsageCallCountTest.tooManyCalls":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":330,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":286,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":190,"org.easymock.tests.MockTypeTest.fromEasyMockClass":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":211,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":239,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":2,"org.easymock.tests2.EasyMockSupportTest.testVerify":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageVarargTest.varargCharAccepted":78,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":103,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":393,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":326,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":72,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":271,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":396,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":39,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":279,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":133,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":314,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":94,"org.easymock.tests2.CaptureTest.testCaptureNone":301,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":83,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":135,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.UsageConstraintsTest.any":258,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":71,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":310,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":392,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":33,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":315,"org.easymock.tests.MockingTest.testNicePartialClassMocking":308,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":324,"org.easymock.tests2.CaptureTest.testCaptureLast":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":273,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests2.MockBuilderTest.testCreateMockString":388,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":182,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":284,"org.easymock.tests2.UsageTest.defaultResetToNice":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.UsageVarargTest.differentLength":80,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":52,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":290,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":34,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests.UsageVarargTest.varargLongAccepted":82,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":275,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":355,"org.easymock.tests.UsageThrowableTest.noUpperLimit":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":145,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":48,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":323,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":36,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests.ErrorMessageTest.testGetters":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":312,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":321,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.UsageVarargTest.varargShortAccepted":81,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests2.CaptureTest.testCaptureFromStub":304,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":387,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests2.UsageConstraintsTest.constraints":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":196,"org.easymock.tests.UsageStrictMockTest.testVerify":131,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":197,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":88,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
