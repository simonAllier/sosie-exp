[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[30],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,34,5,11,12,13,14,15,19,20,21,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[36,37,38,39],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[40],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46,47,0,1,48,49,2,3,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,6,7,8,105,106,107,108,109,110,111,112,113,114,115,116,117,9,118,119,120,121,122,123,124,125,126,10,127,128,129,130,131,132,11,133,134,135,136,137,138,12,13,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,14,244,245,15,16,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,283,284,284,285,286,287,288,289,290,291,19,292,293,294,295,296,20,21,22,297,298,299,300,301,23,302,303,304,305,306,307,308,309,310,24,25,311,312,313,314,26,32,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,36,343,344,345,346,347,37,348,40,349,350,351,352,353,354,355,356,357,38,358,359,33,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,31,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,27,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,28,29,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[491,493,494,495,496,497,498,500,505,501,502,504],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[310,506,507,508,509,510,511,413,512,513,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[41,42,43,44,111,112,114,9,118,119,120,133,139,140,141,142,143,144,147,148,150,151,152,154,155,156,157,158,185,244,15,16,248,249,267,268,269,270,271,273,275,277,278,280,288,23,305,307,309,25,315,316,317,318,319,320,321,322,324,328,329,330,393,31,416,442,445,455,461,478,28,29,484,485,486,487,488,489,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[46,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,124,129,136,12,159,161,162,163,164,165,166,181,211,289,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[514,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[218,408,31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[54,57,98,108,109,110,111,112,114,117,172,173,174,175,176,183,184,185,186,200,201,202,203,204,205,207,259,260,261,262,263,264,265,266,273,285,286,299,23,302,304,305,306,307,309,24,25,26,317,318,320,321,322,323,324,326,327,328,329,330,331,332,367,368,369,415,435,436,439,440,442,444,445,446,447,448,450,451,452,453,455,456,457,458,459,460,461,484,485,487,489],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[41,42,43,44,45,46,47,48,49,50,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,93,94,95,96,97,106,121,123,124,127,128,129,11,133,134,135,136,137,138,12,13,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,174,177,178,179,180,181,182,243,244,245,15,16,246,248,249,267,268,269,270,271,272,274,275,276,277,278,279,280,282,285,286,287,288,289,290,291,292,293,294,295,22,297,305,307,309,315,316,318,321,329,336,339,341,342,356,358,360,361,390,391,392,394,395,401,409,31,410,412,413,414,419,420,421,422,423,424,425,427,27,428,429,469,477,478,479,28,29,480,481,482,491,492,498,499,501,504],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[293,321,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111,112,114,489,515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[172,176],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[343],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[54,309],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[122,125,130,131],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[516,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[1,2,3,86,87,88,90,91,92,93,94,95,96,97,98,99,101,102,103,104,7,8,11,135,136,160,174,242,243,14,244,245,15,16,246,247,250,255,256,272,274,275,277,278,279,280,282,285,286,287,288,19,293,20,21,23,305,25,343,344,354,355,415,422,27,428,429,430,431,432,433,434,476,477,478,479,28,29,480,481,492,493,496,497,498,499,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[335,336,339,341,342,343,351,356,491,493,501],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[517,413,414,415],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[308,372,376,377,382,384,417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[333,349,355,518],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[519,520,521,522,523,524],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":336,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":218,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":293,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":178,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":261,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":116,"org.easymock.tests2.UsageConstraintsTest.testNull":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":320,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":374,"org.easymock.tests2.CaptureTest.testPrimitive":494,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":43,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":254,"org.easymock.tests.UsageVarargTest.varargIntAccepted":88,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests.ReplayStateInvalidUsageTest.times":195,"org.easymock.tests2.AnswerTest.answer":358,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":366,"org.easymock.tests2.CaptureTest.testAnd":491,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests2.DelegateToTest.testDelegate":412,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests.LimitationsTest.mockFinalMethod":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":364,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":189,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":56,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":463,"org.easymock.samples.PartialClassMockTest.testGetArea":273,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":190,"org.easymock.tests.MockingTest.testInterfaceMocking":113,"org.easymock.tests2.CompareToTest.testLessOrEqual":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":241,"org.easymock.tests2.UsageTest.niceToStrict":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":305,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":508,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":347,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":500,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":442,"org.easymock.tests.MockClassControlTest.testEquals":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":375,"org.easymock.tests2.CaptureTest.testCaptureAll":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":365,"org.easymock.tests.MockNameTest.defaultName":105,"org.easymock.tests2.UsageConstraintsTest.testMatches":348,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":44,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":97,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":170,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":476,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":385,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":330,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":207,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":331,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":323,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":421,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":177,"org.easymock.tests2.CaptureTest.testCaptureFirst":504,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":422,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":503,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":393,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":226,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":96,"org.easymock.tests.GenericTest.testBridgedEquals":176,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":509,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":506,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":313,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":485,"org.easymock.tests.MockingTest.testNiceClassMocking":117,"org.easymock.tests.MockingTest.testClassMocking":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":301,"org.easymock.tests2.UsageConstraintsTest.testContains":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":369,"org.easymock.tests2.UsageConstraintsTest.testFind":338,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":389,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":427,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":239,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":510,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.MockClassControlTest.testHashCode":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":452,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":64,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":199,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":373,"org.easymock.tests2.CaptureTest.testCaptureMultiple":30,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":512,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":429,"org.easymock.tests.DefaultClassInstantiatorTest.object":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":63,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":237,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":453,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":461,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":262,"org.easymock.tests2.UsageTest.resumeIfFailure":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":180,"org.easymock.tests2.StubTest.stubWithReturnValue":482,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":415,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":32,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":53,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":410,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":437,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":484,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":507,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":439,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests2.CaptureTest.testCaptureNone":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":520,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":17,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":95,"org.easymock.tests2.ThreadingTest.testThreadSafe":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":456,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":240,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageConstraintsTest.any":344,"org.easymock.tests2.StubTest.stub":481,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":229,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":193,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":479,"org.easymock.tests2.SerializationTest.testClass":413,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":401,"org.easymock.tests.LimitationsTest.mockNativeMethod":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":521,"org.easymock.tests2.NameTest.nameForMocksControl":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests2.MockedExceptionTest.testMockedException":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":444,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":317,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":309,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":322,"org.easymock.tests2.CaptureTest.testCaptureLast":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":490,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":342,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":515,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":357,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":524,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":523,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":202,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":392,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":446,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":418,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":455,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":329,"org.easymock.tests.LimitationsTest.privateConstructor":184,"org.easymock.tests2.UsageConstraintsTest.testNotNull":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":367,"org.easymock.tests2.UsageTest.defaultResetToNice":296,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.UsageVarargTest.differentLength":92,"org.easymock.tests2.CallbackTest.callback":395,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":522,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.MockingTest.testStrictClassMocking":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":489,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":488,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":362,"org.easymock.tests2.CompareToTest.testGreateOrEqual":39,"org.easymock.tests.ObjectMethodsTest.testHashCode":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":382,"org.easymock.tests2.NameTest.nameForNiceMock":433,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":394,"org.easymock.tests2.DependencyTest.testInterfaceMocking":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":377,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.DelegateToTest.testStubDelegate":31,"org.easymock.tests2.AnswerTest.stubAnswer":361,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":94,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":416,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":435,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":496,"org.easymock.tests2.SerializationTest.test":414,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testSame":340,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":447,"org.easymock.tests.GenericTest.testPackageScope":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":115,"org.easymock.tests2.NameTest.nameForMock":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests2.MockedExceptionTest.testRealException":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":314,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":198,"org.easymock.tests2.NameTest.nameForStrictMock":432,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":513,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":436,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":203,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":298,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":378,"org.easymock.tests2.CaptureTest.testCaptureRightOne":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":451,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":519,"org.easymock.tests2.UsageConstraintsTest.testOr":341,"org.easymock.tests.UsageRangeTest.combination":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":318,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":448,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":93,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":345,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":33,"org.easymock.tests2.CompareToTest.testLessThan":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.CaptureTest.testCaptureFromStub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":188,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.UsageConstraintsTest.constraints":335,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":247,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":272,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":168,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":380,"org.easymock.tests.LimitationsTest.abstractClass":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":425,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":87}}]
