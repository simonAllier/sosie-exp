[{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[14],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[14],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[21],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,15,15,16,16,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,20,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[129,130,131,132,133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[135,136,137,138,139,0,140,1,141,2,142,143,3,144,4,5,6,7,145,146,147,8,9,148,149,10,150,151,11,152,153,12,13,154,155,76,84,85,87,114,122,124,156,157,158,159,160,161,162],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[163,164,165],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[166,167,168,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[72,73],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[170,171,172,173,174],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[175,176,177,160,178,166,179,180,167,168,169],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[181,182,183,184,185,186,187,188,189,190,191,135,136,137,14,22,23,24,25,192,193,194,195,196,0,197,198,199,200,201,202,203,204,205,206,207,208,26,27,28,29,140,209,1,210,141,2,142,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,144,247,4,5,248,249,6,7,145,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,30,277,278,279,280,281,282,283,284,285,286,287,288,170,289,290,291,292,293,294,295,296,297,298,146,299,300,301,302,303,304,305,306,307,308,309,310,311,31,312,32,33,34,35,36,313,37,314,315,38,316,317,318,319,320,321,322,323,324,325,326,39,327,328,40,329,330,331,332,333,41,42,43,44,45,46,47,48,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,147,357,358,359,360,8,9,361,362,363,364,49,50,51,52,53,54,55,365,366,367,368,369,370,171,371,372,373,374,375,376,15,15,16,16,56,377,378,57,58,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,148,397,398,149,10,150,399,400,401,61,62,402,403,63,64,65,66,404,67,68,151,405,406,11,152,153,407,408,409,12,13,154,155,69,70,71,410,411,412,413,414,415,72,73,416,417,418,419,420,74,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,421,115,116,117,118,422,119,20,120,121,122,123,124,125,126,423,424,425,426,427,428,429,430,431,432,172,433,173,434,174,175,435,176,436,437,438,439,440,441,442,177,443,444,445,446,156,447,448,449,157,158,450,451,159,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,160,178,474,475,166,21,179,180,476,167,477,478,479,480,481,482,161,483,484,168,485,486,487,488,169,489,490,127,491,128,162],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[15,16,65,68,492,72,73,493,494,495,83,17,18,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,496,497,498,127],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[499,500,501,502,503,504,505,73,495,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:50","failures":[15,16,65,68,492,72,73,493,494,495,83,17,18,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,496,497,498,127],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[53,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[181,182,183,184,185,188,22,24,192,193,194,195,196,0,28,210,2,142,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,245,144,247,248,249,145,266,272,274,275,276,30,277,278,279,280,281,287,170,289,291,304,305,306,312,35,36,37,316,317,318,319,320,321,322,323,324,325,326,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,147,357,358,359,360,8,9,365,366,367,368,369,370,171,371,372,374,376,15,15,16,16,56,380,386,395,396,398,10,150,400,401,63,64,65,66,404,67,68,151,405,406,152,407,408,409,154,155,69,70,71,410,411,412,413,414,415,72,76,79,81,82,85,91,94,104,110,113,114,421,115,116,117,119,122,123,124,423,424,425,426,427,428,429,431,432,172,433,173,434,174,175,435,436,437,440,441,442,177,443,444,445,446,156,447,448,449,157,158,450,451,159,452,453,461,472,473,160,178,475,166,21,179,180,476,477,478,479,480,481,482,161,483,484,168,485,486,488,169,489,490,127,491,162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[508,160],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[260,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[256,424,427,428],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[510,127,491,128],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[25],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[423],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[14,25],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[24,39,40,56,60,74,75,76,77,79,80,81,82,84,85,86,87,118,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,210,2,142,241,242,511,512,3,247,288,290,291,292,360,8,9,398,10,150,406,513,514,515,516,517,518],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[186,189,190,191,136,137,22,23,192,193,194,195,0,197,28,140,209,1,210,141,2,142,211,212,213,214,215,216,217,218,219,220,223,224,226,231,236,5,6,7,145,30,287,170,289,291,293,294,295,297,298,146,299,300,301,302,303,304,35,36,37,334,335,339,340,342,347,352,147,8,9,370,171,371,372,373,374,376,56,377,378,57,58,379,380,386,395,396,148,397,398,149,10,150,399,63,64,65,66,404,67,68,151,405,11,152,153,12,13,155,71,414,415,72,417,418,419,420,76,79,81,82,85,91,94,104,110,113,114,421,115,116,117,119,123,423,426,172,173,174,175,435,176,436,438,439,440,441,442,177,445,446,156,447,448,449,157,158,451,159,452,453,454,461,178,166,180,476,167,477,478,480,161,168,485,486,487,488,169,127,491,128,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[328,387,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[499,500,501,503,504,73,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,205,221,227,233,237,239,247,262,266,336,337,343,349,353,355,376,406,411,412,413,429,431,174,435,440,441,445,472,481,483,490,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[510,127,491,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[210,142,211,243,247,291,360,8,9,398,150,399,406],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[328,387,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[129,130,131,132,133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":509,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":153,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":377,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":416,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":476,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":192,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":363,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":40,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":48,"org.easymock.tests2.CaptureTest.testPrimitive":436,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":196,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":356,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":367,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":461,"org.easymock.tests.ReplayStateInvalidUsageTest.times":205,"org.easymock.tests2.DependencyTest.testClassMocking":393,"org.easymock.tests2.AnswerTest.answer":423,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":471,"org.easymock.tests2.CaptureTest.testAnd":175,"org.easymock.tests2.UsageTest.strictResetToDefault":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":358,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":352,"org.easymock.tests.LimitationsTest.mockFinalMethod":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":286,"org.easymock.tests2.DependencyTest.testClassMockingSupport":394,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":241,"org.easymock.tests2.CaptureTest.testCapture1_2446744":437,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":469,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":199,"org.easymock.tests.UsageThrowableTest.throwError":213,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":328,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":369,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":19,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":112,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":200,"org.easymock.tests.MockingTest.testInterfaceMocking":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":305,"org.easymock.tests2.UsageTest.niceToStrict":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":99,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":464,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":346,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":361,"org.easymock.tests.UsageOverloadedMethodTest.overloading":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":481,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":480,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":442,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":296,"org.easymock.tests.MockClassControlTest.testEquals":47,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":470,"org.easymock.tests2.CaptureTest.testCaptureAll":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":284,"org.easymock.tests.MockNameTest.defaultName":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":482,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":368,"org.easymock.samples.ExampleTest.voteForRemovals":374,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":360,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":124,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":55,"org.easymock.samples.ExampleTest.voteForRemoval":371,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":447,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":445,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":448,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.CaptureTest.testCapture2_2446744":444,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":414,"org.easymock.tests2.UsageTest.moreThanOneArgument":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":268,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":282,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":355,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":487,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":365,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests.MockingTest.testNiceClassMocking":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests2.UsageConstraintsTest.testContains":479,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":187,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":475,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":336,"org.easymock.tests.MockTypeTest.fromEasyMockClass":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":431,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests.MockClassControlTest.testHashCode":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":101,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":468,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":143,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":455,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests2.CaptureTest.testCaptureMultiple":519,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":163,"org.easymock.tests.DefaultClassInstantiatorTest.object":49,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":183,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":308,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":122,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":401,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":495,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":266,"org.easymock.samples.SupportTest.voteForRemovals":380,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":349,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":272,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":424,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":246,"org.easymock.tests.UsageExpectAndThrowTest.object":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":485,"org.easymock.tests2.DelegateToTest.testWrongClass":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":332,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":402,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":362,"org.easymock.tests2.CaptureTest.testCaptureNone":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":306,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":130,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":138,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":105,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":191,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":270,"org.easymock.tests2.UsageConstraintsTest.any":477,"org.easymock.tests2.StubTest.stub":400,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.UsageExpectAndThrowTest.longType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":203,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests2.NameTest.nameForMocksControl":420,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":93,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":430,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.CaptureTest.testCaptureLast":440,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":486,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":345,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":489,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":134,"org.easymock.samples.ExampleTest.removeNonExistingDocument":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":463,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":133,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":51,"org.easymock.tests2.ConstraintsToStringTest.andToString":517,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":413,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":95,"org.easymock.tests.UsageExpectAndThrowTest.floatType":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":426,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":123,"org.easymock.tests.LimitationsTest.privateConstructor":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.UsageTest.defaultResetToNice":409,"org.easymock.samples.ExampleTest.voteAgainstRemovals":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":194,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":364,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":132,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":404,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":428,"org.easymock.tests.ObjectMethodsTest.testHashCode":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.NameTest.nameForNiceMock":419,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":415,"org.easymock.tests2.DependencyTest.testInterfaceMocking":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.stubAnswer":427,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":210,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.ConstraintsToStringTest.orToString":513,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":473,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":61,"org.easymock.tests2.SerializationTest.test":491,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":438,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":50,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.samples.SupportTest.addDocument":379,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":96,"org.easymock.tests.GenericTest.testPackageScope":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":314,"org.easymock.tests2.NameTest.nameForMock":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":351,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":359,"org.easymock.tests2.MockedExceptionTest.testRealException":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":512,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":506,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":208,"org.easymock.tests2.NameTest.nameForStrictMock":418,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":429,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":62,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":168,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":490,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":502,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":258,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":100,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":129,"org.easymock.tests2.UsageConstraintsTest.testOr":179,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":114,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":97,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":54,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":135,"org.easymock.tests2.UsageConstraintsTest.cmpTo":478,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":408,"org.easymock.tests2.CaptureTest.testCaptureFromStub":443,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":198,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":77,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":190,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":376,"org.easymock.tests2.ConstraintsToStringTest.notToString":515,"org.easymock.tests2.ConstraintsToStringTest.containsToString":508,"org.easymock.tests.UsageStrictMockTest.testVerify":212,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":378,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":283,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":439,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":279,"org.easymock.tests.LimitationsTest.abstractClass":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
