[{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[1,2,3,4,5,6,7],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[23,24,25,26],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[27,28,29,30,31,32,33,34,35,36,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,2,61,62,63,64,65,66,3,4,67,68,69,70,71,72,7,73,74,75,76],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[77,78,79,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,77,80,79,81,34,35,36,37,1,38,82,41,83,84,85,44,45,46,47,49,50,86,51,57,87,88,89,90,91,92,93,58,59,60,2,61,94,3,4,67,68,69,70,71,72,7,95,96],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[97,98,99,8,8,9,9,100,0,101,102,103,27,104,10,105,28,77,106,80,107,78,30,108,79,109,110,111,31,32,33,14,81,34,112,35,113,114,115,20,21,22,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[151],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[97,98,99,186,187,188,189,190,191,192,193,8,8,9,9,194,195,196,197,100,0,198,101,102,103,27,104,28,77,106,80,29,30,79,111,31,32,33,81,34,35,113,114,115,199,20,36,200,201,37,1,38,202,203,204,205,206,207,208,209,210,211,82,39,212,40,41,83,42,43,84,213,214,215,22,216,116,217,218,85,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,119,120,121,122,238,123,124,44,239,240,45,46,47,241,242,48,49,50,86,51,243,244,52,53,54,55,56,245,246,57,247,248,249,250,251,252,23,253,254,255,256,24,257,87,258,259,260,261,262,263,264,265,266,25,267,268,269,270,271,272,129,132,142,148,273,274,275,276,277,90,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,152,153,304,305,306,307,308,309,91,92,93,310,311,58,312,59,313,60,2,61,314,315,62,63,64,65,66,159,160,161,316,317,318,319,320,321,322,323,163,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,171,172,173,174,175,176,177,178,94,352,353,354,355,3,4,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,179,376,377,378,67,379,68,69,380,381,70,71,72,7,382,383,384,385,386,387,388,389,390,391,392,393,394,395,184,73,74,75,76],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[396,209,210,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[11,12,13,15,16,21,398,399,400,121,124,401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[402,403,404],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[1,50,2,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[151,152,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[219,221,229,57,247,249,251,252,405,260,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[22,216,116,406],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[87],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[97,98,99,8,8,9,9,100,0,101,102,103,27,104,28,77,106,80,30,108,79,109,111,31,32,33,81,34,112,35,115,20,22,116,119,120,121,122,123,124,125,129,132,142,148,152,153,154,158,159,160,161,172,179,180,181,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[107,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[22,216,116,406],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[186,187,188,189,190,191,192,193,100,0,198,101,102,103,27,104,28,77,106,80,30,79,111,31,81,34,35,113,114,115,199,20,36,200,201,37,1,38,202,203,204,205,206,207,208,209,210,22,216,116,217,218,85,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,120,121,123,124,44,239,240,45,46,47,241,242,48,49,50,86,51,243,53,54,55,56,245,246,57,247,248,249,250,251,252,23,253,254,255,256,24,257,87,258,259,260,261,262,263,264,265,266,25,267,268,269,270,271,272,273,274,275,276,277,90,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,407,300,301,302,303,152,153,304,305,306,307,308,309,91,92,93,310,311,58,312,59,313,60,2,61,314,315,62,63,64,65,66,159,160,161,316,317,318,319,320,321,322,323,408,163,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,171,172,173,174,175,176,177,178,94,352,353,354,355,3,4,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,179,376,377,378,67,379,68,69,380,381,70,71,72,7,382,383,384,385,386,387,388,389,390,391,392,393,394,395,184,73,74,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:282","sourceCode":"final net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[217,86,352,353,354,409],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[99,27,30,108,79,109,111,31,32,33,81,34,112,35,22,125,154,180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[236,249,263,282],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[97,98,99,186,187,188,189,190,191,193,8,9,194,195,196,197,100,0,198,101,102,103,27,104,28,77,106,80,29,30,79,111,31,32,33,81,34,35,113,114,115,199,20,36,200,201,37,1,38,202,207,208,209,210,211,82,39,212,40,41,83,42,43,84,213,214,215,22,216,116,217,218,85,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,119,120,121,122,238,123,124,44,239,240,45,46,47,241,242,48,49,50,86,51,243,244,52,53,54,55,56,245,246,57,247,248,249,250,251,252,23,253,254,255,256,24,257,87,258,259,260,261,262,263,264,265,266,25,267,268,269,270,271,272,129,132,142,148,273,274,275,276,277,90,278,279,280,281,282,283,284,285,286,287,410,410,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,152,153,306,307,308,309,91,92,93,310,311,58,312,59,313,60,2,61,314,62,63,64,65,66,159,160,161,316,317,318,319,320,321,322,323,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,94,353,354,355,3,4,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,179,376,377,378,67,379,68,69,380,381,70,71,72,7,382,383,184,73,74,75,76],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,45,49,50,59,2,3,4,68,69,70,71,7,96],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":213,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":47,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":356,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":75,"org.easymock.samples.ExampleTest.answerVsDelegate":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":181,"org.easymock.tests2.UsageConstraintsTest.testNull":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":375,"org.easymock.tests.UsageTest.moreThanOneArgument":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":287,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":56,"org.easymock.tests2.CaptureTest.testAnd":219,"org.easymock.tests2.UsageTest.strictResetToDefault":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":353,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":371,"org.easymock.tests.LimitationsTest.mockFinalMethod":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":54,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.UsageThrowableTest.throwError":316,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":17,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":150,"org.easymock.samples.PartialClassMockTest.testGetArea":99,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":137,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":365,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":73,"org.easymock.tests.UsageOverloadedMethodTest.overloading":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":256,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests.MockClassControlTest.testEquals":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":129,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":64,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests2.UsageConstraintsTest.testMatches":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":191,"org.easymock.tests.UsageVarargTest.allKinds":282,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":355,"org.easymock.samples.BasicClassMockTest.testPrintContent":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":322,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":403,"org.easymock.tests2.UsageConstraintsTest.greaterThan":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.samples.ExampleTest.voteForRemoval":188,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":107,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":39,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":212,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":339,"org.easymock.tests2.CaptureTest.testCapture2_2446744":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":281,"org.easymock.tests.GenericTest.testBridgedEquals":155,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":374,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":321,"org.easymock.tests.MockingTest.testNiceClassMocking":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":108,"org.easymock.tests2.UsageConstraintsTest.testContains":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":378,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":272,"org.easymock.tests.UsageExpectAndReturnTest.object":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":43,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests.MockClassControlTest.testHashCode":176,"org.easymock.tests2.EasyMockSupportTest.testVerify":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":53,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":95,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":402,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":214,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":362,"org.easymock.tests.CapturesMatcherTest.test":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":349,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":341,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":19,"org.easymock.samples.SupportTest.voteForRemovals":197,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":368,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":406,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.UsageExpectAndThrowTest.object":366,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":261,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":382,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":383,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":367,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":74,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":88,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":280,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":97,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":253,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.UsageExpectAndThrowTest.longType":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":351,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.NameTest.nameForMocksControl":206,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":131,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":381,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CaptureTest.testCaptureLast":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":252,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":262,"org.easymock.tests.MockingTest.testTwoMocks":158,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":364,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":266,"org.easymock.samples.ExampleTest.removeNonExistingDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":165,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":133,"org.easymock.tests.UsageExpectAndThrowTest.floatType":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":208,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":189,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":265,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":323,"org.easymock.tests2.UsageTest.defaultResetToNice":48,"org.easymock.samples.ExampleTest.voteAgainstRemovals":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":347,"org.easymock.tests.UsageVarargTest.differentLength":90,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":380,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":76,"org.easymock.tests.UsageThrowableTest.throwCheckedException":320,"org.easymock.tests.MockingTest.testStrictClassMocking":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":238,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":210,"org.easymock.tests2.CompareToTest.testGreateOrEqual":26,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.NameTest.nameForNiceMock":205,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":243,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests2.AnswerTest.stubAnswer":209,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":313,"org.easymock.tests.UsageVarargTest.varargLongAccepted":279,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":259,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":117,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":164,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":333,"org.easymock.samples.SupportTest.addDocument":196,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":404,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":134,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests2.NameTest.nameForMock":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":344,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":354,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":18,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests2.NameTest.nameForStrictMock":204,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":110,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":166,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":79,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":138,"org.easymock.tests2.CaptureTest.testCaptureRightOne":229,"org.easymock.tests2.UsageConstraintsTest.testOr":251,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":345,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":168,"org.easymock.tests.UsageVarargTest.varargShortAccepted":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests2.UsageConstraintsTest.cmpTo":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.CaptureTest.testCaptureFromStub":230,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":109,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":346,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":193,"org.easymock.tests.UsageStrictMockTest.testVerify":315,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":195,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":63,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":225,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":285,"org.easymock.tests.LimitationsTest.abstractClass":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":286,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274}}]
