[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[6,6,7,7,8,9,10,0,1,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[14,15,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[16,17,18,19,6,7,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,2,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,5,241,242,243,244,245,246,247,248,249,250,251,252,253,254,14,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,3,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,8,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,10,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,0,1,404,15,405,406,12,13,407,408,409,410,411,412,413,414,415,416,417,418,11,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[473,474,475,476,65,92,155,156,157,235,237,238,393,443,445,446],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[16,44,189,192,8,380,381,382,384,386,387,389,390,416,421,422,425,454,464,470],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[65,477,478,479,92,155,156,157,186,187,235,237,238,480,481,482,483,484,485,393,443,445,446],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[24,218,404,405,13,435],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[65,479,93,94,97,98,156,157,224,234,237,394,400,401,445],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[488,8,368,369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[6,7,489,490,491,492,493,0,1,494,428,432,495,496,497,498,499,500,501,502,503],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[321,328,338,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,255,434],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,368,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests2.UsageTest.argumentsOrdered":401,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":258,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":396,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.DelegateToTest.testReturnException":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":123,"org.easymock.tests.MockClassControlTest.testToString":171,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":454,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":473,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":302,"org.easymock.tests2.UsageTest.wrongArguments":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":192,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":128,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":413,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":176,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":281,"org.easymock.tests2.CaptureTest.testPrimitive":353,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":185,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":81,"org.easymock.tests.UsageTest.argumentsOrdered":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":31,"org.easymock.tests.UsageVarargTest.varargIntAccepted":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":506,"org.easymock.tests.ReplayStateInvalidUsageTest.times":74,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":4,"org.easymock.tests2.DependencyTest.testClassMocking":364,"org.easymock.tests2.AnswerTest.answer":404,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":379,"org.easymock.tests2.CaptureTest.testAnd":350,"org.easymock.tests2.UsageTest.strictResetToDefault":392,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":35,"org.easymock.tests2.DelegateToTest.testDelegate":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":210,"org.easymock.tests.LimitationsTest.mockFinalMethod":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":40,"org.easymock.tests2.DependencyTest.testClassMockingSupport":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":354,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":377,"org.easymock.tests.UsageThrowableTest.throwError":105,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":68,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":191,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":125,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":459,"org.easymock.tests2.UsageTest.niceToStrict":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":384,"org.easymock.tests2.MockBuilderTest.testCreateMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":481,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":204,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":500,"org.easymock.tests.UsageOverloadedMethodTest.overloading":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":141,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":359,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":161,"org.easymock.tests2.EasyMockSupportClassTest.testAll":451,"org.easymock.tests.MockClassControlTest.testEquals":175,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":38,"org.easymock.tests2.CaptureTest.testCaptureAll":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":378,"org.easymock.tests.MockNameTest.defaultName":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":82,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":2,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":39,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":111,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":328,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":423,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":119,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":424,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":391,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":274,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":363,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":275,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":393,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests2.CaptureTest.testCapture2_2446744":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":266,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":501,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":63,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":36,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":213,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":226,"org.easymock.tests.UsageCallCountTest.tooManyCalls":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":504,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":427,"org.easymock.tests.MockingTest.testNiceClassMocking":129,"org.easymock.tests.MockingTest.testClassMocking":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":57,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":291,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests.MockTypeTest.fromEasyMockClass":190,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":409,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests.UsageExpectAndReturnTest.object":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":280,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":163,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":32,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":322,"org.easymock.tests2.EasyMockSupportTest.testVerify":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":461,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":505,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":103,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageVarargTest.varargCharAccepted":162,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":271,"org.easymock.tests2.UsageTest.openCallCountByLastCall":397,"org.easymock.tests.DefaultClassInstantiatorTest.object":113,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":102,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":462,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":421,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":225,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":470,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":172,"org.easymock.tests2.UsageTest.resumeIfFailure":402,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests2.StubTest.stubWithReturnValue":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":369,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":264,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":207,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":270,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":89,"org.easymock.tests.UsageExpectAndThrowTest.object":205,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":314,"org.easymock.tests2.DelegateToTest.testWrongClass":373,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":287,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests2.CaptureTest.testCaptureNone":358,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":61,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":247,"org.easymock.tests2.CaptureTest.testCapture_2617107":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests2.StubTest.stub":433,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.UsageExpectAndThrowTest.longType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":117,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":72,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":444,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":326,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":447,"org.easymock.tests2.NameTest.nameForMocksControl":440,"org.easymock.tests2.MockedExceptionTest.testMockedException":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":453,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":408,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":410,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":387,"org.easymock.tests.MockingTest.testNicePartialClassMocking":124,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests2.CaptureTest.testCaptureLast":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":432,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":315,"org.easymock.tests.MockingTest.testTwoMocks":122,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":203,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":400,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":319,"org.easymock.samples.ExampleTest.removeNonExistingDocument":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":323,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":115,"org.easymock.tests2.ConstraintsToStringTest.andToString":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":335,"org.easymock.tests2.MockBuilderTest.testCreateMockString":390,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":455,"org.easymock.tests.UsageExpectAndThrowTest.floatType":197,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":406,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":464,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":422,"org.easymock.tests.LimitationsTest.privateConstructor":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":289,"org.easymock.tests2.UsageTest.defaultResetToNice":399,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":260,"org.easymock.tests.UsageVarargTest.differentLength":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.CallbackTest.callback":435,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":59,"org.easymock.tests2.ConstraintsToStringTest.nullToString":487,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":477,"org.easymock.tests.MockingTest.testStrictClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":431,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":430,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.ObjectMethodsTest.testHashCode":245,"org.easymock.tests2.NameTest.nameForNiceMock":439,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":366,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":372,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":235,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":9,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.tests2.ConstraintsToStringTest.orToString":480,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.UsageThrowableTest.noUpperLimit":106,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":330,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":285,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":355,"org.easymock.tests2.SerializationTest.test":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":131,"org.easymock.tests2.UsageConstraintsTest.testSame":299,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":456,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":329,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":127,"org.easymock.tests2.NameTest.nameForMock":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":493,"org.easymock.tests2.UsageStrictMockTest.differentMethods":446,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":209,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":288,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":77,"org.easymock.tests2.NameTest.nameForStrictMock":438,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":407,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":286,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":474,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":313,"org.easymock.tests.ErrorMessageTest.testGetters":475,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":381,"org.easymock.tests2.UsageStrictMockTest.range":445,"org.easymock.tests2.UsageConstraintsTest.lessThan":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":460,"org.easymock.tests2.CaptureTest.testCaptureRightOne":360,"org.easymock.tests2.UsageConstraintsTest.testOr":300,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":411,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":457,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":250,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":118,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":62,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":252,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":398,"org.easymock.tests2.CaptureTest.testCaptureFromStub":361,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":67,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":382,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":60,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":144,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests2.ConstraintsToStringTest.notToString":482,"org.easymock.tests.UsageStrictMockTest.testVerify":240,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":37,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":136,"org.easymock.tests.LimitationsTest.abstractClass":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":476,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278}}]
