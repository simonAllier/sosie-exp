[{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,176,177,178,179,180,181,182,183,184,185,186,9,187,10,188,12,13,189,14,16,190,191,17,18,19,20,21,192,193,194,24,30,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,31,32,33,225,226,227,228,229,230,231,232,233,234,235,34,35,36,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,236,237,238,239,68,240,69,70,241,71,242,73,74,243,75,244,245,77,78,79,80,82,246,247,83,248,249,84,85,87,88,89,90,91,250,93,251,252,253,254,95,96,99,101,102,105,106,255,256,257,258,259,107,109,260,110,111,261,262,124,263,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,264,153,265,162,266,165,166,167,267,170,171,268,269,173,174,270,175,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[272,135],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[134,139,150,273],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[73,243,80,127,128,132,133,272,144],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[91,136,274],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[125,142,147,276],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[110,111,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[278,279,280,281,282,283,284,0,285,286,287,288,289,290,1,2,3,4,5,291,292,293,6,7,294,295,8,176,177,178,179,180,181,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,182,183,184,185,186,9,187,10,188,11,12,13,326,189,327,14,328,15,16,190,191,17,18,19,20,329,21,192,330,331,22,193,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,23,194,24,25,26,27,28,29,350,351,352,353,30,354,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,355,218,219,356,220,221,222,223,224,31,32,357,358,359,33,360,225,226,227,228,229,230,231,232,233,234,235,361,362,363,364,365,366,367,368,34,369,370,371,372,35,36,373,37,374,375,376,38,39,40,377,41,378,379,380,381,382,383,384,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,385,386,64,65,387,388,66,236,237,238,239,389,390,391,392,393,394,395,396,396,397,397,67,398,68,240,69,70,241,71,399,242,400,72,73,74,243,75,76,244,245,77,78,79,80,401,81,82,246,247,83,248,249,84,85,86,87,88,89,90,402,403,91,404,405,250,92,93,94,406,407,408,251,252,253,254,409,410,411,412,95,96,97,98,99,100,101,102,103,104,105,106,255,256,257,258,413,259,107,414,108,109,260,110,111,261,112,113,114,115,116,117,118,119,120,121,122,123,415,416,262,124,417,418,263,125,126,127,128,277,129,130,131,132,133,134,272,135,136,137,138,139,140,141,142,143,144,145,146,419,147,148,149,150,420,421,422,423,424,151,425,426,427,428,429,430,264,431,152,432,433,434,153,265,154,435,155,436,437,156,438,439,440,441,442,443,444,157,445,446,447,448,449,450,451,452,453,158,454,455,159,456,457,458,459,460,461,462,463,464,160,465,466,467,468,469,161,470,471,472,473,162,163,474,266,164,165,166,475,167,267,168,169,170,476,477,171,172,268,478,269,173,479,480,174,481,482,270,175,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[134,139,150,273],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[287,288,9,187,10,13,327,14,15,16,24,350,215,224,31,233,235,363,62,63,386,64,65,387,388,66,240,251,252,253,254,107,108,109,263,130,131,135,136,148,149,164,166,475,168,169,476,477,172,174],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[358,359,390,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[187,10,327,15,350,369,483,385,386,387,388,108,475,476,477],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[3,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:29","sourceCode":"new org.easymock.internal.matchers.Null()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[142,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[296,299,188,329,21,192,330,331,22,193,332,333,334,335,336,337,352,353,30,354,370,371,372,35,36,37,376,41,378,379,380,381,382,384,394,395,396,397,67,246,247,83,85,86,88,89,90,402,91,404,405,250,92,93,94,406,407,409,410,100,101,102,103,105,106,110,261,264,431,152,432,433,434,153,265,154,435,155,436,437,156,438,439,451,452,158,455,159,456,457,458,460,461,462,463,160,465,466,467,468,469,161,173,479,480],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[296,299,188,21,192,330,193,30,372,35,36,37,394,395,396,396,397,397,67,83,85,86,88,89,90,402,91,250,92,93,94,100,101,102,103,105,106,110,261,264,485,152,432,153,265,154,155,437,156,486,439,158,159,160,161,173,487,488,489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[278,279,280,281,282,283,284,0,285,286,287,288,289,290,1,2,3,4,5,291,292,293,6,7,294,295,8,176,177,178,179,180,181,296,490,491,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,182,183,184,185,186,9,187,10,188,11,12,13,326,189,327,14,328,15,16,190,191,17,18,19,20,329,21,192,330,331,22,193,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,23,194,24,25,26,27,28,29,350,351,352,353,30,354,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,355,218,219,356,220,221,222,223,224,31,32,357,358,359,33,360,225,226,227,228,229,230,231,232,233,234,235,361,362,363,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,364,365,366,367,368,34,369,370,371,372,35,36,373,37,374,375,376,38,39,40,41,378,379,380,381,382,384,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,385,386,64,65,387,388,66,236,237,238,239,389,390,391,392,393,394,395,396,397,67,398,68,240,69,70,241,71,399,242,400,72,73,74,243,75,76,244,245,77,78,79,80,401,81,82,514,515,516,517,518,519,246,247,83,248,249,84,85,86,87,88,89,90,402,403,91,404,405,250,92,93,94,406,407,408,251,252,253,254,409,520,521,410,411,412,95,522,96,97,98,99,100,101,102,103,523,104,105,106,524,255,256,257,258,413,259,107,414,108,109,260,110,111,261,112,113,114,115,116,117,118,119,120,121,122,123,415,416,262,124,417,418,263,125,126,127,128,277,129,130,131,132,133,134,272,135,136,137,138,139,140,141,142,143,144,145,146,419,147,148,149,150,420,421,422,423,424,151,425,426,427,428,429,430,264,152,432,434,153,265,154,155,525,436,437,156,439,440,441,442,443,444,157,445,446,447,448,449,450,451,452,453,158,454,455,159,456,457,458,459,460,461,462,463,464,160,465,466,467,468,469,161,470,471,472,473,162,163,474,266,164,165,166,475,167,267,168,169,170,476,477,171,172,268,478,269,173,479,174,481,482,270,175,271],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[329],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[309,348,357,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[435,479,526,527,528,529,530],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[110,435,436,173,479,526,527,528,531,532],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests2.UsageTest.argumentsOrdered":477,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":398,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":195,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":163,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":513,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":526,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":6,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":299,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":337,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":8,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":227,"org.easymock.tests.UsageTest.argumentsOrdered":388,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":530,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":521,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":5,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":497,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":174,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":258,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":491,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":19,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":496,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":210,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":186,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":256,"org.easymock.tests.UsageThrowableTest.throwError":23,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":298,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":500,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests2.CompareToTest.testLessOrEqual":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":460,"org.easymock.tests2.UsageTest.niceToStrict":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":283,"org.easymock.tests2.ThreadingTest.testChangeDefault":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.MockBuilderTest.testCreateMock":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":204,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":139,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":367,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":138,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":355,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":212,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":184,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":257,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.samples.BasicClassMockTest.testPrintContent":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":185,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":28,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":532,"org.easymock.tests2.UsageConstraintsTest.greaterThan":142,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":501,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":384,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":402,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":493,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":188,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":114,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":416,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":115,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":49,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":362,"org.easymock.tests.UsageExpectAndReturnTest.longType":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":213,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":419,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":358,"org.easymock.tests.UsageCallCountTest.tooManyCalls":363,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":101,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":371,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":485,"org.easymock.tests2.UsageConstraintsTest.testContains":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":231,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":13,"org.easymock.tests.MockTypeTest.fromEasyMockClass":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":269,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests.UsageExpectAndReturnTest.object":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":527,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":281,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":479,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":462,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":474,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":377,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":389,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":279,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":463,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":499,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.tests.ReplayStateInvalidCallsTest.times":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":357,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":520,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":51,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":318,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":207,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":481,"org.easymock.tests.UsageExpectAndThrowTest.object":205,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":145,"org.easymock.tests2.DelegateToTest.testWrongClass":417,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":503,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":396,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":411,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":451,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":495,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":40,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":515,"org.easymock.tests.UsageUnorderedTest.message":350,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":394,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":249,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests.LimitationsTest.mockNativeMethod":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":61,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":511,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":516,"org.easymock.tests2.NameTest.nameForMocksControl":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":478,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.CompareToTest.testNotComparable":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.CompareToTest.testCompareEqual":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":510,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":146,"org.easymock.tests.MockingTest.testTwoMocks":372,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":507,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":524,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":203,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":476,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":149,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":519,"org.easymock.samples.ExampleTest.removeNonExistingDocument":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":518,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":379,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":439,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":456,"org.easymock.tests.UsageExpectAndThrowTest.floatType":197,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":480,"org.easymock.tests.UsageVerifyTest.twoThrows":187,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.UsageConstraintsTest.testNotNull":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":404,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":517,"org.easymock.tests.UsageThrowableTest.throwCheckedException":26,"org.easymock.tests.MockingTest.testStrictClassMocking":370,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":102,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":104,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests2.CompareToTest.testGreateOrEqual":273,"org.easymock.tests.ObjectMethodsTest.testHashCode":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":529,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":509,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests2.NameTest.nameForNiceMock":253,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":504,"org.easymock.tests2.DependencyTest.testInterfaceMocking":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":528,"org.easymock.samples.ExampleTest.addDocument":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":525,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndReturnTest.floatType":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":143,"org.easymock.tests.UsageThrowableTest.noUpperLimit":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":409,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":43,"org.easymock.samples.SupportTest.addDocument":400,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":523,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":494,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":457,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":492,"org.easymock.tests2.NameTest.nameForMock":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":438,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":209,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":20,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests2.NameTest.nameForStrictMock":252,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":380,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":152,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":498,"org.easymock.tests2.UsageConstraintsTest.lessThan":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":531,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":461,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":514,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageTest.wrongArguments":386,"org.easymock.tests2.MockBuilderTest.testWithConstructor":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":458,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":303,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":361,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":512,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":482,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":401,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":432,"org.easymock.tests.UsageTest.unexpectedCallWithArray":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":508,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":242,"org.easymock.tests.UsageStrictMockTest.testVerify":191,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":393,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests2.CompareToTest.testGreateThan":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":183,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":245,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":48,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216}}]
