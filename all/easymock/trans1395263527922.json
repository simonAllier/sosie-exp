[{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:131","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[24,25,26,27,28],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[32,33,34,35,36,37,38,39,21,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[32,47,48,41,49,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[32,47,48,41,49,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[55,56,57,58,21,40,59,60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[32,33,34,35,36,37,38,39,21,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,59,103,104,105,106,107,108,109,110,111,112,113,3,4,5,6,114,115,116,117,118,13,14,119,63,120,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,55,122,123,124,125,94,126,127,128,129,130,131,132,133,56,134,135,136,95,96,97,58,40,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,22,23,160,161,162,163,164,165,166,167,168,59,42,60,103,104,169,170,171,105,106,107,108,109,172,173,174,175,176,177,178,179,62,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,0,112,113,1,2,3,4,5,6,7,8,10,202,114,203,115,116,204,117,118,11,12,205,206,207,13,14,119,208,209,210,211,212,213,214,215,216,217,52,53,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,63,46,64,120,236,237,238,239,240,241,242,15,16,17,18,243,244,245,246,19,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,2,4,6,7,9,11,13,15,17,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[32,33,34,35,249,37,39,21,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[89,90,91,92,93,121,55,32,33,122,123,34,35,124,125,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,94,126,296,130,131,132,133,297,298,24,299,300,56,38,134,135,136,301,302,39,95,96,303,304,97,58,21,40,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,305,158,159,22,23,160,161,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,41,59,325,42,60,61,326,103,104,169,170,171,327,328,329,330,331,332,105,106,107,108,109,333,334,173,25,174,175,335,176,336,337,177,178,179,62,43,180,338,181,182,183,44,45,184,185,191,192,195,112,113,1,2,3,4,5,6,7,8,9,10,202,114,203,115,116,204,117,118,11,12,205,206,207,13,14,119,208,339,340,341,209,342,343,344,345,346,347,348,210,349,350,351,211,212,213,214,215,352,216,353,26,217,27,354,28,52,53,219,220,221,222,223,224,225,226,227,228,229,230,355,356,357,358,359,235,360,361,63,362,46,64,65,363,120,240,15,16,17,18,243,364,365,244,245,246,19,20,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[366,162,367,368,369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:78","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllDeclaredMethods(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[32,33,34,35,37,39,21,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[112,117,12,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[372,189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[32,47,48,41,49,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[89,90,91,92,93,94,95,96,97,59,103,104,105,106,107,108,109,110,111,112,113,3,4,5,6,114,115,116,117,118,13,14,119,63,120,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[373,374,375,376,377,378],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[379,341,350,351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:70","failures":[89,90,91,92,93,121,55,32,33,122,123,34,35,124,380,125,381,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,94,126,39,95,96,303,304,97,315,41,59,103,104,105,106,107,108,109,191,192,199,112,113,1,2,3,4,5,6,7,8,9,10,202,114,203,115,116,204,117,118,11,12,205,206,207,13,14,119,350,351,215,63,382,15,16,17,18,243,364,365,244,245,246,19,20,247,248],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[372,383,287,296,127,128,129,162,367,368,163,384,172,110,110,111,111,385,386,387,388,186,389,187,390,188,189,391,190,392,393,193,194,196,197,198,394,199,395,200,201,0,210,396,397,52,54,218,231,232,233,234,236,237,238,239,241,242],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[366,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[42,60,46,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89,90,91,92,93,94,95,96,97,398,98,99,100,101,102,59,103,104,327,105,106,107,108,109,110,110,111,111,112,113,3,4,5,6,114,115,116,117,118,13,14,119,63,120,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":72,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":338,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":334,"org.easymock.tests2.DelegateToTest.testReturnException":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":256,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":8,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":383,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":228,"org.easymock.tests2.CaptureTest.testPrimitive":18,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":275,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":91,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":109,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":223,"org.easymock.tests2.DelegateToTest.testDelegate":28,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":66,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":93,"org.easymock.samples.PartialClassMockTest.testGetArea":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":170,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":85,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":265,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":367,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":273,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":396,"org.easymock.tests2.CaptureTest.testCaptureAll":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":92,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.samples.BasicClassMockTest.testPrintContent":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":354,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":394,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":222,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":274,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":206,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.UsageCallCountTest.tooManyCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":237,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":388,"org.easymock.tests2.UsageConstraintsTest.testContains":114,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":210,"org.easymock.tests2.UsageConstraintsTest.testFind":3,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":351,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":227,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":100,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":153,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":68,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":343,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":382,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":168,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":253,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":67,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":234,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":50,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":268,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":318,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":339,"org.easymock.tests.UsageExpectAndThrowTest.object":266,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":12,"org.easymock.tests2.DelegateToTest.testWrongClass":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":110,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":171,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":374,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":292,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":385,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":304,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests2.StubTest.stub":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":80,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":260,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":78,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":205,"org.easymock.tests.MockingTest.testTwoMocks":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":264,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":378,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":69,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":393,"org.easymock.tests.UsageExpectAndThrowTest.floatType":258,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":204,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":341,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":201,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":347,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":79,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.CallbackTest.callback":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.UsageCallCountTest.tooFewCalls":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":126,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.samples.ExampleTest.addDocument":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":217,"org.easymock.tests2.AnswerTest.stubAnswer":209,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":218,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":111,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":75,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":113,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.tests2.UsageConstraintsTest.testSame":5,"org.easymock.samples.SupportTest.addDocument":337,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":74,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests2.MockedExceptionTest.testRealException":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":249,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":186,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":370,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":373,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":340,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":389,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":336,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CompareToTest.testGreateThan":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":365,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":277}}]
