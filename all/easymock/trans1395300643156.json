[{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,1,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[337,296,297,298],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[338,339,340,341,342,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[345,346,347,348,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[182,183,350,351,352,353,2,239,354,3,355,4,5,356,357,358,359,360,6,282,361,7,362,8,9,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"injection":"injection","fieldName":"qualifier","this":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[14,20,27,28,53,62,68,75,76,364,110,162,176],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[33,36,365,117,118,121,122,159,160,167,168,231,302,308,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[367,368,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,120,157,167,222,299,306,329,330,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[370,371,372,373,374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375,376,377,364,378,379,380,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[195,197,205,246,247,249,251,252,383,263,268],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[384,385,386],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[387,388,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[390,391,392,393],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[337,296,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[394,395,10,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,375,420,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,421,422,423,424,425,0,426,427,31,32,33,34,35,36,37,38,39,428,429,430,431,432,40,41,42,43,44,45,46,47,48,49,50,51,52,53,390,391,433,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,376,377,364,434,79,80,435,436,81,82,83,84,437,85,86,87,438,439,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,440,109,110,111,112,113,114,441,442,443,115,116,117,118,119,120,121,122,123,444,445,446,124,125,447,126,448,449,450,127,128,129,130,131,451,452,453,387,454,455,132,133,134,456,135,136,137,138,139,140,141,142,457,458,459,460,461,462,463,464,465,378,466,379,467,468,469,470,471,472,473,474,380,381,475,382,143,144,145,146,147,148,149,150,151,152,153,154,476,155,392,156,157,393,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,477,478,479,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,345,216,480,481,217,218,219,220,482,483,221,222,484,223,224,225,226,227,228,229,230,231,232,233,234,338,235,236,237,238,485,350,351,352,353,2,239,354,3,355,4,5,356,486,487,488,240,489,490,241,491,492,493,494,495,496,497,498,499,242,500,501,502,503,504,243,505,506,244,245,246,247,507,248,249,250,251,252,253,383,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,508,271,272,273,509,274,510,511,275,276,277,346,278,279,280,281,357,358,359,360,6,282,361,7,362,8,9,363,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,512,313,513,514,515,516,517,518,519,347,366,348,349,314,315,316,317,520,318,319,320,521,321,322,522,523,323,324,1,325,524,525,326,327,328,329,330,331,332,333,526,527,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[367,368,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[33,34,54,55,56,57,58,107,108,113,142,160,170,171,172,173,174,175,176,195,196,197,198,199,200,201,202,203,204,205,206,207,208,216,229,485,244,245,246,247,248,249,250,251,252,253,383,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[113,115,460,167,222,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[246,253,258,270,373],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[388],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":309,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":466,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":304,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":183,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":484,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":276,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":302,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":0,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":212,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":292,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":58,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":78,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":428,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageVarargTest.varargIntAccepted":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":515,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":402,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.DependencyTest.testClassMocking":510,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":423,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":432,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":74,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":53,"org.easymock.tests2.DependencyTest.testClassMockingSupport":511,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":390,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":506,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":405,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests2.CompareToTest.testLessOrEqual":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":495,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":60,"org.easymock.tests2.UsageTest.niceToStrict":303,"org.easymock.tests2.ThreadingTest.testChangeDefault":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":323,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":68,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":258,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":22,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":388,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":257,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests2.EasyMockSupportClassTest.testAll":240,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":51,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.samples.ExampleTest.voteForRemovals":191,"org.easymock.tests.UsageVarargTest.allKinds":142,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":52,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":220,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":406,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":455,"org.easymock.samples.ExampleTest.voteForRemoval":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":398,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":525,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":508,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":286,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":280,"org.easymock.tests2.UsageTest.moreThanOneArgument":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":327,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":141,"org.easymock.tests.GenericTest.testBridgedEquals":436,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":47,"org.easymock.tests.UsageExpectAndReturnTest.longType":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":49,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":77,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":478,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.UsageCallCountTest.tooManyCalls":48,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests.MockingTest.testNiceClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":315,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":41,"org.easymock.tests2.UsageConstraintsTest.testContains":256,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":248,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":313,"org.easymock.tests.UsageExpectAndReturnTest.object":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":291,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":87,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":497,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":135,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.object":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":85,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":357,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":65,"org.easymock.tests.ReplayStateInvalidCallsTest.times":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":477,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":411,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":385,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":243,"org.easymock.tests2.UsageTest.resumeIfFailure":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":514,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":298,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":471,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":71,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":337,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":475,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":526,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":420,"org.easymock.tests.UsageExpectAndThrowTest.object":69,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":264,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.samples.ConstructorCalledMockTest.testTax":180,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":517,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":486,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":400,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":347,"org.easymock.tests.UsageUnorderedTest.message":160,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":140,"org.easymock.tests2.ThreadingTest.testThreadSafe":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":500,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":45,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.UsageExpectAndThrowTest.longType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":387,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":230,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":282,"org.easymock.tests2.SerializationTest.testClass":296,"org.easymock.tests.LimitationsTest.mockNativeMethod":10,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":416,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":233,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":490,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":512,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":325,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":214,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests2.CompareToTest.testCompareEqual":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":415,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":320,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":265,"org.easymock.tests.MockingTest.testTwoMocks":446,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":412,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":521,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":269,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":349,"org.easymock.samples.ExampleTest.removeNonExistingDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":359,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":452,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":279,"org.easymock.tests2.MockBuilderTest.testCreateMockString":328,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":491,"org.easymock.tests.UsageExpectAndThrowTest.floatType":61,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":334,"org.easymock.tests.UsageVerifyTest.twoThrows":167,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":242,"org.easymock.samples.ExampleTest.voteAgainstRemoval":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":395,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":307,"org.easymock.samples.ExampleTest.voteAgainstRemovals":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":26,"org.easymock.tests.UsageVarargTest.differentLength":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.UsageConstraintsTest.equals":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":319,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":318,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests.ObjectMethodsTest.testHashCode":86,"org.easymock.tests2.CompareToTest.testGreateOrEqual":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":414,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":281,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":409,"org.easymock.tests2.DependencyTest.testInterfaceMocking":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":341,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":505,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.AnswerTest.stubAnswer":335,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":524,"org.easymock.tests.UsageVarargTest.varargLongAccepted":139,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":29,"org.easymock.tests.UsageExpectAndReturnTest.floatType":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":234,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":181,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":513,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests2.SerializationTest.test":297,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":389,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":12,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.samples.SupportTest.addDocument":184,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":520,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":399,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":492,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":397,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":23,"org.easymock.tests2.UsageStrictMockTest.differentMethods":232,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":73,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":84,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":468,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":229,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":523,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":453,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":322,"org.easymock.tests2.UsageStrictMockTest.range":231,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":403,"org.easymock.tests2.UsageConstraintsTest.lessThan":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":496,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":519,"org.easymock.tests2.UsageConstraintsTest.testOr":251,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":210,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":493,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":24,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":454,"org.easymock.tests.UsageVarargTest.varargShortAccepted":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":46,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":417,"org.easymock.tests2.UsageConstraintsTest.cmpTo":255,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":527,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":407,"org.easymock.tests2.CompareToTest.testLessThan":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":306,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":522,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":413,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":193,"org.easymock.tests.UsageStrictMockTest.testVerify":39,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":182,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":50,"org.easymock.tests2.CompareToTest.testGreateThan":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.LimitationsTest.abstractClass":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289}}]
