[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[49,50,51,47,52,53,54,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[0,59,60,61,62,63,64,65,66,15,67,68,69,70,71,72,73,74,75,76,49,77,50,78,79,80,81,82,83,84,51,85,86,87,88,89,90,47,52,91,53,92,54,55,93,56,94,95,96,97,98,99,48,100,101,57,102,103,104,105,58,106,107,108,109,110],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[111,112,113,114,9,10,11,12,15,115,116,117,118,119,36,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[0,1,120,121,122,123,124,125,126,6,12,14,17,18,127,23,128,51,26,27,129,28,29,30,130,131,33,37,38,40,43,45,46,52,55,93,94,97,57,102,103,105],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[132,133,134,135,136,137,138],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[139,140,141,142,143,144,145,146,147,148],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,5,6,7,9,10,11,12,149,15,17,36,39,40,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[73,53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[151,139,152,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[111,112,9,15,115,117],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[154,155,156,157,158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[154,160,161,162,155,156,163,164,165,166,167,168,169,170,157,171,172,173,158,174,175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[177,178,179,180,181,182,183,184,185,186,187,132,133,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,211,212,213,0,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,1,234,235,59,60,236,237,238,239,240,241,242,243,244,245,120,121,246,122,123,124,125,126,61,62,63,64,65,247,6,7,8,114,9,10,248,249,11,12,13,250,251,252,253,66,254,255,256,257,149,14,258,15,67,16,17,18,259,260,261,262,263,264,265,266,19,20,21,267,127,268,269,270,271,272,273,68,69,70,71,72,274,275,276,277,278,22,279,280,281,282,73,74,75,283,284,23,285,286,287,288,289,76,290,24,128,25,49,77,50,78,79,80,81,82,83,84,51,85,86,87,291,292,293,294,295,296,297,298,299,26,300,301,302,303,304,305,306,307,139,152,153,308,27,309,129,310,28,29,311,312,30,130,131,313,314,315,316,317,318,319,320,321,322,323,324,325,326,31,327,328,329,330,32,33,34,35,331,119,36,37,38,332,333,334,39,40,41,42,43,335,88,44,45,46,336,337,338,339,340,341,342,343,344,345,89,90,47,52,91,53,92,54,55,93,94,95,96,97,98,99,48,100,101,57,102,103,104,105,58,106,107,109,110,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[346,347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[49,50,51,47,52,53,54,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[0,349,350,6,7,17,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[101],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[162,351,352,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[139,354,140,141,142,355,356,144,145,148],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,120,246,122,123,124,125,126,64,6,8,66,257,162,268,351,352,353,35,344],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[177,132,132,133,133,188,189,357,212,213,358,359,236,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,260,261,262,378,283,379,284,23,286,287,288,289,76,134,380,290,24,128,25,381,382,383,384,385,296,386,387,297,388,389,390,391,392,393,394,395,396,298,397,398,399,400,401,299,402,403,300,301,302,139,153,315,316,317,318,320,321,326,31,404,405,327,328,329,330,146,32,33,34,406,407,147,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[139,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,112,408,5,247,6,7,114,409,410,411,149,67,17,18,412,413,414,115,415,416,417,418,119,88,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.Capture:82","failures":[49,50,78,79,80,81,82,84,419,51,85,87],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[420,98,103,107],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[151,139,152,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[0,59,60,61,62,63,64,65,66,15,67,68,69,70,71,72,73,74,75,76,49,77,50,78,79,80,81,82,83,84,51,85,86,87,294,88,89,90,47,52,91,53,92,54,55,93,56,94,95,96,97,98,99,48,100,101,57,102,103,104,105,58,106,107,108,109,110],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":190,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.MockingTest.testPartialClassMocking":260,"org.easymock.tests.MockClassControlTest.testToString":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":239,"org.easymock.samples.ExampleTest.answerVsDelegate":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":271,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests2.AnswerTest.answer":304,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":310,"org.easymock.tests2.DelegateToTest.testDelegate":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":206,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":412,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.UsageThrowableTest.throwError":120,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":327,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":200,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":208,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":137,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":272,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests.UsageVarargTest.allKinds":73,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":247,"org.easymock.samples.BasicClassMockTest.testPrintContent":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":244,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":125,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":144,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":292,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":289,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":309,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":129,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":209,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":21,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":302,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":230,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.EasyMockSupportTest.testVerify":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":347,"org.easymock.tests.DefaultClassInstantiatorTest.object":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":197,"org.easymock.tests.CapturesMatcherTest.test":211,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":231,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":299,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":372,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":344,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":153,"org.easymock.samples.SupportTest.voteForRemovals":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":203,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":151,"org.easymock.tests.UsageExpectAndThrowTest.object":201,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":132,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":329,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":111,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":2,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":188,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":64,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.SerializationTest.testClass":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":358,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.MockedExceptionTest.testMockedException":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":330,"org.easymock.tests.MockingTest.testNicePartialClassMocking":261,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":288,"org.easymock.tests2.CompareToTest.testCompareEqual":159,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":413,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":321,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":199,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ConstraintsToStringTest.andToString":417,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":293,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":193,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":298,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":300,"org.easymock.tests2.UsageTest.defaultResetToNice":334,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":229,"org.easymock.tests.UsageVarargTest.differentLength":22,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":134,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":63,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":240,"org.easymock.tests.UsageThrowableTest.throwCheckedException":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":355,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":295,"org.easymock.tests2.DependencyTest.testInterfaceMocking":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":142,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.DelegateToTest.testStubDelegate":323,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":147,"org.easymock.tests2.ConstraintsToStringTest.orToString":414,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":133,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":406,"org.easymock.tests2.SerializationTest.test":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.samples.SupportTest.addDocument":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":138,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":170,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":407,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":54,"org.easymock.tests.UsageRangeTest.combination":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":19,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.CompareToTest.testLessThan":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests2.CaptureTest.testCaptureFromStub":85,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":404,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":228,"org.easymock.tests2.CaptureTest.testCapture":419,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":184,"org.easymock.tests2.ConstraintsToStringTest.notToString":415,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":187,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":242,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":220,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":350}}]
