[{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[14,0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,7,39,40,41,42,43,44,45,46,47,48,49,49,50,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[74,15,16,17,18,75,19,20,21,22,76,23,24,25,26,27,77,78,79,80,81,82,28,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,49,49,50,50,29,130,131,132,133,134,135,136,137,138,139,140,141,142,143,30,144,145,146,147,148,149,150,151,152,153,154,155,2,156,157,158,159,160,161,162,31,32],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[81,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,77,78,79,183,80,81,82,83,89,184,185,186,187,188,189,190,33,191,192,193,194,195,196,197,198,199,163,200,201,202,203,204,205,34,35,5,6,36,37,38,7,8,206,207,208,39,209,40,41,164,42,43,10,210,211,212,213,44,45,46,14,0,214,99,215,216,217,218,219,220,221,11,222,12,223,224,225,226,227,228,229,13,47,230,231,232,233,121,124,234,127,128,129,235,236,48,237,238,239,240,241,242,243,244,245,246,247,130,131,248,249,250,251,252,253,51,254,52,53,54,55,56,138,139,255,256,257,57,58,59,60,61,140,142,143,144,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,67,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,68,69,326,327,70,160,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,71,72,344,345,346,347,348,349,350,351,352,353,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[17,19,21,22,24,78,183,80,82,92,186,99,102,112,118,220,121,122,123,124,234,125,126,29,58,148,149,150,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[165,166,167,168,169,15,17,19,20,21,22,23,24,26,170,171,172,173,174,175,176,355,177,178,179,180,181,27,182,77,78,79,183,80,81,82,28,83,86,87,88,89,92,184,185,186,187,188,189,190,33,191,192,193,194,195,196,197,198,199,163,200,201,356,202,203,204,205,34,35,5,6,36,37,38,7,8,206,207,208,39,209,40,41,164,42,43,10,210,211,212,213,44,45,46,14,214,99,102,112,118,215,216,217,218,219,220,221,11,222,12,223,224,225,226,227,228,229,13,47,230,231,232,357,358,359,233,121,122,123,124,234,125,126,127,128,129,235,236,48,49,50,237,29,238,239,240,241,242,243,244,245,246,247,130,131,248,249,250,251,360,252,253,51,254,52,53,54,55,56,255,256,257,361,57,58,59,60,61,140,142,143,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,148,149,150,286,287,288,67,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,362,316,317,318,319,320,321,322,323,324,325,68,69,326,327,70,160,330,331,332,333,334,335,363,364,365,366,367,368,369,370,371,338,339,340,341,342,343,71,72,344,345,346,347,348,349,350,351,352,353,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[220,11,373,374,375],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[141,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[141,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[379,380,381,1,76,382,27,84,92,93,383,49,50],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":378,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":303,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":237,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests2.DelegateToTest.testReturnException":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":141,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":258,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests.UsageExpectAndThrowTest.object":268,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":68,"org.easymock.tests.UsageStrictMockTest.range":290,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":355,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":121,"org.easymock.tests2.UsageConstraintsTest.testNull":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":178,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests.UsageTest.moreThanOneArgument":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":54,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.UsageUnorderedTest.message":322,"org.easymock.tests.UsageVerifyTest.twoReturns":343,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests.UsageTest.argumentsOrdered":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":251,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":327,"org.easymock.tests2.UsageConstraintsTest.any":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.UsageExpectAndThrowTest.longType":261,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":2,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":313,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests2.DelegateToTest.testDelegate":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":262,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":273,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests.LimitationsTest.mockFinalMethod":161,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":147,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":266,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests.UsageThrowableTest.throwError":278,"org.easymock.tests.UsageStrictMockTest.differentMethods":291,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":154,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":132,"org.easymock.tests.UsageExpectAndThrowTest.floatType":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":103,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.UsageVerifyTest.twoThrows":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.PartialClassMockTest.testGetArea":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":259,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":107,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":162,"org.easymock.tests.LimitationsTest.privateConstructor":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":62,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":19,"org.easymock.tests2.UsageTest.defaultResetToNice":356,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":309,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":115,"org.easymock.tests2.CallbackTest.callback":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":84,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":267,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":326,"org.easymock.tests.UsageCallCountTest.tooFewCalls":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":282,"org.easymock.tests2.EasyMockSupportClassTest.testAll":99,"org.easymock.tests.MockClassControlTest.testEquals":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":275,"org.easymock.tests.MockingTest.testStrictClassMocking":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests2.CaptureTest.testCaptureAll":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":55,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":341,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":370,"org.easymock.samples.BasicClassMockTest.testPrintContent":131,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.DelegateToTest.testStubDelegate":186,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.AnswerTest.stubAnswer":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":157,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":312,"org.easymock.tests.UsageExpectAndReturnTest.floatType":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":279,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":76,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":295,"org.easymock.tests2.UsageConstraintsTest.testSame":38,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":104,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":367,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":276,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":212,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":274,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":52,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":272,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":248,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":263,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":69,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":122,"org.easymock.tests.MockingTest.testNiceClassMocking":151,"org.easymock.tests.MockingTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":16,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":36,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":340,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":14,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageExpectAndReturnTest.object":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":95,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":17,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":177,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":108,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":374,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests.MockClassControlTest.testHashCode":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":105,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":299,"org.easymock.tests2.EasyMockSupportTest.testVerify":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":109,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":156,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageConstraintsTest.cmpTo":208,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":18,"org.easymock.tests.UsageTest.unexpectedCallWithArray":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":110,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":308,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":311,"org.easymock.tests.UsageStrictMockTest.testVerify":293,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":368,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":31,"org.easymock.tests.LimitationsTest.abstractClass":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176}}]
