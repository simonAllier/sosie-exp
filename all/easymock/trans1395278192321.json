[{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[17,18],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,17,51,52,18,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,20,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,177,178,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[79,113,114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[42,45,48,327,328,82,83,86,87,111,161,162,187,202,208,209,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[329,295,297],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[331,297,304,310,322],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[332,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,332,35,334,36,333,335,37,38,39,40,41,42,336,337,338,339,340,341,342,343,344,345,346,347,348,349,43,350,44,351,45,46,47,48,49,50,352,17,51,52,18,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,353,354,79,355,80,81,82,83,84,85,86,87,88,356,19,357,358,359,360,361,362,363,364,365,366,367,368,369,370,89,371,372,373,374,375,90,376,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,377,378,379,380,381,382,383,384,385,386,387,112,113,114,115,388,389,390,391,392,393,116,394,395,117,118,119,396,120,397,398,399,121,122,123,124,125,126,127,20,128,129,130,400,401,402,403,0,404,405,406,131,132,407,408,409,410,411,412,413,414,415,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,416,163,164,165,417,418,419,420,421,422,423,424,425,166,167,168,169,170,171,172,173,174,426,175,427,176,177,178,179,428,429,430,431,432,180,1,2,3,433,4,181,5,6,7,434,435,8,436,437,182,183,184,438,185,186,187,188,189,190,191,439,440,441,442,443,444,445,192,193,194,195,446,196,197,198,447,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,448,449,450,222,223,224,225,226,451,227,452,330,453,228,229,230,454,231,455,456,232,233,457,234,458,459,460,235,461,462,236,463,464,465,466,467,468,469,470,471,237,472,473,474,475,476,238,477,478,239,240,241,242,243,244,245,479,246,480,481,482,247,248,249,483,484,250,251,252,253,254,255,256,485,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,486,9,10,11,487,12,291,13,14,15,488,489,16,490,292,293,294,295,296,297,298,491,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[45,492,493,82,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[177,178,194,198,447,221,448,451,330,454,456,496,457,458,459,460,235,461,462,236,463,464,465,466,467,468,469,470,471,237,472,473,474,475,476,238,477,478,497,498,323],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[21,37,38,41,46,95,96,97,98,99,131,132,166,167,168,169,170,177,177,178,178,185,275,295,296,299,300,301,302,308,310,311,313,314,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[499,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[390,408,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.Range:44","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,332,35,334,36,333,335,37,38,39,40,41,42,336,337,338,339,340,341,342,343,344,345,346,347,348,349,43,350,44,351,45,46,47,48,49,50,352,17,51,52,18,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,353,354,79,355,80,81,82,83,84,85,86,87,88,356,19,357,358,359,360,361,362,363,364,365,366,367,368,369,370,89,371,372,373,374,375,90,376,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,377,378,379,380,381,382,383,384,385,386,387,112,113,114,115,388,389,390,391,392,393,116,394,395,117,118,119,396,120,397,398,399,121,122,123,124,125,126,127,20,128,129,130,400,401,402,403,0,404,405,406,131,132,407,408,409,410,411,412,413,414,415,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,416,163,164,165,417,418,419,420,421,422,423,424,425,166,167,168,169,170,171,172,173,174,426,175,427,176,177,178,179,428,429,430,431,432,180,1,2,3,433,4,181,5,6,7,434,435,8,436,437,182,183,184,438,185,186,187,188,189,190,191,439,440,441,442,443,444,445,192,193,194,195,446,196,197,198,447,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,448,449,450,222,223,224,225,226,451,227,452,330,453,228,229,230,454,231,455,456,232,233,457,234,458,459,460,235,461,462,236,463,464,465,466,467,468,469,470,471,237,472,473,474,475,476,238,477,478,239,240,241,242,243,244,245,479,246,480,481,482,247,248,249,483,484,250,251,252,253,254,255,256,485,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,486,9,10,11,487,12,291,13,14,15,488,489,16,490,292,293,294,295,296,297,298,491,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,492,493,501,81,82,83,86,87,201,202,208,209,494,502,495,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[42,46,48,49,81,504,505,506,507,160,161,162,185,187,188,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:318","failures":[17,18],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[508,323,324,325],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[332,333],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[80,358,125,161,191,199],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[21,22,37,38,39,40,41,42,45,46,95,96,97,98,99,112,125,131,132,185,246,256,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,486,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[35,334,36,43,94,117,118,119,120,400,404,409,177,177,178,178,179,430,431,509,510,511,192,193,194,195,197,198,214,221,226,512,227,452,228,229,230,231,232,233,513,234,235,236,237,238,239,240,242,243,244,245,246,482,247,248,249,323,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[271,273,514],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[264,274,298,300,303,305,320],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[42,45,48,328,82,83,86,87,111,161,162,187,202,208,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[42,45,48,328,82,83,86,87,111,161,162,187,202,208,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[277,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[418,419,423],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[21,156,233,280,287,304,306,309,312,314,315,316,317,319],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[301],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":298,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":204,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":428,"org.easymock.tests2.DelegateToTest.testReturnException":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":118,"org.easymock.tests.MockClassControlTest.testToString":410,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":504,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageTest.wrongArguments":202,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":404,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":398,"org.easymock.tests2.UsageConstraintsTest.testNull":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":242,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":287,"org.easymock.tests2.CaptureTest.testPrimitive":267,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":127,"org.easymock.tests.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":436,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":264,"org.easymock.tests2.UsageTest.strictResetToDefault":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":482,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":130,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests.LimitationsTest.mockFinalMethod":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":104,"org.easymock.tests2.DependencyTest.testClassMockingSupport":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":77,"org.easymock.tests2.CaptureTest.testCapture1_2446744":268,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.UsageThrowableTest.throwError":17,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":0,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":8,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.MockingTest.testInterfaceMocking":396,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests2.CompareToTest.testLessOrEqual":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":228,"org.easymock.tests2.MockBuilderTest.testCreateMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":416,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":309,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":273,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests.MockClassControlTest.testEquals":414,"org.easymock.tests2.EasyMockSupportClassTest.testAll":235,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":102,"org.easymock.tests2.CaptureTest.testCaptureAll":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":175,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":103,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":6,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":262,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":249,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":483,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":245,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":280,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":258,"org.easymock.tests2.CaptureTest.testCaptureFirst":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":219,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":387,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":33,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":100,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":278,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":513,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":92,"org.easymock.tests.UsageCallCountTest.tooManyCalls":34,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":54,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":512,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":27,"org.easymock.tests2.UsageConstraintsTest.testContains":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":214,"org.easymock.tests2.UsageConstraintsTest.testFind":299,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageExpectAndReturnTest.object":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":286,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":20,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":501,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":107,"org.easymock.tests.MockClassControlTest.testHashCode":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":2,"org.easymock.tests2.EasyMockSupportTest.testVerify":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":490,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":381,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.object":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":23,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":389,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":1,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":91,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":238,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":319,"org.easymock.tests2.SerializationTest.testAllMockedMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":90,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":316,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":177,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":444,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":115,"org.easymock.tests2.CaptureTest.testCaptureNone":272,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":386,"org.easymock.tests2.ThreadingTest.testThreadSafe":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":31,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":430,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.tests2.CaptureTest.testCapture_2617107":266,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":503,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":353,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageConstraintsTest.any":306,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":93,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.SerializationTest.testClass":323,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":511,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":11,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":12,"org.easymock.tests2.MockedExceptionTest.testMockedException":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":120,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":231,"org.easymock.tests.MockingTest.testNicePartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":9,"org.easymock.tests2.CaptureTest.testCaptureLast":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":78,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":303,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":317,"org.easymock.tests.MockingTest.testTwoMocks":117,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":321,"org.easymock.samples.ExampleTest.removeNonExistingDocument":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":3,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":218,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":212,"org.easymock.tests2.UsageTest.defaultResetToNice":207,"org.easymock.samples.ExampleTest.voteAgainstRemovals":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":10,"org.easymock.tests.UsageVarargTest.differentLength":383,"org.easymock.tests2.CallbackTest.callback":326,"org.easymock.tests2.UsageConstraintsTest.equals":491,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":515,"org.easymock.tests.UsageThrowableTest.throwCheckedException":53,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.CompareToTest.testGreateOrEqual":331,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":220,"org.easymock.tests2.NameTest.nameForNiceMock":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.samples.ExampleTest.addDocument":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":260,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":455,"org.easymock.tests.UsageVarargTest.varargLongAccepted":385,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":221,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":314,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":439,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":269,"org.easymock.tests2.SerializationTest.test":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.tests2.UsageConstraintsTest.testSame":301,"org.easymock.samples.SupportTest.addDocument":432,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":446,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":7,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":397,"org.easymock.tests2.NameTest.nameForMock":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":457,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":159,"org.easymock.tests2.MockedExceptionTest.testRealException":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":327,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests2.NameTest.nameForStrictMock":223,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":443,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":315,"org.easymock.tests.ErrorMessageTest.testGetters":506,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":274,"org.easymock.tests2.UsageConstraintsTest.testOr":302,"org.easymock.tests.UsageRangeTest.combination":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":240,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.MockBuilderTest.testWithConstructor":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageVarargTest.varargShortAccepted":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":32,"org.easymock.tests2.UsageConstraintsTest.cmpTo":307,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":452,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":30,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":71,"org.easymock.tests2.CaptureTest.testCapture":514,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.UsageConstraintsTest.constraints":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":176,"org.easymock.tests.UsageStrictMockTest.testVerify":352,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":429,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":101,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":270,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.LimitationsTest.abstractClass":348,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":284,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":378}}]
