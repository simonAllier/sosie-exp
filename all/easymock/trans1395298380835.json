[{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,2,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,97,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,137,138,139,140,141,142,7,143,144,145,146,8,62,70,71,73,80,89,91,147,9,148,10,11,149,12,150,151,152,153,13,154,14,15,16,155,19,20,156,157,158,159,21,160,161,22,23,162],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,137,138,139,140,141,142,7,143,144,145,146,8,62,70,71,73,80,89,91,147,9,148,10,11,149,12,150,151,152,153,13,154,14,15,16,155,19,20,156,157,158,159,21,160,161,22,23,162],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[163,164,165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[166,0,1,167,168,169,170,171,6,172,173,138,174,175,176,142,7,177,143,178,179,180,144,145,181,182,146,183,184,8,27,28,29,30,185,31,32,33,38,41,51,57,186,62,65,67,68,71,187,188,189,190,191,192,193,194,195,196,197,79,80,198,81,82,83,85,89,90,91,199,200,147,201,202,163,203,204,205,206,207,208,209,210,211,212,9,213,214,164,215,216,217,218,165,219,220,96,221,222,223,224,225,226,227,228,229,230,231,11,149,232,233,234,235,236,237,99,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,12,266,267,268,13,269,270,271,272,273,16,114,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,118,307,19,20,308,309,310,311,21,312,313,314,315,23,162,133,134,135],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[174,175,11,149,242,267,268,307,23,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[316,317,318,319,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[188,192,193,197,204,207,231,238,239,243,244,322,323,245,269,270,271,272,273,16,303,304,306,315],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[324,223,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,326,327,328,329,167,330,168,169,170,331,332,172,173,138,139,176,142,8,28,29,31,32,33,333,334,335,336,337,186,60,65,66,187,188,189,190,338,339,192,193,194,195,197,79,198,81,82,83,85,88,90,199,200,147,201,202,163,203,204,205,206,207,208,209,210,211,212,9,213,214,164,215,216,218,165,219,220,94,95,96,340,222,223,225,226,227,230,341,231,149,342,233,234,235,236,343,237,344,238,241,242,345,346,347,348,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,104,266,349,350,351,352,353,354,269,270,271,272,273,114,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,355,297,303,304,356,357,358,359,306,360,361,362,363,364,365,366,367,368,369,370,118,119,123,307,19,20,371,372,373,374,375,311,376,377,378,379,380,21,312,313,314,381,315,162,382,383,133,134,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[2,25,26,27,30,35,38,40,42,43,46,49,52,53,56,79,80,81,82,83,85,87,88,91,92,93,95,96,100,101,104,105,106,107,108,109,110,111,112,113,114,115,118,119,121,122,123,124,125,126,127,128,129,130,131,132,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[203],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[137,140,141,11,150,151,152,153,16,19,20,159,161,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[34,384,385,386,387,388],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:551","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[330,331,332,8,337,231,11,149,344,389,322,323,104,351,16,355,305,390,391,392,393,394,23,162,395,396,397,4,398],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[186,399,199,200,202,163,203,204,209,211,212,213,214,165,219,220,231,97,97,98,98,238,400,243,244,245,269,270,271,272,273,401,303,304,402,403,404,405,406,371,372,373,374,375,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[167,330,169,331,332,8,234,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[166,0,1,167,407,408,330,168,169,170,171,331,332,6,172,173,138,174,175,176,142,7,177,143,178,179,180,144,145,181,182,146,183,184,8,27,28,29,30,185,31,32,33,38,41,51,57,337,186,62,65,67,68,71,187,188,190,191,192,193,194,195,399,196,197,79,80,198,81,82,83,85,89,90,91,199,200,147,201,202,163,203,204,205,206,207,208,209,210,211,212,9,213,214,164,215,216,218,165,219,220,94,95,96,340,221,324,222,223,224,409,225,226,227,228,229,230,231,11,149,232,233,234,235,236,237,344,97,97,98,98,99,389,410,411,238,239,240,241,242,400,243,244,322,323,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,104,12,266,267,268,13,412,413,414,351,269,270,271,272,273,16,114,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,355,297,298,299,300,301,302,303,304,305,390,415,356,357,358,359,306,360,118,120,307,19,20,371,372,373,374,375,308,309,310,311,392,393,394,21,312,313,314,315,23,162,133,134,135,395,396,397,4,398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[296,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[416,220],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[186,94,95,96,340,239,322,412,413,414,417,418,356,357,358,359,306,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[419,420,421,422,423,166,424,425,426,427,428,429,0,1,2,326,327,328,329,167,407,408,330,168,169,430,431,170,171,331,432,332,6,172,173,137,138,139,174,175,176,140,141,142,7,25,433,434,435,26,436,437,177,143,178,179,180,144,145,181,182,146,183,184,438,8,27,28,29,30,439,185,31,32,440,33,34,441,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,442,333,334,335,336,337,186,60,443,62,63,444,64,65,66,67,384,68,445,69,70,71,446,73,447,187,188,189,190,191,338,339,192,193,194,195,399,196,197,79,80,198,81,82,83,84,448,85,86,87,88,89,90,91,92,93,199,200,147,201,449,202,163,203,204,205,206,450,207,208,209,210,211,212,9,213,214,164,215,216,217,218,165,219,220,94,95,96,340,451,452,453,454,455,221,456,457,458,459,460,461,324,222,223,224,409,225,226,227,228,229,230,148,341,231,10,11,149,342,462,232,463,233,234,235,236,343,237,464,344,465,97,98,99,100,101,389,410,411,238,239,240,241,242,345,346,347,348,400,243,244,322,323,245,102,466,467,468,469,103,470,471,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,104,12,266,150,151,267,268,152,153,13,412,413,414,349,350,351,352,353,354,154,14,15,269,270,271,272,273,16,472,105,106,107,108,109,110,473,111,474,401,475,476,477,478,479,480,481,482,483,417,484,112,113,114,115,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,485,296,355,297,298,299,300,301,302,303,304,402,486,487,488,403,404,489,418,490,491,325,492,493,494,405,495,305,496,497,406,498,499,390,500,391,415,501,502,503,504,505,506,116,356,357,358,359,306,360,361,362,363,507,364,365,155,366,367,368,369,370,117,118,119,120,121,122,123,124,125,126,127,128,129,307,19,20,371,372,373,374,375,308,508,309,310,509,311,510,392,393,394,157,376,377,378,379,380,21,312,313,314,160,381,161,315,22,23,162,382,383,130,131,132,133,134,511,135,512,513,136,395,396,397,4,398],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[168,137,138,139,140,141,143,178,179,180,144,145,182,146,183,184,8,186,71,187,188,189,190,191,338,339,192,194,195,399,196,197,199,200,147,201,202,203,204,205,206,207,209,210,211,212,9,213,214,164,215,216,218,219,220,148,231,11,149,238,241,243,323,151,152,153,296,355,298,299,300,301,302,19,21,160,161,315,23,162],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[187,189,195,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":463,"org.easymock.tests2.DelegateToTest.testReturnException":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":357,"org.easymock.tests.MockingTest.testPartialClassMocking":133,"org.easymock.tests.MockClassControlTest.testToString":124,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":243,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":347,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":513,"org.easymock.tests2.UsageConstraintsTest.testNull":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":129,"org.easymock.tests2.CaptureTest.testPrimitive":190,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":373,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":153,"org.easymock.tests.UsageVarargTest.varargIntAccepted":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":434,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests.ReplayStateInvalidUsageTest.times":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.DependencyTest.testClassMocking":430,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":496,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":467,"org.easymock.tests2.CaptureTest.testAnd":187,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":313,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":289,"org.easymock.tests.LimitationsTest.mockFinalMethod":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":380,"org.easymock.tests2.DependencyTest.testClassMockingSupport":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":191,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":476,"org.easymock.tests.UsageThrowableTest.throwError":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":461,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":59,"org.easymock.samples.PartialClassMockTest.testGetArea":99,"org.easymock.tests.MockingTest.testInterfaceMocking":511,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":410,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":345,"org.easymock.tests.UsageOverloadedMethodTest.overloading":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":211,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":210,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":507,"org.easymock.tests.MockClassControlTest.testEquals":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":74,"org.easymock.tests2.CaptureTest.testCaptureAll":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":378,"org.easymock.tests.MockNameTest.defaultName":474,"org.easymock.tests2.UsageConstraintsTest.testMatches":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":374,"org.easymock.samples.ExampleTest.voteForRemovals":237,"org.easymock.tests.UsageVarargTest.allKinds":370,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":379,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":301,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":457,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":360,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":388,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":111,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":92,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":104,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":178,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":356,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":179,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":510,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":369,"org.easymock.tests.GenericTest.testBridgedEquals":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":376,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":371,"org.easymock.tests.UsageCallCountTest.tooManyCalls":15,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":300,"org.easymock.tests.MockingTest.testNiceClassMocking":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":61,"org.easymock.tests2.UsageConstraintsTest.testContains":209,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":96,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":242,"org.easymock.tests.MockTypeTest.fromEasyMockClass":468,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":505,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.MockClassControlTest.testHashCode":127,"org.easymock.tests2.EasyMockSupportTest.testVerify":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":447,"org.easymock.tests.UsageVarargTest.varargCharAccepted":364,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":500,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":392,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":503,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.tests.CapturesMatcherTest.test":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":412,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":359,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":317,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":286,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":407,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":501,"org.easymock.tests.UsageExpectAndThrowTest.object":284,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":215,"org.easymock.tests2.DelegateToTest.testWrongClass":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":304,"org.easymock.samples.ConstructorCalledMockTest.testTax":97,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":436,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":411,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":156,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":368,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":354,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":506,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":100,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.UsageConstraintsTest.any":207,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":481,"org.easymock.tests2.StubTest.stub":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":499,"org.easymock.tests.UsageExpectAndThrowTest.longType":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":480,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":10,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":77,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests2.NameTest.nameForMocksControl":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":432,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":134,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":205,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":216,"org.easymock.tests.MockingTest.testTwoMocks":132,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":219,"org.easymock.samples.ExampleTest.removeNonExistingDocument":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":107,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":276,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":441,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.LimitationsTest.privateConstructor":113,"org.easymock.tests2.UsageConstraintsTest.testNotNull":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":302,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":299,"org.easymock.tests.MockingTest.testStrictClassMocking":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests.ObjectMethodsTest.testHashCode":504,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":319,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.NameTest.nameForNiceMock":335,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":387,"org.easymock.samples.ExampleTest.addDocument":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":223,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":315,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":445,"org.easymock.tests.UsageVarargTest.varargLongAccepted":367,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":200,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":25,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":338,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testSame":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.samples.SupportTest.addDocument":462,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":439,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":43,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":458,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":512,"org.easymock.tests2.NameTest.nameForMock":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":446,"org.easymock.tests2.UsageStrictMockTest.differentMethods":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":288,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":502,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":314,"org.easymock.tests2.MockedExceptionTest.testRealException":340,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests2.NameTest.nameForStrictMock":334,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":26,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":220,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.UsageConstraintsTest.testOr":204,"org.easymock.tests.UsageRangeTest.combination":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":151,"org.easymock.tests2.MockBuilderTest.testWithConstructor":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":44,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageVarargTest.varargShortAccepted":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":154,"org.easymock.tests2.UsageConstraintsTest.cmpTo":208,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests2.CompareToTest.testLessThan":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":488,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":399,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":475,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":63,"org.easymock.tests.UsageTest.unexpectedCallWithArray":150,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":344,"org.easymock.tests.UsageStrictMockTest.testVerify":383,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":465,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":377,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":339,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.LimitationsTest.abstractClass":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":18,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":362}}]
