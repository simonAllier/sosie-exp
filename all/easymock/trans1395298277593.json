[{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,2,6,22,23,24,25,26,27,11,28,29,30,13,14,31,32,33,34,35,21,36,37,38,39,40,41,42,43,44],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[47,48,49,7,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[54,55,56,57,58,59,47,60,61,48,62,49,0,63,64,1,2,65,66,67,3,68,69,70,4,5,71,72,6,73,74,75,76,77,78,79,80,7,50,51,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,22,9,109,110,111,112,23,24,25,113,114,45,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,10,156,157,158,159,26,160,161,162,163,27,11,28,164,165,166,167,168,169,170,171,172,173,52,174,175,176,177,178,178,179,179,180,181,29,182,183,184,185,186,187,188,189,190,191,192,193,194,12,30,195,196,13,14,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,16,17,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,21,279,280,281,282,38,39,283,284,285,286,287,288,40,41,289,290,42,43,291,292,293,294,295,296,297,298,299,53,300,46,301,302,303,44,304,305,306,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[311,312,313,314,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[318,319,81,320,321,322,323,324,325,326,327,328,329,169,330,331,170,332,333,334,335,336,337,338,339,340,171,341,342,343,344,345,172,346,347],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[318,319,81,320,321,322,323,324,325,326,327,328,329,169,330,331,170,332,333,334,335,336,337,338,339,340,171,341,342,343,344,345,172,346,347],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,84,103,119,120,123,124,125,126,132,134,135,137,138,144,145,146,178,178,179,179,185,186,187,188,189,195,349,350,351,352,353,204,205,208,265,273,274,275,276,277,283,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[354,137],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[311,355,312,313,314,315,316,356,81,317],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[124,125,129,130,139,140,144,145],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[357,358,359,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[122,127,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[7,360],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[84,106,111,207,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,237,239,240,241,242,243,244,38,286,287,290,301,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[122,126,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[81,82,361,362],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[81,154,159,363,26,364,160,161,162,163,27,11,365,366,28,181,194,367,368],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[369,370,371],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[372,373,30,374,375,40],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[354,119,137,140],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[81,82,361,362],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[80,81,361,85,86,87,88,90,91,148,149,151,152,153,154,155,376,10,156,157,158,377,159,26,364,160,161,162,163,27,11,28,167,169,170,171,172,378,379,178,178,179,179,181,380,193,381,194,382,383,384,385,386,387,388,389,390,234,235,16,17,236,367,368,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[54,55,56,57,58,47,48,62,49,0,391,63,64,1,2,65,75,76,77,78,79,80,7,50,51,81,82,361,83,84,86,87,90,91,392,393,394,395,396,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,22,9,109,110,111,112,23,24,25,113,45,115,116,118,397,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,398,399,400,148,149,150,151,152,153,154,155,401,10,156,157,158,402,159,26,364,403,160,161,27,11,28,165,166,167,168,173,52,174,175,404,176,405,177,406,407,408,409,29,410,411,412,413,414,415,416,417,418,419,420,421,185,186,187,188,189,193,381,383,384,385,386,387,388,389,390,12,422,30,195,196,13,14,197,423,424,425,201,426,427,428,31,32,33,204,205,206,207,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,429,15,16,17,18,236,430,19,20,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,431,432,433,434,435,436,437,438,439,440,278,21,279,280,281,282,38,39,284,285,286,287,288,40,41,289,290,42,43,291,292,293,294,295,297,441,367,442,443,368,444,445,298,299,53,300,46,301,303,44,304,305,306,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":109,"org.easymock.tests2.DelegateToTest.testReturnException":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":16,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":312,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":294,"org.easymock.samples.ExampleTest.answerVsDelegate":52,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":6,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":209,"org.easymock.tests.UsageVarargTest.varargIntAccepted":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":277,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":370,"org.easymock.tests.ReplayStateInvalidUsageTest.times":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":57,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":280,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":296,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":55,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":412,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":347,"org.easymock.samples.PartialClassMockTest.testGetArea":181,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":413,"org.easymock.tests.MockingTest.testInterfaceMocking":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":199,"org.easymock.tests2.UsageTest.niceToStrict":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":336,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":160,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":4,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":322,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":134,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":56,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests2.UsageConstraintsTest.testMatches":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":188,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":379,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":0,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":310,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":185,"org.easymock.tests.UsageCallCountTest.tooManyCalls":33,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests.MockingTest.testNiceClassMocking":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testClassMocking":15,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":425,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":167,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":286,"org.easymock.tests.MockTypeTest.fromEasyMockClass":442,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":51,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":72,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":313,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":324,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":311,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":338,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":53,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":397,"org.easymock.tests.UsageVarargTest.varargCharAccepted":434,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":110,"org.easymock.tests.DefaultClassInstantiatorTest.object":409,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":182,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":190,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":172,"org.easymock.tests2.UsageTest.resumeIfFailure":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":202,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":362,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":203,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":374,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":200,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":34,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":428,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":417,"org.easymock.tests2.StubTest.stub":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":416,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests2.NameTest.nameForMocksControl":400,"org.easymock.tests2.MockedExceptionTest.testMockedException":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":163,"org.easymock.tests.MockingTest.testNicePartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":297,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":405,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":414,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":332,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":48,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.UsageTest.defaultResetToNice":112,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.CallbackTest.callback":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.UsageCallCountTest.tooFewCalls":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":295,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.MockingTest.testStrictClassMocking":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":49,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":315,"org.easymock.tests2.NameTest.nameForNiceMock":399,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":314,"org.easymock.samples.ExampleTest.addDocument":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":195,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":197,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":8,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":333,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":147,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":281,"org.easymock.tests2.MockedExceptionTest.testRealException":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.NameTest.nameForStrictMock":398,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":3,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":337,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":334,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":31,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":411,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests.UsageStrictMockTest.testVerify":423,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CompareToTest.testGreateThan":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":5}}]
