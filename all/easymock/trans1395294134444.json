[{"position":"org.easymock.internal.RecordState:117","failures":[0,1,2,3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[50,52,62,63,65,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:199","sourceCode":"java.util.List<java.lang.reflect.Field>.addAll(java.util.Arrays.java.util.Arrays.asList(java.lang.Class<?>.getDeclaredFields()))","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,23,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[96,95,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[108,109,110,111,112,113,23,114,115,24,116,117,118,119,120,121,122,123,124,25,125,126,127,128,129,26,130,131,132,133,134,135,136,137,138],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[139,140],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[141,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[8,143,143,144,144,108,15,145,24,25,26,146,147,34,35,148,95,149,43,150,151,44,45,46,152,138,47,153,154,155,156,157],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[8,87,9,0,10,11,161,12,162,163,13,164,165,88,143,144,166,167,168,169,170,171,172,173,174,175,176,177,178,179,108,180,181,182,14,183,184,185,96,15,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,158,209,210,211,16,17,18,19,20,21,22,1,2,212,3,90,23,24,25,26,213,214,215,216,217,218,219,220,221,222,223,224,225,27,28,29,30,31,32,146,33,226,34,35,36,227,228,229,37,230,231,232,38,233,39,40,234,41,42,235,236,237,238,239,240,241,242,243,244,245,246,247,4,248,249,250,251,93,95,97,98,99,149,43,44,252,45,46,253,47,153,5,254,6,48,49,50,51,52,53,255,256,54,55,257,56,57,58,258,59,60,61,62,63,259,260,261,262,263,264,265,266,267,64,268,269,270,271,272,273,274,275,276,277,278,100,101,102,103,104,105,65,66,67,68,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,69,70,71,72,74,75,294,295,296,297,76,77,78,79,80,298,106,299,300,301,81,302,82,83,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,7,320,321,322,84,323,107,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,85,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.Injector:166","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[108,15,145,346,347,348,349,350,351,138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[259,262],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[166,167,168,169,170,171,172,173,175,176,177,178,179,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[143,143,144,144,177,96,186,187,190,191,192,193,198,200,201,203,204,209,210,211,38,65,66,67,68,279,352,353,354,355,356,76,77,78,79,80,298,81,357,84,323,325,85,86,358],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[87,88,89,359,360,361,91,362,363,364,92,365,366,367,94,368,369,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[156,159],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[21,372,118,121,122,28,226,36,69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[8,87,9,0,10,11,161,12,162,163,13,164,165,88,143,144,166,167,168,169,170,171,172,173,174,175,176,177,178,179,108,180,181,182,14,183,184,185,96,15,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,158,209,210,211,16,17,18,19,20,21,22,1,2,212,3,90,23,24,25,26,213,214,215,216,217,218,219,220,221,222,223,224,225,27,28,29,30,31,32,146,33,226,34,35,36,227,228,229,37,230,231,232,38,233,39,40,234,41,42,235,236,237,238,239,240,241,242,243,244,245,246,247,4,248,249,250,251,93,95,97,98,99,149,43,44,252,45,46,253,47,153,5,6,48,49,50,51,52,53,255,256,54,55,257,56,57,58,258,59,60,61,62,63,259,260,261,262,263,264,265,266,267,64,268,269,270,271,272,273,274,275,276,277,278,100,101,102,103,104,105,65,66,67,68,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,69,70,71,72,74,75,294,295,296,297,76,77,78,79,80,298,106,299,300,301,81,302,82,83,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,7,320,321,322,84,323,107,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"invocation"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[96,95,97,98,99,100,101,102,103,104,105,373,374,375,376,106,377,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[8,164,165,143,143,144,144,108,181,145,378,379,16,19,111,112,113,23,114,115,24,116,117,118,119,120,121,122,123,124,25,125,126,127,128,129,26,130,131,27,30,31,32,146,33,380,34,35,381,148,382,383,384,97,98,385,149,43,150,151,44,252,45,46,253,47,386,153,154,155,387,388,389,157,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,182,183,184,320],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[8,164,165,143,143,144,144,108,181,15,145,378,390,391,379,16,17,18,19,21,22,111,112,113,23,114,115,24,116,117,118,119,120,121,122,123,124,25,125,126,127,128,129,26,130,131,27,28,30,31,32,146,33,147,380,226,34,35,36,381,148,392,393,95,97,98,149,43,150,151,44,252,45,46,138,253,47,153,154,155,394,395,387,396,397,398,388,389,399,64,400,401,402,403,404,405,406,407,408,409,410,411,69,70,71,412,156,304,305,157,159,306],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[109,110,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[108,180,181,413],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":189,"org.easymock.tests2.UsageTest.argumentsOrdered":223,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":142,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":87,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":69,"org.easymock.tests.MockClassControlTest.testToString":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":346,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":155,"org.easymock.tests2.UsageConstraintsTest.testNull":191,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":382,"org.easymock.tests2.CaptureTest.testPrimitive":169,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":325,"org.easymock.tests.UsageTest.moreThanOneArgument":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":67,"org.easymock.tests.UsageTest.argumentsOrdered":287,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":80,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":160,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":251,"org.easymock.tests2.CaptureTest.testAnd":166,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":249,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":131,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":134,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":200,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":383,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests2.UsageConstraintsTest.testMatches":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":357,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":317,"org.easymock.samples.BasicClassMockTest.testPrintContent":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":388,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":306,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":238,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":256,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.GenericTest.testBridgedEquals":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":132,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":51,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":17,"org.easymock.tests.MockingTest.testClassMocking":410,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":6,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests.UsageExpectAndReturnTest.object":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":136,"org.easymock.tests.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":60,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":384,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":374,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests2.UsageTest.resumeIfFailure":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":413,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.samples.ConstructorCalledMockTest.testTax":143,"org.easymock.tests.UsageStrictMockTest.range":82,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":286,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests2.CaptureTest.testCaptureNone":174,"org.easymock.tests.UsageUnorderedTest.message":267,"org.easymock.tests.UsageVerifyTest.twoReturns":319,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":324,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests2.SerializationTest.testClass":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.MockedExceptionTest.testMockedException":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":285,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":71,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":411,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":222,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":210,"org.easymock.tests.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":153,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":2,"org.easymock.tests.UsageVerifyTest.twoThrows":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":59,"org.easymock.tests.UsageVarargTest.differentLength":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":147,"org.easymock.tests.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.MockingTest.testStrictClassMocking":409,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":20,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests2.CompareToTest.testGreateOrEqual":371,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":348,"org.easymock.samples.ExampleTest.addDocument":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.floatType":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":144,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":187,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":378,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":49,"org.easymock.tests2.UsageConstraintsTest.testSame":192,"org.easymock.samples.SupportTest.addDocument":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":117,"org.easymock.tests.GenericTest.testPackageScope":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":52,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":75,"org.easymock.tests2.MockedExceptionTest.testRealException":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":323,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":110,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":349,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":121,"org.easymock.tests2.UsageConstraintsTest.testOr":193,"org.easymock.tests.UsageRangeTest.combination":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":118,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":177,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":150,"org.easymock.tests.UsageTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.CaptureTest.testCapture":139,"org.easymock.tests2.UsageConstraintsTest.constraints":188,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":162,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":88,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
