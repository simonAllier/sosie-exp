[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,117,118,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[196,197,198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[202,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[204,56,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[3,206,207,208,209,26,210,211,27,212,213,214,215,216,217,218,219,220,28,221,222,223,224,225,29,226,227,228,55,229,230,56,231,57,58,232,233,59,234,235,236,84,237,238,239,95,12,96,97,98,99,101,102,104,105,107,108,109,240,110,241,242,243,111,112,113,244,245,246,247,116,117,117,118,118,248,249,250,251,252,253,254,255,256,257,258,259,140,260,200,261,262,156,263,157,264,265,266,267,193,194,195,268,269,270,271,272,273,274,275,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[35,277,48,52],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[14,278,15,279,280,281,16,282,17,18,283,3,19,206,20,21,22,23,24,25,26,27,28,29,284,285,286,287,288,289,290,30,31,32,33,34,35,36,37,0,38,39,40,41,42,43,44,45,46,47,48,49,50,291,51,52,53,54,228,55,56,231,57,58,233,59,234,292,60,61,293,62,63,294,295,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,296,235,236,84,297,298,85,299,13,300,301,302,303,86,87,88,304,89,305,90,91,92,306,307,93,94,95,96,97,98,99,100,101,102,308,103,104,105,106,107,108,109,240,110,243,111,112,113,114,115,116,309,117,117,118,118,310,119,311,120,312,121,122,313,123,314,315,248,249,124,125,126,127,128,316,317,318,319,320,321,129,130,131,322,323,324,132,325,133,134,326,327,328,329,330,331,250,136,137,138,139,251,332,333,334,335,336,337,338,339,340,341,342,343,140,344,345,346,141,347,146,147,348,349,148,149,350,150,151,152,153,154,155,351,352,353,354,355,156,263,356,357,358,359,360,361,362,363,364,365,366,367,368,369,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,178,179,391,392,180,181,393,394,182,183,184,185,395,186,187,188,189,190,191,192,396,193,194,195,397,398,399,400,401,402,403,404,405,269,270,271,272,273,274,275,276],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[3,206,406,407,408,409,26,27,28,29,228,204,55,229,56,231,57,58,233,59,410,234,84,95,96,97,98,99,101,102,104,105,107,108,109,240,110,243,111,112,113,116,117,117,118,118,248,249,250,140,200,261,156,263,157,267,193,194,195,270],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,60,293,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[24,26,236,84,300,301,302,303,89,243,328,329,330,331,251,351,352,353,354,355,412,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[413,414,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[14,278,15,279,280,281,16,282,17,18,283,3,19,206,20,21,22,23,24,25,26,27,28,29,284,285,286,287,288,289,290,30,31,32,33,34,35,36,37,0,38,277,39,40,41,42,43,44,45,46,47,48,49,50,291,51,52,53,54,55,56,57,58,59,60,61,293,62,63,294,295,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,296,84,298,85,299,13,86,87,88,304,89,305,90,91,92,306,307,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,309,310,119,311,120,312,121,122,313,123,315,248,249,124,125,126,127,128,320,129,130,131,415,322,323,324,132,325,133,134,326,327,250,136,137,138,139,140,344,345,346,141,146,147,348,349,148,149,350,150,156,263,356,357,358,359,360,361,362,363,364,365,366,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,178,179,392,180,181,393,394,182,416,183,184,185,395,186,187,188,189,190,191,192,193,194,195,397,399,400,401,402,404,405],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[417],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[14,278,15,279,280,281,16,282,17,18,283,3,19,206,20,21,22,23,24,25,26,27,28,29,284,285,286,287,288,289,290,30,31,32,33,34,35,36,37,0,38,39,40,41,42,43,44,45,46,47,48,49,50,291,51,52,53,54,228,55,56,231,57,58,233,59,234,292,60,61,293,62,63,294,295,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,296,235,236,84,297,298,85,299,13,300,301,302,303,86,87,88,304,89,305,90,91,92,306,307,93,94,95,96,97,98,99,100,101,102,308,103,104,105,106,107,108,109,240,110,243,111,112,113,114,115,116,309,117,117,118,118,310,119,311,120,312,121,122,313,123,314,315,248,249,124,125,126,127,128,316,317,318,319,320,321,129,130,131,322,323,324,132,325,133,134,326,327,328,329,330,331,250,136,137,138,139,251,332,333,334,335,336,337,338,339,340,341,342,343,140,344,418,345,346,141,347,146,147,348,349,148,149,350,150,151,152,153,154,155,351,352,353,354,355,156,263,356,357,358,359,360,361,362,363,364,365,366,367,368,369,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,178,179,391,392,180,181,393,394,182,419,183,184,185,395,186,187,188,189,190,191,192,396,193,194,195,397,398,399,400,401,402,403,404,405,269,270,271,272,273,274,275,276],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[420],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,202,203,278,15,279,280,281,16,282,17,18,283,3,19,206,421,422,423,1,424,20,425,426,427,428,429,430,21,22,23,24,25,207,208,209,26,210,211,27,212,213,214,215,216,217,218,219,220,28,221,222,223,224,225,29,226,227,284,205,285,286,431,287,288,289,290,30,31,32,33,432,34,35,36,37,0,38,277,39,40,41,42,43,44,45,46,47,48,49,50,291,51,52,53,54,228,433,55,229,434,230,56,231,57,11,58,232,233,59,435,234,292,60,61,293,62,63,294,295,64,65,66,67,68,69,70,436,437,438,2,439,71,440,441,442,443,444,445,72,73,74,75,76,77,78,79,80,81,82,83,296,235,236,84,297,446,298,85,299,447,13,237,239,448,449,300,301,302,303,86,87,88,304,89,305,90,91,92,306,307,93,94,95,12,450,96,97,98,99,100,101,102,308,103,104,105,106,107,108,109,240,451,110,241,242,243,111,112,113,244,245,246,247,114,115,116,309,117,117,118,118,310,119,311,120,312,121,122,313,123,314,315,248,249,124,125,126,127,128,316,317,318,319,320,321,129,130,131,452,453,454,455,456,457,458,411,459,460,461,462,463,464,465,413,415,466,467,468,469,470,414,471,322,323,324,132,325,133,134,326,327,328,329,330,331,472,250,135,136,137,138,139,473,196,197,474,251,252,253,254,255,256,475,257,332,333,334,335,336,337,338,339,340,341,342,343,476,198,199,258,259,140,260,344,418,345,346,477,141,347,478,142,479,200,480,481,261,482,483,143,144,145,146,147,348,349,148,149,350,150,151,152,153,154,155,351,352,353,354,355,262,156,263,157,264,356,357,358,484,359,360,361,362,363,364,365,366,485,367,368,369,486,487,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,178,179,391,392,180,181,393,394,182,488,489,416,490,491,492,419,493,183,184,185,395,186,187,188,189,190,191,192,396,265,266,267,193,194,494,195,495,412,268,397,398,399,400,401,402,403,404,405,269,270,271,272,273,274,275,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[14,202,203,278,15,279,280,281,16,282,17,18,283,19,20,425,21,22,23,24,25,26,284,285,286,287,288,289,290,30,31,32,33,34,35,36,37,0,38,277,39,40,41,42,43,44,45,46,47,48,49,50,291,51,52,53,54,228,60,61,293,62,63,294,295,64,65,66,67,68,69,70,71,440,72,73,74,75,76,77,78,79,80,81,82,83,296,235,236,84,297,446,298,85,299,447,13,300,301,302,303,86,87,88,304,89,305,90,91,92,306,307,93,94,100,308,103,106,114,115,309,310,119,311,120,312,121,122,313,123,315,124,125,126,127,128,316,317,318,319,320,321,129,130,131,415,414,322,323,324,132,325,133,134,326,327,328,329,330,331,472,135,136,137,138,139,473,196,197,476,198,199,344,418,345,346,477,141,347,142,480,481,482,483,143,144,145,146,147,348,349,148,149,350,150,151,152,153,154,155,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,485,367,368,369,486,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,178,179,391,392,180,181,393,394,182,488,489,416,490,491,492,419,183,184,185,395,186,187,188,189,190,191,192,396,267,397,399,400,401,402,403,404,405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[461],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.UsageTest.argumentsOrdered":307,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":271,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":431,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":371,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageTest.wrongArguments":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":261,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":412,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":276,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":390,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":488,"org.easymock.tests.UsageTest.argumentsOrdered":394,"org.easymock.tests.UsageVarargTest.varargIntAccepted":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":128,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":246,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":491,"org.easymock.tests2.DelegateToTest.testDelegate":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":386,"org.easymock.tests.LimitationsTest.mockFinalMethod":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests2.DependencyTest.testClassMockingSupport":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":492,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageThrowableTest.throwError":185,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":227,"org.easymock.samples.PartialClassMockTest.testGetArea":116,"org.easymock.tests.MockingTest.testInterfaceMocking":494,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":144,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":56,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":380,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":275,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":388,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":406,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests.MockNameTest.defaultName":472,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":123,"org.easymock.tests.UsageVarargTest.allKinds":366,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":240,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":446,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":365,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":404,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":151,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":198,"org.easymock.tests.UsageCallCountTest.tooManyCalls":405,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":268,"org.easymock.tests.MockingTest.testClassMocking":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":204,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":360,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":489,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.MockClassControlTest.testHashCode":274,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":218,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":292,"org.easymock.tests.UsageVarargTest.varargCharAccepted":359,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":473,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":378,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":409,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":1,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":272,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests2.SerializationTest.testAllMockedMethod":206,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.samples.SupportTest.voteForRemovals":119,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":202,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":479,"org.easymock.tests.UsageExpectAndThrowTest.object":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":184,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":145,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":370,"org.easymock.tests.UsageVerifyTest.twoReturns":150,"org.easymock.tests.UsageVarargTest.varargByteAccepted":364,"org.easymock.tests2.ThreadingTest.testThreadSafe":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":349,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.UsageExpectAndThrowTest.longType":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":423,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":408,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.MockedExceptionTest.testMockedException":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CompareToTest.testNotComparable":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":4,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":419,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":379,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":450,"org.easymock.tests.UsageVerifyTest.twoThrows":350,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":143,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":235,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":422,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":286,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":241,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":348,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests.MockingTest.testStrictClassMocking":265,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":25,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":222,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests.UsageVarargTest.varargLongAccepted":363,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":118,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":237,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":294,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":213,"org.easymock.tests.GenericTest.testPackageScope":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":495,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":435,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":385,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":239,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":217,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":392,"org.easymock.tests2.MockBuilderTest.testWithConstructor":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":214,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":391,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":315,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.LimitationsTest.abstractClass":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":357}}]
