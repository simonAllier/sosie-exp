[{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.ConstructorArgs:54","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[45,46,47],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,44,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[50,44,51,52],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[53,54,55,56,57,58,59,60,61,49,62],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,1,83,84,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,63,110,111,112,113,114,115,116,117,118,48,119,120,121,122,123,124,125,126,64,65,127,66,67,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,68,165,69,166,167,70,71,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,72,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,73,74,75,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,4,4,5,5,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,76,344,77,78,345,346,347,348,349,350,351,6,352,353,354,355,356,79,80,357,358,359,360,361,81,82,362,363,364,365,366,367,368,369,370,371,372,9,10,0,373,374,375,376,377,14,378,17,20,22,23,25,26,29,30,31,32,33,35,38,39,40,41,379,2,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,53,408,54,409,410,411,412,413,414,415,55,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,56,57,448,449,58,450,59,60,451,61,452,453,454,455,456,457,458,459,460,49,461,462,463,464,62,465,466,44,51,52,467],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[86,87,101,102,105,106,109,63,123,65,127,66,67,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,68,165,166,167,168,185,197,198,199,200,201,202,72,212,238,239,241,245,259,260,270,271,272,273,293,294,295,296,73,74,75,297,313,314,315,316,317,318,319,321,322,327,333,340,341,342,76,344,77,78,345,347,468,469,6,352,353,354,7,355,356,79,357,358,359,360,361,81,362,363,364,366,368,369,370,371,372,9,373,375,377,470,378,471,472,20,23,33,39,379,2,380,381,382,383,385,388,389,390,391,393,397,404,53,408,409,410,413,414,415,55,417,418,419,420,421,473,422,423,474,424,475,425,426,427,428,435,442,446,447,56,57,449,58,450,59,60,451,452,453,454,455,456,457,458,459,460,49,461,462,464,62,465,466,44,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,176,193,194,195,245,246,247,248,249,250,347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[357,423],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[373,471,23,389,3],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[364,476,376,23,384,3],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[86,87,101,105,106,109,63,123,65,66,67,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,162,164,68,166,167,168,178,180,189,190,192,197,198,199,200,201,202,72,225,226,227,238,239,241,259,260,262,270,271,272,293,294,295,296,73,75,313,315,316,318,321,327,333,340,341,76,77,78,347,468,469,6,352,353,354,7,355,356,79,357,359,360,361,362,363,366,368,369,370,371,372,9,373,375,377,470,471,20,23,33,39,379,2,380,381,382,383,385,389,390,391,393,397,404,53,408,54,409,410,413,414,415,55,417,418,419,420,421,473,422,423,474,424,475,425,426,427,435,446,447,56,57,449,58,450,59,60,451,452,453,454,455,456,457,458,459,460,49,461,462,463,464,62,465,466,44,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[322,323,328,329,330,331,332,333,334,335,336,337,338,339,430,431,432,433,434,435,436,437,438,439,440,441],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[100,104],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[97,98,99,477,478,63,64,66,67,479,480,165,69,70,71,212,293,74,75,77,78,80,81,82,362,373,378,471,472,425],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[100,101,102,103,104,121,122,123,124,196,235,236,237,238,239,241,244,481,257,262,263,264,265,266,267,268,269,301,302,303,304,305,306,307,4,5,321,324,325,348,349,468,469,6,352,354,7,364,365,366,9,10,482,476,11,373,483,12,374,375,376,377,13,470,14,378,471,16,472,17,18,20,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,39,379,2,381,382,383,384,385,386,387,388,389,390,391,392,3,44,52],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[63,64,66,480,165,69,70,71,74,75,77,80,81,82],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[484,485,486,487,488,489,490,10,13,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[394,397,398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[101,102,104,121,122,123,124,196,235,236,237,244,262,263,264,265,266,267,268,269,301,302,303,304,305,306,307,324,325,348,349,468,352,365,366,17,20,22,24,25,28,31,34,35,38,379,2,381,382,383,385,387,388,391,392,3,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[100,101,102,103,104,121,122,123,124,196,235,236,237,238,239,241,244,481,257,262,263,264,265,266,267,268,269,301,302,303,304,305,306,307,321,324,325,348,349,468,469,352,354,364,365,366,476,373,483,374,375,376,377,470,378,471,472,17,18,20,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,39,379,2,381,382,383,384,385,387,388,389,390,391,392,3,52],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[91,93,94,97,98,99,63,125,64,65,127,66,67,128,158,159,164,68,165,69,70,71,168,208,211,72,212,219,229,232,233,481,256,492,257,493,258,261,264,265,266,293,73,74,75,333,334,342,76,344,77,78,345,469,6,354,7,355,79,80,357,358,81,82,362,363,1,83,84,85,476,373,483,377,470,378,471,472,2,388,391,3,420,473,423,474,475,425,435,436,56,458,467],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[385,494,453],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[6,7,8,10,495,11,12,13,15,16,42,43,496,497,498,499,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[484,485,486,488,489,10,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[86,105,106,109,65,197,198,199,200,201,259,260,308,309,310,311,312,4,5,76,347,416,446,447,449,58,450,59,454,456,457,459,460,62,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[86,87,105,106,107,108,109,63,64,65,197,198,199,200,201,224,249,259,260,76,371,385,399,401,53,408,54,409,410,411,412,413,414,415,55,416,417,418,446,447,56,57,449,58,450,59,60,451,61,452,453,454,455,456,457,458,459,460,49,461,462,463,464,62,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":179,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":358,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testReturnException":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageTest.wrongArguments":80,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":299,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":257,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":381,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":425,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.CaptureTest.testPrimitive":409,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.moreThanOneArgument":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.UsageTest.argumentsOrdered":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":489,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":435,"org.easymock.tests.ReplayStateInvalidUsageTest.times":118,"org.easymock.tests2.AnswerTest.answer":393,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":445,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests2.UsageTest.strictResetToDefault":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":388,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests2.DelegateToTest.testDelegate":407,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests.LimitationsTest.mockFinalMethod":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":158,"org.easymock.tests2.CaptureTest.testCapture1_2446744":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":443,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":112,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":41,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":113,"org.easymock.tests.MockingTest.testInterfaceMocking":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":28,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.UsageTest.niceToStrict":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":375,"org.easymock.tests2.MockBuilderTest.testCreateMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":36,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":423,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":498,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":456,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":455,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":415,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":444,"org.easymock.tests2.CaptureTest.testCaptureAll":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":204,"org.easymock.tests.MockNameTest.defaultName":261,"org.easymock.tests2.UsageConstraintsTest.testMatches":457,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":205,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":391,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":307,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":392,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":384,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":196,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":355,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":421,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":418,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":473,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":417,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":104,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":463,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":99,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":469,"org.easymock.tests.MockingTest.testNiceClassMocking":244,"org.easymock.tests.MockingTest.testClassMocking":236,"org.easymock.tests2.UsageConstraintsTest.testContains":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":366,"org.easymock.tests2.UsageConstraintsTest.testFind":449,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests.MockTypeTest.fromEasyMockClass":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":401,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":231,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":500,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":174,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":161,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":209,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.EasyMockSupportTest.testVerify":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":30,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":207,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":442,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":429,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":192,"org.easymock.tests2.UsageTest.openCallCountByLastCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":427,"org.easymock.tests.DefaultClassInstantiatorTest.object":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":88,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":229,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":389,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.UsageTest.resumeIfFailure":362,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.StubTest.stubWithReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":185,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":191,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":394,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":163,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":461,"org.easymock.tests2.DelegateToTest.testWrongClass":405,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":350,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":468,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":377,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":17,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests2.CaptureTest.testCaptureNone":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":227,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":46,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":477,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":34,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":232,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests2.UsageConstraintsTest.any":452,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":117,"org.easymock.tests2.StubTest.stub":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":116,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests2.MockedExceptionTest.testMockedException":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":22,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":470,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":383,"org.easymock.tests2.CompareToTest.testCompareEqual":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests2.CaptureTest.testCaptureLast":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":60,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":462,"org.easymock.tests.MockingTest.testTwoMocks":237,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":465,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":47,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":370,"org.easymock.tests2.MockBuilderTest.testCreateMockString":472,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":24,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":19,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":482,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":390,"org.easymock.tests.LimitationsTest.privateConstructor":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":43,"org.easymock.tests2.UsageConstraintsTest.testNotNull":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":364,"org.easymock.tests2.UsageTest.defaultResetToNice":361,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.CallbackTest.callback":467,"org.easymock.tests2.UsageConstraintsTest.equals":448,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":386,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":300,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests.MockingTest.testStrictClassMocking":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":353,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":398,"org.easymock.tests.ObjectMethodsTest.testHashCode":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":488,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":372,"org.easymock.tests2.DependencyTest.testInterfaceMocking":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":35,"org.easymock.tests2.DelegateToTest.testStubDelegate":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests2.AnswerTest.stubAnswer":397,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":460,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":447,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":348,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":411,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":302,"org.easymock.tests2.UsageConstraintsTest.testSame":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":25,"org.easymock.tests.GenericTest.testPackageScope":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":173,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":242,"org.easymock.tests2.NameTest.nameForMock":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests2.MockedExceptionTest.testRealException":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":182,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":349,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":373,"org.easymock.tests2.UsageStrictMockTest.range":77,"org.easymock.tests2.UsageConstraintsTest.lessThan":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":45,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests2.MockBuilderTest.testWithConstructor":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":26,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":97,"org.easymock.tests2.UsageConstraintsTest.cmpTo":453,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":360,"org.easymock.tests2.CaptureTest.testCaptureFromStub":416,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":111,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":483,"org.easymock.tests.UsageTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageStrictMockTest.testVerify":129,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.LimitationsTest.abstractClass":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":474,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214}}]
