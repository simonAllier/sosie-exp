[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,324,325,325,326,327,328,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[50,56,57,62,95,98,125,180,181,182,183,184,185,221,222,270,272,273,299,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[91,95,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[22,23,24,25,26,27,29,30,31,32,36,49,50,51,52,53,54,55,56,58,59,60,61,62,70,74,78,79,80,84,85,88,89,90,91,92,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,111,113,114,123,125,127,128,140,221,229,248,249,251,252,253,254,255,256,286,289,290,296,298,299,301,302,305,308,312],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[332,0,1,2,3,4,5,6,7,333,334,335,336,337,8,338,339,340,341,342,343,9,10,11,12,13,14,15,344,16,345,346,17,18,19,20,347,348,21,22,23,24,25,26,27,28,29,30,31,32,33,34,349,350,35,36,37,38,39,40,41,42,43,44,45,46,351,352,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,353,64,354,355,356,65,66,67,357,68,358,359,69,70,360,71,361,362,363,364,365,72,366,367,368,369,370,371,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,372,92,93,94,95,96,97,331,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,373,120,121,122,374,123,124,125,126,127,128,129,130,375,131,376,377,378,379,380,381,382,383,384,385,132,386,387,133,388,389,390,391,392,393,394,395,396,134,397,398,399,400,401,135,402,403,136,137,138,139,404,405,140,406,141,142,143,407,144,408,145,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,146,147,148,149,150,151,152,153,434,154,155,156,435,436,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,437,438,439,177,440,441,178,179,442,443,180,181,182,183,184,444,445,446,447,448,449,450,451,452,453,454,185,186,187,188,189,455,456,457,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,458,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,459,460,461,462,463,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,464,256,257,258,259,465,260,261,262,263,466,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,467,468,469,292,293,470,294,471,472,473,295,296,297,298,299,300,301,302,303,304,474,475,476,477,478,479,305,306,307,308,309,480,310,481,482,483,484,485,486,487,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[144],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[78,84,85,127,489,185,229,230,265,285,286,289,290,298,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"position":"org.easymock.internal.MocksControl:190","failures":[10,19,22,24,26,27,30,31,32,59,70,79,80,85,91,96,97,98,101,107,108,109,111,123,127,128,140,185,229,248,249,251,252,253,254,255,256,290,296,301,302,312],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[127,229,230,490,301],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[136,137,138,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[492,493,494,495,285,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[357,359,496,497,498,499,500,136,139,404],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[159,161,175,176,223,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[60,74,88,89,92,93,94,95,100,102,103,105,106,112,113,114,125,410,414,415,424,429,180,181,182,183,184,221,223,224,225,226,227,236,465,272,273,299,305,306,309,324,324,325,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[178,179,442,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[422,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[310,481,485],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[88,105,111,502],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,349,350,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,331,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,406,141,142,143,407,144,408,145,426,432,146,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,442,180,181,182,183,184,452,453,454,185,186,455,456,457,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,459,460,461,462,463,228,229,230,231,248,249,250,251,252,253,254,255,256,257,258,259,465,260,261,262,263,466,264,266,267,268,269,270,271,272,273,274,276,277,278,279,281,282,283,284,286,287,288,289,290,291,469,292,293,294,295,296,297,298,299,300,301,302,303,304,474,475,476,478,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,324,325,325,326,327,328,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,11,12,13,14,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,62,63,65,66,67,68,72,73,74,76,77,79,80,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,116,117,118,119,120,121,122,124,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,409,147,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,249,250,256,257,258,259,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,284,292,293,294,295,297,299,302,303,304,305,306,309,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[136,137,138,491],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[110,112,130,131],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[344,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[49,51,52,53,54,55,56,58,505,59,60,62],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[10,18,20,22,26,27,30,64,69,70,71,75,78,79,80,84,85,86,87,90,104,123,126,127,128,140,506,489,185,215,229,230,507,464,256,280,281,282,283,285,286,289,290,291,296,298,300,301,302],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[78,84,85,127,489,185,229,230,285,286,289,290,298,301],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests.MockClassControlTest.testToString":148,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":97,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":315,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":449,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":472,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests.UsageTest.moreThanOneArgument":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":459,"org.easymock.tests.UsageTest.argumentsOrdered":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests2.DependencyTest.testClassMocking":351,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":446,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":463,"org.easymock.tests2.DelegateToTest.testDelegate":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":235,"org.easymock.tests2.DependencyTest.testClassMockingSupport":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":408,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":5,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.UsageThrowableTest.throwError":248,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":448,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.samples.PartialClassMockTest.testGetArea":326,"org.easymock.tests.MockingTest.testInterfaceMocking":470,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests2.CompareToTest.testLessOrEqual":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":453,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests2.ThreadingTest.testChangeDefault":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":168,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":458,"org.easymock.tests.MockClassControlTest.testEquals":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":6,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":233,"org.easymock.tests.MockNameTest.defaultName":437,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.samples.ExampleTest.voteForRemovals":319,"org.easymock.tests.UsageVarargTest.allKinds":220,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":234,"org.easymock.samples.BasicClassMockTest.testPrintContent":323,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":254,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":20,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":487,"org.easymock.samples.ExampleTest.voteForRemoval":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":24,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":41,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":219,"org.easymock.tests.GenericTest.testBridgedEquals":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":281,"org.easymock.tests.UsageExpectAndReturnTest.longType":160,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":282,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests.MockingTest.testNiceClassMocking":473,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":275,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":313,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":214,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":460,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests.MockClassControlTest.testHashCode":151,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":115,"org.easymock.tests.UsageVarargTest.varargCharAccepted":213,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":455,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":474,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":432,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":479,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.tests.UsageStrictMockTest.range":301,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":381,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":454,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":185,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":507,"org.easymock.tests.UsageVerifyTest.twoReturns":230,"org.easymock.tests.UsageVarargTest.varargByteAccepted":218,"org.easymock.tests2.ThreadingTest.testThreadSafe":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":279,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":435,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":322,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":308,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":484,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests2.NameTest.nameForMocksControl":3,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":294,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":96,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":469,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":320,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests.UsageStrictMockTest.differentMethods":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":335,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":482,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":405,"org.easymock.tests.UsageVerifyTest.twoThrows":229,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":255,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests.UsageVarargTest.differentLength":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":307,"org.easymock.tests.UsageCallCountTest.tooFewCalls":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":42,"org.easymock.tests2.NameTest.nameForNiceMock":2,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":299,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":358,"org.easymock.tests.UsageVarargTest.varargLongAccepted":217,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":158,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":373,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":471,"org.easymock.tests2.NameTest.nameForMock":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":169,"org.easymock.tests2.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests2.MockedExceptionTest.testRealException":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":306,"org.easymock.tests2.NameTest.nameForStrictMock":1,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":483,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.UsageConstraintsTest.testOr":95,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":286,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":170,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":485,"org.easymock.tests.UsageVarargTest.varargShortAccepted":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":280,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":354,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":171,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":321,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":327,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
