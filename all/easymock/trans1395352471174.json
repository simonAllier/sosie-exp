[{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,67,68,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[23,108,109,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,23,24,25,26,28,29,36,39,49,55,58,59,60,61,62,63,66,67,67,68,68,69,70,71,73,74,75,76,80,82,83,84,88,89,90,91,102,104,105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[93,94,95,96,98,99],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[114,115,116,117,118],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[123,124,125,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[128,129,115,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":81,"org.easymock.tests.MockClassControlTest.testToString":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":99,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":27,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":6,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":41,"org.easymock.tests.GenericTest.testPackageScope":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":50,"org.easymock.tests.GenericTest.testBridgedEquals":85,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":22,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":97,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":53,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":38,"org.easymock.tests.MockingTest.testClassMocking":87,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":7,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":3,"org.easymock.tests.LimitationsTest.mockFinalMethod":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests.MockingTest.testTwoMocks":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":45,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":72,"org.easymock.tests.MockClassControlTest.testHashCode":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":40,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":46,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests2.CompareToTest.testLessThan":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":44,"org.easymock.tests.LimitationsTest.privateConstructor":101,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests.DefaultClassInstantiatorTest.object":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":112,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":52,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":47,"org.easymock.tests2.UsageConstraintsTest.constraints":128,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":75,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":105,"org.easymock.tests.LimitationsTest.abstractClass":100,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.MockingTest.testStrictClassMocking":86}}]
