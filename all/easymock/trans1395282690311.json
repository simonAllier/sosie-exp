[{"position":"org.easymock.internal.LastControl:124","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[160,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[295,296,297,298,299,300,301,302,303,304,305,49,99,100,306,307,308,108,309,310,311,312,313,314,315,316,317,156,197,200,218,219,318,261,319,320,321,322,323,324,325,326,265,266,268,269,270,272,327,273,276,328,329,330,331,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[332,306],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[333,157,174,180],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,334,7,8,9,10,11,12,13,299,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,335,336,337,31,32,33,34,35,36,37,38,338,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,339,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,340,341,92,93,94,95,96,97,98,99,100,101,102,103,104,342,343,344,345,346,347,348,349,350,351,352,353,106,107,108,109,110,111,112,113,114,310,311,312,313,314,315,316,317,115,354,116,117,355,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,356,357,358,359,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,284,285,285,286,287,288,289,290,291,292,360,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[1,2,16,36,361,362,151],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[208,211,217,271,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,16,363,364,33,36,85,86,89,90,118,151,226,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1,2,6,16,22,31,33,35,36,37,83,85,86,89,90,91,96,97,98,145,147,150,151,152,159,173,185,189,190,193,209,214,215,216,223,226,227,228,232,233,234,235,258,266,274,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,334,7,8,9,10,11,12,13,299,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,335,336,337,31,32,33,34,35,36,37,38,338,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,339,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,340,341,92,93,94,95,96,97,98,99,100,101,102,103,104,342,343,344,345,346,347,348,349,350,351,352,353,106,107,108,109,110,111,112,113,114,310,311,312,313,314,315,316,317,115,354,116,117,355,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,198,199,202,203,204,205,206,207,208,209,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,356,357,358,359,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,265,266,267,268,269,270,271,272,273,274,275,276,277,287,288,289,290,291,292,360,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[365,154,155,156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[144,366,154,199,203,367,368,369,370,371,372,373,374,375,318,376,377,261,378,319,262,320,321,379,380,322,381,382,323,383,263,324,325,384,385,326,264,386,387,284,285],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[33,34,36,37,338,85,149,151,152,266,268,270,273,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[116,389,140,141,142,390,143,288],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,6,30,36,37,87,88,92,151,152,158,159,161,163,164,169,172,175,182,229,230],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[0,1,2,16,391,392,393,363,394,364,33,34,36,37,395,339,84,85,86,89,90,354,396,355,118,397,398,399,400,401,402,403,404,405,406,407,149,151,152,225,226,232,233],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[159,165],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[333,157,174,180],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[408,168,272],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[409,240,242,243,244,245,246,247,249,410,250,251,253],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,2,16,364,33,36,85,86,89,90,151,226,232,233],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[159,160,162,164,165,411,176,181,240,242,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[391,393,33,85,398,405],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,299,335,336,337,338,85,341,96,101,102,103,104,342,343,344,345,346,347,348,349,350,351,352,353,310,311,312,313,314,315,316,317,118,139,146,184,191,196,204,205,206,207,208,211,214,216,217,218,221,231,271,273,360],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[413,414,415,416,417,144,366,154,370,371],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[0,1,2,418,419,16,17,27,28,30,33,34,36,37,52,83,84,86,87,88,89,90,91,93,95,98,143,149,151,152,162,163,167,168,181,182,223,225,226,229,230,232,233,235,236,356,357,358,359,288],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[300,304],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[332,306],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[1,2,36,362,151],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[420,421],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[422],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":3,"org.easymock.tests.MockClassControlTest.testToString":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":103,"org.easymock.samples.ExampleTest.answerVsDelegate":288,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":317,"org.easymock.tests2.CaptureTest.testPrimitive":243,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":82,"org.easymock.tests.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":46,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.UsageVarargTest.varargIntAccepted":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.CaptureTest.testAnd":240,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests2.DelegateToTest.testDelegate":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":78,"org.easymock.tests.LimitationsTest.mockFinalMethod":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.UsageThrowableTest.throwError":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":387,"org.easymock.samples.PartialClassMockTest.testGetArea":286,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests2.CompareToTest.testLessOrEqual":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":64,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":210,"org.easymock.tests2.MockBuilderTest.testCreateMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":384,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.MockClassControlTest.testEquals":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":100,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":27,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":417,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":276,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":305,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":271,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.CaptureTest.testCapture2_2446744":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":26,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":81,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":44,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests.MockingTest.testClassMocking":296,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":414,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":21,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":14,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":116,"org.easymock.tests.MockClassControlTest.testHashCode":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageVarargTest.varargCharAccepted":20,"org.easymock.tests2.CaptureTest.testCaptureMultiple":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.tests.CapturesMatcherTest.test":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":313,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.SerializationTest.testAllMockedMethod":156,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":405,"org.easymock.samples.SupportTest.voteForRemovals":280,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":365,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests.UsageExpectAndThrowTest.object":73,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":107,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":102,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":25,"org.easymock.tests2.ThreadingTest.testThreadSafe":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":242,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.UsageExpectAndThrowTest.longType":66,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":303,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.SerializationTest.testClass":154,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":319,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":67,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":4,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":270,"org.easymock.tests2.CompareToTest.testCompareEqual":408,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":297,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.samples.ExampleTest.removeNonExistingDocument":360,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":301,"org.easymock.tests2.ConstraintsToStringTest.andToString":404,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":258,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":310,"org.easymock.tests.UsageExpectAndThrowTest.floatType":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":275,"org.easymock.tests.LimitationsTest.privateConstructor":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests2.UsageTest.defaultResetToNice":231,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests.UsageVarargTest.differentLength":22,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":393,"org.easymock.tests.MockingTest.testStrictClassMocking":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":260,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":415,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.DelegateToTest.testStubDelegate":141,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":24,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":144,"org.easymock.tests2.ConstraintsToStringTest.orToString":397,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":285,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":330,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":422,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":300,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.samples.SupportTest.addDocument":279,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":321,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":363,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":331,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":209,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests.UsageRangeTest.combination":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":266,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.MockBuilderTest.testWithConstructor":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.UsageVarargTest.varargShortAccepted":23,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":304,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":94,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests2.CaptureTest.testCapture":410,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests2.ConstraintsToStringTest.notToString":399,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":294,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":10,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":18,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":362}}]
