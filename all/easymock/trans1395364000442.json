[{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[176,177,178,179,5,180,181,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,182,183,36,184,185,186,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72,73,187,188,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,189,93,94,95,96,97,98,99,100,101,102,190,191,103,192,193,104,194,194,195,195,105,106,107,196,108,109,110,197,198,111,199,200,201,202,203,204,205,206,207,112,113,114,115,116,117,208,118,119,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,120,234,121,122,123,124,125,126,127,128,129,235,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,236,153,154,155,156,157,158,159,237,160,161,162,163,164,165,238,239,166,167,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,168,255,169,170,171,172,256,173,174,175,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[258,259],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[212,213,252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[260,261,262,263,264,265,266,267,268,98,102,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[258,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[193,270,210,271,239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:257","sourceCode":"final net.sf.cglib.proxy.Enhancer net.sf.cglib.proxy.Enhancer = new net.sf.cglib.proxy.Enhancer() {\n    /** \n     * Filter all private constructors but do not check that there are\n     * some left\n     */\n@java.lang.SuppressWarnings(value = \"rawtypes\")\n    @java.lang.Override\n    protected void filterConstructors(final java.lang.Class sc, final java.util.List constructors) {\n        net.sf.cglib.core.CollectionUtils.net.sf.cglib.core.CollectionUtils.filter(java.util.List, new net.sf.cglib.core.VisibilityPredicate(java.lang.Class , true));\n    }\n}","type":"CtLocalVariableImpl"},"failures":[272,6,273,274,7,275,8,9,276,277,10,278,23,279,25,26,28,0,29,280,30,281,282,283,31,32,33,284,285,34,265,286,287,288,289,290,74,291,292,75,293,294,295,296,297,298,299,300,301,76,302,303,304,305,306,77,307,308,96,97,98,99,101,102,190,191,103,194,194,195,195,105,309,310,311,312,313,314,315,316,317,318,208,319,118,320,119,321,322,323,324,127,128,129,325,326,258,327,328,329,259,330,331,332,167,333,334,335],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37,38,39,42,337,338,339,340,341,342,343,344,345,346,347,348,112,349,235,130,131,132,156,350,351,352,237,172,256,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[326,258,327,328,259,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[353,344,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[176,179,5,180,181,272,6,7,275,8,9,277,10,278,11,12,13,14,15,16,17,18,19,20,21,22,358,23,24,279,25,26,27,28,0,29,280,30,283,31,32,33,34,35,183,36,184,186,359,360,37,361,38,39,362,40,41,42,337,43,1,44,45,46,338,339,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,363,70,71,72,73,187,188,74,75,76,77,78,79,80,81,82,83,84,85,86,364,87,88,365,366,89,90,91,92,189,93,94,367,368,369,370,95,96,97,98,99,100,101,102,190,191,103,192,193,104,371,372,373,374,194,194,195,195,375,105,376,377,106,107,196,108,109,378,110,379,197,309,310,380,381,198,382,383,384,385,386,387,111,199,200,201,202,203,204,311,312,313,314,315,316,317,318,205,347,206,207,112,388,113,114,115,116,117,208,118,320,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,120,234,121,122,123,124,125,126,127,128,129,389,390,271,391,392,393,3,394,395,336,396,397,235,398,399,354,130,400,131,132,401,402,326,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,355,350,157,158,351,352,159,237,160,161,162,163,164,165,238,239,166,167,245,246,247,248,249,250,403,404,405,406,407,408,409,410,411,412,413,414,169,170,171,172,256,173,174,175,415,416,417,418,419,420,421,422,423,424,425],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[176,179,5,180,181,272,6,7,275,8,9,277,10,278,11,12,13,14,15,16,17,18,19,20,21,22,358,23,24,279,25,26,27,28,0,29,280,30,283,31,32,33,34,35,183,36,184,186,359,360,37,361,38,39,362,40,41,42,337,43,1,44,45,46,338,339,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,363,70,71,72,73,187,188,74,75,76,77,78,79,80,81,83,84,85,86,364,87,88,365,366,89,90,91,92,189,93,94,367,368,369,370,95,96,97,98,99,100,101,102,190,191,103,192,193,104,194,195,375,105,376,377,106,107,196,108,109,378,110,197,309,310,198,382,383,384,385,386,387,111,199,200,201,202,203,204,205,206,207,388,113,114,115,116,117,208,118,320,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,120,234,121,122,123,124,125,126,127,128,129,398,399,354,130,400,131,132,401,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,355,350,157,158,351,352,159,237,160,162,163,164,165,238,239,166,167,245,246,247,248,249,250,406,407,408,409,410,411,412,413,414,169,170,171,172,256,173,174,175,415,416,417,418,419,420,421,422,423,424,425],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.UsageTest.argumentsOrdered":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":21,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":375,"org.easymock.tests2.DelegateToTest.testReturnException":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":164,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":408,"org.easymock.samples.ExampleTest.answerVsDelegate":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":335,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":240,"org.easymock.tests.UsageTest.argumentsOrdered":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":270,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":342,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":370,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":15,"org.easymock.tests2.DelegateToTest.testDelegate":186,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":368,"org.easymock.tests.UsageThrowableTest.throwError":120,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":308,"org.easymock.samples.PartialClassMockTest.testGetArea":105,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":153,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":406,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":425,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":413,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":125,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":359,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":250,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":13,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":182,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":14,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":424,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":410,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":387,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":325,"org.easymock.tests.MockingTest.testClassMocking":323,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":188,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":19,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":419,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":241,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":265,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":299,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":367,"org.easymock.tests.UsageVarargTest.varargCharAccepted":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":22,"org.easymock.tests.DefaultClassInstantiatorTest.object":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":211,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.CapturesMatcherTest.test":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests2.SerializationTest.testAllMockedMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":209,"org.easymock.samples.SupportTest.voteForRemovals":106,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":344,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":210,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":177,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests.UsageStrictMockTest.range":131,"org.easymock.samples.ConstructorCalledMockTest.testTax":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":18,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":288,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":154,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests.UsageVarargTest.varargByteAccepted":423,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":302,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":364,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":239,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":3,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":235,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":338,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.samples.ExampleTest.removeNonExistingDocument":379,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":392,"org.easymock.tests.UsageStrictMockTest.differentMethods":132,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.ConstraintsToStringTest.andToString":343,"org.easymock.tests2.MockBuilderTest.testCreateMockString":278,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":256,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":267,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":126,"org.easymock.tests2.UsageTest.defaultResetToNice":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":281,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":238,"org.easymock.tests.UsageCallCountTest.tooFewCalls":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":409,"org.easymock.tests.UsageThrowableTest.throwCheckedException":123,"org.easymock.tests.MockingTest.testStrictClassMocking":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":357,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":199,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":303,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests.UsageVarargTest.varargLongAccepted":422,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":195,"org.easymock.tests2.ConstraintsToStringTest.orToString":340,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":286,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":365,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.samples.SupportTest.addDocument":377,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":294,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":243,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":287,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":298,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":295,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.UsageVarargTest.varargShortAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":385,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":178,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":273,"org.easymock.tests.UsageTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":383,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":400,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests2.ConstraintsToStringTest.notToString":341,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":376,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":411,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":17}}]
