[{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[0,1],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[57,28,58,51,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[61,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:259","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[64,65,66,2,3,4,5,14,15,18,19,24,25,26,27,29,30,31,32,33,34,35,44,45,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,67,68,69,14,70,15,18,19,71,72,73,74,44,45,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[75,76,77,78,63,36,79,80,81,82,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,0,88,89,90,1,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,114,115,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,54,56,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[2,3,181,182,183,184,185,186,187,188,22,24,189,190,191,192,193,194,195,75,196,76,52,197,198,199,200,201,202,77,203,204,205,122,33,206,207,78,63,208,36,37,79,80,209,81,38,39,210,211,212,213,214,215,216,82,217,218,219,220,40,41,221,222,223,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[84,86,87,88,89,90,225,92,93,94,95,97,98,99,100,110,111,112,113,114,114,115,115,116,117,118,119,120,121,122,125,126,127,128,130,131,136,139,149,155,54,56,160,161,162,163,164,165,166,167,168,170,171,172,173,175,176,177,180],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[226,227,228],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[86,87,0,90,111,114,114,115,115,121,123,126,127,130,131,132,139,149,155,54,166,167,168,169,170,172,173,229,174,176,177,178],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[183,184,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,11,250,12,251,252,253,254,255,187,256,257,258,259,188,260,13,17,261,26,262,43,47,178,179,180,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[103,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[264,265,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[84,86,87,88,89,90,92,97,98,99,100,110,111,112,113,114,114,115,115,116,117,118,119,120,121,122,125,126,127,128,131,267,268,269,136,139,149,155,54,56,160,161,162,163,164,165,166,270,167,168,170,171,172,173,175,176,271,177,180],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[264,265,266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[84,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,3,294,4,5,295,296,6,7,297,298,8,299,9,300,10,181,182,183,184,185,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,88,89,301,302,303,304,305,306,11,250,307,12,251,252,253,254,255,186,187,188,13,14,15,16,17,18,19,20,98,99,100,21,308,309,310,311,312,313,314,315,316,22,23,57,317,261,318,24,25,26,27,110,189,190,191,192,193,194,195,111,112,113,319,320,321,322,323,28,324,325,326,327,328,58,75,196,76,52,197,198,199,200,201,202,77,204,205,116,117,329,118,119,120,122,126,127,128,330,262,29,30,31,32,331,332,33,333,34,35,334,131,335,136,139,149,155,206,207,78,63,208,36,37,79,80,209,81,38,39,210,211,212,213,214,215,216,82,217,218,219,220,40,41,221,336,337,338,42,339,340,341,342,343,222,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,54,55,56,43,359,44,45,360,361,46,47,362,48,49,363,50,223,224,160,161,162,163,364,164,165,167,170,172,173,176,180,51,365,366,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[367,368,369,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,370,371,372,373,292,293,2,3,294,4,5,295,296,374,6,7,375,376,297,377,298,8,299,9,378,300,10,379,380,381,382,383,384,385,386,181,182,183,184,185,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,387,388,389,301,302,303,304,390,391,392,393,394,225,305,306,11,250,307,12,251,252,253,254,255,186,187,395,256,257,258,259,188,260,396,397,398,13,14,70,15,16,17,18,19,20,399,400,401,402,403,404,405,21,308,309,406,310,311,312,313,314,315,316,22,407,408,409,410,411,412,413,414,415,416,61,417,418,419,420,421,23,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,57,442,317,261,443,318,444,24,445,446,447,448,449,25,26,27,189,190,191,192,193,194,195,450,451,452,319,320,321,322,323,28,324,325,326,327,453,328,58,75,196,76,52,197,198,199,200,201,202,77,203,204,205,329,330,262,454,29,30,31,32,331,332,33,333,34,35,334,455,456,457,458,459,460,461,462,463,464,335,465,466,467,468,469,470,206,207,78,63,471,208,36,37,79,80,209,81,38,39,210,211,212,213,214,215,216,82,217,218,219,220,40,41,221,62,336,337,338,472,42,339,340,341,342,343,222,344,473,474,475,476,477,345,478,479,480,481,482,483,346,347,348,349,350,351,352,353,354,355,356,357,358,55,43,359,44,45,360,361,46,47,362,48,49,363,50,223,484,224,485,486,364,487,178,179,180,263,51,488,59,365,366,60],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,4,490,70,15,18,19,444,24,26,27,34,45,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[226,227,228],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[184,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,11,250,12,251,252,253,254,255,188,13,17,261,26,262,43,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[183,184,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,11,250,12,251,252,253,254,255,187,256,257,258,259,188,260,13,17,261,26,262,43,47,178,179,180,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[84,368,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,3,4,5,181,182,185,387,388,389,88,90,301,302,303,304,305,306,11,250,12,251,252,253,254,255,186,13,14,16,17,20,98,99,100,318,25,27,189,190,191,192,193,194,195,111,322,323,324,325,327,75,196,52,197,200,201,202,77,204,205,116,117,329,118,119,120,122,126,127,128,262,33,34,35,131,335,136,139,149,155,206,207,78,63,208,36,37,79,80,209,38,39,210,211,212,213,214,215,216,82,217,218,220,40,41,221,337,339,340,341,342,343,222,344,345,346,347,348,349,350,351,352,353,354,355,356,357,54,55,43,359,44,360,46,47,362,363,50,160,161,162,163,364,164,165,167,170,172,173,176,180,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[82,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[196,204],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[302,304,422,436,363],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.UsageTest.argumentsOrdered":49,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":61,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":361,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests2.DelegateToTest.testReturnException":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":257,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":454,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":404,"org.easymock.samples.ExampleTest.answerVsDelegate":28,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":401,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":355,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":185,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":447,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":266,"org.easymock.tests.ReplayStateInvalidUsageTest.times":437,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":335,"org.easymock.tests2.AnswerTest.answer":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":458,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":350,"org.easymock.tests2.DelegateToTest.testDelegate":42,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests.LimitationsTest.mockFinalMethod":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":384,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":456,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":431,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.samples.PartialClassMockTest.testGetArea":111,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":432,"org.easymock.tests.MockingTest.testInterfaceMocking":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.UsageTest.niceToStrict":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":228,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":211,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":202,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":457,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":381,"org.easymock.tests.MockNameTest.defaultName":441,"org.easymock.tests2.UsageConstraintsTest.testMatches":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":429,"org.easymock.samples.ExampleTest.voteForRemovals":327,"org.easymock.tests.UsageVarargTest.allKinds":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.samples.BasicClassMockTest.testPrintContent":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":382,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":254,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":108,"org.easymock.tests2.UsageConstraintsTest.greaterThan":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.samples.ExampleTest.voteForRemoval":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":129,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":348,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":256,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":62,"org.easymock.tests2.CaptureTest.testCaptureFirst":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":349,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.UsageTest.moreThanOneArgument":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":204,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":176,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":316,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":271,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":445,"org.easymock.tests.UsageCallCountTest.tooManyCalls":10,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":264,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.testContains":210,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":224,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":354,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":311,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":6,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":132,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":474,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":265,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":7,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":455,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":459,"org.easymock.tests.UsageVarargTest.varargCharAccepted":310,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":101,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":46,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":226,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":363,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":259,"org.easymock.tests2.StubTest.stubWithReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":73,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":114,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":201,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":315,"org.easymock.tests2.ThreadingTest.testThreadSafe":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":9,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":112,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":436,"org.easymock.tests2.StubTest.stub":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":258,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":435,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":269,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.CaptureTest.testCaptureLast":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":475,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":343,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":365,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":255,"org.easymock.tests2.UsageTest.defaultResetToNice":362,"org.easymock.samples.ExampleTest.voteAgainstRemovals":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.UsageVarargTest.differentLength":312,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":471,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":123,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":162,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":364,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":60,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests2.DependencyTest.testInterfaceMocking":339,"org.easymock.samples.ExampleTest.addDocument":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":337,"org.easymock.tests2.AnswerTest.stubAnswer":366,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":3,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":229,"org.easymock.tests.UsageVarargTest.varargLongAccepted":314,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":207,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":158,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":141,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":400,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":304,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":169,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":159,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":105,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":65,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureFromStub":203,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":430,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":328,"org.easymock.tests.UsageStrictMockTest.testVerify":296,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":319,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":268,"org.easymock.tests.LimitationsTest.abstractClass":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":66,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":352}}]
